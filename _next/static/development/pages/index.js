(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["static\\development\\pages\\index.js"],{

/***/ "./components/AllSkillsDisplay.tsx":
/*!*****************************************!*\
  !*** ./components/AllSkillsDisplay.tsx ***!
  \*****************************************/
/*! exports provided: AllSkillsDisplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AllSkillsDisplay", function() { return AllSkillsDisplay; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Label__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Label */ "./components/Label.tsx");
/* harmony import */ var _SkillLine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SkillLine */ "./components/SkillLine.tsx");
var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\AllSkillsDisplay.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;



function renderSkill(updates, onSelect, pair) {
  return __jsx(_SkillLine__WEBPACK_IMPORTED_MODULE_2__["SkillLine"], {
    className: 'is-clickable',
    selected: updates.has(pair.left),
    skill: pair.left,
    value: pair.right,
    key: pair.left.toString(),
    onClick: onSelect.bind(undefined, pair.left)
  });
}
/**
 * 
 */


function AllSkillsDisplay(properties) {
  var defaultSkills = properties.value.computeDefaultSkills().minus(properties.value.skills);
  var skills = properties.value.skills.inherit(properties.value.computeDefaultSkills());
  var handleSkillRendering = renderSkill.bind(undefined, properties.value.updates, properties.onSelect);
  return __jsx("div", {
    className: "container-fluid"
  }, __jsx("div", {
    className: "row"
  }, __jsx("div", {
    className: "col-12 col-md-12 col-lg"
  }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_1__["Label"], null, "Comp\xE9tences (Expertise)"), skills.entries.map(handleSkillRendering)), __jsx("div", {
    className: "col-12 d-block d-lg-none"
  }, __jsx("br", null)), __jsx("div", {
    className: "col-12 col-md-6 col-lg"
  }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_1__["Label"], null, "Comp\xE9tences (D\xE9faut)"), defaultSkills.entries.slice(0, defaultSkills.entries.size >> 1).map(handleSkillRendering)), __jsx("div", {
    className: "col-12 col-md-6 col-lg"
  }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_1__["Label"], {
    className: "d-none d-md-flex"
  }, "Comp\xE9tences (D\xE9faut)"), defaultSkills.entries.slice(defaultSkills.entries.size >> 1).map(handleSkillRendering))));
}
/**
 * 
 */

(function (_AllSkillsDisplay) {})(AllSkillsDisplay || (AllSkillsDisplay = {}));

/***/ }),

/***/ "./components/CharacteristicSetRenderer.tsx":
/*!**************************************************!*\
  !*** ./components/CharacteristicSetRenderer.tsx ***!
  \**************************************************/
/*! exports provided: CharacteristicSetRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CharacteristicSetRenderer", function() { return CharacteristicSetRenderer; });
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _typescript_Investigator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../typescript/Investigator */ "./typescript/Investigator.ts");
/* harmony import */ var _form_ValueField__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./form/ValueField */ "./components/form/ValueField.tsx");
/* harmony import */ var _Label__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Label */ "./components/Label.tsx");
/* harmony import */ var _ValueRenderer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ValueRenderer */ "./components/ValueRenderer.tsx");
/* harmony import */ var _CopyField__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./CopyField */ "./components/CopyField.tsx");
/* harmony import */ var _typescript_Mutables__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../typescript/Mutables */ "./typescript/Mutables.ts");
/* harmony import */ var _typescript_redux__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../typescript/redux */ "./typescript/redux/index.ts");







var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\CharacteristicSetRenderer.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }









/**
 * 
 */

var CharacteristicSetRenderer = /*#__PURE__*/function (_PureComponent) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(CharacteristicSetRenderer, _PureComponent);

  var _super = _createSuper(CharacteristicSetRenderer);

  /**
   * 
   */
  function CharacteristicSetRenderer(properties) {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, CharacteristicSetRenderer);

    _this = _super.call(this, properties);
    _this.handleLuckChange = _this.handleLuckChange.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__["default"])(_this));
    _this.handleLuckIncrement = _this.handleLuckIncrement.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__["default"])(_this));
    return _this;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(CharacteristicSetRenderer, [{
    key: "handleLuckChange",
    value: function handleLuckChange(event) {
      if (this.props.onChange) {
        this.props.onChange(_typescript_Investigator__WEBPACK_IMPORTED_MODULE_8__["Investigator"].create(_objectSpread({}, this.props.value, {
          mutables: _typescript_Mutables__WEBPACK_IMPORTED_MODULE_13__["Mutables"].create(_objectSpread({}, this.props.value.mutables, {
            luck: _typescript_redux__WEBPACK_IMPORTED_MODULE_14__["DataReducer"].reduce(this.props.value.mutables.luck, event)
          }))
        })), this.props.value);
      }
    }
    /**
     * 
     */

  }, {
    key: "handleLuckIncrement",
    value: function handleLuckIncrement(event) {
      console.log(event);
    }
    /**
     * @see React.Component.render
     */

  }, {
    key: "render",
    value: function render() {
      var characteristics = this.props.value.characteristics;
      var mutables = this.props.value.mutables;
      return __jsx("div", {
        className: "container-fluid"
      }, __jsx("div", {
        className: "row"
      }, __jsx("div", {
        className: "col-4 col-md-6"
      }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_12__["CopyField"], {
        value: characteristics.appearance.toString(),
        className: "align-items-center"
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_10__["Label"], null, "Apparence"), __jsx(_ValueRenderer__WEBPACK_IMPORTED_MODULE_11__["ValueRenderer"], null, characteristics.appearance))), __jsx("div", {
        className: "col-4 col-md-6"
      }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_12__["CopyField"], {
        value: characteristics.education.toString(),
        className: "align-items-center"
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_10__["Label"], null, "\xC9ducation"), __jsx(_ValueRenderer__WEBPACK_IMPORTED_MODULE_11__["ValueRenderer"], null, characteristics.education))), __jsx("div", {
        className: "col-4 col-md-6"
      }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_12__["CopyField"], {
        value: characteristics.power.toString(),
        className: "align-items-center"
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_10__["Label"], null, "Pouvoir"), __jsx(_ValueRenderer__WEBPACK_IMPORTED_MODULE_11__["ValueRenderer"], null, characteristics.power))), __jsx("div", {
        className: "col-4 col-md-6"
      }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_12__["CopyField"], {
        value: characteristics.constitution.toString(),
        className: "align-items-center"
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_10__["Label"], null, "Constitution"), __jsx(_ValueRenderer__WEBPACK_IMPORTED_MODULE_11__["ValueRenderer"], null, characteristics.constitution))), __jsx("div", {
        className: "col-4 col-md-6"
      }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_12__["CopyField"], {
        value: characteristics.strength.toString(),
        className: "align-items-center"
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_10__["Label"], null, "Force"), __jsx(_ValueRenderer__WEBPACK_IMPORTED_MODULE_11__["ValueRenderer"], null, characteristics.strength))), __jsx("div", {
        className: "col-4 col-md-6"
      }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_12__["CopyField"], {
        value: characteristics.size.toString(),
        className: "align-items-center"
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_10__["Label"], null, "Taille"), __jsx(_ValueRenderer__WEBPACK_IMPORTED_MODULE_11__["ValueRenderer"], null, characteristics.size))), __jsx("div", {
        className: "col-4 col-md-6"
      }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_12__["CopyField"], {
        value: characteristics.dexterity.toString(),
        className: "align-items-center"
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_10__["Label"], null, "Dext\xE9rit\xE9"), __jsx(_ValueRenderer__WEBPACK_IMPORTED_MODULE_11__["ValueRenderer"], null, characteristics.dexterity))), __jsx("div", {
        className: "col-4 col-md-6"
      }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_12__["CopyField"], {
        value: characteristics.intelligence.toString(),
        className: "align-items-center"
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_10__["Label"], null, "Intelligence"), __jsx(_ValueRenderer__WEBPACK_IMPORTED_MODULE_11__["ValueRenderer"], null, characteristics.intelligence))), __jsx("div", {
        className: "col-4 col-md-6"
      }, __jsx(_form_ValueField__WEBPACK_IMPORTED_MODULE_9__["ValueField"], {
        maximum: 100,
        minimum: 0,
        onChange: this.handleLuckChange,
        value: mutables.luck
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_10__["Label"], null, "Chance")))));
    }
  }]);

  return CharacteristicSetRenderer;
}(react__WEBPACK_IMPORTED_MODULE_7__["PureComponent"]);
/**
 * 
 */

(function (_CharacteristicSetRenderer) {})(CharacteristicSetRenderer || (CharacteristicSetRenderer = {}));

/***/ }),

/***/ "./components/CopyField.tsx":
/*!**********************************!*\
  !*** ./components/CopyField.tsx ***!
  \**********************************/
/*! exports provided: CopyField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CopyField", function() { return CopyField; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _Focusable__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Focusable */ "./components/Focusable.tsx");
/* harmony import */ var clipboard_copy__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! clipboard-copy */ "./node_modules/clipboard-copy/index.js");
/* harmony import */ var clipboard_copy__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(clipboard_copy__WEBPACK_IMPORTED_MODULE_10__);







var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\CopyField.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }





/**
 * 
 */

var CopyField = /*#__PURE__*/function (_PureComponent) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(CopyField, _PureComponent);

  var _super = _createSuper(CopyField);

  /**
   * 
   */
  function CopyField(properties) {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, CopyField);

    _this = _super.call(this, properties);
    _this.state = {
      copied: 0
    };
    _this.handleClick = _this.handleClick.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__["default"])(_this));
    _this.handleKeyPress = _this.handleKeyPress.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__["default"])(_this));
    _this.handleTimeout = _this.handleTimeout.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__["default"])(_this));
    return _this;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(CopyField, [{
    key: "handleClick",
    value: function handleClick(event) {
      this.copy();
    }
    /**
     * 
     */

  }, {
    key: "handleKeyPress",
    value: function handleKeyPress(event) {
      if (event.key === ' ') this.copy();
    }
    /**
     * 
     */

  }, {
    key: "handleTimeout",
    value: function handleTimeout() {
      this.setState({
        copied: 0
      });
    }
    /**
     * 
     */

  }, {
    key: "copy",
    value: function copy() {
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.async(function copy$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.awrap(clipboard_copy__WEBPACK_IMPORTED_MODULE_10___default()(this.props.value));

            case 2:
              if (this.state.copied > 0) {
                window.clearTimeout(this.state.copied);
              }

              this.setState({
                copied: window.setTimeout(this.handleTimeout, 600)
              });

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, null, this, null, Promise);
    }
    /**
     * @see React.Component.render
     */

  }, {
    key: "render",
    value: function render() {
      return __jsx(_Focusable__WEBPACK_IMPORTED_MODULE_9__["Focusable"].Element, {
        focus: this.props.focus,
        onFocus: this.props.onFocus,
        onBlur: this.props.onBlur
      }, __jsx("div", {
        className: classnames__WEBPACK_IMPORTED_MODULE_8___default()('field is-clickable', this.props.className),
        onClick: this.handleClick,
        onKeyPress: this.handleKeyPress
      }, this.props.children, this.renderToolTip()));
    }
    /**
     * 
     */

  }, {
    key: "renderToolTip",
    value: function renderToolTip() {
      if (this.state.copied > 0) {
        return __jsx("div", {
          className: "layout layout-filler"
        }, __jsx("div", {
          className: "card layout layout-centered"
        }, "Copi\xE9"));
      } else {
        return null;
      }
    }
  }]);

  return CopyField;
}(react__WEBPACK_IMPORTED_MODULE_7__["PureComponent"]);
/**
 * 
 */

(function (_CopyField) {})(CopyField || (CopyField = {}));

/***/ }),

/***/ "./components/Field.tsx":
/*!******************************!*\
  !*** ./components/Field.tsx ***!
  \******************************/
/*! exports provided: Field */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Field", function() { return Field; });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);

var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\Field.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;


/**
 * 
 */

function renderField(properties, ref) {
  return __jsx("div", Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, properties, {
    className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('field', properties.className),
    ref: ref
  }), properties.children);
}
/**
 * 
 */


var Field = react__WEBPACK_IMPORTED_MODULE_1___default.a.forwardRef(renderField);
/**
 * 
 */

(function (_Field) {})(Field || (Field = {}));

/***/ }),

/***/ "./components/Focusable.tsx":
/*!**********************************!*\
  !*** ./components/Focusable.tsx ***!
  \**********************************/
/*! exports provided: Focusable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Focusable", function() { return Focusable; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _typescript_Toggler__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../typescript/Toggler */ "./typescript/Toggler.ts");
/* harmony import */ var _typescript_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../typescript/utils */ "./typescript/utils/index.ts");







function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }






/**
 * 
 */

var IS_FOCUS = _typescript_Toggler__WEBPACK_IMPORTED_MODULE_8__["Toggler"].create('is-focus');
/**
 * 
 */

var Focusable;

(function (_Focusable) {
  var Element = /*#__PURE__*/function (_PureComponent) {
    Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(Element, _PureComponent);

    var _super = _createSuper(Element);

    /**
     * 
     */

    /**
     * 
     */
    function Element(properties) {
      var _this;

      Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Element);

      _this = _super.call(this, properties);
      _this.reference = void 0;
      _this.reference = Object(react__WEBPACK_IMPORTED_MODULE_6__["createRef"])();
      _this.state = {
        focus: false
      };
      _this.handleBlur = _this.handleBlur.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
      _this.handleFocus = _this.handleFocus.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
      return _this;
    }
    /**
     * 
     */


    Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Element, [{
      key: "handleFocus",
      value: function handleFocus(event) {
        this.setState({
          focus: true
        });
        this.props.onFocus(event);
      }
      /**
       * 
       */

    }, {
      key: "handleBlur",
      value: function handleBlur(event) {
        this.setState({
          focus: false
        });
        this.props.onBlur(event);
      }
      /**
       * 
       */

    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        if (this.props.focus === true && document.activeElement !== this.reference.current) {
          this.reference.current.focus();
        }

        if (this.props.focus === false && document.activeElement === this.reference.current) {
          this.reference.current.blur();
        }
      }
      /**
       * 
       */

    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.props.focus === true && document.activeElement !== this.reference.current) {
          this.reference.current.focus();
        }

        if (this.props.focus === false && document.activeElement === this.reference.current) {
          this.reference.current.blur();
        }
      }
      /**
       * @see React.Component.render
       */

    }, {
      key: "render",
      value: function render() {
        return Object(react__WEBPACK_IMPORTED_MODULE_6__["cloneElement"])(this.props.children, {
          tabIndex: 0,
          onFocus: this.handleFocus,
          onBlur: this.handleBlur,
          className: classnames__WEBPACK_IMPORTED_MODULE_7___default()(this.props.children.props.className, 'is-focusable', IS_FOCUS.toggle(this.props.focus == null ? this.state.focus : this.props.focus)),
          ref: this.reference
        });
      }
    }]);

    return Element;
  }(react__WEBPACK_IMPORTED_MODULE_6__["PureComponent"]);

  _Focusable.Element = Element;

  (function (_Element) {
    var defaultProps = _Element.defaultProps = {
      /**
       * 
       */
      onFocus: _typescript_utils__WEBPACK_IMPORTED_MODULE_9__["Empty"].callback,

      /**
       * 
       */
      onBlur: _typescript_utils__WEBPACK_IMPORTED_MODULE_9__["Empty"].callback,

      /**
       * 
       */
      focus: undefined
    };
  })(Element || (Element = _Focusable.Element || (_Focusable.Element = {})));
})(Focusable || (Focusable = {}));

/***/ }),

/***/ "./components/InvestigatorPage.tsx":
/*!*****************************************!*\
  !*** ./components/InvestigatorPage.tsx ***!
  \*****************************************/
/*! exports provided: InvestigatorPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InvestigatorPage", function() { return InvestigatorPage; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _SummaryDisplay__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./SummaryDisplay */ "./components/SummaryDisplay.tsx");
/* harmony import */ var _CharacteristicSetRenderer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./CharacteristicSetRenderer */ "./components/CharacteristicSetRenderer.tsx");
/* harmony import */ var _StatusDisplay__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./StatusDisplay */ "./components/StatusDisplay.tsx");
/* harmony import */ var _AllSkillsDisplay__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./AllSkillsDisplay */ "./components/AllSkillsDisplay.tsx");
/* harmony import */ var _typescript_unidoc_reducer__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../typescript/unidoc/reducer */ "./typescript/unidoc/reducer/index.ts");






var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\InvestigatorPage.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }









/**
 * 
 */
var InvestigatorPage = /*#__PURE__*/function (_PureComponent) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(InvestigatorPage, _PureComponent);

  var _super = _createSuper(InvestigatorPage);

  /**
   * 
   */
  function InvestigatorPage(properties) {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, InvestigatorPage);

    _this = _super.call(this, properties);
    _this.handleChange = _this.handleChange.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleSave = _this.handleSave.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleSkillSelection = _this.handleSkillSelection.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleLevelup = _this.handleLevelup.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    return _this;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(InvestigatorPage, [{
    key: "handleChange",
    value: function handleChange(next, previous) {
      this.props.onChange(next, previous);
    }
    /**
     * 
     */

  }, {
    key: "handleLevelup",
    value: function handleLevelup() {
      this.props.onChange(this.props.value.levelup(), this.props.value);
    }
    /**
     * 
     */

  }, {
    key: "handleSkillSelection",
    value: function handleSkillSelection(skill) {
      this.props.onChange(this.props.value.toggleForUpdate(skill), this.props.value);
    }
    /**
     * 
     */

  }, {
    key: "handleSave",
    value: function handleSave() {
      var href = document.createElement('a');
      href.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(_typescript_unidoc_reducer__WEBPACK_IMPORTED_MODULE_12__["UnidocInvestigatorReducer"].reduce(this.props.value)));
      href.setAttribute('download', this.props.value.summary.name.first.toLocaleLowerCase() + '-' + this.props.value.summary.name.last.toLocaleLowerCase() + '.sheet.unidoc');
      href.style.display = 'none';
      document.body.appendChild(href);
      href.click();
      document.body.removeChild(href);
      href.remove();
    }
    /**
     * 
     */

  }, {
    key: "render",
    value: function render() {
      return __jsx("div", {
        className: classnames__WEBPACK_IMPORTED_MODULE_7___default()('page page-investigator', this.props.className)
      }, __jsx("div", {
        className: "layout layout-rotulus"
      }, __jsx("div", {
        className: "container"
      }, __jsx("div", {
        className: "row justify-content-center align-items-center"
      }, __jsx("div", {
        className: "col-8 col-md-4 order-md-1 col-lg-3 order-lg-1"
      }, __jsx("img", {
        className: "img-fluid",
        src: "/images/logo.svg"
      })), __jsx("div", {
        className: "col-12 d-block d-md-none"
      }, __jsx("br", null)), __jsx("div", {
        className: "col-12 col-md-8 order-md-1 col-lg-6 order-lg-1"
      }, __jsx("div", {
        className: "row"
      }, __jsx(_SummaryDisplay__WEBPACK_IMPORTED_MODULE_8__["SummaryDisplay"], {
        value: this.props.value
      }))), __jsx("div", {
        className: "col-12 d-block order-md-3"
      }, __jsx("br", null)), __jsx("div", {
        className: "col-12 col-md-6 order-md-3 col-lg-3 order-lg-1"
      }, __jsx("div", {
        className: "row"
      }, __jsx(_CharacteristicSetRenderer__WEBPACK_IMPORTED_MODULE_9__["CharacteristicSetRenderer"], {
        value: this.props.value,
        onChange: this.handleChange
      }))), __jsx("div", {
        className: "col-12 d-block d-md-none order-md-3 order-lg-1 d-lg-block"
      }, __jsx("br", null)), __jsx("div", {
        className: "col-12 col-md-6 order-md-3 col-lg order-lg-1"
      }, __jsx("div", {
        className: "row"
      }, __jsx(_StatusDisplay__WEBPACK_IMPORTED_MODULE_10__["StatusDisplay"], {
        value: this.props.value,
        onChange: this.handleChange
      }))), __jsx("div", {
        className: "col-12 d-block d-md-block order-md-3 order-lg-1"
      }, __jsx("br", null)), __jsx("div", {
        className: "col-12 order-md-3 order-lg-1"
      }, __jsx("div", {
        className: "row"
      }, __jsx(_AllSkillsDisplay__WEBPACK_IMPORTED_MODULE_11__["AllSkillsDisplay"], {
        value: this.props.value,
        onSelect: this.handleSkillSelection
      })))), __jsx("div", {
        className: "row"
      }, __jsx("div", {
        className: "col-12"
      }, __jsx("br", null), __jsx("button", {
        className: "btn btn-link btn-block",
        onClick: this.handleLevelup
      }, "Gagner de l'exp\xE9rience"), __jsx("button", {
        className: "btn btn-primary btn-block",
        onClick: this.handleSave
      }, "Sauvegarder la fiche"), __jsx("button", {
        className: "btn btn-link btn-block",
        onClick: this.props.onReload
      }, "Charger une nouvelle fiche"))))));
    }
  }]);

  return InvestigatorPage;
}(react__WEBPACK_IMPORTED_MODULE_6__["PureComponent"]);
/**
 * 
 */

(function (_InvestigatorPage) {})(InvestigatorPage || (InvestigatorPage = {}));

/***/ }),

/***/ "./components/Label.tsx":
/*!******************************!*\
  !*** ./components/Label.tsx ***!
  \******************************/
/*! exports provided: Label */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Label", function() { return Label; });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);

var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\Label.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;


/**
 * 
 */

function renderLabel(properties, ref) {
  return __jsx("div", Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, properties, {
    className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('label', properties.className),
    ref: ref
  }), __jsx("div", {
    className: "label-value"
  }, properties.children), __jsx("div", {
    className: "label-filler"
  }), __jsx("div", {
    className: "label-ending"
  }));
}
/**
 * 
 */


var Label = react__WEBPACK_IMPORTED_MODULE_1___default.a.forwardRef(renderLabel);
/**
 * 
 */

(function (_Label) {})(Label || (Label = {}));

/***/ }),

/***/ "./components/Loader.tsx":
/*!*******************************!*\
  !*** ./components/Loader.tsx ***!
  \*******************************/
/*! exports provided: Loader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Loader", function() { return Loader; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\Loader.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

/**
 * 
 */

function Loader(properties) {
  return __jsx("div", {
    className: "loader"
  }, properties.children || 'Chargement', __jsx("div", {
    className: "loader dot-loader"
  }));
}
/**
 * 
 */

(function (_Loader) {})(Loader || (Loader = {}));

/***/ }),

/***/ "./components/MovementRenderer.tsx":
/*!*****************************************!*\
  !*** ./components/MovementRenderer.tsx ***!
  \*****************************************/
/*! exports provided: MovementRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MovementRenderer", function() { return MovementRenderer; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _layout_Triplet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layout/Triplet */ "./components/layout/Triplet.tsx");
var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\MovementRenderer.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;


/**
 * 
 */

function MovementRenderer(properties) {
  return __jsx(_layout_Triplet__WEBPACK_IMPORTED_MODULE_1__["Triplet"], {
    superscript: "+1",
    subscript: "-1"
  }, properties.value);
}
/**
 * 
 */

(function (_MovementRenderer) {})(MovementRenderer || (MovementRenderer = {}));

/***/ }),

/***/ "./components/Padding.tsx":
/*!********************************!*\
  !*** ./components/Padding.tsx ***!
  \********************************/
/*! exports provided: Padding */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Padding", function() { return Padding; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\Padding.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;


/**
 * 
 */
function Padding(properties) {
  return __jsx("span", {
    className: "padding"
  }, (properties.padding || '0').repeat(Math.max(properties.size - properties.of.length, 0)));
}
/**
 * 
 */

(function (_Padding) {})(Padding || (Padding = {}));

/***/ }),

/***/ "./components/SkillLine.tsx":
/*!**********************************!*\
  !*** ./components/SkillLine.tsx ***!
  \**********************************/
/*! exports provided: SkillLine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SkillLine", function() { return SkillLine; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Padding__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Padding */ "./components/Padding.tsx");
/* harmony import */ var _typescript_Toggler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../typescript/Toggler */ "./typescript/Toggler.ts");
var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\SkillLine.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;




var IS_SELECTED = _typescript_Toggler__WEBPACK_IMPORTED_MODULE_3__["Toggler"].create('is-selected');
function SkillLine(properties) {
  var name = properties.skill.toString();
  var base = properties.value.sum();
  var halved = properties.value.half();
  var fifth = properties.value.fifth();
  var dbase = base.toString();
  var dhalved = (halved > 0 ? halved : base > 0 ? 1 : 0).toString();
  var dfifth = (fifth > 0 ? fifth : base > 0 ? 1 : 0).toString();
  return __jsx("div", {
    key: name,
    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('skill skill-default', properties.className, IS_SELECTED.toggle(properties.selected)),
    onClick: properties.onClick
  }, __jsx("div", {
    className: "skill-name"
  }, name.substr(0, 1).toLocaleUpperCase(), name.substr(1)), __jsx("div", {
    className: "skill-filler"
  }), __jsx("div", {
    className: "skill-values"
  }, __jsx("div", {
    className: "skill-value"
  }, __jsx(_Padding__WEBPACK_IMPORTED_MODULE_2__["Padding"], {
    padding: ' ',
    of: dbase,
    size: 2
  }), dbase, __jsx("span", {
    className: "percent"
  }, "%")), __jsx("div", {
    className: "skill-separator"
  }, "\xB7"), __jsx("div", {
    className: "skill-value"
  }, __jsx(_Padding__WEBPACK_IMPORTED_MODULE_2__["Padding"], {
    padding: ' ',
    of: dhalved,
    size: 2
  }), dhalved, __jsx("span", {
    className: "percent"
  }, "%")), __jsx("div", {
    className: "skill-separator"
  }, "\xB7"), __jsx("div", {
    className: "skill-value"
  }, __jsx(_Padding__WEBPACK_IMPORTED_MODULE_2__["Padding"], {
    padding: ' ',
    of: dfifth,
    size: 2
  }), dfifth, __jsx("span", {
    className: "percent"
  }, "%"))));
}
/**
 * 
 */

(function (_SkillLine) {})(SkillLine || (SkillLine = {}));

/***/ }),

/***/ "./components/StatusDisplay.tsx":
/*!**************************************!*\
  !*** ./components/StatusDisplay.tsx ***!
  \**************************************/
/*! exports provided: StatusDisplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StatusDisplay", function() { return StatusDisplay; });
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _Label__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Label */ "./components/Label.tsx");
/* harmony import */ var _MovementRenderer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./MovementRenderer */ "./components/MovementRenderer.tsx");
/* harmony import */ var _form_BooleanField__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./form/BooleanField */ "./components/form/BooleanField.tsx");
/* harmony import */ var _CopyField__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./CopyField */ "./components/CopyField.tsx");
/* harmony import */ var _typescript_Investigator__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../typescript/Investigator */ "./typescript/Investigator.ts");
/* harmony import */ var _typescript_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../typescript/utils */ "./typescript/utils/index.ts");
/* harmony import */ var _typescript_Mutables__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../typescript/Mutables */ "./typescript/Mutables.ts");
/* harmony import */ var _form_BoundStatisticField__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./form/BoundStatisticField */ "./components/form/BoundStatisticField.tsx");
/* harmony import */ var _typescript_redux__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../typescript/redux */ "./typescript/redux/index.ts");







var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\StatusDisplay.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }











/**
 * 
 */

var StatusDisplay = /*#__PURE__*/function (_PureComponent) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(StatusDisplay, _PureComponent);

  var _super = _createSuper(StatusDisplay);

  /**
   * 
   */

  /**
   * 
   */
  function StatusDisplay(properties) {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, StatusDisplay);

    _this = _super.call(this, properties);
    _this.handleTemporaryInsaneChange = _this.handleTemporaryInsaneChange.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__["default"])(_this));
    _this.handleIndefinitelyInsaneChange = _this.handleIndefinitelyInsaneChange.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__["default"])(_this));
    _this.handleMajorWoundChange = _this.handleMajorWoundChange.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__["default"])(_this));
    _this.handleHealthChange = _this.handleHealthChange.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__["default"])(_this));
    _this.handleMagicChange = _this.handleMagicChange.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__["default"])(_this));
    _this.handleMentalHealthChange = _this.handleMentalHealthChange.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__["default"])(_this));
    return _this;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(StatusDisplay, [{
    key: "handleTemporaryInsaneChange",
    value: function handleTemporaryInsaneChange(event) {
      this.props.onChange(_typescript_Investigator__WEBPACK_IMPORTED_MODULE_12__["Investigator"].create(_objectSpread({}, this.props.value, {
        mutables: _typescript_Mutables__WEBPACK_IMPORTED_MODULE_14__["Mutables"].create(_objectSpread({}, this.props.value.mutables, {
          temporaryInsane: _typescript_redux__WEBPACK_IMPORTED_MODULE_16__["DataReducer"].reduce(this.props.value.mutables.temporaryInsane, event)
        }))
      })), this.props.value);
    }
    /**
     * 
     */

  }, {
    key: "handleIndefinitelyInsaneChange",
    value: function handleIndefinitelyInsaneChange(event) {
      this.props.onChange(_typescript_Investigator__WEBPACK_IMPORTED_MODULE_12__["Investigator"].create(_objectSpread({}, this.props.value, {
        mutables: _typescript_Mutables__WEBPACK_IMPORTED_MODULE_14__["Mutables"].create(_objectSpread({}, this.props.value.mutables, {
          indefinitelyInsane: _typescript_redux__WEBPACK_IMPORTED_MODULE_16__["DataReducer"].reduce(this.props.value.mutables.indefinitelyInsane, event)
        }))
      })), this.props.value);
    }
    /**
     * 
     */

  }, {
    key: "handleMajorWoundChange",
    value: function handleMajorWoundChange(event) {
      this.props.onChange(_typescript_Investigator__WEBPACK_IMPORTED_MODULE_12__["Investigator"].create(_objectSpread({}, this.props.value, {
        mutables: _typescript_Mutables__WEBPACK_IMPORTED_MODULE_14__["Mutables"].create(_objectSpread({}, this.props.value.mutables, {
          majorWound: _typescript_redux__WEBPACK_IMPORTED_MODULE_16__["DataReducer"].reduce(this.props.value.mutables.majorWound, event)
        }))
      })), this.props.value);
    }
    /**
     * 
     */

  }, {
    key: "handleHealthChange",
    value: function handleHealthChange(event) {
      this.props.onChange(_typescript_Investigator__WEBPACK_IMPORTED_MODULE_12__["Investigator"].create(_objectSpread({}, this.props.value, {
        mutables: _typescript_Mutables__WEBPACK_IMPORTED_MODULE_14__["Mutables"].create(_objectSpread({}, this.props.value.mutables, {
          health: _typescript_redux__WEBPACK_IMPORTED_MODULE_16__["DataReducer"].reduce(this.props.value.mutables.health, event)
        }))
      })), this.props.value);
    }
    /**
     * 
     */

  }, {
    key: "handleMagicChange",
    value: function handleMagicChange(event) {
      this.props.onChange(_typescript_Investigator__WEBPACK_IMPORTED_MODULE_12__["Investigator"].create(_objectSpread({}, this.props.value, {
        mutables: _typescript_Mutables__WEBPACK_IMPORTED_MODULE_14__["Mutables"].create(_objectSpread({}, this.props.value.mutables, {
          magic: _typescript_redux__WEBPACK_IMPORTED_MODULE_16__["DataReducer"].reduce(this.props.value.mutables.magic, event)
        }))
      })), this.props.value);
    }
    /**
     * 
     */

  }, {
    key: "handleMentalHealthChange",
    value: function handleMentalHealthChange(event) {
      this.props.onChange(_typescript_Investigator__WEBPACK_IMPORTED_MODULE_12__["Investigator"].create(_objectSpread({}, this.props.value, {
        mutables: _typescript_Mutables__WEBPACK_IMPORTED_MODULE_14__["Mutables"].create(_objectSpread({}, this.props.value.mutables, {
          mentalHealth: _typescript_redux__WEBPACK_IMPORTED_MODULE_16__["DataReducer"].reduce(this.props.value.mutables.mentalHealth, event)
        }))
      })), this.props.value);
    }
    /**
     * 
     */

  }, {
    key: "render",
    value: function render() {
      var investigator = this.props.value;
      var mutables = this.props.value.mutables;
      var characteristics = investigator.characteristics;
      return __jsx("div", {
        className: "container-fluid"
      }, __jsx("div", {
        className: "row"
      }, __jsx("div", {
        className: "col-4 col-md-6 col-lg"
      }, __jsx(_form_BoundStatisticField__WEBPACK_IMPORTED_MODULE_15__["BoundStatisticField"], {
        onChange: this.handleHealthChange,
        value: mutables.health,
        maximum: investigator.maximumHP
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_8__["Label"], null, "Points de vie"))), __jsx("div", {
        className: "col-4 col-md-6 col-lg"
      }, __jsx(_form_BoundStatisticField__WEBPACK_IMPORTED_MODULE_15__["BoundStatisticField"], {
        onChange: this.handleMentalHealthChange,
        value: mutables.mentalHealth,
        maximum: characteristics.power.sum()
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_8__["Label"], null, "Sant\xE9 mentale"))), __jsx("div", {
        className: "col-4 col-md-6 col-lg"
      }, __jsx(_form_BoundStatisticField__WEBPACK_IMPORTED_MODULE_15__["BoundStatisticField"], {
        onChange: this.handleMagicChange,
        value: mutables.magic,
        maximum: investigator.maximumMP
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_8__["Label"], null, "Points de magie"))), __jsx("div", {
        className: "col-4 col-md-6 col-lg"
      }, __jsx(_form_BooleanField__WEBPACK_IMPORTED_MODULE_10__["BooleanField"], {
        value: mutables.majorWound,
        onChange: this.handleMajorWoundChange
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_8__["Label"], null, "Blessure grave"))), __jsx("div", {
        className: "col-4 col-md-6 col-lg"
      }, __jsx(_form_BooleanField__WEBPACK_IMPORTED_MODULE_10__["BooleanField"], {
        value: mutables.temporaryInsane,
        onChange: this.handleTemporaryInsaneChange
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_8__["Label"], null, "Folie temporaire"))), __jsx("div", {
        className: "col-4 col-md-6 col-lg"
      }, __jsx(_form_BooleanField__WEBPACK_IMPORTED_MODULE_10__["BooleanField"], {
        value: mutables.indefinitelyInsane,
        onChange: this.handleIndefinitelyInsaneChange
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_8__["Label"], null, "Folie persistante"))), __jsx("div", {
        className: "col-4 col-md-6 col-lg"
      }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_11__["CopyField"], {
        value: investigator.impact,
        className: "align-items-center"
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_8__["Label"], null, "Impact"), investigator.impact)), __jsx("div", {
        className: "col-4 col-md-6 col-lg"
      }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_11__["CopyField"], {
        value: investigator.carrure.toString(),
        className: "align-items-center"
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_8__["Label"], null, "Carrure"), investigator.carrure)), __jsx("div", {
        className: "col-4 col-md-6 col-lg"
      }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_11__["CopyField"], {
        value: investigator.movement.toString(),
        className: "align-items-center"
      }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_8__["Label"], null, "Mouvement"), __jsx(_MovementRenderer__WEBPACK_IMPORTED_MODULE_9__["MovementRenderer"], {
        value: investigator.carrure
      })))));
    }
  }]);

  return StatusDisplay;
}(react__WEBPACK_IMPORTED_MODULE_7__["PureComponent"]);
/**
 * 
 */

StatusDisplay.defaultProps = {
  /**
   * 
   */
  onChange: _typescript_utils__WEBPACK_IMPORTED_MODULE_13__["Empty"].callback
};

(function (_StatusDisplay) {})(StatusDisplay || (StatusDisplay = {}));

/***/ }),

/***/ "./components/SummaryDisplay.tsx":
/*!***************************************!*\
  !*** ./components/SummaryDisplay.tsx ***!
  \***************************************/
/*! exports provided: SummaryDisplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SummaryDisplay", function() { return SummaryDisplay; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Label__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Label */ "./components/Label.tsx");
/* harmony import */ var _typescript_Gender__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../typescript/Gender */ "./typescript/Gender.ts");
/* harmony import */ var _CopyField__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CopyField */ "./components/CopyField.tsx");
var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\SummaryDisplay.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;



/**
 * 
 */

function SummaryDisplay(properties) {
  var summary = properties.value.summary;
  var name = summary.name == null ? 'Non Défini' : summary.name.toString();
  var gender = summary.gender == null ? 'Non Défini' : summary.gender === _typescript_Gender__WEBPACK_IMPORTED_MODULE_2__["Gender"].MALE ? 'M' : 'F';
  var birthdate = summary.birthdate == null ? 'Non Défini' : summary.birthdate;
  var hiringdate = summary.hiringdate == null ? 'Non Défini' : summary.hiringdate;
  var birthplace = summary.birthplace == null ? 'Non Défini' : summary.birthplace.toString();
  var home = summary.home == null ? 'Non Défini' : summary.home.toString();
  return __jsx("div", {
    className: "container-fluid"
  }, __jsx("div", {
    className: "row"
  }, __jsx("div", {
    className: "col-12 col-md-8"
  }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_3__["CopyField"], {
    value: name
  }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_1__["Label"], null, "Agent"), name)), __jsx("div", {
    className: "col-6 col-md-2"
  }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_3__["CopyField"], {
    value: gender
  }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_1__["Label"], null, "Sexe"), gender)), __jsx("div", {
    className: "col-6 col-md-2"
  }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_3__["CopyField"], {
    value: summary.age.toString()
  }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_1__["Label"], null, "\xC2ge"), summary.age)), __jsx("div", {
    className: "col-12 col-md-8"
  }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_3__["CopyField"], {
    value: summary.alias
  }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_1__["Label"], null, "Alias"), summary.alias)), __jsx("div", {
    className: "col-12 col-md-4"
  }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_3__["CopyField"], {
    value: summary.job
  }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_1__["Label"], null, "Couverture"), summary.job)), __jsx("div", {
    className: "col-12 col-md-4"
  }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_3__["CopyField"], {
    value: summary.matricule
  }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_1__["Label"], null, "Matricule"), summary.matricule)), __jsx("div", {
    className: "col-12 col-md-4"
  }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_3__["CopyField"], {
    value: birthdate
  }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_1__["Label"], null, "Date de naissance"), birthdate)), __jsx("div", {
    className: "col-12 col-md-4"
  }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_3__["CopyField"], {
    value: hiringdate
  }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_1__["Label"], null, "Date d'int\xE9gration"), hiringdate)), __jsx("div", {
    className: "col-12"
  }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_3__["CopyField"], {
    value: birthplace
  }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_1__["Label"], null, "Lieu de naissance"), birthplace)), __jsx("div", {
    className: "col-12"
  }, __jsx(_CopyField__WEBPACK_IMPORTED_MODULE_3__["CopyField"], {
    value: home
  }, __jsx(_Label__WEBPACK_IMPORTED_MODULE_1__["Label"], null, "Lieu de r\xE9sidence"), home))));
}
/**
 * 
 */

(function (_SummaryDisplay) {})(SummaryDisplay || (SummaryDisplay = {}));

/***/ }),

/***/ "./components/ValueRenderer.tsx":
/*!**************************************!*\
  !*** ./components/ValueRenderer.tsx ***!
  \**************************************/
/*! exports provided: ValueRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValueRenderer", function() { return ValueRenderer; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _layout_Triplet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout/Triplet */ "./components/layout/Triplet.tsx");
var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\ValueRenderer.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;



/**
 * 
 */

function ValueRenderer(properties) {
  return __jsx(_layout_Triplet__WEBPACK_IMPORTED_MODULE_2__["Triplet"], {
    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('value', properties.className),
    subscript: properties.children.fifth(),
    superscript: properties.children.half()
  }, properties.children.sum().toString());
}
/**
 * 
 */

(function (_ValueRenderer) {})(ValueRenderer || (ValueRenderer = {}));

/***/ }),

/***/ "./components/form/BooleanField.tsx":
/*!******************************************!*\
  !*** ./components/form/BooleanField.tsx ***!
  \******************************************/
/*! exports provided: BooleanField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BooleanField", function() { return BooleanField; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var react_toggle__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-toggle */ "./node_modules/react-toggle/dist/component/index.js");
/* harmony import */ var react_toggle__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_toggle__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _typescript_redux_DataEvent__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../typescript/redux/DataEvent */ "./typescript/redux/DataEvent.ts");
/* harmony import */ var _Field__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Field */ "./components/Field.tsx");






var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\form\\BooleanField.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }






/**
 * 
 */

var BooleanField = /*#__PURE__*/function (_React$PureComponent) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(BooleanField, _React$PureComponent);

  var _super = _createSuper(BooleanField);

  /**
   * 
   */

  /**
   * 
   */
  function BooleanField(properties) {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, BooleanField);

    _this = _super.call(this, properties);
    _this._input = void 0;
    _this.handleInputChange = _this.handleInputChange.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleFieldClick = _this.handleFieldClick.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this._input = react__WEBPACK_IMPORTED_MODULE_6___default.a.createRef();
    return _this;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(BooleanField, [{
    key: "handleInputChange",
    value: function handleInputChange() {
      this.props.onChange(_typescript_redux_DataEvent__WEBPACK_IMPORTED_MODULE_9__["DataEvent"].toggle());
    }
    /**
     * 
     */

  }, {
    key: "handleFieldClick",
    value: function handleFieldClick() {
      this.props.onChange(_typescript_redux_DataEvent__WEBPACK_IMPORTED_MODULE_9__["DataEvent"].toggle());
    }
    /**
     * 
     */

  }, {
    key: "render",
    value: function render() {
      return __jsx(_Field__WEBPACK_IMPORTED_MODULE_10__["Field"], {
        onClick: this.handleFieldClick,
        className: "is-clickable"
      }, this.props.children, __jsx("div", {
        className: classnames__WEBPACK_IMPORTED_MODULE_7___default()('control control-boolean', this.props.className)
      }, __jsx(react_toggle__WEBPACK_IMPORTED_MODULE_8___default.a, {
        checked: this.props.value,
        icons: {
          checked: '✓',
          unchecked: ''
        },
        onChange: this.handleInputChange
      })));
    }
  }]);

  return BooleanField;
}(react__WEBPACK_IMPORTED_MODULE_6___default.a.PureComponent);
/**
 * 
 */

(function (_BooleanField) {})(BooleanField || (BooleanField = {}));

/***/ }),

/***/ "./components/form/BoundStatisticField.tsx":
/*!*************************************************!*\
  !*** ./components/form/BoundStatisticField.tsx ***!
  \*************************************************/
/*! exports provided: BoundStatisticField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BoundStatisticField", function() { return BoundStatisticField; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _typescript_redux_DataEvent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../typescript/redux/DataEvent */ "./typescript/redux/DataEvent.ts");
/* harmony import */ var _typescript_redux_DataReducer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../typescript/redux/DataReducer */ "./typescript/redux/DataReducer.ts");
/* harmony import */ var _layout_Triplet__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../layout/Triplet */ "./components/layout/Triplet.tsx");
/* harmony import */ var _Field__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Field */ "./components/Field.tsx");
/* harmony import */ var _IntegerInput__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./IntegerInput */ "./components/form/IntegerInput.tsx");
/* harmony import */ var _increment_IncrementButton__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../increment/IncrementButton */ "./components/increment/IncrementButton.tsx");
/* harmony import */ var _increment_DecrementButton__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../increment/DecrementButton */ "./components/increment/DecrementButton.tsx");
/* harmony import */ var _increment_IncrementAction__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../increment/IncrementAction */ "./components/increment/IncrementAction.tsx");
/* harmony import */ var _increment_Pancrement__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../increment/Pancrement */ "./components/increment/Pancrement.tsx");






var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\form\\BoundStatisticField.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }












/**
 * 
 */

function clamp(value, minimum, maximum) {
  return Math.max(Math.min(value, maximum), minimum);
}
/**
 * 
 */


var BoundStatisticField = /*#__PURE__*/function (_React$PureComponent) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(BoundStatisticField, _React$PureComponent);

  var _super = _createSuper(BoundStatisticField);

  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */
  function BoundStatisticField(properties) {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, BoundStatisticField);

    _this = _super.call(this, properties);
    _this._input = void 0;
    _this._origin = void 0;
    _this.handleInputChange = _this.handleInputChange.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handlePancrement = _this.handlePancrement.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleFieldClick = _this.handleFieldClick.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleIncrement = _this.handleIncrement.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this._input = react__WEBPACK_IMPORTED_MODULE_6___default.a.createRef();
    _this._origin = 0;
    return _this;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(BoundStatisticField, [{
    key: "handleInputChange",
    value: function handleInputChange(event) {
      this.props.onChange(_typescript_redux_DataEvent__WEBPACK_IMPORTED_MODULE_8__["DataEvent"].change(this.props.value, _typescript_redux_DataReducer__WEBPACK_IMPORTED_MODULE_9__["DataReducer"].reduce(this.props.value, event)));
    }
    /**
     * 
     */

  }, {
    key: "handleFieldClick",
    value: function handleFieldClick() {
      this._input.current.focus();
    }
    /**
     * 
     */

  }, {
    key: "handlePancrement",
    value: function handlePancrement(event) {
      if (event.type === _increment_IncrementAction__WEBPACK_IMPORTED_MODULE_15__["IncrementAction"].FIRST) {
        this._origin = this.props.value;
      }

      var nextValue = clamp(this._origin + event.payload, 0, this.props.maximum);

      if (nextValue !== this.props.value) {
        this.props.onChange(_typescript_redux_DataEvent__WEBPACK_IMPORTED_MODULE_8__["DataEvent"].change(this.props.value, nextValue));
      }
    }
    /**
     * 
     */

  }, {
    key: "handleIncrement",
    value: function handleIncrement(event) {
      var previousValue = this.props.value;
      var nextValue = clamp(_typescript_redux_DataReducer__WEBPACK_IMPORTED_MODULE_9__["DataReducer"].reduce(previousValue, event), 0, this.props.maximum);

      if (nextValue !== previousValue) {
        this.props.onChange(_typescript_redux_DataEvent__WEBPACK_IMPORTED_MODULE_8__["DataEvent"].change(this.props.value, nextValue));
      }
    }
    /**
     * 
     */

  }, {
    key: "render",
    value: function render() {
      return __jsx(_increment_Pancrement__WEBPACK_IMPORTED_MODULE_16__["Pancrement"], {
        speed: 1 / 40,
        onChange: this.handlePancrement
      }, __jsx(_Field__WEBPACK_IMPORTED_MODULE_11__["Field"], {
        onClick: this.handleFieldClick,
        className: "is-clickable"
      }, this.props.children, __jsx("div", {
        className: classnames__WEBPACK_IMPORTED_MODULE_7___default()('control control-value', this.props.className)
      }, __jsx(_layout_Triplet__WEBPACK_IMPORTED_MODULE_10__["Triplet"], {
        superscript: '/' + this.props.maximum
      }, __jsx("div", {
        className: "control-value-input"
      }, __jsx(_IntegerInput__WEBPACK_IMPORTED_MODULE_12__["IntegerInput"], {
        ref: this._input,
        minimum: 0,
        maximum: this.props.maximum,
        onChange: this.handleInputChange,
        value: this.props.value
      }), __jsx(_increment_IncrementButton__WEBPACK_IMPORTED_MODULE_13__["IncrementButton"], {
        onChange: this.handleIncrement,
        interval: 200
      }), __jsx(_increment_DecrementButton__WEBPACK_IMPORTED_MODULE_14__["DecrementButton"], {
        onChange: this.handleIncrement,
        interval: 200
      }))))));
    }
  }]);

  return BoundStatisticField;
}(react__WEBPACK_IMPORTED_MODULE_6___default.a.PureComponent);
/**
 * 
 */

(function (_BoundStatisticField) {})(BoundStatisticField || (BoundStatisticField = {}));

/***/ }),

/***/ "./components/form/IntegerInput.tsx":
/*!******************************************!*\
  !*** ./components/form/IntegerInput.tsx ***!
  \******************************************/
/*! exports provided: IntegerInput */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IntegerInput", function() { return IntegerInput; });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutProperties */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js");
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _typescript_redux__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../typescript/redux */ "./typescript/redux/index.ts");
/* harmony import */ var _typescript_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../typescript/utils */ "./typescript/utils/index.ts");








var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\form\\IntegerInput.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

/**
 * 
 */





function clamp(value, minimum, maximum) {
  return Math.max(Math.min(value, maximum), minimum);
}
/**
* 
*/


var RawIntegerInput = /*#__PURE__*/function (_React$Component) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(RawIntegerInput, _React$Component);

  var _super = _createSuper(RawIntegerInput);

  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */

  /**
  * 
  */
  function RawIntegerInput(properties) {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, RawIntegerInput);

    _this = _super.call(this, properties);
    _this._shadow = void 0;
    _this._input = void 0;
    _this._defaultInput = void 0;
    _this.handleInputChange = _this.handleInputChange.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__["default"])(_this));
    _this.handleInputBlur = _this.handleInputBlur.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__["default"])(_this));
    _this.handleInputKeyUp = _this.handleInputKeyUp.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__["default"])(_this));
    _this.handleShadowUpdate = _this.handleShadowUpdate.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__["default"])(_this));
    _this._defaultInput = react__WEBPACK_IMPORTED_MODULE_8___default.a.createRef();
    _this._shadow = react__WEBPACK_IMPORTED_MODULE_8___default.a.createRef();
    _this.state = {
      content: _this.props.value.toString()
    };
    return _this;
  }
  /**
  * 
  */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(RawIntegerInput, [{
    key: "commit",
    value: function commit() {
      var content = this._input.current.valueAsNumber << 0;
      this._input.current.value = this.props.value.toString();
      this.setState({
        content: this.props.value.toString()
      }, this.handleShadowUpdate);
      this.props.onChange(_typescript_redux__WEBPACK_IMPORTED_MODULE_10__["DataEvent"].change(this.props.value, clamp(content, this.props.minimum, this.props.maximum)));
    }
    /**
     * 
     */

  }, {
    key: "handleShadowUpdate",
    value: function handleShadowUpdate() {
      var input = this._input.current;
      var shadow = this._shadow.current;
      input.style.width = shadow.scrollWidth + 'px';
      input.style.height = shadow.scrollHeight + 'px';
    }
    /**
    * 
    */

  }, {
    key: "handleInputChange",
    value: function handleInputChange(event) {
      var clamped = clamp(event.target.valueAsNumber, this.props.minimum, this.props.maximum);

      if (isNaN(clamped)) {
        clamped = this.props.minimum === Number.NEGATIVE_INFINITY ? 0 : this.props.minimum;
      }

      this._input.current.valueAsNumber = clamped;
      this.setState({
        content: this._input.current.valueAsNumber.toString()
      }, this.handleShadowUpdate);
      this.props.onInput(event);
    }
    /**
    * 
    */

  }, {
    key: "handleInputBlur",
    value: function handleInputBlur(event) {
      this.commit();
      this.props.onBlur(event);
    }
    /**
    * 
    */

  }, {
    key: "handleInputKeyUp",
    value: function handleInputKeyUp(event) {
      if (event.key === 'Enter') {
        this.commit();
      }

      this.props.onKeyUp(event);
    }
    /**
    * 
    */

  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var input = this._input.current;
      input.valueAsNumber = this.props.value;
      this.handleShadowUpdate();
    }
    /**
    * 
    */

  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(oldProperties) {
      if (oldProperties.value !== this.props.value) {
        this._input.current.valueAsNumber = this.props.value;
        this.setState({
          content: this.props.value.toString()
        }, this.handleShadowUpdate);
      }
    }
    /**
    * 
    */

  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          onChange = _this$props.onChange,
          onBlur = _this$props.onBlur,
          onKeyUp = _this$props.onKeyUp,
          onInput = _this$props.onInput,
          minimum = _this$props.minimum,
          maximum = _this$props.maximum,
          value = _this$props.value,
          reference = _this$props.reference,
          className = _this$props.className,
          properties = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$props, ["onChange", "onBlur", "onKeyUp", "onInput", "minimum", "maximum", "value", "reference", "className"]);

      this._input = reference || this._defaultInput;
      return __jsx("div", {
        className: "layout layout-shadowed"
      }, __jsx("div", {
        className: "layout-shadowed-shadow",
        ref: this._shadow
      }, this.state.content), __jsx("input", Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, properties, {
        onBlur: this.handleInputBlur,
        onKeyUp: this.handleInputKeyUp,
        onInput: this.handleInputChange,
        className: classnames__WEBPACK_IMPORTED_MODULE_9___default()(className, 'layout-shadowed-projection'),
        ref: this._input,
        type: "number"
      })));
    }
  }]);

  return RawIntegerInput;
}(react__WEBPACK_IMPORTED_MODULE_8___default.a.Component);

RawIntegerInput.defaultProps = {
  /**
   * 
   */
  minimum: Number.NEGATIVE_INFINITY,

  /**
   * 
   */
  maximum: Number.POSITIVE_INFINITY,

  /**
   * 
   */
  onChange: _typescript_utils__WEBPACK_IMPORTED_MODULE_11__["Empty"].callback,

  /**
   * 
   */
  onBlur: _typescript_utils__WEBPACK_IMPORTED_MODULE_11__["Empty"].callback,

  /**
   * 
   */
  onKeyUp: _typescript_utils__WEBPACK_IMPORTED_MODULE_11__["Empty"].callback,

  /**
   * 
   */
  onInput: _typescript_utils__WEBPACK_IMPORTED_MODULE_11__["Empty"].callback
};

function renderIntegerInput(properties, ref) {
  return __jsx(RawIntegerInput, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, properties, {
    reference: ref
  }));
}
/**
 * 
 */


var IntegerInput = react__WEBPACK_IMPORTED_MODULE_8___default.a.forwardRef(renderIntegerInput);
/**
* 
*/

(function (_IntegerInput) {})(IntegerInput || (IntegerInput = {}));

/***/ }),

/***/ "./components/form/ValueField.tsx":
/*!****************************************!*\
  !*** ./components/form/ValueField.tsx ***!
  \****************************************/
/*! exports provided: ValueField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValueField", function() { return ValueField; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _typescript_redux_DataEvent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../typescript/redux/DataEvent */ "./typescript/redux/DataEvent.ts");
/* harmony import */ var _typescript_redux_DataReducer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../typescript/redux/DataReducer */ "./typescript/redux/DataReducer.ts");
/* harmony import */ var _layout_Triplet__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../layout/Triplet */ "./components/layout/Triplet.tsx");
/* harmony import */ var _Field__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Field */ "./components/Field.tsx");
/* harmony import */ var _increment_IncrementButton__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../increment/IncrementButton */ "./components/increment/IncrementButton.tsx");
/* harmony import */ var _increment_DecrementButton__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../increment/DecrementButton */ "./components/increment/DecrementButton.tsx");
/* harmony import */ var _increment_IncrementAction__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../increment/IncrementAction */ "./components/increment/IncrementAction.tsx");
/* harmony import */ var _increment_Pancrement__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../increment/Pancrement */ "./components/increment/Pancrement.tsx");
/* harmony import */ var _IntegerInput__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./IntegerInput */ "./components/form/IntegerInput.tsx");






var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\form\\ValueField.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }












/**
 * 
 */

function clamp(value, minimum, maximum) {
  return Math.max(Math.min(value, maximum), minimum);
}
/**
 * 
 */


var ValueField = /*#__PURE__*/function (_React$PureComponent) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(ValueField, _React$PureComponent);

  var _super = _createSuper(ValueField);

  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */
  function ValueField(properties) {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, ValueField);

    _this = _super.call(this, properties);
    _this._input = void 0;
    _this._origin = void 0;
    _this.handleInputChange = _this.handleInputChange.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handlePancrement = _this.handlePancrement.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleFieldClick = _this.handleFieldClick.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleIncrement = _this.handleIncrement.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this._input = react__WEBPACK_IMPORTED_MODULE_6___default.a.createRef();
    _this._origin = 0;
    return _this;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(ValueField, [{
    key: "handleInputChange",
    value: function handleInputChange(event) {
      this.props.onChange(_typescript_redux_DataEvent__WEBPACK_IMPORTED_MODULE_8__["DataEvent"].change(this.props.value, _typescript_redux_DataReducer__WEBPACK_IMPORTED_MODULE_9__["DataReducer"].reduce(this.props.value, event)));
    }
    /**
     * 
     */

  }, {
    key: "handleFieldClick",
    value: function handleFieldClick() {
      this._input.current.focus();
    }
    /**
     * 
     */

  }, {
    key: "handlePancrement",
    value: function handlePancrement(event) {
      if (event.type === _increment_IncrementAction__WEBPACK_IMPORTED_MODULE_14__["IncrementAction"].FIRST) {
        this._origin = this.props.value;
      }

      var nextValue = clamp(this._origin + event.payload, this.props.minimum, this.props.maximum);

      if (nextValue !== this.props.value) {
        this.props.onChange(_typescript_redux_DataEvent__WEBPACK_IMPORTED_MODULE_8__["DataEvent"].change(this.props.value, nextValue));
      }
    }
    /**
     * 
     */

  }, {
    key: "handleIncrement",
    value: function handleIncrement(event) {
      var previousValue = this.props.value;
      var nextValue = clamp(_typescript_redux_DataReducer__WEBPACK_IMPORTED_MODULE_9__["DataReducer"].reduce(previousValue, event), this.props.minimum, this.props.maximum);

      if (nextValue !== previousValue) {
        this.props.onChange(_typescript_redux_DataEvent__WEBPACK_IMPORTED_MODULE_8__["DataEvent"].change(this.props.value, nextValue));
      }
    }
    /**
     * 
     */

  }, {
    key: "render",
    value: function render() {
      return __jsx(_increment_Pancrement__WEBPACK_IMPORTED_MODULE_15__["Pancrement"], {
        speed: 1 / 40,
        onChange: this.handlePancrement
      }, __jsx(_Field__WEBPACK_IMPORTED_MODULE_11__["Field"], {
        onClick: this.handleFieldClick,
        className: "is-clickable"
      }, this.props.children, __jsx("div", {
        className: classnames__WEBPACK_IMPORTED_MODULE_7___default()('control control-value', this.props.className)
      }, __jsx(_layout_Triplet__WEBPACK_IMPORTED_MODULE_10__["Triplet"], {
        subscript: this.props.value / 5 << 0,
        superscript: this.props.value >> 1
      }, __jsx("div", {
        className: "control-value-input"
      }, __jsx(_IntegerInput__WEBPACK_IMPORTED_MODULE_16__["IntegerInput"], {
        ref: this._input,
        minimum: this.props.minimum,
        maximum: this.props.maximum,
        value: this.props.value,
        onChange: this.handleInputChange
      }), __jsx(_increment_IncrementButton__WEBPACK_IMPORTED_MODULE_12__["IncrementButton"], {
        onChange: this.handleIncrement,
        interval: 200
      }), __jsx(_increment_DecrementButton__WEBPACK_IMPORTED_MODULE_13__["DecrementButton"], {
        onChange: this.handleIncrement,
        interval: 200
      }))))));
    }
  }]);

  return ValueField;
}(react__WEBPACK_IMPORTED_MODULE_6___default.a.PureComponent);
/**
 * 
 */

(function (_ValueField) {})(ValueField || (ValueField = {}));

/***/ }),

/***/ "./components/increment/DecrementButton.tsx":
/*!**************************************************!*\
  !*** ./components/increment/DecrementButton.tsx ***!
  \**************************************************/
/*! exports provided: DecrementButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DecrementButton", function() { return DecrementButton; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _typescript_utils_Empty__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../typescript/utils/Empty */ "./typescript/utils/Empty.ts");
/* harmony import */ var _typescript_redux__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../typescript/redux */ "./typescript/redux/index.ts");






var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\increment\\DecrementButton.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }





/**
 * 
 */

var DecrementButton = /*#__PURE__*/function (_React$PureComponent) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(DecrementButton, _React$PureComponent);

  var _super = _createSuper(DecrementButton);

  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */

  /**
  * @see React/Component#constructor
  */
  function DecrementButton(properties) {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, DecrementButton);

    _this = _super.call(this, properties);
    _this._from = void 0;
    _this._interval = void 0;
    _this._from = 0;
    _this._interval = 0;
    _this.handleStart = _this.handleStart.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleStop = _this.handleStop.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleSilentEvent = _this.handleSilentEvent.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleDecrement = _this.handleDecrement.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    return _this;
  }
  /**
  * Start the incrementation process.
  */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(DecrementButton, [{
    key: "handleStart",
    value: function handleStart(event) {
      event.stopPropagation();
      this._from = event.timeStamp;
      this._interval = window.setInterval(this.handleDecrement, this.props.interval);
    }
    /**
     * Stop the incrementation process.
     */

  }, {
    key: "handleSilentEvent",
    value: function handleSilentEvent(event) {
      event.stopPropagation();
    }
    /**
     * Stop the incrementation process.
     */

  }, {
    key: "handleStop",
    value: function handleStop(event) {
      event.stopPropagation();

      if (this._interval > 0) {
        window.clearInterval(this._interval);
        this._interval = 0;

        if (event.timeStamp - this._from < this.props.interval) {
          this.handleDecrement();
        }

        this._from = 0;
      }
    }
    /**
     * 
     */

  }, {
    key: "handleDecrement",
    value: function handleDecrement() {
      this.props.onChange(_typescript_redux__WEBPACK_IMPORTED_MODULE_9__["DataEvent"].decrement());
    }
    /**
     * @see React.Component.componentWillUnmount
     */

  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this._interval > 0) {
        window.clearInterval(this._interval);
        this._interval = 0;
      }
    }
    /**
    * @see React.Component.render
    */

  }, {
    key: "render",
    value: function render() {
      return __jsx("button", {
        className: classnames__WEBPACK_IMPORTED_MODULE_7___default()('btn btn-decrement', this.props.className),
        onMouseDown: this.handleStart,
        onMouseUp: this.handleStop,
        onMouseOut: this.handleStop,
        onClick: this.handleSilentEvent
      });
    }
  }]);

  return DecrementButton;
}(react__WEBPACK_IMPORTED_MODULE_6___default.a.PureComponent);
/**
 * 
 */

DecrementButton.defaultProps = Object.seal({
  /**
   * 
   */
  onChange: _typescript_utils_Empty__WEBPACK_IMPORTED_MODULE_8__["Empty"].callback
});

(function (_DecrementButton) {})(DecrementButton || (DecrementButton = {}));

/***/ }),

/***/ "./components/increment/IncrementAction.tsx":
/*!**************************************************!*\
  !*** ./components/increment/IncrementAction.tsx ***!
  \**************************************************/
/*! exports provided: IncrementAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IncrementAction", function() { return IncrementAction; });
/**
 * 
 */

/**
 * 
 */
var IncrementAction;

(function (_IncrementAction) {
  /**
   * 
   */
  var FIRST = _IncrementAction.FIRST = 'increment:first';
  var NEXT = _IncrementAction.NEXT = 'increment:next';
  var LAST = _IncrementAction.LAST = 'increment:last';
  var ALL = _IncrementAction.ALL = [FIRST, NEXT, LAST];
})(IncrementAction || (IncrementAction = {}));

/***/ }),

/***/ "./components/increment/IncrementButton.tsx":
/*!**************************************************!*\
  !*** ./components/increment/IncrementButton.tsx ***!
  \**************************************************/
/*! exports provided: IncrementButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IncrementButton", function() { return IncrementButton; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _typescript_utils_Empty__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../typescript/utils/Empty */ "./typescript/utils/Empty.ts");
/* harmony import */ var _typescript_redux__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../typescript/redux */ "./typescript/redux/index.ts");






var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\increment\\IncrementButton.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }





/**
 * 
 */

var IncrementButton = /*#__PURE__*/function (_React$PureComponent) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(IncrementButton, _React$PureComponent);

  var _super = _createSuper(IncrementButton);

  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */

  /**
  * @see React/Component#constructor
  */
  function IncrementButton(properties) {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, IncrementButton);

    _this = _super.call(this, properties);
    _this._from = void 0;
    _this._interval = void 0;
    _this._from = 0;
    _this._interval = 0;
    _this.handleStart = _this.handleStart.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleStop = _this.handleStop.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleSilentEvent = _this.handleSilentEvent.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleIncrement = _this.handleIncrement.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    return _this;
  }
  /**
  * Start the incrementation process.
  */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(IncrementButton, [{
    key: "handleStart",
    value: function handleStart(event) {
      event.stopPropagation();
      this._from = event.timeStamp;
      this._interval = window.setInterval(this.handleIncrement, this.props.interval);
    }
    /**
     * Stop the incrementation process.
     */

  }, {
    key: "handleSilentEvent",
    value: function handleSilentEvent(event) {
      event.stopPropagation();
    }
    /**
     * Stop the incrementation process.
     */

  }, {
    key: "handleStop",
    value: function handleStop(event) {
      event.stopPropagation();

      if (this._interval > 0) {
        window.clearInterval(this._interval);
        this._interval = 0;

        if (event.timeStamp - this._from < this.props.interval) {
          this.handleIncrement();
        }

        this._from = 0;
      }
    }
    /**
     * 
     */

  }, {
    key: "handleIncrement",
    value: function handleIncrement() {
      this.props.onChange(_typescript_redux__WEBPACK_IMPORTED_MODULE_9__["DataEvent"].increment());
    }
    /**
     * @see React.Component.componentWillUnmount
     */

  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this._interval > 0) {
        window.clearInterval(this._interval);
        this._interval = 0;
      }
    }
    /**
    * @see React.Component.render
    */

  }, {
    key: "render",
    value: function render() {
      return __jsx("button", {
        className: classnames__WEBPACK_IMPORTED_MODULE_7___default()('btn btn-increment', this.props.className),
        onMouseDown: this.handleStart,
        onMouseOut: this.handleStop,
        onMouseUp: this.handleStop,
        onClick: this.handleSilentEvent
      });
    }
  }]);

  return IncrementButton;
}(react__WEBPACK_IMPORTED_MODULE_6___default.a.PureComponent);
/**
 * 
 */

IncrementButton.defaultProps = Object.seal({
  /**
   * 
   */
  onChange: _typescript_utils_Empty__WEBPACK_IMPORTED_MODULE_8__["Empty"].callback
});

(function (_IncrementButton) {})(IncrementButton || (IncrementButton = {}));

/***/ }),

/***/ "./components/increment/IncrementEvent.tsx":
/*!*************************************************!*\
  !*** ./components/increment/IncrementEvent.tsx ***!
  \*************************************************/
/*! exports provided: IncrementEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IncrementEvent", function() { return IncrementEvent; });
/* harmony import */ var _IncrementAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./IncrementAction */ "./components/increment/IncrementAction.tsx");

/**
 * 
 */

/**
 * 
 */
var IncrementEvent;

(function (_IncrementEvent) {
  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */
  function first(payload) {
    return Object.seal({
      type: _IncrementAction__WEBPACK_IMPORTED_MODULE_0__["IncrementAction"].FIRST,
      payload: payload
    });
  }

  _IncrementEvent.first = first;

  function next(payload) {
    return Object.seal({
      type: _IncrementAction__WEBPACK_IMPORTED_MODULE_0__["IncrementAction"].NEXT,
      payload: payload
    });
  }

  _IncrementEvent.next = next;

  function last(payload) {
    return Object.seal({
      type: _IncrementAction__WEBPACK_IMPORTED_MODULE_0__["IncrementAction"].LAST,
      payload: payload
    });
  }

  _IncrementEvent.last = last;
})(IncrementEvent || (IncrementEvent = {}));

/***/ }),

/***/ "./components/increment/Pancrement.tsx":
/*!*********************************************!*\
  !*** ./components/increment/Pancrement.tsx ***!
  \*********************************************/
/*! exports provided: Pancrement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pancrement", function() { return Pancrement; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react_hammerjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-hammerjs */ "./node_modules/react-hammerjs/dist/react-hammerjs.es.js");
/* harmony import */ var _typescript_utils_Empty__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../typescript/utils/Empty */ "./typescript/utils/Empty.ts");
/* harmony import */ var _IncrementEvent__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./IncrementEvent */ "./components/increment/IncrementEvent.tsx");






var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\increment\\Pancrement.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }





/**
 * 
 */

var BLOCK_SCROLL_STYLE = {
  touchAction: 'none'
};
/**
 * 
 */

var Pancrement = /*#__PURE__*/function (_React$PureComponent) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(Pancrement, _React$PureComponent);

  var _super = _createSuper(Pancrement);

  /**
   * 
   */

  /**
   * 
   */

  /**
  * @see React/Component#constructor
  */
  function Pancrement(properties) {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Pancrement);

    _this = _super.call(this, properties);
    _this._previous = void 0;
    _this._previous = undefined;
    _this.handlePan = _this.handlePan.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    return _this;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Pancrement, [{
    key: "handlePan",
    value: function handlePan(event) {
      var delta = -event.deltaY * this.props.speed << 0;

      if (event.isFinal) {
        this.props.onChange(_IncrementEvent__WEBPACK_IMPORTED_MODULE_9__["IncrementEvent"].last(delta));
        this._previous = undefined;
      } else if (this._previous == null) {
        this.props.onChange(_IncrementEvent__WEBPACK_IMPORTED_MODULE_9__["IncrementEvent"].first(delta));
        this._previous = delta;
      } else if (this._previous !== delta) {
        this.props.onChange(_IncrementEvent__WEBPACK_IMPORTED_MODULE_9__["IncrementEvent"].next(delta));
        this._previous = delta;
      }
    }
    /**
     * 
     */

  }, {
    key: "getChildrenStyle",
    value: function getChildrenStyle() {
      return Object.assign({}, this.props.children.props.style, BLOCK_SCROLL_STYLE);
    }
    /**
    * @see React.Component.render
    */

  }, {
    key: "render",
    value: function render() {
      return __jsx(react_hammerjs__WEBPACK_IMPORTED_MODULE_7__["default"], {
        onPan: this.handlePan,
        direction: 'DIRECTION_VERTICAL',
        options: {
          domEvents: true
        }
      }, this.props.children);
    }
  }]);

  return Pancrement;
}(react__WEBPACK_IMPORTED_MODULE_6___default.a.PureComponent);
/**
 * 
 */

Pancrement.defaultProps = Object.seal({
  /**
   * 
   */
  onChange: _typescript_utils_Empty__WEBPACK_IMPORTED_MODULE_8__["Empty"].callback,

  /**
   * 
   */
  value: 0
});

(function (_Pancrement) {})(Pancrement || (Pancrement = {}));

/***/ }),

/***/ "./components/layout/Triplet.tsx":
/*!***************************************!*\
  !*** ./components/layout/Triplet.tsx ***!
  \***************************************/
/*! exports provided: Triplet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Triplet", function() { return Triplet; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\layout\\Triplet.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;


/**
 * 
 */

function Triplet(properties) {
  return __jsx("div", {
    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('layout layout-triplet', properties.className)
  }, __jsx("div", {
    className: "layout-triplet-body"
  }, properties.children), __jsx("div", {
    className: "layout-triplet-aside"
  }, __jsx("div", {
    className: "layout-triplet-superscript"
  }, properties.superscript), __jsx("div", {
    className: "layout-triplet-subscript"
  }, properties.subscript)));
}
/**
 * 
 */

(function (_Triplet) {})(Triplet || (Triplet = {}));

/***/ }),

/***/ "./components/page/home/HomePage.tsx":
/*!*******************************************!*\
  !*** ./components/page/home/HomePage.tsx ***!
  \*******************************************/
/*! exports provided: HomePage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomePage", function() { return HomePage; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react_transition_group__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-transition-group */ "./node_modules/react-transition-group/esm/index.js");
/* harmony import */ var _typescript_Investigator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../typescript/Investigator */ "./typescript/Investigator.ts");
/* harmony import */ var _InvestigatorPage__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../InvestigatorPage */ "./components/InvestigatorPage.tsx");
/* harmony import */ var _loading_LoadingPage__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../loading/LoadingPage */ "./components/page/loading/LoadingPage.tsx");
/* harmony import */ var _HomePageState__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./HomePageState */ "./components/page/home/HomePageState.tsx");






var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\page\\home\\HomePage.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }







/**
 * 
 */

var HomePage = /*#__PURE__*/function (_React$Component) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(HomePage, _React$Component);

  var _super = _createSuper(HomePage);

  /**
   * 
   */
  function HomePage(properties) {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, HomePage);

    _this = _super.call(this, properties);
    _this.handleLoading = _this.handleLoading.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleReload = _this.handleReload.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleCancelling = _this.handleCancelling.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleChange = _this.handleChange.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.state = {
      state: _HomePageState__WEBPACK_IMPORTED_MODULE_11__["HomePageState"].LOADING,
      investigator: _typescript_Investigator__WEBPACK_IMPORTED_MODULE_8__["Investigator"].empty()
    };
    return _this;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(HomePage, [{
    key: "handleCancelling",
    value: function handleCancelling() {
      this.setState({
        state: _HomePageState__WEBPACK_IMPORTED_MODULE_11__["HomePageState"].INVESTIGATOR
      });
    }
    /**
     * 
     */

  }, {
    key: "handleLoading",
    value: function handleLoading(investigator) {
      this.setState({
        state: _HomePageState__WEBPACK_IMPORTED_MODULE_11__["HomePageState"].INVESTIGATOR,
        investigator: investigator
      });
    }
    /**
     * 
     */

  }, {
    key: "handleReload",
    value: function handleReload() {
      this.setState({
        state: _HomePageState__WEBPACK_IMPORTED_MODULE_11__["HomePageState"].LOADING
      });
    }
    /**
     * 
     */

  }, {
    key: "handleChange",
    value: function handleChange(next) {
      this.setState({
        investigator: next
      });
    }
    /**
     * 
     */

  }, {
    key: "render",
    value: function render() {
      return __jsx("div", {
        className: "layout layout-slider"
      }, __jsx(react_transition_group__WEBPACK_IMPORTED_MODULE_7__["CSSTransition"], {
        "in": this.state.state === _HomePageState__WEBPACK_IMPORTED_MODULE_11__["HomePageState"].LOADING,
        unmountOnExit: true,
        classNames: 'is',
        timeout: 400
      }, this.renderLoadingPage()), __jsx(react_transition_group__WEBPACK_IMPORTED_MODULE_7__["CSSTransition"], {
        "in": this.state.state === _HomePageState__WEBPACK_IMPORTED_MODULE_11__["HomePageState"].INVESTIGATOR,
        unmountOnExit: true,
        classNames: 'is',
        timeout: 400
      }, this.renderCharacterPage()));
    }
    /**
     * 
     */

  }, {
    key: "renderLoadingPage",
    value: function renderLoadingPage() {
      return __jsx(_loading_LoadingPage__WEBPACK_IMPORTED_MODULE_10__["LoadingPage"], {
        cancellable: this.state.investigator !== _typescript_Investigator__WEBPACK_IMPORTED_MODULE_8__["Investigator"].EMPTY,
        onLoad: this.handleLoading,
        onCancel: this.handleCancelling
      });
    }
    /**
     * 
     */

  }, {
    key: "renderCharacterPage",
    value: function renderCharacterPage() {
      return __jsx(_InvestigatorPage__WEBPACK_IMPORTED_MODULE_9__["InvestigatorPage"], {
        onReload: this.handleReload,
        onChange: this.handleChange,
        value: this.state.investigator
      });
    }
  }]);

  return HomePage;
}(react__WEBPACK_IMPORTED_MODULE_6___default.a.Component);
/**
 * 
 */

(function (_HomePage) {})(HomePage || (HomePage = {}));

/***/ }),

/***/ "./components/page/home/HomePageState.tsx":
/*!************************************************!*\
  !*** ./components/page/home/HomePageState.tsx ***!
  \************************************************/
/*! exports provided: HomePageState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomePageState", function() { return HomePageState; });
/**
 * 
 */

/**
 * 
 */
var HomePageState;

(function (_HomePageState) {
  /**
   * 
   */
  var LOADING = _HomePageState.LOADING = 0;
  var INVESTIGATOR = _HomePageState.INVESTIGATOR = 1;
  var ALL = _HomePageState.ALL = [LOADING, INVESTIGATOR];

  function toString(state) {
    switch (state) {
      case LOADING:
        return 'LOADING';

      case INVESTIGATOR:
        return 'INVESTIGATOR';

      default:
        return undefined;
    }
  }

  _HomePageState.toString = toString;

  function toDebugString(state) {
    return 'HomePageState #' + state + '(' + (toString(state) || 'undefined') + ')';
  }

  _HomePageState.toDebugString = toDebugString;
})(HomePageState || (HomePageState = {}));

/***/ }),

/***/ "./components/page/loading/InitialState.tsx":
/*!**************************************************!*\
  !*** ./components/page/loading/InitialState.tsx ***!
  \**************************************************/
/*! exports provided: InitialState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InitialState", function() { return InitialState; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _typescript_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../typescript/utils */ "./typescript/utils/index.ts");






var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\page\\loading\\InitialState.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement;

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }




/**
 * 
 */

var InitialState = /*#__PURE__*/function (_React$PureComponent) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(InitialState, _React$PureComponent);

  var _super = _createSuper(InitialState);

  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */
  function InitialState(properties) {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, InitialState);

    _this = _super.call(this, properties);
    _this._input = void 0;
    _this.handleInputChange = _this.handleInputChange.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handlePageClick = _this.handlePageClick.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleDrop = _this.handleDrop.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleSilentAction = _this.handleSilentAction.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleCancel = _this.handleCancel.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this._input = react__WEBPACK_IMPORTED_MODULE_6___default.a.createRef();
    return _this;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(InitialState, [{
    key: "handleInputChange",
    value: function handleInputChange(event) {
      if (event.target.files.length > 0) {
        this.props.onSelection(event.target.files[0]);
      }
    }
    /**
     * 
     */

  }, {
    key: "handleSilentAction",
    value: function handleSilentAction(event) {
      event.stopPropagation();
      event.preventDefault();
    }
    /**
     * 
     */

  }, {
    key: "handleDrop",
    value: function handleDrop(event) {
      event.stopPropagation();
      event.preventDefault();
      var dragged = event.dataTransfer;

      if (dragged.files.length > 0) {
        var _iterator = _createForOfIteratorHelper(dragged.files),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var _file = _step.value;

            if (_file.name.endsWith('.sheet.unidoc')) {
              this.props.onSelection(_file);
              break;
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
    }
    /**
     * 
     */

  }, {
    key: "handlePageClick",
    value: function handlePageClick(event) {
      this._input.current.click();
    }
    /**
     * 
     */

  }, {
    key: "handleCancel",
    value: function handleCancel(event) {
      event.stopPropagation();
      this.props.onCancel();
    }
    /**
     * 
     */

  }, {
    key: "render",
    value: function render() {
      return __jsx("div", {
        onDrop: this.handleDrop,
        onDragEnter: this.handleSilentAction,
        onDragOver: this.handleSilentAction,
        onClick: this.handlePageClick,
        className: classnames__WEBPACK_IMPORTED_MODULE_7___default()('page page-loading is-clickable', this.props.className)
      }, __jsx("div", {
        className: "layout layout-centered"
      }, __jsx("div", {
        className: "container-fluid"
      }, __jsx("div", {
        className: "row justify-content-center align-items-center"
      }, __jsx("div", {
        className: "col-10 col-md-8 col-lg-6 col-xl-6 text-center"
      }, __jsx("img", {
        className: "img-fluid",
        src: "/images/logo.svg"
      }))), __jsx("div", {
        className: "row justify-content-center align-items-center"
      }, __jsx("div", {
        className: "col-10 col-md-8 col-lg-6 col-xl-6 text-center"
      }, __jsx("br", null), __jsx("br", null), __jsx("br", null), "D\xE9posez une feuille de personnage ou cliquez pour en choisir une.", __jsx("input", {
        onChange: this.handleInputChange,
        ref: this._input,
        type: "file",
        accept: ".sheet.unidoc",
        style: {
          display: 'none'
        }
      }), this.props.cancellable ? __jsx("br", null) : null, this.props.cancellable ? __jsx("br", null) : null, this.props.cancellable ? __jsx("button", {
        className: "btn btn-link btn-block",
        onClick: this.handleCancel
      }, "Annuler") : null)))));
    }
  }]);

  return InitialState;
}(react__WEBPACK_IMPORTED_MODULE_6___default.a.PureComponent);
/**
 * 
 */

InitialState.defaultProps = Object.seal({
  /**
   * 
   */
  onSelection: _typescript_utils__WEBPACK_IMPORTED_MODULE_8__["Empty"].callback
});

(function (_InitialState) {})(InitialState || (InitialState = {}));

/***/ }),

/***/ "./components/page/loading/LoadingPage.tsx":
/*!*************************************************!*\
  !*** ./components/page/loading/LoadingPage.tsx ***!
  \*************************************************/
/*! exports provided: LoadingPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadingPage", function() { return LoadingPage; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _typescript_unidoc_UnidocCommand__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../typescript/unidoc/UnidocCommand */ "./typescript/unidoc/UnidocCommand.ts");
/* harmony import */ var _typescript_unidoc_InvestigatorCommand__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../typescript/unidoc/InvestigatorCommand */ "./typescript/unidoc/InvestigatorCommand.ts");
/* harmony import */ var _typescript_unidoc_UnidocFileSymbolProducer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../typescript/unidoc/UnidocFileSymbolProducer */ "./typescript/unidoc/UnidocFileSymbolProducer.ts");
/* harmony import */ var _typescript_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../typescript/utils */ "./typescript/utils/index.ts");
/* harmony import */ var _InitialState__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./InitialState */ "./components/page/loading/InitialState.tsx");
/* harmony import */ var _LoadingState__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./LoadingState */ "./components/page/loading/LoadingState.tsx");
/* harmony import */ var _ResolvedState__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./ResolvedState */ "./components/page/loading/ResolvedState.tsx");
/* harmony import */ var _LoadingPageState__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./LoadingPageState */ "./components/page/loading/LoadingPageState.tsx");






var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\page\\loading\\LoadingPage.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }











/**
 * 
 */

var LoadingPage = /*#__PURE__*/function (_React$Component) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(LoadingPage, _React$Component);

  var _super = _createSuper(LoadingPage);

  /**
   * 
   */

  /**
   * 
   */
  function LoadingPage(properties) {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, LoadingPage);

    _this = _super.call(this, properties);
    _this.handleFileSelection = _this.handleFileSelection.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleFileValidation = _this.handleFileValidation.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleFileReduction = _this.handleFileReduction.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.state = {
      state: _LoadingPageState__WEBPACK_IMPORTED_MODULE_15__["LoadingPageState"].INITIAL,
      file: undefined,
      source: undefined,
      error: undefined
    };
    return _this;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(LoadingPage, [{
    key: "handleFileValidation",
    value: function handleFileValidation(validation) {// @TODO error-check
      //console.log(validation.toString())
    }
    /**
     * 
     */

  }, {
    key: "handleFileReduction",
    value: function handleFileReduction(value) {
      this.setState({
        state: _LoadingPageState__WEBPACK_IMPORTED_MODULE_15__["LoadingPageState"].RESOLVED
      });
      this.props.onLoad(value);
    }
    /**
     * 
     */

  }, {
    key: "handleFileSelection",
    value: function handleFileSelection(file) {
      var source = _typescript_unidoc_UnidocFileSymbolProducer__WEBPACK_IMPORTED_MODULE_10__["UnidocFileSymbolProducer"].create(file);
      var events = Object(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_7__["parse"])(Object(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_7__["tokenize"])(source));
      var validator = _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_7__["UnidocValidator"].kiss(_typescript_unidoc_UnidocCommand__WEBPACK_IMPORTED_MODULE_8__["UnidocCommand"].validateUnidoc.factory(_typescript_unidoc_InvestigatorCommand__WEBPACK_IMPORTED_MODULE_9__["InvestigatorCommand"].validate));
      validator.subscribe(events);
      var reducer = _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_7__["UnidocReducer"].reduce.validation(validator, _typescript_unidoc_UnidocCommand__WEBPACK_IMPORTED_MODULE_8__["UnidocCommand"].reduce.factory(_typescript_unidoc_InvestigatorCommand__WEBPACK_IMPORTED_MODULE_9__["InvestigatorCommand"].reduce));
      validator.addEventListener(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_7__["UnidocProducerEvent"].PRODUCTION, this.handleFileValidation);
      reducer.addEventListener(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_7__["UnidocProducerEvent"].PRODUCTION, this.handleFileReduction);
      this.setState({
        state: _LoadingPageState__WEBPACK_IMPORTED_MODULE_15__["LoadingPageState"].LOADING,
        file: file,
        source: source,
        error: undefined
      }, source.read.bind(source));
    }
    /**
     * 
     */

  }, {
    key: "render",
    value: function render() {
      switch (this.state.state) {
        case _LoadingPageState__WEBPACK_IMPORTED_MODULE_15__["LoadingPageState"].INITIAL:
          return this.renderInitialState();

        case _LoadingPageState__WEBPACK_IMPORTED_MODULE_15__["LoadingPageState"].LOADING:
          return this.renderLoadingState();

        case _LoadingPageState__WEBPACK_IMPORTED_MODULE_15__["LoadingPageState"].RESOLVED:
          return this.renderResolvedState();

        default:
          throw new Error('Unable to render loading page in state ' + _LoadingPageState__WEBPACK_IMPORTED_MODULE_15__["LoadingPageState"].toDebugString(this.state.state) + ' because no rendering factory was defined for that.');
      }
    }
    /**
     * 
     */

  }, {
    key: "renderInitialState",
    value: function renderInitialState() {
      return __jsx(_InitialState__WEBPACK_IMPORTED_MODULE_12__["InitialState"], {
        cancellable: this.props.cancellable,
        onCancel: this.props.onCancel,
        className: this.props.className,
        onSelection: this.handleFileSelection
      });
    }
    /**
     * 
     */

  }, {
    key: "renderLoadingState",
    value: function renderLoadingState() {
      return __jsx(_LoadingState__WEBPACK_IMPORTED_MODULE_13__["LoadingState"], {
        className: this.props.className,
        file: this.state.file
      });
    }
    /**
     * 
     */

  }, {
    key: "renderResolvedState",
    value: function renderResolvedState() {
      return __jsx(_ResolvedState__WEBPACK_IMPORTED_MODULE_14__["ResolvedState"], {
        className: this.props.className
      });
    }
  }]);

  return LoadingPage;
}(react__WEBPACK_IMPORTED_MODULE_6___default.a.Component);
/**
 * 
 */

LoadingPage.defaultProps = {
  /**
   * 
   */
  onLoad: _typescript_utils__WEBPACK_IMPORTED_MODULE_11__["Empty"].callback
};

(function (_LoadingPage) {})(LoadingPage || (LoadingPage = {}));

/***/ }),

/***/ "./components/page/loading/LoadingPageState.tsx":
/*!******************************************************!*\
  !*** ./components/page/loading/LoadingPageState.tsx ***!
  \******************************************************/
/*! exports provided: LoadingPageState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadingPageState", function() { return LoadingPageState; });
/**
 * 
 */

/**
 * 
 */
var LoadingPageState;

(function (_LoadingPageState) {
  /**
   * 
   */
  var INITIAL = _LoadingPageState.INITIAL = 0;
  var LOADING = _LoadingPageState.LOADING = 1;
  var FAILURE = _LoadingPageState.FAILURE = 2;
  var RESOLVED = _LoadingPageState.RESOLVED = 3;
  var ALL = _LoadingPageState.ALL = [INITIAL, LOADING, FAILURE, RESOLVED];

  function toString(state) {
    switch (state) {
      case INITIAL:
        return 'INITIAL';

      case LOADING:
        return 'LOADING';

      case FAILURE:
        return 'FAILURE';

      case RESOLVED:
        return 'RESOLVED';

      default:
        return undefined;
    }
  }

  _LoadingPageState.toString = toString;

  function toDebugString(state) {
    return 'LoadingPageState #' + state + '(' + (toString(state) || 'undefined') + ')';
  }

  _LoadingPageState.toDebugString = toDebugString;
})(LoadingPageState || (LoadingPageState = {}));

/***/ }),

/***/ "./components/page/loading/LoadingState.tsx":
/*!**************************************************!*\
  !*** ./components/page/loading/LoadingState.tsx ***!
  \**************************************************/
/*! exports provided: LoadingState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadingState", function() { return LoadingState; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Loader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Loader */ "./components/Loader.tsx");
var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\page\\loading\\LoadingState.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;



/**
 * 
 */

function LoadingState(properties) {
  return __jsx("div", {
    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('page page-loading', properties.className)
  }, __jsx("div", {
    className: "layout layout-centered"
  }, __jsx("div", {
    className: "container-fluid"
  }, __jsx("div", {
    className: "row justify-content-center align-items-center"
  }, __jsx("div", {
    className: "col-10 col-md-8 col-lg-6 col-xl-6 text-center"
  }, __jsx("img", {
    className: "img-fluid",
    src: "/images/logo.svg"
  }))), __jsx("div", {
    className: "row justify-content-center align-items-center"
  }, __jsx("div", {
    className: "col-10 col-md-8 col-lg-6 col-xl-6 text-center"
  }, __jsx("br", null), __jsx("br", null), __jsx("br", null), __jsx(_Loader__WEBPACK_IMPORTED_MODULE_2__["Loader"], null, "Chargement de ", properties.file.name))))));
}
/**
 * 
 */

(function (_LoadingState) {})(LoadingState || (LoadingState = {}));

/***/ }),

/***/ "./components/page/loading/ResolvedState.tsx":
/*!***************************************************!*\
  !*** ./components/page/loading/ResolvedState.tsx ***!
  \***************************************************/
/*! exports provided: ResolvedState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResolvedState", function() { return ResolvedState; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
var _jsxFileName = "D:\\development\\rpg\\shubgath\\components\\page\\loading\\ResolvedState.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;


/**
 * 
 */

function ResolvedState(properties) {
  return __jsx("div", {
    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('page page-loading', properties.className)
  }, __jsx("div", {
    className: "layout layout-centered"
  }, __jsx("div", {
    className: "container-fluid"
  }, __jsx("div", {
    className: "row justify-content-center align-items-center"
  }, __jsx("div", {
    className: "col-10 col-md-8 col-lg-6 col-xl-6 text-center"
  }, __jsx("img", {
    className: "img-fluid",
    src: "/images/logo.svg"
  }))), __jsx("div", {
    className: "row justify-content-center align-items-center"
  }, __jsx("div", {
    className: "col-10 col-md-8 col-lg-6 col-xl-6 text-center"
  }, __jsx("br", null), __jsx("br", null), __jsx("br", null), "Document charg\xE9 avec succ\xE8s !")))));
}
/**
 * 
 */

(function (_ResolvedState) {})(ResolvedState || (ResolvedState = {}));

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _arrayLikeToArray; });
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _arrayWithoutHoles; });
/* harmony import */ var _babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/arrayLikeToArray */ "./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js");

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return Object(_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(arr);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _assertThisInitialized; });
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _classCallCheck; });
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/createClass.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/createClass.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _createClass; });
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _defineProperty; });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _extends; });
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _getPrototypeOf; });
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/inherits.js":
/*!*************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/inherits.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _inherits; });
/* harmony import */ var _babel_runtime_helpers_esm_setPrototypeOf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/setPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object(_babel_runtime_helpers_esm_setPrototypeOf__WEBPACK_IMPORTED_MODULE_0__["default"])(subClass, superClass);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/iterableToArray.js":
/*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _iterableToArray; });
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _nonIterableSpread; });
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _objectWithoutProperties; });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _objectWithoutPropertiesLoose; });
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _possibleConstructorReturn; });
/* harmony import */ var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/typeof */ "./node_modules/@babel/runtime/helpers/esm/typeof.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");


function _possibleConstructorReturn(self, call) {
  if (call && (Object(_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__["default"])(call) === "object" || typeof call === "function")) {
    return call;
  }

  return Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__["default"])(self);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _setPrototypeOf; });
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _toConsumableArray; });
/* harmony import */ var _babel_runtime_helpers_esm_arrayWithoutHoles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/arrayWithoutHoles */ "./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js");
/* harmony import */ var _babel_runtime_helpers_esm_iterableToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/iterableToArray */ "./node_modules/@babel/runtime/helpers/esm/iterableToArray.js");
/* harmony import */ var _babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/unsupportedIterableToArray */ "./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js");
/* harmony import */ var _babel_runtime_helpers_esm_nonIterableSpread__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/nonIterableSpread */ "./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js");




function _toConsumableArray(arr) {
  return Object(_babel_runtime_helpers_esm_arrayWithoutHoles__WEBPACK_IMPORTED_MODULE_0__["default"])(arr) || Object(_babel_runtime_helpers_esm_iterableToArray__WEBPACK_IMPORTED_MODULE_1__["default"])(arr) || Object(_babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(arr) || Object(_babel_runtime_helpers_esm_nonIterableSpread__WEBPACK_IMPORTED_MODULE_3__["default"])();
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/typeof.js":
/*!***********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/typeof.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _typeof; });
function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _unsupportedIterableToArray; });
/* harmony import */ var _babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/arrayLikeToArray */ "./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return Object(_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Object(_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(o, minLen);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ "./node_modules/regenerator-runtime/runtime.js");


/***/ }),

/***/ "./node_modules/@cedric-demongivert/unidoc/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@cedric-demongivert/unidoc/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory(__webpack_require__(/*! @cedric-demongivert/gl-tool-collection */ "./node_modules/@cedric-demongivert/unidoc/node_modules/@cedric-demongivert/gl-tool-collection/index.js"), __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js"));
	else {}
})(this, function(__WEBPACK_EXTERNAL_MODULE__332__, __WEBPACK_EXTERNAL_MODULE__435__) {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 757:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(666);


/***/ }),

/***/ 211:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "CodePoint": () => /* reexport */ CodePoint,
  "Data": () => /* reexport */ Data,
  "DataEvent": () => /* reexport */ DataEvent,
  "DataEventCompiler": () => /* reexport */ DataEventCompiler,
  "DataEventProducer": () => /* reexport */ DataEventProducer,
  "DataEventType": () => /* reexport */ DataEventType,
  "DataPath": () => /* reexport */ DataPath,
  "ListenableUnidocProducer": () => /* reexport */ ListenableUnidocProducer,
  "RxJSUnidocInput": () => /* reexport */ RxJSUnidocInput,
  "StaticUnidocProducer": () => /* reexport */ StaticUnidocProducer,
  "TrackedUnidocEventProducer": () => /* reexport */ TrackedUnidocEventProducer,
  "TrackedUnidocTokenProducer": () => /* reexport */ TrackedUnidocTokenProducer,
  "UnidocAnyPredicate": () => /* reexport */ UnidocAnyPredicate,
  "UnidocAnythingPredicate": () => /* reexport */ UnidocAnythingPredicate,
  "UnidocBlueprint": () => /* reexport */ UnidocBlueprint,
  "UnidocBlueprintType": () => /* reexport */ UnidocBlueprintType,
  "UnidocBlueprintVisitor": () => /* reexport */ UnidocBlueprintVisitor,
  "UnidocBuffer": () => /* reexport */ UnidocBuffer,
  "UnidocBufferOrigin": () => /* reexport */ UnidocBufferOrigin,
  "UnidocBufferizer": () => /* reexport */ UnidocBufferizer,
  "UnidocDisjunctionBlueprint": () => /* reexport */ UnidocDisjunctionBlueprint,
  "UnidocEndBlueprint": () => /* reexport */ UnidocEndBlueprint,
  "UnidocEvent": () => /* reexport */ UnidocEvent,
  "UnidocEventBlueprint": () => /* reexport */ UnidocEventBlueprint,
  "UnidocEventProducer": () => /* reexport */ UnidocEventProducer,
  "UnidocEventType": () => /* reexport */ UnidocEventType,
  "UnidocFragmentResolver": () => /* reexport */ UnidocFragmentResolver,
  "UnidocGroupBlueprint": () => /* reexport */ UnidocGroupBlueprint,
  "UnidocImportation": () => /* reexport */ UnidocImportation,
  "UnidocImportationFilter": () => /* reexport */ UnidocImportationFilter,
  "UnidocImportationProducer": () => /* reexport */ UnidocImportationProducer,
  "UnidocImportationResolver": () => /* reexport */ UnidocImportationResolver,
  "UnidocKissValidator": () => /* reexport */ UnidocKissValidator,
  "UnidocKissValidatorOutput": () => /* reexport */ UnidocKissValidatorOutput,
  "UnidocKissValidatorOutputBuilder": () => /* reexport */ UnidocKissValidatorOutputBuilder,
  "UnidocKissValidatorOutputType": () => /* reexport */ UnidocKissValidatorOutputType,
  "UnidocKissValidatorResolver": () => /* reexport */ UnidocKissValidatorResolver,
  "UnidocLenientSequenceBlueprint": () => /* reexport */ UnidocLenientSequenceBlueprint,
  "UnidocLexer": () => /* reexport */ UnidocLexer,
  "UnidocLexerState": () => /* reexport */ UnidocLexerState,
  "UnidocLocation": () => /* reexport */ UnidocLocation,
  "UnidocLocationTracker": () => /* reexport */ UnidocLocationTracker,
  "UnidocLocationTrackerState": () => /* reexport */ UnidocLocationTrackerState,
  "UnidocManyBlueprint": () => /* reexport */ UnidocManyBlueprint,
  "UnidocMatchPredicate": () => /* reexport */ UnidocMatchPredicate,
  "UnidocNetworkOrigin": () => /* reexport */ UnidocNetworkOrigin,
  "UnidocNullReader": () => /* reexport */ UnidocNullReader,
  "UnidocNullResolver": () => /* reexport */ UnidocNullResolver,
  "UnidocOnlyPredicate": () => /* reexport */ UnidocOnlyPredicate,
  "UnidocOrigin": () => /* reexport */ UnidocOrigin,
  "UnidocOriginElement": () => /* reexport */ UnidocOriginElement,
  "UnidocOriginElementType": () => /* reexport */ UnidocOriginElementType,
  "UnidocParser": () => /* reexport */ UnidocParser,
  "UnidocParserState": () => /* reexport */ UnidocParserState,
  "UnidocPath": () => /* reexport */ UnidocPath,
  "UnidocPathElement": () => /* reexport */ UnidocPathElement,
  "UnidocPathElementType": () => /* reexport */ UnidocPathElementType,
  "UnidocPredicate": () => /* reexport */ UnidocPredicate,
  "UnidocProducerEvent": () => /* reexport */ UnidocProducerEvent,
  "UnidocRangeOrigin": () => /* reexport */ UnidocRangeOrigin,
  "UnidocRangeOriginBuilder": () => /* reexport */ UnidocRangeOriginBuilder,
  "UnidocReducer": () => /* reexport */ UnidocReducer,
  "UnidocReductionExecutor": () => /* reexport */ UnidocReductionExecutor,
  "UnidocReductionInput": () => /* reexport */ UnidocReductionInput,
  "UnidocReductionInputProducer": () => /* reexport */ UnidocReductionInputProducer,
  "UnidocReductionInputType": () => /* reexport */ UnidocReductionInputType,
  "UnidocReductionRequest": () => /* reexport */ UnidocReductionRequest,
  "UnidocRegexpBlueprint": () => /* reexport */ UnidocRegexpBlueprint,
  "UnidocResource": () => /* reexport */ UnidocResource,
  "UnidocResourceOrigin": () => /* reexport */ UnidocResourceOrigin,
  "UnidocRuntimeOrigin": () => /* reexport */ UnidocRuntimeOrigin,
  "UnidocSequenceBlueprint": () => /* reexport */ UnidocSequenceBlueprint,
  "UnidocSetBlueprint": () => /* reexport */ UnidocSetBlueprint,
  "UnidocStream": () => /* reexport */ UnidocStream,
  "UnidocStringReader": () => /* reexport */ UnidocStringReader,
  "UnidocSymbol": () => /* reexport */ UnidocSymbol,
  "UnidocSymbolBuffer": () => /* reexport */ UnidocSymbolBuffer,
  "UnidocSymbolReader": () => /* reexport */ UnidocSymbolReader,
  "UnidocTagBlueprint": () => /* reexport */ UnidocTagBlueprint,
  "UnidocTextOrigin": () => /* reexport */ UnidocTextOrigin,
  "UnidocToken": () => /* reexport */ UnidocToken,
  "UnidocTokenBuffer": () => /* reexport */ UnidocTokenBuffer,
  "UnidocTokenProducer": () => /* reexport */ UnidocTokenProducer,
  "UnidocTokenType": () => /* reexport */ UnidocTokenType,
  "UnidocValidationEvent": () => /* reexport */ UnidocValidationEvent,
  "UnidocValidationEventBuilder": () => /* reexport */ UnidocValidationEventBuilder,
  "UnidocValidationEventProducer": () => /* reexport */ UnidocValidationEventProducer,
  "UnidocValidationEventType": () => /* reexport */ UnidocValidationEventType,
  "UnidocValidationMessage": () => /* reexport */ UnidocValidationMessage,
  "UnidocValidationMessageBuilder": () => /* reexport */ UnidocValidationMessageBuilder,
  "UnidocValidationMessageType": () => /* reexport */ UnidocValidationMessageType,
  "UnidocValidationToReductionTranslator": () => /* reexport */ UnidocValidationToReductionTranslator,
  "UnidocValidator": () => /* reexport */ UnidocValidator,
  "bufferize": () => /* reexport */ bufferize,
  "fullyParse": () => /* reexport */ fullyParse,
  "parse": () => /* reexport */ parse,
  "tokenize": () => /* reexport */ tokenize,
  "validate": () => /* reexport */ validate
});

;// CONCATENATED MODULE: ./sources/selector/UnidocTagNameSelector.ts
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var UnidocTagNameSelector = /*#__PURE__*/function () {
  function UnidocTagNameSelector() {
    _classCallCheck(this, UnidocTagNameSelector);
  }

  _createClass(UnidocTagNameSelector, [{
    key: "select",
    value: function select(value) {
      return value.tag;
    }
  }, {
    key: "toString",
    value: function toString() {
      return 'tag name';
    }
  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocTagNameSelector) {
        return true;
      }

      return false;
    }
  }]);

  return UnidocTagNameSelector;
}();

(function (UnidocTagNameSelector) {
  UnidocTagNameSelector.INSTANCE = new UnidocTagNameSelector();

  function create() {
    return UnidocTagNameSelector.INSTANCE;
  }

  UnidocTagNameSelector.create = create;
})(UnidocTagNameSelector || (UnidocTagNameSelector = {}));
;// CONCATENATED MODULE: ./sources/selector/UnidocContentSelector.ts
function UnidocContentSelector_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocContentSelector_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocContentSelector_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocContentSelector_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocContentSelector_defineProperties(Constructor, staticProps); return Constructor; }

var UnidocContentSelector = /*#__PURE__*/function () {
  function UnidocContentSelector() {
    UnidocContentSelector_classCallCheck(this, UnidocContentSelector);
  }

  UnidocContentSelector_createClass(UnidocContentSelector, [{
    key: "select",
    value: function select(value) {
      return value.text;
    }
  }, {
    key: "toString",
    value: function toString() {
      return 'content';
    }
  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocContentSelector) {
        return true;
      }

      return false;
    }
  }]);

  return UnidocContentSelector;
}();

(function (UnidocContentSelector) {
  UnidocContentSelector.INSTANCE = new UnidocContentSelector();

  function create() {
    return UnidocContentSelector.INSTANCE;
  }

  UnidocContentSelector.create = create;
})(UnidocContentSelector || (UnidocContentSelector = {}));
;// CONCATENATED MODULE: ./sources/selector/UnidocSelector.ts


var UnidocSelector;

(function (UnidocSelector) {
  /**
  *
  */
  function tagName() {
    return UnidocTagNameSelector.INSTANCE;
  }

  UnidocSelector.tagName = tagName;
  /**
  *
  */

  function content() {
    return UnidocContentSelector.INSTANCE;
  }

  UnidocSelector.content = content;
})(UnidocSelector || (UnidocSelector = {}));
;// CONCATENATED MODULE: ./sources/predicate/UnidocOnlyPredicate.ts
function UnidocOnlyPredicate_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocOnlyPredicate_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocOnlyPredicate_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocOnlyPredicate_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocOnlyPredicate_defineProperties(Constructor, staticProps); return Constructor; }

var UnidocOnlyPredicate = /*#__PURE__*/function () {
  function UnidocOnlyPredicate(value) {
    UnidocOnlyPredicate_classCallCheck(this, UnidocOnlyPredicate);

    this.value = value;
  }

  UnidocOnlyPredicate_createClass(UnidocOnlyPredicate, [{
    key: "test",
    value: function test(value) {
      return value === this.value;
    }
  }, {
    key: "toString",
    value: function toString() {
      return 'only(' + this.value + ')';
    }
  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocOnlyPredicate) {
        return other.value === this.value;
      }

      return false;
    }
  }]);

  return UnidocOnlyPredicate;
}();
;// CONCATENATED MODULE: ./sources/predicate/UnidocAnyPredicate.ts
function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function UnidocAnyPredicate_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocAnyPredicate_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocAnyPredicate_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocAnyPredicate_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocAnyPredicate_defineProperties(Constructor, staticProps); return Constructor; }

//import { NativeSet } from '@cedric-demongivert/gl-tool-collection'
//import { Collection } from '@cedric-demongivert/gl-tool-collection'
var UnidocAnyPredicate = /*#__PURE__*/function () {
  function UnidocAnyPredicate(values) {
    UnidocAnyPredicate_classCallCheck(this, UnidocAnyPredicate);

    this._values = new Set();

    var _iterator = _createForOfIteratorHelper(values),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var value = _step.value;

        this._values.add(value);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }

  UnidocAnyPredicate_createClass(UnidocAnyPredicate, [{
    key: "test",
    value: function test(value) {
      return this._values.has(value);
    }
  }, {
    key: "toString",
    value: function toString() {
      var result = '$any(';

      var iterator = this._values.values();

      var next = iterator.next();

      if (!next.done) {
        result += next.value;
      }

      while (!(next = iterator.next()).done) {
        result += ', ';
        result += next.value;
      }

      result += ')';
      return result;
    }
  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocAnyPredicate) {
        if (other._values.size !== this._values.size) return false;

        var _iterator2 = _createForOfIteratorHelper(this._values),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var value = _step2.value;

            if (!other._values.has(value)) {
              return false;
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }

        return true;
      }

      return false;
    }
  }]);

  return UnidocAnyPredicate;
}();
;// CONCATENATED MODULE: ./sources/predicate/UnidocAnythingPredicate.ts
function UnidocAnythingPredicate_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocAnythingPredicate_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocAnythingPredicate_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocAnythingPredicate_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocAnythingPredicate_defineProperties(Constructor, staticProps); return Constructor; }

var UnidocAnythingPredicate = /*#__PURE__*/function () {
  function UnidocAnythingPredicate() {
    UnidocAnythingPredicate_classCallCheck(this, UnidocAnythingPredicate);
  }

  UnidocAnythingPredicate_createClass(UnidocAnythingPredicate, [{
    key: "test",
    value: function test(value) {
      return true;
    }
  }, {
    key: "toString",
    value: function toString() {
      return '$anything';
    }
  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocAnythingPredicate) {
        return true;
      }

      return false;
    }
  }]);

  return UnidocAnythingPredicate;
}();

(function (UnidocAnythingPredicate) {
  UnidocAnythingPredicate.INSTANCE = new UnidocAnythingPredicate();
})(UnidocAnythingPredicate || (UnidocAnythingPredicate = {}));
;// CONCATENATED MODULE: ./sources/predicate/UnidocMatchPredicate.ts
function UnidocMatchPredicate_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocMatchPredicate_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocMatchPredicate_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocMatchPredicate_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocMatchPredicate_defineProperties(Constructor, staticProps); return Constructor; }

var UnidocMatchPredicate = /*#__PURE__*/function () {
  function UnidocMatchPredicate(regexp) {
    UnidocMatchPredicate_classCallCheck(this, UnidocMatchPredicate);

    this.regexp = regexp;
  }

  UnidocMatchPredicate_createClass(UnidocMatchPredicate, [{
    key: "test",
    value: function test(value) {
      return this.regexp.test(value);
    }
  }, {
    key: "toString",
    value: function toString() {
      return '$match(' + this.regexp.toString() + ')';
    }
  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocMatchPredicate) {
        return other.regexp === this.regexp;
      }

      return false;
    }
  }]);

  return UnidocMatchPredicate;
}();
;// CONCATENATED MODULE: ./sources/predicate/UnidocSelectionPredicate.ts
function UnidocSelectionPredicate_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocSelectionPredicate_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocSelectionPredicate_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocSelectionPredicate_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocSelectionPredicate_defineProperties(Constructor, staticProps); return Constructor; }

var UnidocSelectionPredicate = /*#__PURE__*/function () {
  function UnidocSelectionPredicate(selector, predicate) {
    UnidocSelectionPredicate_classCallCheck(this, UnidocSelectionPredicate);

    this.selector = selector;
    this.predicate = predicate;
  }

  UnidocSelectionPredicate_createClass(UnidocSelectionPredicate, [{
    key: "test",
    value: function test(value) {
      return this.predicate.test(this.selector.select(value));
    }
  }, {
    key: "toString",
    value: function toString() {
      return this.selector.toString() + ' is ' + this.predicate.toString();
    }
  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocSelectionPredicate) {
        return this.selector.equals(other.selector) && this.predicate.equals(other.predicate);
      }

      return false;
    }
  }]);

  return UnidocSelectionPredicate;
}();
;// CONCATENATED MODULE: ./sources/predicate/UnidocConjunctionPredicate.ts
function UnidocConjunctionPredicate_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = UnidocConjunctionPredicate_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || UnidocConjunctionPredicate_unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function UnidocConjunctionPredicate_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return UnidocConjunctionPredicate_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return UnidocConjunctionPredicate_arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return UnidocConjunctionPredicate_arrayLikeToArray(arr); }

function UnidocConjunctionPredicate_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function UnidocConjunctionPredicate_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocConjunctionPredicate_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocConjunctionPredicate_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocConjunctionPredicate_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocConjunctionPredicate_defineProperties(Constructor, staticProps); return Constructor; }

//import { NativeSet } from '@cedric-demongivert/gl-tool-collection'
//import { Collection } from '@cedric-demongivert/gl-tool-collection'
var UnidocConjunctionPredicate = /*#__PURE__*/function () {
  function UnidocConjunctionPredicate(values) {
    UnidocConjunctionPredicate_classCallCheck(this, UnidocConjunctionPredicate);

    this.predicates = _toConsumableArray(values);
  }

  UnidocConjunctionPredicate_createClass(UnidocConjunctionPredicate, [{
    key: "test",
    value: function test(value) {
      var _iterator = UnidocConjunctionPredicate_createForOfIteratorHelper(this.predicates),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var predicate = _step.value;

          if (!predicate.test(value)) {
            return false;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return true;
    }
  }, {
    key: "toString",
    value: function toString() {
      if (this.predicates.length === 0) {
        return 'true';
      }

      var result = '(';
      var iterator = this.predicates.values();
      var next = iterator.next();

      if (!next.done) {
        result += next.value.toString();
      }

      while (!(next = iterator.next()).done) {
        result += ' and ';
        result += next.value.toString();
      }

      result += ')';
      return result;
    }
  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocConjunctionPredicate) {
        if (other.predicates.length !== this.predicates.length) return false;

        for (var index = 0; index < this.predicates.length; ++index) {
          if (!other.predicates[index].equals(this.predicates[index])) {
            return false;
          }
        }

        return true;
      }

      return false;
    }
  }]);

  return UnidocConjunctionPredicate;
}();
;// CONCATENATED MODULE: ./sources/event/UnidocEventType.ts
var UnidocEventType;

(function (UnidocEventType) {
  /**
  *
  */
  UnidocEventType.TAG = 0;
  /**
  *
  */

  UnidocEventType.WHITESPACE = 4;
  /**
  *
  */

  UnidocEventType.WORD = 6;
  /**
  *
  */

  UnidocEventType.START = 0;
  /**
  *
  */

  UnidocEventType.END = 1;
  /**
  *
  */

  UnidocEventType.DEFAULT_TYPE = 0;
  /**
  *
  */

  UnidocEventType.START_TAG = UnidocEventType.START | UnidocEventType.TAG;
  /**
  *
  */

  UnidocEventType.END_TAG = UnidocEventType.END | UnidocEventType.TAG;
  /**
  *
  */

  UnidocEventType.ALL = [UnidocEventType.START_TAG, UnidocEventType.END_TAG, UnidocEventType.WHITESPACE, UnidocEventType.WORD];
  /**
  * Return a string representation of a given unidoc event type.
  *
  * @param value - Unidoc event type to stringify.
  */

  function toString(value) {
    switch (value) {
      case UnidocEventType.START_TAG:
        return 'START_TAG';

      case UnidocEventType.END_TAG:
        return 'END_TAG';

      case UnidocEventType.WHITESPACE:
        return 'WHITESPACE';

      case UnidocEventType.WORD:
        return 'WORD';

      default:
        return undefined;
    }
  }

  UnidocEventType.toString = toString;
  /**
  *
  */

  function toDebugString(value) {
    return '#' + value + ' (' + (toString(value) || 'undefined') + ')';
  }

  UnidocEventType.toDebugString = toDebugString;
})(UnidocEventType || (UnidocEventType = {}));
;// CONCATENATED MODULE: ./sources/predicate/UnidocIsTagStartPredicate.ts
function UnidocIsTagStartPredicate_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocIsTagStartPredicate_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocIsTagStartPredicate_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocIsTagStartPredicate_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocIsTagStartPredicate_defineProperties(Constructor, staticProps); return Constructor; }


var UnidocIsTagStartPredicate = /*#__PURE__*/function () {
  function UnidocIsTagStartPredicate() {
    UnidocIsTagStartPredicate_classCallCheck(this, UnidocIsTagStartPredicate);
  }

  UnidocIsTagStartPredicate_createClass(UnidocIsTagStartPredicate, [{
    key: "test",
    value: function test(value) {
      return value.type === UnidocEventType.START_TAG;
    }
  }, {
    key: "toString",
    value: function toString() {
      return 'is start of tag';
    }
  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocIsTagStartPredicate) {
        return true;
      }

      return false;
    }
  }]);

  return UnidocIsTagStartPredicate;
}();

(function (UnidocIsTagStartPredicate) {
  UnidocIsTagStartPredicate.INSTANCE = new UnidocIsTagStartPredicate();

  function create() {
    return UnidocIsTagStartPredicate.INSTANCE;
  }

  UnidocIsTagStartPredicate.create = create;
})(UnidocIsTagStartPredicate || (UnidocIsTagStartPredicate = {}));
;// CONCATENATED MODULE: ./sources/predicate/UnidocIsTagEndPredicate.ts
function UnidocIsTagEndPredicate_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocIsTagEndPredicate_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocIsTagEndPredicate_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocIsTagEndPredicate_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocIsTagEndPredicate_defineProperties(Constructor, staticProps); return Constructor; }


var UnidocIsTagEndPredicate = /*#__PURE__*/function () {
  function UnidocIsTagEndPredicate() {
    UnidocIsTagEndPredicate_classCallCheck(this, UnidocIsTagEndPredicate);
  }

  UnidocIsTagEndPredicate_createClass(UnidocIsTagEndPredicate, [{
    key: "test",
    value: function test(value) {
      return value.type === UnidocEventType.END_TAG;
    }
  }, {
    key: "toString",
    value: function toString() {
      return 'is end of tag';
    }
  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocIsTagEndPredicate) {
        return true;
      }

      return false;
    }
  }]);

  return UnidocIsTagEndPredicate;
}();

(function (UnidocIsTagEndPredicate) {
  UnidocIsTagEndPredicate.INSTANCE = new UnidocIsTagEndPredicate();

  function create() {
    return UnidocIsTagEndPredicate.INSTANCE;
  }

  UnidocIsTagEndPredicate.create = create;
})(UnidocIsTagEndPredicate || (UnidocIsTagEndPredicate = {}));
;// CONCATENATED MODULE: ./sources/predicate/UnidocIsWordPredicate.ts
function UnidocIsWordPredicate_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocIsWordPredicate_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocIsWordPredicate_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocIsWordPredicate_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocIsWordPredicate_defineProperties(Constructor, staticProps); return Constructor; }


var UnidocIsWordPredicate = /*#__PURE__*/function () {
  function UnidocIsWordPredicate() {
    UnidocIsWordPredicate_classCallCheck(this, UnidocIsWordPredicate);
  }

  UnidocIsWordPredicate_createClass(UnidocIsWordPredicate, [{
    key: "test",
    value: function test(value) {
      return value.type === UnidocEventType.WORD;
    }
  }, {
    key: "toString",
    value: function toString() {
      return 'is word';
    }
  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocIsWordPredicate) {
        return true;
      }

      return false;
    }
  }]);

  return UnidocIsWordPredicate;
}();

(function (UnidocIsWordPredicate) {
  UnidocIsWordPredicate.INSTANCE = new UnidocIsWordPredicate();

  function create() {
    return UnidocIsWordPredicate.INSTANCE;
  }

  UnidocIsWordPredicate.create = create;
})(UnidocIsWordPredicate || (UnidocIsWordPredicate = {}));
;// CONCATENATED MODULE: ./sources/predicate/UnidocIsWhitespacePredicate.ts
function UnidocIsWhitespacePredicate_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocIsWhitespacePredicate_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocIsWhitespacePredicate_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocIsWhitespacePredicate_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocIsWhitespacePredicate_defineProperties(Constructor, staticProps); return Constructor; }


var UnidocIsWhitespacePredicate = /*#__PURE__*/function () {
  function UnidocIsWhitespacePredicate() {
    UnidocIsWhitespacePredicate_classCallCheck(this, UnidocIsWhitespacePredicate);
  }

  UnidocIsWhitespacePredicate_createClass(UnidocIsWhitespacePredicate, [{
    key: "test",
    value: function test(value) {
      return value.type === UnidocEventType.WHITESPACE;
    }
  }, {
    key: "toString",
    value: function toString() {
      return 'is whitespace';
    }
  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocIsWhitespacePredicate) {
        return true;
      }

      return false;
    }
  }]);

  return UnidocIsWhitespacePredicate;
}();

(function (UnidocIsWhitespacePredicate) {
  UnidocIsWhitespacePredicate.INSTANCE = new UnidocIsWhitespacePredicate();

  function create() {
    return UnidocIsWhitespacePredicate.INSTANCE;
  }

  UnidocIsWhitespacePredicate.create = create;
})(UnidocIsWhitespacePredicate || (UnidocIsWhitespacePredicate = {}));
;// CONCATENATED MODULE: ./sources/predicate/UnidocPredicate.ts










var UnidocPredicate;

(function (UnidocPredicate) {
  /**
  *
  */
  function is(selector, predicate) {
    return new UnidocSelectionPredicate(selector, predicate);
  }

  UnidocPredicate.is = is;
  /**
  *
  */

  function isWhitespace() {
    return UnidocIsWhitespacePredicate.create();
  }

  UnidocPredicate.isWhitespace = isWhitespace;
  /**
  *
  */

  function isWord() {
    return UnidocIsWordPredicate.create();
  }

  UnidocPredicate.isWord = isWord;
  /**
  *
  */

  function isTagStart() {
    return UnidocIsTagStartPredicate.create();
  }

  UnidocPredicate.isTagStart = isTagStart;
  /**
  *
  */

  function isTagEnd() {
    return UnidocIsTagEndPredicate.create();
  }

  UnidocPredicate.isTagEnd = isTagEnd;
  /**
  *
  */

  function and() {
    for (var _len = arguments.length, predicates = new Array(_len), _key = 0; _key < _len; _key++) {
      predicates[_key] = arguments[_key];
    }

    return new UnidocConjunctionPredicate(predicates);
  }

  UnidocPredicate.and = and;
  /**
  *
  */

  function only(value) {
    return new UnidocOnlyPredicate(value);
  }

  UnidocPredicate.only = only;
  /**
  *
  */

  function any() {
    for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      values[_key2] = arguments[_key2];
    }

    return new UnidocAnyPredicate(values);
  }

  UnidocPredicate.any = any;
  /**
  *
  */

  function anything() {
    return UnidocAnythingPredicate.INSTANCE;
  }

  UnidocPredicate.anything = anything;
  /**
  *
  */

  function match(regexp) {
    return new UnidocMatchPredicate(regexp);
  }

  UnidocPredicate.match = match;
})(UnidocPredicate || (UnidocPredicate = {}));
// EXTERNAL MODULE: external "@cedric-demongivert/gl-tool-collection"
var gl_tool_collection_ = __webpack_require__(332);
;// CONCATENATED MODULE: ./sources/blueprint/UnidocBlueprintType.ts
var UnidocBlueprintType;

(function (UnidocBlueprintType) {
  /**
  * A blueprint that describe a specification that match unidoc documents that
  * contains only one unidoc event.
  */
  UnidocBlueprintType.EVENT = 1;
  /**
  * A blueprint that describe a specification that match unidoc documents that
  * are the repeatition of another type of unidoc document.
  */

  UnidocBlueprintType.MANY = 2;
  /**
  * A blueprint that describe a choice between multiple contents.
  */

  UnidocBlueprintType.DISJUNCTION = 3;
  /**
  * A blueprint that describe multiple contents that must exists but that can
  * appears in any order.
  */

  UnidocBlueprintType.SET = 4;
  /**
  *
  */

  UnidocBlueprintType.SEQUENCE = 5;
  /**
  * A blueprint that describe multiple contents that we prefer to get in
  * sequence
  */

  UnidocBlueprintType.LENIENT_SEQUENCE = 6;
  /**
  * A blueprint that describe the termination of the document, or a termination
  * of the current blueprint fragment.
  */

  UnidocBlueprintType.END = 7;
  /**
  * A blueprint that describe a tag.
  */

  UnidocBlueprintType.TAG = 8;
  /**
  * A blueprint that describe a group.
  */

  UnidocBlueprintType.GROUP = 9;
  /**
  * A blueprint that describe a text that match the given REGEXP.
  */

  UnidocBlueprintType.REGEXP = 10;
  /**
  * Default blueprint type
  */

  UnidocBlueprintType.DEFAULT = UnidocBlueprintType.EVENT;
  /**
  * All existing blueprint types.
  */

  UnidocBlueprintType.ALL = [UnidocBlueprintType.EVENT, UnidocBlueprintType.MANY, UnidocBlueprintType.DISJUNCTION, UnidocBlueprintType.SET, UnidocBlueprintType.SEQUENCE, UnidocBlueprintType.LENIENT_SEQUENCE, UnidocBlueprintType.END, UnidocBlueprintType.TAG, UnidocBlueprintType.GROUP, UnidocBlueprintType.REGEXP];
  /**
  *
  */

  function toString(value) {
    switch (value) {
      case UnidocBlueprintType.EVENT:
        return 'EVENT';

      case UnidocBlueprintType.MANY:
        return 'MANY';

      case UnidocBlueprintType.DISJUNCTION:
        return 'DISJUNCTION';

      case UnidocBlueprintType.SET:
        return 'SET';

      case UnidocBlueprintType.SEQUENCE:
        return 'SEQUENCE';

      case UnidocBlueprintType.LENIENT_SEQUENCE:
        return 'LENIENT_SEQUENCE';

      case UnidocBlueprintType.END:
        return 'END';

      case UnidocBlueprintType.TAG:
        return 'TAG';

      case UnidocBlueprintType.GROUP:
        return 'GROUP';

      case UnidocBlueprintType.REGEXP:
        return 'REGEXP';

      default:
        return undefined;
    }
  }

  UnidocBlueprintType.toString = toString;
  /**
  *
  */

  function toDebugString(value) {
    return '#' + value + ' (' + (toString(value) || 'undefined') + ')';
  }

  UnidocBlueprintType.toDebugString = toDebugString;
})(UnidocBlueprintType || (UnidocBlueprintType = {}));
;// CONCATENATED MODULE: ./sources/blueprint/UnidocDisjunctionBlueprint.ts
function UnidocDisjunctionBlueprint_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocDisjunctionBlueprint_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocDisjunctionBlueprint_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocDisjunctionBlueprint_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocDisjunctionBlueprint_defineProperties(Constructor, staticProps); return Constructor; }



/**
*
*/

var UnidocDisjunctionBlueprint = /*#__PURE__*/function () {
  /**
  * Instantiate a new empty ANY document blueprint.
  *
  * @param [capacity = 8] - The capacity of the underlying list of operands to instantiate.
  */
  function UnidocDisjunctionBlueprint() {
    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;

    UnidocDisjunctionBlueprint_classCallCheck(this, UnidocDisjunctionBlueprint);

    this.type = UnidocBlueprintType.DISJUNCTION;
    this.operands = gl_tool_collection_.Pack.any(capacity);
  }

  UnidocDisjunctionBlueprint_createClass(UnidocDisjunctionBlueprint, [{
    key: "or",
    value: function or(value) {
      this.operands.push(value);
      return this;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.operands.clear();
    }
  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.operands.copy(toCopy.operands);
    }
    /**
    * @see UnidocBlueprint.equals
    */

  }, {
    key: "equals",
    value: function equals(other, maybeVisited) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocDisjunctionBlueprint) {
        if (other.operands.size !== this.operands.size) {
          return false;
        }

        var visited = maybeVisited || new Set();

        if (!visited.has(this)) {
          visited.add(this);

          for (var index = 0; index < this.operands.size; ++index) {
            if (!this.operands.get(index).equals(other.operands.get(index), visited)) {
              return false;
            }
          }
        }

        return true;
      }

      return false;
    }
    /**
    * @see UnidocBlueprint.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      var maxDepth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Number.POSITIVE_INFINITY;
      var maybeVisited = arguments.length > 1 ? arguments[1] : undefined;
      var visited = maybeVisited || new Map();

      if (visited.has(this)) {
        return '> @' + visited.get(this);
      } else {
        visited.set(this, visited.size.toString());
      }

      var result = '+ ';
      result += visited.get(this);
      result += ': ';
      result += this.constructor.name;

      if (maxDepth > 0 || this.operands.size === 0) {
        for (var index = 0; index < this.operands.size; ++index) {
          result += '\r\n\t';
          result += this.operands.get(index).toString(maxDepth - 1, visited).replace(/^(\r\n|\r|\n)/gm, '$1\t');
        }
      } else {
        result += '\r\n\t...';
      }

      result += '\r\n';
      result += '- ';
      result += visited.get(this);
      result += ': ';
      result += this.constructor.name;
      return result;
    }
  }]);

  return UnidocDisjunctionBlueprint;
}();

(function (UnidocDisjunctionBlueprint) {
  function create() {
    return new UnidocDisjunctionBlueprint();
  }

  UnidocDisjunctionBlueprint.create = create;
})(UnidocDisjunctionBlueprint || (UnidocDisjunctionBlueprint = {}));
;// CONCATENATED MODULE: ./sources/blueprint/UnidocEndBlueprint.ts
function UnidocEndBlueprint_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocEndBlueprint_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocEndBlueprint_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocEndBlueprint_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocEndBlueprint_defineProperties(Constructor, staticProps); return Constructor; }


/**
*
*/

var UnidocEndBlueprint = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocEndBlueprint() {
    UnidocEndBlueprint_classCallCheck(this, UnidocEndBlueprint);

    this.type = UnidocBlueprintType.END;
  }
  /**
  * @see UnidocBlueprint.equals
  */


  UnidocEndBlueprint_createClass(UnidocEndBlueprint, [{
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocEndBlueprint) {
        return true;
      }

      return false;
    }
    /**
    * @see UnidocBlueprint.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      return '| ' + this.constructor.name;
    }
  }]);

  return UnidocEndBlueprint;
}();

(function (UnidocEndBlueprint) {
  UnidocEndBlueprint.INSTANCE = new UnidocEndBlueprint();

  function create() {
    return UnidocEndBlueprint.INSTANCE;
  }

  UnidocEndBlueprint.create = create;
})(UnidocEndBlueprint || (UnidocEndBlueprint = {}));
;// CONCATENATED MODULE: ./sources/blueprint/UnidocEventBlueprint.ts
function UnidocEventBlueprint_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocEventBlueprint_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocEventBlueprint_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocEventBlueprint_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocEventBlueprint_defineProperties(Constructor, staticProps); return Constructor; }



var UnidocEventBlueprint = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocEventBlueprint() {
    UnidocEventBlueprint_classCallCheck(this, UnidocEventBlueprint);

    this.type = UnidocBlueprintType.EVENT;
    this.predicate = UnidocPredicate.anything();
  }
  /**
  *
  */


  UnidocEventBlueprint_createClass(UnidocEventBlueprint, [{
    key: "thatMatch",
    value: function thatMatch(predicate) {
      this.predicate = predicate;
      return this;
    }
    /**
    *
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.predicate = toCopy.predicate;
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this.predicate = UnidocPredicate.anything();
    }
    /**
    * @see UnidocBlueprint.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocEventBlueprint) {
        return this.predicate.equals(other.predicate);
      }

      return false;
    }
    /**
    * @see UnidocBlueprint.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      return '| ' + this.constructor.name + ' ' + this.predicate.toString();
    }
  }]);

  return UnidocEventBlueprint;
}();

(function (UnidocEventBlueprint) {
  /**
  *
  */
  function create() {
    return new UnidocEventBlueprint();
  }

  UnidocEventBlueprint.create = create;
})(UnidocEventBlueprint || (UnidocEventBlueprint = {}));
;// CONCATENATED MODULE: ./sources/blueprint/UnidocSequenceBlueprint.ts
function UnidocSequenceBlueprint_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocSequenceBlueprint_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocSequenceBlueprint_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocSequenceBlueprint_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocSequenceBlueprint_defineProperties(Constructor, staticProps); return Constructor; }



/**
*
*/

var UnidocSequenceBlueprint = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocSequenceBlueprint() {
    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;

    UnidocSequenceBlueprint_classCallCheck(this, UnidocSequenceBlueprint);

    this.type = UnidocBlueprintType.SEQUENCE;
    this.operands = gl_tool_collection_.Pack.any(capacity);
  }
  /**
  * @see UnidocSequentialBlueprint.then
  */


  UnidocSequenceBlueprint_createClass(UnidocSequenceBlueprint, [{
    key: "then",
    value: function then(value) {
      this.operands.push(value);
      return this;
    }
    /**
    *
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.operands.copy(toCopy.operands);
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this.operands.clear();
    }
    /**
    * @see UnidocBlueprint.equals
    */

  }, {
    key: "equals",
    value: function equals(other, maybeVisited) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocSequenceBlueprint) {
        if (other.operands.size !== this.operands.size) {
          return false;
        }

        var visited = maybeVisited || new Set();

        if (!visited.has(this)) {
          visited.add(this);

          for (var index = 0; index < this.operands.size; ++index) {
            if (!this.operands.get(index).equals(other.operands.get(index), visited)) {
              return false;
            }
          }
        }

        return true;
      }

      return false;
    }
    /**
    * @see UnidocBlueprint.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      var maxDepth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Number.POSITIVE_INFINITY;
      var maybeVisited = arguments.length > 1 ? arguments[1] : undefined;
      var visited = maybeVisited || new Map();

      if (visited.has(this)) {
        return '| @' + visited.get(this);
      } else {
        visited.set(this, visited.size.toString());
      }

      var result = '+ ';
      result += visited.get(this);
      result += ': ';
      result += this.constructor.name;

      if (maxDepth > 0 || this.operands.size === 0) {
        for (var index = 0; index < this.operands.size; ++index) {
          result += '\r\n\t';
          result += this.operands.get(index).toString(maxDepth - 1, visited).replace(/^(\r\n|\r|\n)/gm, '$1\t');
        }
      } else {
        result += '\r\n\t...';
      }

      result += '\r\n- ';
      result += visited.get(this);
      result += ': ';
      result += this.constructor.name;
      return result;
    }
  }]);

  return UnidocSequenceBlueprint;
}();

(function (UnidocSequenceBlueprint) {
  UnidocSequenceBlueprint.EMPTY_SEQUENCE = new UnidocSequenceBlueprint(0);

  function empty() {
    return UnidocSequenceBlueprint.EMPTY_SEQUENCE;
  }

  UnidocSequenceBlueprint.empty = empty;

  function create() {
    return new UnidocSequenceBlueprint();
  }

  UnidocSequenceBlueprint.create = create;
})(UnidocSequenceBlueprint || (UnidocSequenceBlueprint = {}));
;// CONCATENATED MODULE: ./sources/blueprint/UnidocGroupBlueprint.ts
function UnidocGroupBlueprint_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocGroupBlueprint_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocGroupBlueprint_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocGroupBlueprint_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocGroupBlueprint_defineProperties(Constructor, staticProps); return Constructor; }



/**
*
*/

var UnidocGroupBlueprint = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocGroupBlueprint() {
    UnidocGroupBlueprint_classCallCheck(this, UnidocGroupBlueprint);

    this.type = UnidocBlueprintType.GROUP;
    this.group = 0;
    this.operand = UnidocSequenceBlueprint.empty();
  }
  /**
  *
  */


  UnidocGroupBlueprint_createClass(UnidocGroupBlueprint, [{
    key: "of",
    value: function of(operand) {
      this.operand = operand;
      return this;
    }
    /**
    *
    */

  }, {
    key: "as",
    value: function as(group) {
      this.group = group;
      return this;
    }
    /**
    *
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.group = toCopy.group;
      this.operand = toCopy.operand;
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this.group = 0;
      this.operand = UnidocSequenceBlueprint.empty();
    }
    /**
    * @see UnidocBlueprint.equals
    */

  }, {
    key: "equals",
    value: function equals(other, maybeVisited) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocGroupBlueprint) {
        if (this.group !== other.group) {
          return false;
        }

        var visited = maybeVisited || new Set();

        if (!visited.has(this)) {
          visited.add(this);

          if (!this.operand.equals(other.operand, visited)) {
            return false;
          }
        }

        return true;
      }

      return false;
    }
    /**
    * @see UnidocBlueprint.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      var maxDepth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Number.POSITIVE_INFINITY;
      var maybeVisited = arguments.length > 1 ? arguments[1] : undefined;
      var visited = maybeVisited || new Map();

      if (visited.has(this)) {
        return '| @' + visited.get(this);
      } else {
        visited.set(this, visited.size.toString());
      }

      var result = '+ ';
      result += visited.get(this);
      result += ': ';
      result += this.constructor.name;
      result += ' as ';
      result += this.group;

      if (maxDepth > 0) {
        result += '\r\n\t';
        result += this.operand.toString(maxDepth - 1, visited).replace(/^(\r\n|\r|\n)/gm, '$1\t');
      } else {
        result += '\r\n\t...';
      }

      result += '\r\n- ';
      result += visited.get(this);
      result += ': ';
      result += this.constructor.name;
      return result;
    }
  }]);

  return UnidocGroupBlueprint;
}();

(function (UnidocGroupBlueprint) {
  /**
  *
  */
  function create() {
    return new UnidocGroupBlueprint();
  }

  UnidocGroupBlueprint.create = create;
})(UnidocGroupBlueprint || (UnidocGroupBlueprint = {}));
;// CONCATENATED MODULE: ./sources/blueprint/UnidocLenientSequenceBlueprint.ts
function UnidocLenientSequenceBlueprint_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocLenientSequenceBlueprint_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocLenientSequenceBlueprint_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocLenientSequenceBlueprint_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocLenientSequenceBlueprint_defineProperties(Constructor, staticProps); return Constructor; }



/**
*
*/

var UnidocLenientSequenceBlueprint = /*#__PURE__*/function () {
  function UnidocLenientSequenceBlueprint() {
    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;

    UnidocLenientSequenceBlueprint_classCallCheck(this, UnidocLenientSequenceBlueprint);

    this.type = UnidocBlueprintType.LENIENT_SEQUENCE;
    this.operands = gl_tool_collection_.Pack.any(capacity);
  }
  /**
  * @see UnidocSequentialBlueprint.then
  */


  UnidocLenientSequenceBlueprint_createClass(UnidocLenientSequenceBlueprint, [{
    key: "then",
    value: function then(value) {
      this.operands.push(value);
      return this;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.operands.clear();
    }
  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.operands.copy(toCopy.operands);
    }
    /**
    * @see UnidocBlueprint.equals
    */

  }, {
    key: "equals",
    value: function equals(other, maybeVisited) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocLenientSequenceBlueprint) {
        if (other.operands.size !== this.operands.size) {
          return false;
        }

        var visited = maybeVisited || new Set();

        if (!visited.has(this)) {
          visited.add(this);

          for (var index = 0; index < this.operands.size; ++index) {
            if (!this.operands.get(index).equals(other.operands.get(index), visited)) {
              return false;
            }
          }
        }

        return true;
      }

      return false;
    }
    /**
    * @see UnidocBlueprint.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      var maxDepth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Number.POSITIVE_INFINITY;
      var maybeVisited = arguments.length > 1 ? arguments[1] : undefined;
      var visited = maybeVisited || new Map();

      if (visited.has(this)) {
        return '| @' + visited.get(this);
      } else {
        visited.set(this, visited.size.toString());
      }

      var result = '+ ';
      result += visited.get(this);
      result += ': ';
      result += this.constructor.name;

      if (maxDepth > 0 || this.operands.size === 0) {
        for (var index = 0; index < this.operands.size; ++index) {
          result += '\r\n\t';
          result += this.operands.get(index).toString(maxDepth - 1, visited).replace(/^(\r\n|\r|\n)/gm, '$1\t');
        }
      } else {
        result += '\r\n\t...';
      }

      result += '\r\n- ';
      result += visited.get(this);
      result += ': ';
      result += this.constructor.name;
      return result;
    }
  }]);

  return UnidocLenientSequenceBlueprint;
}();

(function (UnidocLenientSequenceBlueprint) {
  function create() {
    return new UnidocLenientSequenceBlueprint();
  }

  UnidocLenientSequenceBlueprint.create = create;
})(UnidocLenientSequenceBlueprint || (UnidocLenientSequenceBlueprint = {}));
;// CONCATENATED MODULE: ./sources/blueprint/UnidocManyBlueprint.ts
function UnidocManyBlueprint_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocManyBlueprint_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocManyBlueprint_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocManyBlueprint_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocManyBlueprint_defineProperties(Constructor, staticProps); return Constructor; }



/**
*
*/

var UnidocManyBlueprint = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocManyBlueprint() {
    UnidocManyBlueprint_classCallCheck(this, UnidocManyBlueprint);

    this.type = UnidocBlueprintType.MANY;
    this.minimum = 0;
    this.maximum = Number.POSITIVE_INFINITY;
    this.operand = UnidocSequenceBlueprint.empty();
  }
  /**
  *
  */


  UnidocManyBlueprint_createClass(UnidocManyBlueprint, [{
    key: "between",
    value: function between(minimum, maximum) {
      this.minimum = minimum;
      this.maximum = maximum;
      return this;
    }
    /**
    *
    */

  }, {
    key: "optional",
    value: function optional() {
      this.minimum = 0;
      this.maximum = 1;
      return this;
    }
    /**
    *
    */

  }, {
    key: "atLeast",
    value: function atLeast(minimum) {
      this.minimum = minimum;
      return this;
    }
    /**
    *
    */

  }, {
    key: "upTo",
    value: function upTo(maximum) {
      this.maximum = maximum;
      return this;
    }
    /**
    *
    */

  }, {
    key: "of",
    value: function of(operand) {
      this.operand = operand;
      return this;
    }
    /**
    *
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.minimum = toCopy.minimum;
      this.maximum = toCopy.maximum;
      this.operand = toCopy.operand;
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this.minimum = 0;
      this.maximum = Number.POSITIVE_INFINITY;
      this.operand = UnidocSequenceBlueprint.empty();
    }
    /**
    * @see UnidocBlueprint.equals
    */

  }, {
    key: "equals",
    value: function equals(other, maybeVisited) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocManyBlueprint) {
        if (this.minimum !== other.minimum || this.maximum !== other.maximum) {
          return false;
        }

        var visited = maybeVisited || new Set();

        if (!visited.has(this)) {
          visited.add(this);

          if (!this.operand.equals(other.operand, visited)) {
            return false;
          }
        }

        return true;
      }

      return false;
    }
    /**
    * @see UnidocBlueprint.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      var maxDepth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Number.POSITIVE_INFINITY;
      var maybeVisited = arguments.length > 1 ? arguments[1] : undefined;
      var visited = maybeVisited || new Map();

      if (visited.has(this)) {
        return '| @' + visited.get(this);
      } else {
        visited.set(this, visited.size.toString());
      }

      var result = '+ ';
      result += visited.get(this);
      result += ': ';
      result += this.constructor.name;
      result += ' between ';
      result += this.minimum;
      result += ' and ';
      result += this.maximum;

      if (maxDepth > 0) {
        result += '\r\n\t';
        result += this.operand.toString(maxDepth - 1, visited).replace(/^(\r\n|\r|\n)/gm, '$1\t');
      } else {
        result += '\r\n\t...';
      }

      result += '\r\n- ';
      result += visited.get(this);
      result += ': ';
      result += this.constructor.name;
      return result;
    }
  }]);

  return UnidocManyBlueprint;
}();

(function (UnidocManyBlueprint) {
  function create() {
    return new UnidocManyBlueprint();
  }

  UnidocManyBlueprint.create = create;
})(UnidocManyBlueprint || (UnidocManyBlueprint = {}));
;// CONCATENATED MODULE: ./sources/blueprint/UnidocRegexpBlueprint.ts
function UnidocRegexpBlueprint_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocRegexpBlueprint_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocRegexpBlueprint_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocRegexpBlueprint_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocRegexpBlueprint_defineProperties(Constructor, staticProps); return Constructor; }


var ANYTHING = /.*/;
var UnidocRegexpBlueprint = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocRegexpBlueprint() {
    UnidocRegexpBlueprint_classCallCheck(this, UnidocRegexpBlueprint);

    this.type = UnidocBlueprintType.REGEXP;
    this.regexp = ANYTHING;
  }
  /**
  *
  */


  UnidocRegexpBlueprint_createClass(UnidocRegexpBlueprint, [{
    key: "thatMatch",
    value: function thatMatch(regexp) {
      this.regexp = regexp;
      return this;
    }
    /**
    *
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.regexp = toCopy.regexp;
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this.regexp = ANYTHING;
    }
    /**
    * @see UnidocBlueprint.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocRegexpBlueprint) {
        return this.regexp === other.regexp;
      }

      return false;
    }
    /**
    * @see UnidocBlueprint.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      return '| ' + this.constructor.name + ' ' + this.regexp.toString();
    }
  }]);

  return UnidocRegexpBlueprint;
}();

(function (UnidocRegexpBlueprint) {
  /**
  *
  */
  function create() {
    return new UnidocRegexpBlueprint();
  }

  UnidocRegexpBlueprint.create = create;
})(UnidocRegexpBlueprint || (UnidocRegexpBlueprint = {}));
;// CONCATENATED MODULE: ./sources/blueprint/UnidocSetBlueprint.ts
function UnidocSetBlueprint_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocSetBlueprint_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocSetBlueprint_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocSetBlueprint_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocSetBlueprint_defineProperties(Constructor, staticProps); return Constructor; }



/**
*
*/

var UnidocSetBlueprint = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocSetBlueprint() {
    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;

    UnidocSetBlueprint_classCallCheck(this, UnidocSetBlueprint);

    this.type = UnidocBlueprintType.SET;
    this.operands = gl_tool_collection_.Pack.any(capacity);
  }
  /**
  *
  */


  UnidocSetBlueprint_createClass(UnidocSetBlueprint, [{
    key: "with",
    value: function _with(content) {
      this.operands.push(content);
      return this;
    }
    /**
    *
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.operands.copy(toCopy.operands);
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this.operands.clear();
    }
    /**
    * @see UnidocBlueprint.equals
    */

  }, {
    key: "equals",
    value: function equals(other, maybeVisited) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocSetBlueprint) {
        if (other.operands.size !== this.operands.size) {
          return false;
        }

        var visited = maybeVisited || new Set();

        if (!visited.has(this)) {
          visited.add(this);

          for (var index = 0; index < this.operands.size; ++index) {
            if (!this.operands.get(index).equals(other.operands.get(index), visited)) {
              return false;
            }
          }
        }

        return true;
      }

      return false;
    }
    /**
    * @see UnidocBlueprint.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      var maxDepth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Number.POSITIVE_INFINITY;
      var maybeVisited = arguments.length > 1 ? arguments[1] : undefined;
      var visited = maybeVisited || new Map();

      if (visited.has(this)) {
        return '| @' + visited.get(this);
      } else {
        visited.set(this, visited.size.toString());
      }

      var result = '+ ';
      result += visited.get(this);
      result += ': ';
      result += this.constructor.name;

      if (maxDepth > 0 || this.operands.size === 0) {
        for (var index = 0; index < this.operands.size; ++index) {
          result += '\r\n\t';
          result += this.operands.get(index).toString(maxDepth - 1, visited).replace(/^(\r\n|\r|\n)/gm, '$1\t');
        }
      } else {
        result += '\r\n\t...';
      }

      result += '\r\n- ';
      result += visited.get(this);
      result += ': ';
      result += this.constructor.name;
      return result;
    }
  }]);

  return UnidocSetBlueprint;
}();

(function (UnidocSetBlueprint) {
  /**
  *
  */
  function create() {
    return new UnidocSetBlueprint();
  }

  UnidocSetBlueprint.create = create;
})(UnidocSetBlueprint || (UnidocSetBlueprint = {}));
;// CONCATENATED MODULE: ./sources/blueprint/UnidocTagBlueprint.ts
function UnidocTagBlueprint_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocTagBlueprint_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocTagBlueprint_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocTagBlueprint_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocTagBlueprint_defineProperties(Constructor, staticProps); return Constructor; }




/**
*
*/

var UnidocTagBlueprint = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocTagBlueprint() {
    UnidocTagBlueprint_classCallCheck(this, UnidocTagBlueprint);

    this.type = UnidocBlueprintType.TAG;
    this.predicate = UnidocPredicate.anything();
    this.operand = UnidocSequenceBlueprint.empty();
  }
  /**
  *
  */


  UnidocTagBlueprint_createClass(UnidocTagBlueprint, [{
    key: "thatMatch",
    value: function thatMatch(predicate) {
      this.predicate = predicate;
      return this;
    }
    /**
    *
    */

  }, {
    key: "withContent",
    value: function withContent(operand) {
      this.operand = operand;
      return this;
    }
    /**
    *
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.predicate = toCopy.predicate;
      this.operand = toCopy.operand;
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this.predicate = UnidocPredicate.anything();
      this.operand = UnidocSequenceBlueprint.empty();
    }
    /**
    * @see UnidocBlueprint.equals
    */

  }, {
    key: "equals",
    value: function equals(other, maybeVisited) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocTagBlueprint) {
        if (!other.predicate.equals(other.predicate)) {
          return false;
        }

        var visited = maybeVisited || new Set();

        if (!visited.has(this)) {
          visited.add(this);

          if (this.operand.equals(other.operand, visited)) {
            return false;
          }
        }

        return true;
      }

      return false;
    }
    /**
    * @see UnidocBlueprint.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      var maxDepth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Number.POSITIVE_INFINITY;
      var maybeVisited = arguments.length > 1 ? arguments[1] : undefined;
      var visited = maybeVisited || new Map();

      if (visited.has(this)) {
        return '| @' + visited.get(this);
      } else {
        visited.set(this, visited.size.toString());
      }

      var result = '+ ';
      result += visited.get(this);
      result += ': ';
      result += this.constructor.name;
      result += ' ';
      result += this.predicate.toString();

      if (maxDepth > 0) {
        result += '\r\n\t';
        result += this.operand.toString(maxDepth - 1, visited).replace(/^(\r\n|\r|\n)/gm, '$1\t');
      } else {
        result += '\r\n\t...';
      }

      result += '\r\n- ';
      result += visited.get(this);
      result += ': ';
      result += this.constructor.name;
      return result;
    }
  }]);

  return UnidocTagBlueprint;
}();

(function (UnidocTagBlueprint) {
  function create() {
    return new UnidocTagBlueprint();
  }

  UnidocTagBlueprint.create = create;
})(UnidocTagBlueprint || (UnidocTagBlueprint = {}));
;// CONCATENATED MODULE: ./sources/blueprint/UnidocBlueprint.ts
function UnidocBlueprint_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = UnidocBlueprint_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function UnidocBlueprint_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return UnidocBlueprint_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return UnidocBlueprint_arrayLikeToArray(o, minLen); }

function UnidocBlueprint_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }













var UnidocBlueprint;

(function (UnidocBlueprint) {
  /**
  *
  */
  function disjunction() {
    var result = UnidocDisjunctionBlueprint.create();

    for (var _len = arguments.length, operands = new Array(_len), _key = 0; _key < _len; _key++) {
      operands[_key] = arguments[_key];
    }

    if (operands) {
      var _iterator = UnidocBlueprint_createForOfIteratorHelper(operands),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var operand = _step.value;
          result.or(operand);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }

    return result;
  }

  UnidocBlueprint.disjunction = disjunction;
  /**
  *
  */

  UnidocBlueprint.end = UnidocEndBlueprint.create;
  /**
  *
  */

  function event(predicate) {
    var result = UnidocEventBlueprint.create();
    if (predicate) result.thatMatch(predicate);
    return result;
  }

  UnidocBlueprint.event = event;
  /**
  *
  */

  function many(operand) {
    var result = UnidocManyBlueprint.create();
    if (operand) result.of(operand);
    return result;
  }

  UnidocBlueprint.many = many;
  /**
  *
  */

  function group(group, operand) {
    var result = UnidocGroupBlueprint.create();
    result.as(group);
    if (operand) result.of(operand);
    return result;
  }

  UnidocBlueprint.group = group;
  /**
  *
  */

  function optional(operand) {
    var result = UnidocManyBlueprint.create();
    result.optional();
    if (operand) result.of(operand);
    return result;
  }

  UnidocBlueprint.optional = optional;
  /**
  *
  */

  function sequence() {
    var result = UnidocSequenceBlueprint.create();

    for (var _len2 = arguments.length, operands = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      operands[_key2] = arguments[_key2];
    }

    if (operands) {
      var _iterator2 = UnidocBlueprint_createForOfIteratorHelper(operands),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var operand = _step2.value;
          result.then(operand);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }

    return result;
  }

  UnidocBlueprint.sequence = sequence;

  (function (sequence) {
    /**
    *
    */
    function lenient() {
      var result = UnidocLenientSequenceBlueprint.create();

      for (var _len3 = arguments.length, operands = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        operands[_key3] = arguments[_key3];
      }

      if (operands) {
        var _iterator3 = UnidocBlueprint_createForOfIteratorHelper(operands),
            _step3;

        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var operand = _step3.value;
            result.then(operand);
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      }

      return result;
    }

    sequence.lenient = lenient;
  })(sequence = UnidocBlueprint.sequence || (UnidocBlueprint.sequence = {}));
  /**
  *
  */


  function set() {
    var result = UnidocSetBlueprint.create();

    for (var _len4 = arguments.length, operands = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      operands[_key4] = arguments[_key4];
    }

    if (operands) {
      var _iterator4 = UnidocBlueprint_createForOfIteratorHelper(operands),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var operand = _step4.value;
          result["with"](operand);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }

    return result;
  }

  UnidocBlueprint.set = set;
  /**
  *
  */

  UnidocBlueprint.tag = UnidocTagBlueprint.create;

  function tagStart(parameter) {
    return event(UnidocPredicate.and(UnidocPredicate.isTagStart(), UnidocPredicate.is(UnidocSelector.tagName(), typeof parameter === 'string' ? UnidocPredicate.only(parameter) : parameter)));
  }

  UnidocBlueprint.tagStart = tagStart;

  function tagEnd(parameter) {
    return event(UnidocPredicate.and(UnidocPredicate.isTagEnd(), UnidocPredicate.is(UnidocSelector.tagName(), typeof parameter === 'string' ? UnidocPredicate.only(parameter) : parameter)));
  }

  UnidocBlueprint.tagEnd = tagEnd;
  var WORD = event(UnidocPredicate.isWord());
  var WHITESPACE = event(UnidocPredicate.isWhitespace());
  var WHITESPACES = UnidocBlueprint.many(WHITESPACE);

  function word() {
    return WORD;
  }

  UnidocBlueprint.word = word;

  function whitespace() {
    return WHITESPACE;
  }

  UnidocBlueprint.whitespace = whitespace;

  function whitespaces() {
    return WHITESPACES;
  }

  UnidocBlueprint.whitespaces = whitespaces;

  function whitespaced(content) {
    return UnidocBlueprint.sequence(WHITESPACES, content, WHITESPACES);
  }

  UnidocBlueprint.whitespaced = whitespaced;

  (function (whitespaced) {
    function head(content) {
      return UnidocBlueprint.sequence(WHITESPACES, content);
    }

    whitespaced.head = head;

    function tail(content) {
      return UnidocBlueprint.sequence(content, WHITESPACES);
    }

    whitespaced.tail = tail;
    /**
    *
    */

    function disjunction() {
      var result = UnidocDisjunctionBlueprint.create();

      for (var _len5 = arguments.length, operands = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        operands[_key5] = arguments[_key5];
      }

      if (operands) {
        var _iterator5 = UnidocBlueprint_createForOfIteratorHelper(operands),
            _step5;

        try {
          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
            var operand = _step5.value;
            result.or(operand);
          }
        } catch (err) {
          _iterator5.e(err);
        } finally {
          _iterator5.f();
        }
      }

      return UnidocBlueprint.sequence(WHITESPACES, result);
    }

    whitespaced.disjunction = disjunction;
    /**
    *
    */

    function many(operand) {
      var result = UnidocManyBlueprint.create();

      if (operand) {
        result.of(UnidocBlueprint.sequence(WHITESPACES, operand));
      }

      return result;
    }

    whitespaced.many = many;
    /**
    *
    */

    function optional(operand) {
      var result = UnidocManyBlueprint.create();
      result.optional();

      if (operand) {
        result.of(UnidocBlueprint.sequence(WHITESPACES, operand));
      }

      return result;
    }

    whitespaced.optional = optional;
    /**
    *
    */

    function sequence() {
      var result = UnidocSequenceBlueprint.create();

      for (var _len6 = arguments.length, operands = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        operands[_key6] = arguments[_key6];
      }

      if (operands) {
        var _iterator6 = UnidocBlueprint_createForOfIteratorHelper(operands),
            _step6;

        try {
          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
            var operand = _step6.value;
            result.then(UnidocBlueprint.sequence(WHITESPACES, operand));
          }
        } catch (err) {
          _iterator6.e(err);
        } finally {
          _iterator6.f();
        }
      }

      return result;
    }

    whitespaced.sequence = sequence;

    (function (sequence) {
      /**
      *
      */
      function lenient() {
        var result = UnidocLenientSequenceBlueprint.create();

        for (var _len7 = arguments.length, operands = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
          operands[_key7] = arguments[_key7];
        }

        if (operands) {
          var _iterator7 = UnidocBlueprint_createForOfIteratorHelper(operands),
              _step7;

          try {
            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
              var operand = _step7.value;
              result.then(UnidocBlueprint.sequence(WHITESPACES, operand));
            }
          } catch (err) {
            _iterator7.e(err);
          } finally {
            _iterator7.f();
          }
        }

        return result;
      }

      sequence.lenient = lenient;
    })(sequence = whitespaced.sequence || (whitespaced.sequence = {}));
    /**
    *
    */


    function set() {
      var result = UnidocSetBlueprint.create();

      for (var _len8 = arguments.length, operands = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        operands[_key8] = arguments[_key8];
      }

      if (operands) {
        var _iterator8 = UnidocBlueprint_createForOfIteratorHelper(operands),
            _step8;

        try {
          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
            var operand = _step8.value;
            result["with"](UnidocBlueprint.sequence(WHITESPACES, operand));
          }
        } catch (err) {
          _iterator8.e(err);
        } finally {
          _iterator8.f();
        }
      }

      return result;
    }

    whitespaced.set = set;
  })(whitespaced = UnidocBlueprint.whitespaced || (UnidocBlueprint.whitespaced = {}));
  /**
  *
  */


  function regexp(regexp) {
    return UnidocRegexpBlueprint.create().thatMatch(regexp);
  }

  UnidocBlueprint.regexp = regexp;
})(UnidocBlueprint || (UnidocBlueprint = {}));
;// CONCATENATED MODULE: ./sources/blueprint/UnidocBlueprintVisitingState.ts
var UnidocBlueprintVisitingState;

(function (UnidocBlueprintVisitingState) {
  UnidocBlueprintVisitingState.UNVISITED = 0;
  UnidocBlueprintVisitingState.VISITING = 1;
  UnidocBlueprintVisitingState.VISITED = 2;
  UnidocBlueprintVisitingState.ALL = [UnidocBlueprintVisitingState.UNVISITED, UnidocBlueprintVisitingState.VISITING, UnidocBlueprintVisitingState.VISITED];

  function toString(value) {
    switch (value) {
      case UnidocBlueprintVisitingState.UNVISITED:
        return 'UNVISITED';

      case UnidocBlueprintVisitingState.VISITING:
        return 'VISITING';

      case UnidocBlueprintVisitingState.VISITED:
        return 'VISITED';

      default:
        return undefined;
    }
  }

  UnidocBlueprintVisitingState.toString = toString;
})(UnidocBlueprintVisitingState || (UnidocBlueprintVisitingState = {}));
;// CONCATENATED MODULE: ./sources/blueprint/UnidocBlueprintVisitor.ts
function UnidocBlueprintVisitor_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocBlueprintVisitor_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocBlueprintVisitor_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocBlueprintVisitor_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocBlueprintVisitor_defineProperties(Constructor, staticProps); return Constructor; }


var UnidocBlueprintVisitor = /*#__PURE__*/function () {
  function UnidocBlueprintVisitor() {
    UnidocBlueprintVisitor_classCallCheck(this, UnidocBlueprintVisitor);

    this._states = new Map();
  }

  UnidocBlueprintVisitor_createClass(UnidocBlueprintVisitor, [{
    key: "visiting",
    value: function visiting(blueprint) {
      this._states.set(blueprint, UnidocBlueprintVisitingState.VISITING);
    }
  }, {
    key: "visited",
    value: function visited(blueprint) {
      this._states.set(blueprint, UnidocBlueprintVisitingState.VISITED);
    }
  }, {
    key: "state",
    value: function state(blueprint) {
      return this._states.get(blueprint) || UnidocBlueprintVisitingState.UNVISITED;
    }
  }, {
    key: "isVisiting",
    value: function isVisiting(blueprint) {
      return this._states.get(blueprint) === UnidocBlueprintVisitingState.VISITING;
    }
  }, {
    key: "wasVisited",
    value: function wasVisited(blueprint) {
      return this._states.get(blueprint) === UnidocBlueprintVisitingState.VISITED;
    }
  }, {
    key: "isUnvisited",
    value: function isUnvisited(blueprint) {
      return this._states.get(blueprint) == null || this._states.get(blueprint) === UnidocBlueprintVisitingState.UNVISITED;
    }
  }, {
    key: "clear",
    value: function clear() {
      this._states.clear();
    }
  }]);

  return UnidocBlueprintVisitor;
}();

(function (UnidocBlueprintVisitor) {
  UnidocBlueprintVisitor.State = UnidocBlueprintVisitingState;

  function create() {
    return new UnidocBlueprintVisitor();
  }

  UnidocBlueprintVisitor.create = create;
})(UnidocBlueprintVisitor || (UnidocBlueprintVisitor = {}));
;// CONCATENATED MODULE: ./sources/blueprint/index.ts













;// CONCATENATED MODULE: ./sources/producer/UnidocProducerEvent.ts
var UnidocProducerEvent;

(function (UnidocProducerEvent) {
  /**
  * Event triggered just before the production of the first element.
  */
  UnidocProducerEvent.INITIALIZATION = 0;
  /**
  * Event triggered after the production of an element.
  */

  UnidocProducerEvent.PRODUCTION = 1;
  /**
  * Event triggered after the production of the last element.
  */

  UnidocProducerEvent.COMPLETION = 2;
  /**
  * Event triggered when an error arise during the production process.
  */

  UnidocProducerEvent.FAILURE = 3;
  UnidocProducerEvent.ALL = [UnidocProducerEvent.INITIALIZATION, UnidocProducerEvent.PRODUCTION, UnidocProducerEvent.COMPLETION, UnidocProducerEvent.FAILURE];
  /**
  * Return a string representation of an unidoc producer event.
  *
  * @param value - A producer event.
  *
  * @return A string representation of the given event.
  */

  function toString(value) {
    switch (value) {
      case UnidocProducerEvent.INITIALIZATION:
        return 'INITIALIZATION';

      case UnidocProducerEvent.PRODUCTION:
        return 'PRODUCTION';

      case UnidocProducerEvent.COMPLETION:
        return 'COMPLETION';

      case UnidocProducerEvent.FAILURE:
        return 'FAILURE';

      default:
        return undefined;
    }
  }

  UnidocProducerEvent.toString = toString;
})(UnidocProducerEvent || (UnidocProducerEvent = {}));
;// CONCATENATED MODULE: ./sources/consumer/SubscribableUnidocConsumer.ts
function SubscribableUnidocConsumer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function SubscribableUnidocConsumer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function SubscribableUnidocConsumer_createClass(Constructor, protoProps, staticProps) { if (protoProps) SubscribableUnidocConsumer_defineProperties(Constructor.prototype, protoProps); if (staticProps) SubscribableUnidocConsumer_defineProperties(Constructor, staticProps); return Constructor; }


var SubscribableUnidocConsumer = /*#__PURE__*/function () {
  function SubscribableUnidocConsumer() {
    SubscribableUnidocConsumer_classCallCheck(this, SubscribableUnidocConsumer);

    this.handleInitialization = this.handleInitialization.bind(this);
    this.handleProduction = this.handleProduction.bind(this);
    this.handleCompletion = this.handleCompletion.bind(this);
    this.handleFailure = this.handleFailure.bind(this);
  }
  /**
  * @see UnidocConsumer.subscribe
  */


  SubscribableUnidocConsumer_createClass(SubscribableUnidocConsumer, [{
    key: "subscribe",
    value: function subscribe(producer) {
      producer.addEventListener(UnidocProducerEvent.INITIALIZATION, this.handleInitialization);
      producer.addEventListener(UnidocProducerEvent.PRODUCTION, this.handleProduction);
      producer.addEventListener(UnidocProducerEvent.COMPLETION, this.handleCompletion);
      producer.addEventListener(UnidocProducerEvent.FAILURE, this.handleFailure);
      return producer;
    }
    /**
    * @see UnidocConsumer.unsubscribe
    */

  }, {
    key: "unsubscribe",
    value: function unsubscribe(producer) {
      producer.removeEventListener(UnidocProducerEvent.INITIALIZATION, this.handleInitialization);
      producer.removeEventListener(UnidocProducerEvent.PRODUCTION, this.handleProduction);
      producer.removeEventListener(UnidocProducerEvent.COMPLETION, this.handleCompletion);
      producer.removeEventListener(UnidocProducerEvent.FAILURE, this.handleFailure);
    }
  }]);

  return SubscribableUnidocConsumer;
}();
;// CONCATENATED MODULE: ./sources/buffer/UnidocBufferizer.ts
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function UnidocBufferizer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocBufferizer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocBufferizer_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocBufferizer_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocBufferizer_defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


var UnidocBufferizer = /*#__PURE__*/function (_SubscribableUnidocCo) {
  _inherits(UnidocBufferizer, _SubscribableUnidocCo);

  var _super = _createSuper(UnidocBufferizer);

  function UnidocBufferizer(buffer) {
    var _this;

    UnidocBufferizer_classCallCheck(this, UnidocBufferizer);

    _this = _super.call(this);
    _this.buffer = buffer;
    return _this;
  }
  /**
  * @see UnidocConsumer.handleInitialization
  */


  UnidocBufferizer_createClass(UnidocBufferizer, [{
    key: "handleInitialization",
    value: function handleInitialization() {
      this.buffer.clear();
    }
    /**
    * @see UnidocConsumer.handleProduction
    */

  }, {
    key: "handleProduction",
    value: function handleProduction(value) {
      this.buffer.push(value);
    }
    /**
    * @see UnidocConsumer.handleCompletion
    */

  }, {
    key: "handleCompletion",
    value: function handleCompletion() {
      this.buffer.fit();
    }
    /**
    * @see UnidocConsumer.handleFailure
    */

  }, {
    key: "handleFailure",
    value: function handleFailure(error) {
      console.error(error);
    }
  }]);

  return UnidocBufferizer;
}(SubscribableUnidocConsumer);
;// CONCATENATED MODULE: ./sources/buffer/bufferize.ts



function bufferize(input, allocator) {
  var bufferizer;

  if (allocator == null) {
    bufferizer = new UnidocBufferizer(gl_tool_collection_.Pack.any(32));
  } else {
    bufferizer = new UnidocBufferizer(UnidocBuffer.create(allocator, 32));
  }

  bufferizer.subscribe(input);
  return bufferizer.buffer;
}
;// CONCATENATED MODULE: ./sources/buffer/UnidocBuffer.ts


var UnidocBuffer;

(function (UnidocBuffer) {
  UnidocBuffer.bufferize = bufferize;
  /**
  * Instantiate a new buffer for storing a given type of value.
  *
  * @param allocator - An allocator that allows to manipulate instances of the type of value to store.
  * @param [capacity=32] - Initial capacity of the buffer to allocate.
  *
  * @return A new buffer instance.
  */

  function create(allocator) {
    var capacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 32;
    return gl_tool_collection_.Pack.instance(allocator, capacity);
  }

  UnidocBuffer.create = create;

  function toString(buffer) {
    var result = '[';

    for (var index = 0; index < buffer.size; ++index) {
      var value = buffer.get(index);
      result += index > 0 ? ',' : '';
      result += '\r\n\t';

      if (value == null || value.toString == null) {
        result += JSON.stringify(value);
      } else {
        result += value.toString();
      }
    }

    result += buffer.size > 0 ? '\r\n' : '';
    result += ']';
    return result;
  }

  UnidocBuffer.toString = toString;

  function stringify(element) {
    if (element == null || element.toString == null) {
      return JSON.stringify(element);
    } else {
      return element.toString();
    }
  }

  UnidocBuffer.stringify = stringify;

  function expect(result, expectation) {
    if (result == null || expectation == null) {
      if (expectation === result) {
        throw new Error('Received different values, received ' + stringify(result) + ' but expected ' + stringify(expectation) + '.');
      }
    } else if (result != expectation) {
      if (result.size !== expectation.size) {
        throw new Error('Received a buffer of size ' + result.size + ' instead of a buffer ' + 'of size ' + expectation.size + ', received ' + toString(result) + ' but expected ' + toString(expectation) + '.');
      }

      for (var index = 0, size = expectation.size; index < size; ++index) {
        var resultItem = result.get(index);
        var expectedItem = expectation.get(index);

        if (resultItem == null || expectedItem == null || expectedItem.equals == null) {
          if (resultItem !== expectedItem) {
            throw new Error('Difference between buffers at index ' + index + ' : ' + stringify(resultItem) + ' != ' + stringify(expectedItem) + ', ' + 'received ' + toString(result) + ' but expected ' + toString(expectation) + '.');
          }
        } else if (!resultItem.equals(expectedItem)) {
          throw new Error('Difference between buffers at index ' + index + ' : ' + stringify(resultItem) + ' != ' + stringify(expectedItem) + ', ' + 'received ' + toString(result) + ' but expected ' + toString(expectation) + '.');
        }
      }
    }
  }

  UnidocBuffer.expect = expect;
})(UnidocBuffer || (UnidocBuffer = {}));
;// CONCATENATED MODULE: ./sources/buffer/index.ts



;// CONCATENATED MODULE: ./sources/compilation/data/Data.ts
function Data_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Data_typeof = function _typeof(obj) { return typeof obj; }; } else { Data_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Data_typeof(obj); }

function Data_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function Data_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function Data_createClass(Constructor, protoProps, staticProps) { if (protoProps) Data_defineProperties(Constructor.prototype, protoProps); if (staticProps) Data_defineProperties(Constructor, staticProps); return Constructor; }

var Data = /*#__PURE__*/function () {
  /**
  *
  */
  function Data() {
    Data_classCallCheck(this, Data);

    this.value = undefined;
  }
  /**
  *
  */


  Data_createClass(Data, [{
    key: "isMap",
    value: function isMap() {
      return Data.isMap(this.value);
    }
    /**
    *
    */

  }, {
    key: "isArray",
    value: function isArray() {
      return Data.isArray(this.value);
    }
    /**
    *
    */

  }, {
    key: "isObject",
    value: function isObject() {
      return Data.isObject(this.value);
    }
    /**
    *
    */

  }, {
    key: "isPrimitive",
    value: function isPrimitive() {
      return Data.isPrimitive(this.value);
    }
    /**
    *
    */

  }, {
    key: "move",
    value: function move(field) {
      this.value = Data.move(this.value, field);
    }
    /**
    *
    */

  }, {
    key: "follow",
    value: function follow(path) {
      this.value = Data.follow(this.value, path);
    }
    /**
    *
    */

  }, {
    key: "set",
    value: function set(field, value) {
      Data.set(this.value, field, value);
    }
    /**
    *
    */

  }, {
    key: "setIn",
    value: function setIn(path, value) {
      Data.setIn(this.value, path, value);
    }
    /**
    *
    */

  }, {
    key: "push",
    value: function push(value) {
      Data.push(this.value, value);
    }
    /**
    *
    */

  }, {
    key: "pushIn",
    value: function pushIn(path, value) {
      Data.pushIn(this.value, path, value);
    }
  }]);

  return Data;
}();

(function (Data) {
  /**
  *
  */
  function isMap(value) {
    return value != null && Data_typeof(value) === 'object' && value instanceof Map;
  }

  Data.isMap = isMap;
  /**
  *
  */

  function isArray(value) {
    return value != null && Data_typeof(value) === 'object' && value instanceof Array;
  }

  Data.isArray = isArray;
  /**
  *
  */

  function isObject(value) {
    return value != null && Data_typeof(value) === 'object' && !(value instanceof Array);
  }

  Data.isObject = isObject;
  /**
  *
  */

  function isPrimitive(value) {
    return value == null && Data_typeof(value) !== 'object';
  }

  Data.isPrimitive = isPrimitive;
  /**
  *
  */

  function move(value, field) {
    if (value == null || Data_typeof(value) !== 'object') {
      if (value == null) {
        throw new Error('Illegal call to move, a data object can\'t move ' + 'throughout a null or undefined value.');
      } else {
        throw new Error('Illegal call to move, a data object can\'t move ' + 'throughout a primitive value.');
      }
    } else if (value instanceof Array) {
      if (typeof value === 'number') {
        return value[field];
      } else {
        throw new Error('Illegal call to move, a data object can\'t move ' + 'throughout an array by using a string key.');
      }
    } else if (value instanceof Map) {
      return value.get(field);
    } else {
      return value[field];
    }
  }

  Data.move = move;
  /**
  *
  */

  function follow(value, path) {
    var elements = path.elements;
    var current = value;

    for (var index = 0, size = elements.size; index < size; ++index) {
      current = move(current, elements.get(index));
    }

    return current;
  }

  Data.follow = follow;
  /**
  *
  */

  function set(collection, field, value) {
    if (collection == null || Data_typeof(collection) !== 'object') {
      if (collection == null) {
        throw new Error('Illegal call to set, a data object can\'t assign ' + 'a field to a null or undefined value.');
      } else {
        throw new Error('Illegal call to set, a data object can\'t assign ' + 'a field to a primitive value.');
      }
    } else if (collection instanceof Array) {
      if (typeof field === 'number') {
        collection[field] = value;
      } else {
        throw new Error('Illegal call to set, a data object can\'t assign ' + 'a string field to an array.');
      }
    } else if (collection instanceof Map) {
      collection.set(field, value);
    } else {
      collection[field] = value;
    }
  }

  Data.set = set;
  /**
  *
  */

  function setIn(tree, path, value) {
    var elements = path.elements;
    var collection = tree;

    for (var index = 0, size = elements.size - 1; index < size; ++index) {
      collection = move(collection, elements.get(index));
    }

    set(collection, elements.last, value);
  }

  Data.setIn = setIn;
  /**
  *
  */

  function push(collection, value) {
    if (collection == null || Data_typeof(collection) !== 'object') {
      if (collection == null) {
        throw new Error('Illegal call to push, a data object can\'t push ' + 'into a null or undefined value.');
      } else {
        throw new Error('Illegal call to push, a data object can\'t push ' + 'into a primitive value.');
      }
    } else if (collection instanceof Array) {
      collection.push(value);
    } else {
      throw new Error('Illegal call to push, a data object can\'t push ' + 'into an object or a map.');
    }
  }

  Data.push = push;
  /**
  *
  */

  function pushIn(tree, path, value) {
    var elements = path.elements;
    var collection = tree;

    for (var index = 0, size = elements.size; index < size; ++index) {
      collection = move(collection, elements.get(index));
    }

    push(collection, value);
  }

  Data.pushIn = pushIn;
})(Data || (Data = {}));
;// CONCATENATED MODULE: ./sources/compilation/data/DataEventType.ts
var DataEventType;

(function (DataEventType) {
  /**
  *
  */
  DataEventType.MOVE = 0;
  /**
  *
  */

  DataEventType.BACK = 1;
  /**
  *
  */

  DataEventType.OBJECT = 2;
  /**
  *
  */

  DataEventType.ARRAY = 3;
  /**
  *
  */

  DataEventType.MAP = 4;
  /**
  *
  */

  DataEventType.SWAP = 5;
  /**
  *
  */

  DataEventType.SET = 6;
  /**
  *
  */

  DataEventType.PUSH = 7;
  /**
  *
  */

  DataEventType.PUBLISH = 8;
  /**
  *
  */

  DataEventType.DEFAULT = DataEventType.MOVE;
  /**
  *
  */

  DataEventType.ALL = [DataEventType.MOVE, DataEventType.BACK, DataEventType.OBJECT, DataEventType.ARRAY, DataEventType.MAP, DataEventType.SWAP, DataEventType.SET, DataEventType.PUSH, DataEventType.PUBLISH];
  /**
  *
  */

  function toString(value) {
    switch (value) {
      case DataEventType.MOVE:
        return 'MOVE';

      case DataEventType.BACK:
        return 'BACK';

      case DataEventType.OBJECT:
        return 'OBJECT';

      case DataEventType.ARRAY:
        return 'ARRAY';

      case DataEventType.MAP:
        return 'MAP';

      case DataEventType.SWAP:
        return 'SWAP';

      case DataEventType.SET:
        return 'SET';

      case DataEventType.PUSH:
        return 'PUSH';

      case DataEventType.PUBLISH:
        return 'PUBLISH';

      default:
        return undefined;
    }
  }

  DataEventType.toString = toString;
  /**
  *
  */

  function toDebugString(value) {
    return '#' + value + ' (' + (toString(value) || 'undefined') + ')';
  }

  DataEventType.toDebugString = toDebugString;
})(DataEventType || (DataEventType = {}));
;// CONCATENATED MODULE: ./sources/compilation/data/DataPath.ts
function DataPath_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function DataPath_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function DataPath_createClass(Constructor, protoProps, staticProps) { if (protoProps) DataPath_defineProperties(Constructor.prototype, protoProps); if (staticProps) DataPath_defineProperties(Constructor, staticProps); return Constructor; }


var DataPath = /*#__PURE__*/function () {
  /**
  *
  */
  function DataPath() {
    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 16;

    DataPath_classCallCheck(this, DataPath);

    this._elements = gl_tool_collection_.Pack.any(capacity);
    this.elements = this._elements.view();
  }
  /**
  *
  */


  DataPath_createClass(DataPath, [{
    key: "reallocate",

    /**
    *
    */
    value: function reallocate(capacity) {
      this._elements.reallocate(capacity);
    }
    /**
    *
    */

  }, {
    key: "fit",
    value: function fit() {
      this._elements.fit();
    }
    /**
    *
    */

  }, {
    key: "push",
    value: function push(element) {
      this._elements.push(element);
    }
    /**
    *
    */

  }, {
    key: "pop",
    value: function pop() {
      return this._elements.pop();
    }
    /**
    *
    */

  }, {
    key: "concat",
    value: function concat(path) {
      this._elements.concat(path._elements);
    }
    /**
    *
    */

  }, {
    key: "copy",
    value: function copy(path) {
      this._elements.copy(path._elements);
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this._elements.clear();
    }
    /**
    *
    */

  }, {
    key: "clone",
    value: function clone() {
      var result = new DataPath(this._elements.capacity);
      result.copy(this);
      return result;
    }
    /**
    * @see Object.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      if (this._elements.size > 0) {
        var result = '.';

        var first = this._elements.get(0);

        if (typeof first === 'string') {
          result += first;
        } else {
          result += '[';
          result += first;
          result += ']';
        }

        for (var index = 1; index < this._elements.size; ++index) {
          var value = this._elements.get(1);

          if (typeof value === 'string') {
            result += '.';
            result += value;
          } else {
            result += '[';
            result += value;
            result += ']';
          }
        }

        return result;
      } else {
        return '.';
      }
    }
    /**
    * @see Object.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof DataPath) {
        return other._elements.equals(this._elements);
      }

      return false;
    }
    /**
    *
    */

  }, {
    key: Symbol.iterator,
    value: function value() {
      return this._elements[Symbol.iterator]();
    }
  }, {
    key: "size",
    get: function get() {
      return this._elements.size;
    }
    /**
    *
    */

  }, {
    key: "capacity",
    get: function get() {
      return this._elements.capacity;
    }
  }]);

  return DataPath;
}();

(function (DataPath) {
  function copy(toCopy) {
    return toCopy == null ? toCopy : toCopy.clone();
  }

  DataPath.copy = copy;
})(DataPath || (DataPath = {}));
;// CONCATENATED MODULE: ./sources/compilation/data/DataEvent.ts
function DataEvent_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function DataEvent_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function DataEvent_createClass(Constructor, protoProps, staticProps) { if (protoProps) DataEvent_defineProperties(Constructor.prototype, protoProps); if (staticProps) DataEvent_defineProperties(Constructor, staticProps); return Constructor; }




/**
*
*/

var DataEvent = /*#__PURE__*/function () {
  /**
  *
  */
  function DataEvent() {
    DataEvent_classCallCheck(this, DataEvent);

    this.index = 0;
    this.type = DataEventType.DEFAULT;
    this.value = undefined;
    this.path = new DataPath(8);
  }
  /**
  *
  */


  DataEvent_createClass(DataEvent, [{
    key: "publish",
    value: function publish() {
      this.type = DataEventType.PUBLISH;
      this.value = undefined;
      this.path.clear();
    }
    /**
    *
    */

  }, {
    key: "object",
    value: function object() {
      this.type = DataEventType.OBJECT;
      this.value = undefined;
      this.path.clear();
    }
    /**
    *
    */

  }, {
    key: "array",
    value: function array() {
      this.type = DataEventType.ARRAY;
      this.value = undefined;
      this.path.clear();
    }
    /**
    *
    */

  }, {
    key: "map",
    value: function map() {
      this.type = DataEventType.MAP;
      this.value = undefined;
      this.path.clear();
    }
    /**
    *
    */

  }, {
    key: "swap",
    value: function swap(value) {
      this.type = DataEventType.SWAP;
      this.value = value;
      this.path.clear();
    }
    /**
    *
    */

  }, {
    key: "move",
    value: function move() {
      this.type = DataEventType.MOVE;
      this.value = undefined;
      this.path.clear();

      for (var _len = arguments.length, fields = new Array(_len), _key = 0; _key < _len; _key++) {
        fields[_key] = arguments[_key];
      }

      for (var _i = 0, _fields = fields; _i < _fields.length; _i++) {
        var field = _fields[_i];
        this.path.push(field);
      }
    }
    /**
    *
    */

  }, {
    key: "back",
    value: function back() {
      this.type = DataEventType.BACK;
      this.value = undefined;
      this.path.clear();
    }
    /**
    *
    */

  }, {
    key: "set",
    value: function set() {
      var _ref;

      this.type = DataEventType.SET;
      this.value = (_ref = arguments.length - 1, _ref < 0 || arguments.length <= _ref ? undefined : arguments[_ref]);
      this.path.clear();

      for (var index = 0, size = arguments.length - 1; index < size; ++index) {
        this.path.push(index < 0 || arguments.length <= index ? undefined : arguments[index]);
      }
    }
    /**
    *
    */

  }, {
    key: "push",
    value: function push() {
      var _ref2;

      this.type = DataEventType.PUSH;
      this.value = (_ref2 = arguments.length - 1, _ref2 < 0 || arguments.length <= _ref2 ? undefined : arguments[_ref2]);
      this.path.clear();

      for (var index = 0, size = arguments.length - 1; index < size; ++index) {
        this.path.push(index < 0 || arguments.length <= index ? undefined : arguments[index]);
      }
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this.index = 0;
      this.type = DataEventType.DEFAULT;
      this.value = undefined;
    }
    /**
    *
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.index = toCopy.index;
      this.type = toCopy.type;
      this.value = toCopy.value;
    }
    /**
    *
    */

  }, {
    key: "clone",
    value: function clone() {
      var result = new DataEvent();
      result.copy(this);
      return result;
    }
    /**
    * @see Object.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      var result = '#' + this.index;

      switch (this.type) {
        case DataEventType.MOVE:
          return result + ' move ' + this.path.toString();

        case DataEventType.BACK:
          return result + ' back';

        case DataEventType.OBJECT:
          return result + ' object';

        case DataEventType.ARRAY:
          return result + ' array';

        case DataEventType.MAP:
          return result + ' map';

        case DataEventType.SWAP:
          return result + ' swap to ' + this.value;

        case DataEventType.SET:
          return result + ' set ' + this.path.toString() + ' ' + this.value;

        case DataEventType.PUSH:
          return result + ' push ' + this.path.toString() + ' ' + this.value;

        default:
          throw new Error('Unable to map a data event of type ' + DataEventType.toDebugString(this.type) + ' to a string because ' + 'no procedure was defined for that.');
      }
    }
    /**
    * @see Object.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof DataEvent) {
        return other.index === this.index && other.type === this.type && other.value === this.value;
      }

      return false;
    }
  }]);

  return DataEvent;
}();

(function (DataEvent) {
  function copy(toCopy) {
    return toCopy == null ? toCopy : toCopy.clone();
  }

  DataEvent.copy = copy;

  function create() {
    return new DataEvent();
  }

  DataEvent.create = create;
  DataEvent.ALLOCATOR = gl_tool_collection_.Allocator.fromFactory(create);
})(DataEvent || (DataEvent = {}));
;// CONCATENATED MODULE: ./sources/producer/ListenableUnidocProducer.ts
function ListenableUnidocProducer_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = ListenableUnidocProducer_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function ListenableUnidocProducer_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return ListenableUnidocProducer_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ListenableUnidocProducer_arrayLikeToArray(o, minLen); }

function ListenableUnidocProducer_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ListenableUnidocProducer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function ListenableUnidocProducer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function ListenableUnidocProducer_createClass(Constructor, protoProps, staticProps) { if (protoProps) ListenableUnidocProducer_defineProperties(Constructor.prototype, protoProps); if (staticProps) ListenableUnidocProducer_defineProperties(Constructor, staticProps); return Constructor; }


/**
* A implementation of the unidoc producer interface that is listenable.
*/

var ListenableUnidocProducer = /*#__PURE__*/function () {
  /**
  * Instantiate a new
  */
  function ListenableUnidocProducer() {
    ListenableUnidocProducer_classCallCheck(this, ListenableUnidocProducer);

    this._completionListeners = new Set();
    this._productionListeners = new Set();
    this._initializationListeners = new Set();
    this._failureListeners = new Set();
  }
  /**
  * Notify the initialization of the production process.
  */


  ListenableUnidocProducer_createClass(ListenableUnidocProducer, [{
    key: "initialize",
    value: function initialize() {
      var _iterator = ListenableUnidocProducer_createForOfIteratorHelper(this._initializationListeners),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var listener = _step.value;
          listener();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
    * Notify a failure of the production process.
    */

  }, {
    key: "fail",
    value: function fail(error) {
      var _iterator2 = ListenableUnidocProducer_createForOfIteratorHelper(this._failureListeners),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var listener = _step2.value;
          listener(error);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
    /**
    * Notify the production of an element.
    */

  }, {
    key: "produce",
    value: function produce(value) {
      var _iterator3 = ListenableUnidocProducer_createForOfIteratorHelper(this._productionListeners),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var listener = _step3.value;
          listener(value);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }
    /**
    * Notify the completion of the production process.
    */

  }, {
    key: "complete",
    value: function complete() {
      var _iterator4 = ListenableUnidocProducer_createForOfIteratorHelper(this._completionListeners),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var listener = _step4.value;
          listener();
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }
  }, {
    key: "addEventListener",
    value: function addEventListener(event, listener) {
      switch (event) {
        case UnidocProducerEvent.COMPLETION:
          this._completionListeners.add(listener);

          return;

        case UnidocProducerEvent.PRODUCTION:
          this._productionListeners.add(listener);

          return;

        case UnidocProducerEvent.FAILURE:
          this._failureListeners.add(listener);

          return;

        case UnidocProducerEvent.INITIALIZATION:
          this._initializationListeners.add(listener);

          return;

        default:
          throw new Error('Unable to register the given listener for event type #' + event + ' "' + UnidocProducerEvent.toString(event) + '" because the given ' + 'event type does not exists or is not supported.');
      }
    }
  }, {
    key: "removeEventListener",
    value: function removeEventListener(event, listener) {
      switch (event) {
        case UnidocProducerEvent.COMPLETION:
          this._completionListeners["delete"](listener);

          return;

        case UnidocProducerEvent.PRODUCTION:
          this._productionListeners["delete"](listener);

          return;

        case UnidocProducerEvent.FAILURE:
          this._failureListeners["delete"](listener);

          return;

        case UnidocProducerEvent.INITIALIZATION:
          this._initializationListeners["delete"](listener);

          return;

        default:
          throw new Error('Unable to remove the given listener for event type #' + event + ' "' + UnidocProducerEvent.toString(event) + '" because the given ' + 'event type does not exists or is not supported.');
      }
    }
  }, {
    key: "removeAllEventListener",
    value: function removeAllEventListener(event) {
      if (event == null) {
        this._completionListeners.clear();

        this._productionListeners.clear();

        this._initializationListeners.clear();

        this._failureListeners.clear();
      } else {
        switch (event) {
          case UnidocProducerEvent.COMPLETION:
            this._completionListeners.clear();

            return;

          case UnidocProducerEvent.PRODUCTION:
            this._productionListeners.clear();

            return;

          case UnidocProducerEvent.FAILURE:
            this._failureListeners.clear();

            return;

          case UnidocProducerEvent.INITIALIZATION:
            this._initializationListeners.clear();

            return;

          default:
            throw new Error('Unable to remove all event listener of event type #' + event + ' "' + UnidocProducerEvent.toString(event) + '" because the given ' + 'event type does not exists or is not supported.');
        }
      }
    }
  }]);

  return ListenableUnidocProducer;
}();
;// CONCATENATED MODULE: ./sources/producer/StaticUnidocProducer.ts
function StaticUnidocProducer_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { StaticUnidocProducer_typeof = function _typeof(obj) { return typeof obj; }; } else { StaticUnidocProducer_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return StaticUnidocProducer_typeof(obj); }

function StaticUnidocProducer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function StaticUnidocProducer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function StaticUnidocProducer_createClass(Constructor, protoProps, staticProps) { if (protoProps) StaticUnidocProducer_defineProperties(Constructor.prototype, protoProps); if (staticProps) StaticUnidocProducer_defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = StaticUnidocProducer_getPrototypeOf(object); if (object === null) break; } return object; }

function StaticUnidocProducer_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) StaticUnidocProducer_setPrototypeOf(subClass, superClass); }

function StaticUnidocProducer_setPrototypeOf(o, p) { StaticUnidocProducer_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return StaticUnidocProducer_setPrototypeOf(o, p); }

function StaticUnidocProducer_createSuper(Derived) { var hasNativeReflectConstruct = StaticUnidocProducer_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = StaticUnidocProducer_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = StaticUnidocProducer_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return StaticUnidocProducer_possibleConstructorReturn(this, result); }; }

function StaticUnidocProducer_possibleConstructorReturn(self, call) { if (call && (StaticUnidocProducer_typeof(call) === "object" || typeof call === "function")) { return call; } return StaticUnidocProducer_assertThisInitialized(self); }

function StaticUnidocProducer_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function StaticUnidocProducer_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function StaticUnidocProducer_getPrototypeOf(o) { StaticUnidocProducer_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return StaticUnidocProducer_getPrototypeOf(o); }


/**
* A implementation of the unidoc producer interface that is listenable.
*/

var StaticUnidocProducer = /*#__PURE__*/function (_ListenableUnidocProd) {
  StaticUnidocProducer_inherits(StaticUnidocProducer, _ListenableUnidocProd);

  var _super = StaticUnidocProducer_createSuper(StaticUnidocProducer);

  function StaticUnidocProducer() {
    StaticUnidocProducer_classCallCheck(this, StaticUnidocProducer);

    return _super.apply(this, arguments);
  }

  StaticUnidocProducer_createClass(StaticUnidocProducer, [{
    key: "initialize",

    /**
    * @see ListenableUnidocProducer.initialize
    */
    value: function initialize() {
      _get(StaticUnidocProducer_getPrototypeOf(StaticUnidocProducer.prototype), "initialize", this).call(this);
    }
    /**
    * @see ListenableUnidocProducer.fail
    */

  }, {
    key: "fail",
    value: function fail(error) {
      _get(StaticUnidocProducer_getPrototypeOf(StaticUnidocProducer.prototype), "fail", this).call(this, error);
    }
    /**
    * @see ListenableUnidocProducer.produce
    */

  }, {
    key: "produce",
    value: function produce(value) {
      _get(StaticUnidocProducer_getPrototypeOf(StaticUnidocProducer.prototype), "produce", this).call(this, value);
    }
    /**
    * @see ListenableUnidocProducer.complete
    */

  }, {
    key: "complete",
    value: function complete() {
      _get(StaticUnidocProducer_getPrototypeOf(StaticUnidocProducer.prototype), "complete", this).call(this);
    }
  }]);

  return StaticUnidocProducer;
}(ListenableUnidocProducer);
;// CONCATENATED MODULE: ./sources/compilation/data/DataEventCompiler.ts
function DataEventCompiler_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { DataEventCompiler_typeof = function _typeof(obj) { return typeof obj; }; } else { DataEventCompiler_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return DataEventCompiler_typeof(obj); }

function DataEventCompiler_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = DataEventCompiler_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function DataEventCompiler_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return DataEventCompiler_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return DataEventCompiler_arrayLikeToArray(o, minLen); }

function DataEventCompiler_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function DataEventCompiler_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function DataEventCompiler_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function DataEventCompiler_createClass(Constructor, protoProps, staticProps) { if (protoProps) DataEventCompiler_defineProperties(Constructor.prototype, protoProps); if (staticProps) DataEventCompiler_defineProperties(Constructor, staticProps); return Constructor; }

function DataEventCompiler_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) DataEventCompiler_setPrototypeOf(subClass, superClass); }

function DataEventCompiler_setPrototypeOf(o, p) { DataEventCompiler_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return DataEventCompiler_setPrototypeOf(o, p); }

function DataEventCompiler_createSuper(Derived) { var hasNativeReflectConstruct = DataEventCompiler_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = DataEventCompiler_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = DataEventCompiler_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return DataEventCompiler_possibleConstructorReturn(this, result); }; }

function DataEventCompiler_possibleConstructorReturn(self, call) { if (call && (DataEventCompiler_typeof(call) === "object" || typeof call === "function")) { return call; } return DataEventCompiler_assertThisInitialized(self); }

function DataEventCompiler_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function DataEventCompiler_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function DataEventCompiler_getPrototypeOf(o) { DataEventCompiler_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return DataEventCompiler_getPrototypeOf(o); }







var DataEventCompiler = /*#__PURE__*/function (_SubscribableUnidocCo) {
  DataEventCompiler_inherits(DataEventCompiler, _SubscribableUnidocCo);

  var _super = DataEventCompiler_createSuper(DataEventCompiler);

  /**
  *
  */
  function DataEventCompiler() {
    var _this;

    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 16;

    DataEventCompiler_classCallCheck(this, DataEventCompiler);

    _this = _super.call(this);
    _this._stack = gl_tool_collection_.Pack.any(capacity);
    _this._path = new DataPath(capacity);
    _this._output = new StaticUnidocProducer();
    return _this;
  }
  /**
  *
  */


  DataEventCompiler_createClass(DataEventCompiler, [{
    key: "handleInitialization",
    value: function handleInitialization() {
      this._output.initialize();

      this._stack.push(undefined);
    }
    /**
    *
    */

  }, {
    key: "handleProduction",
    value: function handleProduction(value) {
      switch (value.type) {
        case DataEventType.MOVE:
          this.move(value.path);
          break;

        case DataEventType.BACK:
          this.back();
          break;

        case DataEventType.OBJECT:
          this.object();
          break;

        case DataEventType.ARRAY:
          this.array();
          break;

        case DataEventType.MAP:
          this.map();
          break;

        case DataEventType.SWAP:
          this.swap(value.value);
          break;

        case DataEventType.SET:
          this.set(value.path, value.value);
          break;

        case DataEventType.PUSH:
          this.push(value.path, value.value);
          break;

        case DataEventType.PUBLISH:
          this.publish();
          break;

        default:
          throw new Error('Unable to handle production of event of type ' + DataEventType.toDebugString(value.type) + ' because no procedure ' + 'was defined for that.');
      }
    }
    /**
    *
    */

  }, {
    key: "move",
    value: function move(path) {
      var current = this._stack.last;

      var _iterator = DataEventCompiler_createForOfIteratorHelper(path.elements),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var element = _step.value;
          current = Data.move(current, element);

          this._stack.push(current);

          this._path.push(element);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
    *
    */

  }, {
    key: "back",
    value: function back() {
      if (this._path.size > 0) {
        this._stack.pop();

        this._path.pop();
      } else {
        throw new Error('Unable to move back from the root of the declaration.');
      }
    }
    /**
    *
    */

  }, {
    key: "object",
    value: function object() {
      var value = this._stack.last;

      if (value == null) {
        this._stack.set(this._stack.lastIndex, {});
      } else if (DataEventCompiler_typeof(value) === 'object') {
        if (value instanceof Array) {
          throw new Error('Unable to define the current value as an object as the current ' + 'value is an array.');
        } else if (value instanceof Map) {
          throw new Error('Unable to define the current value as an object as the current ' + 'value is a map.');
        } else {
          return;
        }
      } else {
        throw new Error('Unable to define the current value as an object as the current ' + 'value is a primitive value.');
      }
    }
    /**
    *
    */

  }, {
    key: "array",
    value: function array() {
      var value = this._stack.last;

      if (value == null) {
        this._stack.set(this._stack.lastIndex, []);
      } else if (DataEventCompiler_typeof(value) === 'object') {
        if (value instanceof Array) {
          return;
        } else if (value instanceof Map) {
          throw new Error('Unable to define the current value as an array as the current ' + 'value is a map.');
        } else {
          throw new Error('Unable to define the current value as an array as the current ' + 'value is an object.');
        }
      } else {
        throw new Error('Unable to define the current value as an array as the current ' + 'value is a primitive value.');
      }
    }
    /**
    *
    */

  }, {
    key: "map",
    value: function map() {
      var value = this._stack.last;

      if (value == null) {
        this._stack.set(this._stack.lastIndex, new Map());
      } else if (DataEventCompiler_typeof(value) === 'object') {
        if (value instanceof Array) {
          throw new Error('Unable to define the current value as a map as the current ' + 'value is an array.');
        } else if (value instanceof Map) {
          return;
        } else {
          throw new Error('Unable to define the current value as a map as the current ' + 'value is an object.');
        }
      } else {
        throw new Error('Unable to define the current value as a map as the current ' + 'value is a primitive value.');
      }
    }
    /**
    *
    */

  }, {
    key: "swap",
    value: function swap(value) {
      this._stack.set(this._stack.lastIndex, value);
    }
    /**
    *
    */

  }, {
    key: "set",
    value: function set(path, value) {
      Data.setIn(this._stack.last, path, value);
    }
    /**
    *
    */

  }, {
    key: "push",
    value: function push(path, value) {
      Data.pushIn(this._stack.last, path, value);
    }
    /**
    *
    */

  }, {
    key: "publish",
    value: function publish() {
      var result = this._stack.first;

      this._stack.clear();

      this._path.clear();

      this._stack.push(undefined);

      this._output.produce(result);
    }
    /**
    *
    */

  }, {
    key: "handleCompletion",
    value: function handleCompletion() {
      var result = this._stack.first;

      this._stack.clear();

      this._path.clear();

      this._output.produce(result);

      this._output.complete();
    }
    /**
    *
    */

  }, {
    key: "handleFailure",
    value: function handleFailure(error) {
      this._output.fail(error);
    }
    /**
    * @see UnidocProducer.addEventListener
    */

  }, {
    key: "addEventListener",
    value: function addEventListener(event, listener) {
      this._output.addEventListener(event, listener);
    }
    /**
    * @see UnidocProducer.removeEventListener
    */

  }, {
    key: "removeEventListener",
    value: function removeEventListener(event, listener) {
      this._output.removeEventListener(event, listener);
    }
    /**
    * @see UnidocProducer.removeAllEventListener
    */

  }, {
    key: "removeAllEventListener",
    value: function removeAllEventListener() {
      var _this$_output;

      (_this$_output = this._output).removeAllEventListener.apply(_this$_output, arguments);
    }
    /**
    * Update the state of this compiler to make it as if it was just
    * instantiated.
    */

  }, {
    key: "clear",
    value: function clear() {
      this._stack.clear();
    }
  }]);

  return DataEventCompiler;
}(SubscribableUnidocConsumer);
;// CONCATENATED MODULE: ./sources/compilation/data/DataEventProducer.ts
function DataEventProducer_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { DataEventProducer_typeof = function _typeof(obj) { return typeof obj; }; } else { DataEventProducer_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return DataEventProducer_typeof(obj); }

function DataEventProducer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function DataEventProducer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function DataEventProducer_createClass(Constructor, protoProps, staticProps) { if (protoProps) DataEventProducer_defineProperties(Constructor.prototype, protoProps); if (staticProps) DataEventProducer_defineProperties(Constructor, staticProps); return Constructor; }

function DataEventProducer_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { DataEventProducer_get = Reflect.get; } else { DataEventProducer_get = function _get(target, property, receiver) { var base = DataEventProducer_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return DataEventProducer_get(target, property, receiver || target); }

function DataEventProducer_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = DataEventProducer_getPrototypeOf(object); if (object === null) break; } return object; }

function DataEventProducer_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) DataEventProducer_setPrototypeOf(subClass, superClass); }

function DataEventProducer_setPrototypeOf(o, p) { DataEventProducer_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return DataEventProducer_setPrototypeOf(o, p); }

function DataEventProducer_createSuper(Derived) { var hasNativeReflectConstruct = DataEventProducer_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = DataEventProducer_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = DataEventProducer_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return DataEventProducer_possibleConstructorReturn(this, result); }; }

function DataEventProducer_possibleConstructorReturn(self, call) { if (call && (DataEventProducer_typeof(call) === "object" || typeof call === "function")) { return call; } return DataEventProducer_assertThisInitialized(self); }

function DataEventProducer_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function DataEventProducer_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function DataEventProducer_getPrototypeOf(o) { DataEventProducer_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return DataEventProducer_getPrototypeOf(o); }



/**
*
*/

var DataEventProducer = /*#__PURE__*/function (_ListenableUnidocProd) {
  DataEventProducer_inherits(DataEventProducer, _ListenableUnidocProd);

  var _super = DataEventProducer_createSuper(DataEventProducer);

  /**
  *
  */
  function DataEventProducer() {
    var _this;

    DataEventProducer_classCallCheck(this, DataEventProducer);

    _this = _super.call(this);
    _this._index = 0;
    _this._event = new DataEvent();
    return _this;
  }
  /**
  *
  */


  DataEventProducer_createClass(DataEventProducer, [{
    key: "publish",
    value: function publish() {
      this._event.publish();

      this.produce();
      return this;
    }
    /**
    *
    */

  }, {
    key: "object",
    value: function object() {
      this._event.object();

      this.produce();
      return this;
    }
    /**
    *
    */

  }, {
    key: "array",
    value: function array() {
      this._event.array();

      this.produce();
      return this;
    }
    /**
    *
    */

  }, {
    key: "map",
    value: function map() {
      this._event.map();

      this.produce();
      return this;
    }
    /**
    *
    */

  }, {
    key: "swap",
    value: function swap(value) {
      this._event.swap(value);

      this.produce();
      return this;
    }
    /**
    *
    */

  }, {
    key: "move",
    value: function move() {
      var _this$_event;

      (_this$_event = this._event).move.apply(_this$_event, arguments);

      this.produce();
      return this;
    }
    /**
    *
    */

  }, {
    key: "back",
    value: function back() {
      this._event.back();

      this.produce();
      return this;
    }
    /**
    *
    */

  }, {
    key: "set",
    value: function set() {
      var _this$_event2;

      (_this$_event2 = this._event).set.apply(_this$_event2, arguments);

      this.produce();
      return this;
    }
    /**
    *
    */

  }, {
    key: "push",
    value: function push() {
      var _this$_event3;

      (_this$_event3 = this._event).push.apply(_this$_event3, arguments);

      this.produce();
      return this;
    }
    /**
    * @see ListenableUnidocProducer.initialize
    */

  }, {
    key: "initialize",
    value: function initialize() {
      this.clear();

      DataEventProducer_get(DataEventProducer_getPrototypeOf(DataEventProducer.prototype), "initialize", this).call(this);
    }
    /**
    * @see ListenableUnidocProducer.produce
    */

  }, {
    key: "produce",
    value: function produce() {
      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._event;
      event.index = this._index;
      this._index += 1;

      DataEventProducer_get(DataEventProducer_getPrototypeOf(DataEventProducer.prototype), "produce", this).call(this, event);
    }
    /**
    * @see ListenableUnidocProducer.complete
    */

  }, {
    key: "complete",
    value: function complete() {
      DataEventProducer_get(DataEventProducer_getPrototypeOf(DataEventProducer.prototype), "complete", this).call(this);
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this._index = 0;

      this._event.clear();
    }
  }]);

  return DataEventProducer;
}(ListenableUnidocProducer);
;// CONCATENATED MODULE: ./sources/compilation/data/index.ts






// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(757);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);
;// CONCATENATED MODULE: ./sources/symbol/CodePoint.ts
/**
*
*/
var CodePoint;

(function (CodePoint) {
  /**
  *
  */
  CodePoint.MINUS = '-'.codePointAt(0);
  /**
  *
  */

  CodePoint.SHARP = '#'.codePointAt(0);
  /**
  *
  */

  CodePoint.DOT = '.'.codePointAt(0);
  /**
  *
  */

  CodePoint.DOUBLE_DOT = ':'.codePointAt(0);
  /**
  *
  */

  CodePoint.ANTISLASH = '\\'.codePointAt(0);
  /**
  *
  */

  CodePoint.OPENING_BRACE = '{'.codePointAt(0);
  /**
  *
  */

  CodePoint.CLOSING_BRACE = '}'.codePointAt(0);
  /**
  *
  */

  CodePoint.ZERO = '0'.codePointAt(0);
  /**
  *
  */

  CodePoint.ONE = '1'.codePointAt(0);
  /**
  *
  */

  CodePoint.TWO = '2'.codePointAt(0);
  /**
  *
  */

  CodePoint.THREE = '3'.codePointAt(0);
  /**
  *
  */

  CodePoint.FOUR = '4'.codePointAt(0);
  /**
  *
  */

  CodePoint.FIVE = '5'.codePointAt(0);
  /**
  *
  */

  CodePoint.SIX = '6'.codePointAt(0);
  /**
  *
  */

  CodePoint.SEVEN = '7'.codePointAt(0);
  /**
  *
  */

  CodePoint.EIGHT = '8'.codePointAt(0);
  /**
  *
  */

  CodePoint.NINE = '9'.codePointAt(0);
  /**
  *
  */

  CodePoint.NEW_LINE = '\n'.codePointAt(0);
  /**
  *
  */

  CodePoint.CARRIAGE_RETURN = '\r'.codePointAt(0);
  /**
  *
  */

  CodePoint.TABULATION = '\t'.codePointAt(0);
  /**
  *
  */

  CodePoint.FORM_FEED = '\f'.codePointAt(0);
  /**
  *
  */

  CodePoint.DOUBLE_QUOTE = '"'.codePointAt(0);
  /**
  *
  */

  CodePoint.SPACE = ' '.codePointAt(0);
  /**
  *
  */

  CodePoint.a = 'a'.codePointAt(0);
  /**
  *
  */

  CodePoint.b = 'b'.codePointAt(0);
  /**
  *
  */

  CodePoint.c = 'c'.codePointAt(0);
  /**
  *
  */

  CodePoint.d = 'd'.codePointAt(0);
  /**
  *
  */

  CodePoint.e = 'e'.codePointAt(0);
  /**
  *
  */

  CodePoint.f = 'f'.codePointAt(0);
  /**
  *
  */

  CodePoint.g = 'g'.codePointAt(0);
  /**
  *
  */

  CodePoint.h = 'h'.codePointAt(0);
  /**
  *
  */

  CodePoint.i = 'i'.codePointAt(0);
  /**
  *
  */

  CodePoint.j = 'j'.codePointAt(0);
  /**
  *
  */

  CodePoint.k = 'k'.codePointAt(0);
  /**
  *
  */

  CodePoint.l = 'l'.codePointAt(0);
  /**
  *
  */

  CodePoint.m = 'm'.codePointAt(0);
  /**
  *
  */

  CodePoint.n = 'n'.codePointAt(0);
  /**
  *
  */

  CodePoint.o = 'o'.codePointAt(0);
  /**
  *
  */

  CodePoint.p = 'p'.codePointAt(0);
  /**
  *
  */

  CodePoint.q = 'q'.codePointAt(0);
  /**
  *
  */

  CodePoint.r = 'r'.codePointAt(0);
  /**
  *
  */

  CodePoint.s = 's'.codePointAt(0);
  /**
  *
  */

  CodePoint.t = 't'.codePointAt(0);
  /**
  *
  */

  CodePoint.u = 'u'.codePointAt(0);
  /**
  *
  */

  CodePoint.v = 'v'.codePointAt(0);
  /**
  *
  */

  CodePoint.w = 'w'.codePointAt(0);
  /**
  *
  */

  CodePoint.x = 'x'.codePointAt(0);
  /**
  *
  */

  CodePoint.y = 'y'.codePointAt(0);
  /**
  *
  */

  CodePoint.z = 'z'.codePointAt(0);
  /**
  *
  */

  CodePoint.A = 'A'.codePointAt(0);
  /**
  *
  */

  CodePoint.B = 'B'.codePointAt(0);
  /**
  *
  */

  CodePoint.C = 'C'.codePointAt(0);
  /**
  *
  */

  CodePoint.D = 'D'.codePointAt(0);
  /**
  *
  */

  CodePoint.E = 'E'.codePointAt(0);
  /**
  *
  */

  CodePoint.F = 'F'.codePointAt(0);
  /**
  *
  */

  CodePoint.G = 'G'.codePointAt(0);
  /**
  *
  */

  CodePoint.H = 'H'.codePointAt(0);
  /**
  *
  */

  CodePoint.I = 'I'.codePointAt(0);
  /**
  *
  */

  CodePoint.J = 'J'.codePointAt(0);
  /**
  *
  */

  CodePoint.K = 'K'.codePointAt(0);
  /**
  *
  */

  CodePoint.L = 'L'.codePointAt(0);
  /**
  *
  */

  CodePoint.M = 'M'.codePointAt(0);
  /**
  *
  */

  CodePoint.N = 'N'.codePointAt(0);
  /**
  *
  */

  CodePoint.O = 'O'.codePointAt(0);
  /**
  *
  */

  CodePoint.P = 'P'.codePointAt(0);
  /**
  *
  */

  CodePoint.Q = 'Q'.codePointAt(0);
  /**
  *
  */

  CodePoint.R = 'R'.codePointAt(0);
  /**
  *
  */

  CodePoint.S = 'S'.codePointAt(0);
  /**
  *
  */

  CodePoint.T = 'T'.codePointAt(0);
  /**
  *
  */

  CodePoint.U = 'U'.codePointAt(0);
  /**
  *
  */

  CodePoint.V = 'V'.codePointAt(0);
  /**
  *
  */

  CodePoint.W = 'W'.codePointAt(0);
  /**
  *
  */

  CodePoint.X = 'X'.codePointAt(0);
  /**
  *
  */

  CodePoint.Y = 'Y'.codePointAt(0);
  /**
  *
  */

  CodePoint.Z = 'Z'.codePointAt(0);
  /**
  *
  */

  CodePoint.COLON = ':'.codePointAt(0);
  /**
  *
  */

  CodePoint.SEMICOLON = ';'.codePointAt(0);
  /**
  *
  */

  function isDecimalDigit(symbol) {
    return symbol >= CodePoint.ZERO && symbol <= CodePoint.NINE;
  }

  CodePoint.isDecimalDigit = isDecimalDigit;
  /**
  *
  */

  function isBinaryDigit(symbol) {
    return symbol === CodePoint.ZERO || symbol === CodePoint.ONE;
  }

  CodePoint.isBinaryDigit = isBinaryDigit;
  /**
  *
  */

  function isHexadecimalDigit(symbol) {
    return symbol >= CodePoint.ZERO && symbol <= CodePoint.NINE || symbol >= CodePoint.A && symbol <= CodePoint.F || symbol >= CodePoint.a && symbol <= CodePoint.f;
  }

  CodePoint.isHexadecimalDigit = isHexadecimalDigit;
  /**
  *
  */

  function isWhitespace(symbol) {
    return symbol === CodePoint.CARRIAGE_RETURN || symbol === CodePoint.NEW_LINE || symbol === CodePoint.FORM_FEED || symbol === CodePoint.TABULATION || symbol === CodePoint.SPACE;
  }

  CodePoint.isWhitespace = isWhitespace;
  /**
  *
  */

  function toDebugString(symbol) {
    switch (symbol) {
      case CodePoint.CARRIAGE_RETURN:
        return ':r';

      case CodePoint.NEW_LINE:
        return ':n';

      case CodePoint.FORM_FEED:
        return ':f';

      case CodePoint.TABULATION:
        return ':t';

      case CodePoint.SPACE:
        return ':s';

      default:
        return String.fromCodePoint(symbol);
    }
  }

  CodePoint.toDebugString = toDebugString;
})(CodePoint || (CodePoint = {}));
;// CONCATENATED MODULE: ./sources/origin/UnidocOriginElementType.ts
var UnidocOriginElementType;

(function (UnidocOriginElementType) {
  /**
  * The runtime origin describe unidoc elements that are generated from nowhere
  * during the execution of a program.
  */
  UnidocOriginElementType.RUNTIME = 0;
  /**
  * A resource origin describe unidoc elements that are generated from the
  * content of a document described by an unified resource identifier.
  */

  UnidocOriginElementType.RESOURCE = 1;
  /**
  * The buffer origin describe unidoc elements that are generated from the
  * content of a buffer.
  */

  UnidocOriginElementType.BUFFER = 2;
  /**
  * The text origin describe unidoc elements that are generated from the
  * content of a document made of symbols.
  */

  UnidocOriginElementType.TEXT = 3;
  /**
  * The network origin describe unidoc elements that are generated from the
  * content of a network connection.
  */

  UnidocOriginElementType.NETWORK = 4;
  UnidocOriginElementType.ALL = [UnidocOriginElementType.RUNTIME, UnidocOriginElementType.RESOURCE, UnidocOriginElementType.BUFFER, UnidocOriginElementType.TEXT, UnidocOriginElementType.NETWORK];

  function toString(value) {
    switch (value) {
      case UnidocOriginElementType.RUNTIME:
        return 'RUNTIME';

      case UnidocOriginElementType.RESOURCE:
        return 'RESOURCE';

      case UnidocOriginElementType.BUFFER:
        return 'BUFFER';

      case UnidocOriginElementType.TEXT:
        return 'TEXT';

      case UnidocOriginElementType.NETWORK:
        return 'NETWORK';

      default:
        return undefined;
    }
  }

  UnidocOriginElementType.toString = toString;
})(UnidocOriginElementType || (UnidocOriginElementType = {}));
;// CONCATENATED MODULE: ./sources/origin/UnidocBufferOrigin.ts
function UnidocBufferOrigin_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocBufferOrigin_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocBufferOrigin_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocBufferOrigin_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocBufferOrigin_defineProperties(Constructor, staticProps); return Constructor; }


/**
* An object that define a buffer at the origin of a unidoc value.
*/

var UnidocBufferOrigin = /*#__PURE__*/function () {
  /**
  * Instantiate a new buffer origin.
  *
  * @param byte - The location in the buffer at the origin of the unidoc value expressed in bytes.
  */
  function UnidocBufferOrigin(_byte) {
    UnidocBufferOrigin_classCallCheck(this, UnidocBufferOrigin);

    this.type = UnidocOriginElementType.BUFFER;
    this["byte"] = _byte;
  }
  /**
  * @see UnidocOrigin.toString
  */


  UnidocBufferOrigin_createClass(UnidocBufferOrigin, [{
    key: "toString",
    value: function toString() {
      return 'byte ' + this["byte"];
    }
    /**
    * @see UnidocOrigin.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocBufferOrigin) {
        return this.type === other.type && this["byte"] === other["byte"];
      }

      return false;
    }
  }]);

  return UnidocBufferOrigin;
}();

(function (UnidocBufferOrigin) {
  /**
  * Instantiate a new buffer origin.
  *
  * @param byte - The location in the buffer at the origin of the unidoc value expressed in bytes.
  */
  function create(_byte2) {
    return new UnidocBufferOrigin(_byte2);
  }

  UnidocBufferOrigin.create = create;
})(UnidocBufferOrigin || (UnidocBufferOrigin = {}));
;// CONCATENATED MODULE: ./sources/origin/UnidocNetworkOrigin.ts
function UnidocNetworkOrigin_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocNetworkOrigin_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocNetworkOrigin_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocNetworkOrigin_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocNetworkOrigin_defineProperties(Constructor, staticProps); return Constructor; }


/**
* An object that define a distant machine at the origin of a unidoc value.
*/

var UnidocNetworkOrigin = /*#__PURE__*/function () {
  /**
  * Instantiate a new network origin.
  *
  * @param address - Address of the machine at the origin of the unidoc value.
  */
  function UnidocNetworkOrigin(address) {
    UnidocNetworkOrigin_classCallCheck(this, UnidocNetworkOrigin);

    this.type = UnidocOriginElementType.NETWORK;
    this.address = address;
  }
  /**
  * @see UnidocOriginElement.toString
  */


  UnidocNetworkOrigin_createClass(UnidocNetworkOrigin, [{
    key: "toString",
    value: function toString() {
      return this.address;
    }
    /**
    * @see UnidocOriginElement.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocNetworkOrigin) {
        return this.type === other.type && this.address === other.address;
      }

      return false;
    }
  }]);

  return UnidocNetworkOrigin;
}();

(function (UnidocNetworkOrigin) {
  /**
  * Instantiate a new network origin.
  *
  * @param address - Address of the machine at the origin of the unidoc value.
  */
  function create(address) {
    return new UnidocNetworkOrigin(address);
  }

  UnidocNetworkOrigin.create = create;
})(UnidocNetworkOrigin || (UnidocNetworkOrigin = {}));
;// CONCATENATED MODULE: ./sources/origin/UnidocResourceOrigin.ts
function UnidocResourceOrigin_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocResourceOrigin_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocResourceOrigin_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocResourceOrigin_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocResourceOrigin_defineProperties(Constructor, staticProps); return Constructor; }


/**
* An object that define a resource at the origin of a unidoc value.
*/

var UnidocResourceOrigin = /*#__PURE__*/function () {
  /**
  * Instantiate a new resource origin.
  *
  * @param unifiedResourceIdentifier - The unified resource identifier of the resource at the origin of the unidoc value.
  */
  function UnidocResourceOrigin(unifiedResourceIdentifier) {
    UnidocResourceOrigin_classCallCheck(this, UnidocResourceOrigin);

    this.type = UnidocOriginElementType.RESOURCE;
    this.unifiedResourceIdentifier = unifiedResourceIdentifier;
  }
  /**
  * @see UnidocOriginElement.toString
  */


  UnidocResourceOrigin_createClass(UnidocResourceOrigin, [{
    key: "toString",
    value: function toString() {
      return this.unifiedResourceIdentifier;
    }
    /**
    * @see UnidocOriginElement.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocResourceOrigin) {
        return this.type === other.type && this.unifiedResourceIdentifier === other.unifiedResourceIdentifier;
      }

      return false;
    }
  }]);

  return UnidocResourceOrigin;
}();

(function (UnidocResourceOrigin) {
  /**
  * Instantiate a new resource origin.
  *
  * @param unifiedResourceIdentifier - The unified resource identifier of the resource at the origin of the unidoc value.
  */
  function create(unifiedResourceIdentifier) {
    return new UnidocResourceOrigin(unifiedResourceIdentifier);
  }

  UnidocResourceOrigin.create = create;
})(UnidocResourceOrigin || (UnidocResourceOrigin = {}));
;// CONCATENATED MODULE: ./sources/origin/UnidocRuntimeOrigin.ts
function UnidocRuntimeOrigin_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocRuntimeOrigin_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocRuntimeOrigin_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocRuntimeOrigin_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocRuntimeOrigin_defineProperties(Constructor, staticProps); return Constructor; }


/**
* An object that define the execution of a program at the origin of a unidoc value.
*/

var UnidocRuntimeOrigin = /*#__PURE__*/function () {
  /**
  * Instantiate a new runtime origin.
  */
  function UnidocRuntimeOrigin() {
    UnidocRuntimeOrigin_classCallCheck(this, UnidocRuntimeOrigin);

    this.type = UnidocOriginElementType.RUNTIME;
  }
  /**
  * @see UnidocOriginElement.toString
  */


  UnidocRuntimeOrigin_createClass(UnidocRuntimeOrigin, [{
    key: "toString",
    value: function toString() {
      return 'runtime';
    }
    /**
    * @see UnidocOriginElement.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocRuntimeOrigin) {
        return this.type === other.type;
      }

      return false;
    }
  }]);

  return UnidocRuntimeOrigin;
}();

(function (UnidocRuntimeOrigin) {
  UnidocRuntimeOrigin.INSTANCE = new UnidocRuntimeOrigin();
  /**
  * Instantiate a new runtime origin.
  */

  function create() {
    return UnidocRuntimeOrigin.INSTANCE;
  }

  UnidocRuntimeOrigin.create = create;
})(UnidocRuntimeOrigin || (UnidocRuntimeOrigin = {}));
;// CONCATENATED MODULE: ./sources/location/UnidocLocation.ts
function UnidocLocation_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocLocation_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocLocation_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocLocation_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocLocation_defineProperties(Constructor, staticProps); return Constructor; }


/**
* The location of a symbol in a unidoc document.
*/

var UnidocLocation = /*#__PURE__*/function () {
  /**
  * Instantiate a new unidoc location.
  *
  * @param [line = 0] - Document line.
  * @param [column = 0] - Document column.
  * @param [index = 0] - Buffer index.
  */
  function UnidocLocation() {
    var line = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var column = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

    UnidocLocation_classCallCheck(this, UnidocLocation);

    this.column = column;
    this.line = line;
    this.index = index;
  }
  /**
  * Set this location to unknown.
  */


  UnidocLocation_createClass(UnidocLocation, [{
    key: "asUnknown",
    value: function asUnknown() {
      this.column = -1;
      this.line = -1;
      this.index = -1;
    }
    /**
    * @return True if this location is unknown.
    */

  }, {
    key: "isUnknown",
    value: function isUnknown() {
      return this.index === -1;
    }
    /**
    * Update this location by adding the given lines, columns and indices.
    *
    * Adding values to a unknown location let the location unknown.
    *
    * @param line - Lines to add.
    * @param column - Columns to add.
    * @param index - Indices to add.
    */

  }, {
    key: "add",
    value: function add(line, column, index) {
      if (this.index < 0) return;
      this.column += column;
      this.line += line;
      this.index += index;
    }
    /**
    * Update this location by subtracting the given lines, columns and indices.
    *
    * Subtracting values to a unknown location let the location unknown.
    *
    * @param line - Lines to subtract.
    * @param column - Columns to subtract.
    * @param index - Indices to subtract.
    */

  }, {
    key: "subtract",
    value: function subtract(line, column, index) {
      if (this.index < 0) return;
      this.column = Math.max(this.column - column, 0);
      this.line = Math.max(this.line - line, 0);
      this.index = Math.max(this.index - index, 0);
    }
    /**
    * Update this location.
    *
    * @param line - Document line.
    * @param column - Document column.
    * @param index - Buffer index.
    */

  }, {
    key: "set",
    value: function set(line, column, index) {
      this.column = column;
      this.line = line;
      this.index = index;
    }
    /**
    * @return A copy of this location.
    */

  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocLocation();
      result.copy(this);
      return result;
    }
    /**
    * Copy another location.
    *
    * @param toCopy - Another instance to copy.
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.column = toCopy.column;
      this.line = toCopy.line;
      this.index = toCopy.index;
    }
    /**
    * Reset this instance in order to reuse-it.
    */

  }, {
    key: "clear",
    value: function clear() {
      this.column = 0;
      this.line = 0;
      this.index = 0;
    }
    /**
    * @see Object#toString
    */

  }, {
    key: "toString",
    value: function toString() {
      return this.index < 0 ? 'unknown' : "".concat(this.line, ":").concat(this.column, "/").concat(this.index);
    }
    /**
    * @see Object#equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocLocation) {
        return other.index === -1 && this.index === -1 || other.line === this.line && other.column === this.column && other.index === this.index;
      }

      return false;
    }
  }]);

  return UnidocLocation;
}();
/**
* 0:0 location.
*/

UnidocLocation.ZERO = new UnidocLocation(0, 0, 0);
/**
* Unknown location.
*/

UnidocLocation.UNKNOWN = new UnidocLocation(-1, -1, -1);

(function (UnidocLocation) {
  var STRING_MATCHER = /\(?\s*(\d+)\s*,?\s*(\d+)\s*,?\s*(\d+)\s*\)?/i;

  function create() {
    var line = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var column = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    return new UnidocLocation(line, column, index);
  }

  UnidocLocation.create = create;

  function fromString(value) {
    var match = STRING_MATCHER.exec(value);

    if (match) {
      return new UnidocLocation(parseInt(match[1]), parseInt(match[2]), parseInt(match[3]));
    } else {
      throw new Error('Unable to extract an unidoc location from "' + value + '".');
    }
  }

  UnidocLocation.fromString = fromString;

  function copy(toCopy) {
    return toCopy == null ? toCopy : toCopy.clone();
  }

  UnidocLocation.copy = copy;
  UnidocLocation.ALLOCATOR = gl_tool_collection_.Duplicator.fromFactory(create);
})(UnidocLocation || (UnidocLocation = {}));
;// CONCATENATED MODULE: ./sources/origin/UnidocTextOrigin.ts
function UnidocTextOrigin_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocTextOrigin_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocTextOrigin_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocTextOrigin_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocTextOrigin_defineProperties(Constructor, staticProps); return Constructor; }



/**
* An object that define a text at the origin of a unidoc value.
*/

var UnidocTextOrigin = /*#__PURE__*/function () {
  function UnidocTextOrigin() {
    UnidocTextOrigin_classCallCheck(this, UnidocTextOrigin);

    this.type = UnidocOriginElementType.TEXT;

    if ((arguments.length <= 0 ? undefined : arguments[0]) instanceof UnidocLocation) {
      var location = arguments.length <= 0 ? undefined : arguments[0];
      this.line = location.line;
      this.column = location.column;
      this.index = location.index;
    } else {
      this.line = arguments.length <= 0 ? undefined : arguments[0];
      this.column = arguments.length <= 1 ? undefined : arguments[1];
      this.index = arguments.length <= 2 ? undefined : arguments[2];
    }
  }
  /**
  * @see UnidocOriginElement.toString
  */


  UnidocTextOrigin_createClass(UnidocTextOrigin, [{
    key: "toString",
    value: function toString() {
      return 'index ' + this.index + ' at line ' + this.line + ' and column ' + this.column;
    }
    /**
    * @see UnidocOriginElement.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocTextOrigin) {
        return this.type === other.type && this.index === other.index && this.line === other.line && this.column === other.column;
      }

      return false;
    }
  }]);

  return UnidocTextOrigin;
}();

(function (UnidocTextOrigin) {
  function create(a, b, c) {
    return new UnidocTextOrigin(a, b, c);
  }

  UnidocTextOrigin.create = create;
})(UnidocTextOrigin || (UnidocTextOrigin = {}));
;// CONCATENATED MODULE: ./sources/origin/UnidocOriginElement.ts





var UnidocOriginElement;

(function (UnidocOriginElement) {
  UnidocOriginElement.buffer = UnidocBufferOrigin.create;
  UnidocOriginElement.network = UnidocNetworkOrigin.create;
  UnidocOriginElement.resource = UnidocResourceOrigin.create;
  UnidocOriginElement.runtime = UnidocRuntimeOrigin.create;
  UnidocOriginElement.text = UnidocTextOrigin.create;
})(UnidocOriginElement || (UnidocOriginElement = {}));
;// CONCATENATED MODULE: ./sources/origin/UnidocOrigin.ts
function UnidocOrigin_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocOrigin_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocOrigin_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocOrigin_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocOrigin_defineProperties(Constructor, staticProps); return Constructor; }



var UnidocOrigin = /*#__PURE__*/function () {
  function UnidocOrigin() {
    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;

    UnidocOrigin_classCallCheck(this, UnidocOrigin);

    this.elements = gl_tool_collection_.Pack.any(capacity);
  }

  UnidocOrigin_createClass(UnidocOrigin, [{
    key: "reallocate",
    value: function reallocate(capacity) {
      this.elements.reallocate(capacity);
    }
  }, {
    key: "text",
    value: function text(a, b, c) {
      this.elements.push(UnidocOriginElement.text(a, b, c));
      return this;
    }
  }, {
    key: "buffer",
    value: function buffer(_byte) {
      this.elements.push(UnidocOriginElement.buffer(_byte));
      return this;
    }
  }, {
    key: "resource",
    value: function resource(unifiedResourceIdentifier) {
      this.elements.push(UnidocOriginElement.resource(unifiedResourceIdentifier));
      return this;
    }
  }, {
    key: "network",
    value: function network(address) {
      this.elements.push(UnidocOriginElement.network(address));
      return this;
    }
  }, {
    key: "runtime",
    value: function runtime() {
      this.elements.push(UnidocOriginElement.runtime());
      return this;
    }
  }, {
    key: "concat",
    value: function concat(toCopy) {
      this.elements.concat(toCopy.elements);
    }
  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.elements.copy(toCopy.elements);
    }
  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocOrigin(this.elements.capacity);
      result.copy(this);
      return result;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.elements.clear();
    }
    /**
    * @see Object.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      if (this.elements.size > 0) {
        var result = this.elements.first.toString();

        for (var index = 1; index < this.elements.size; ++index) {
          result += ' at ' + this.elements.get(index).toString();
        }

        return result;
      } else {
        return 'undefined origin';
      }
    }
    /**
    * @see Object.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocOrigin) {
        return other.elements.equals(this.elements);
      }

      return false;
    }
  }]);

  return UnidocOrigin;
}();

(function (UnidocOrigin) {
  UnidocOrigin.Element = UnidocOriginElement;
  UnidocOrigin.RUNTIME = new UnidocOrigin(1).runtime();

  function runtime() {
    return UnidocOrigin.RUNTIME;
  }

  UnidocOrigin.runtime = runtime;
})(UnidocOrigin || (UnidocOrigin = {}));
;// CONCATENATED MODULE: ./sources/origin/UnidocRangeOriginBuilder.ts
function UnidocRangeOriginBuilder_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocRangeOriginBuilder_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocRangeOriginBuilder_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocRangeOriginBuilder_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocRangeOriginBuilder_defineProperties(Constructor, staticProps); return Constructor; }


/**
* An object that define a continuity between two origins as the origin of a unidoc value.
*/

var UnidocRangeOriginBuilder = /*#__PURE__*/function () {
  /**
  * Instantiate a new builder.
  *
  * @param [capacity = 8] - Starting capacity of the range origin to build.
  */
  function UnidocRangeOriginBuilder() {
    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;

    UnidocRangeOriginBuilder_classCallCheck(this, UnidocRangeOriginBuilder);

    this.state = new UnidocRangeOrigin(capacity);
    this._builtOrigin = this.state.from;
  }
  /**
  * Update the capacity of the underlying range origin.
  *
  * @param capacity - The new capacity of the underlying range origin.
  *
  * @return This builder instance for chaining purposes.
  */


  UnidocRangeOriginBuilder_createClass(UnidocRangeOriginBuilder, [{
    key: "capacity",
    value: function capacity(_capacity) {
      this.state.reallocate(_capacity);
      return this;
    }
  }, {
    key: "from",
    value: function from(value) {
      if (value) {
        this.state.from.copy(value);
      } else {
        this._builtOrigin = this.state.from;
      }

      return this;
    }
  }, {
    key: "to",
    value: function to(value) {
      if (value) {
        this.state.to.copy(value);
      } else {
        this._builtOrigin = this.state.to;
      }

      return this;
    }
    /**
    * Add a runtime element to the part of the underlying range origin that is
    * currently built.
    *
    * @see UnidocOrigin.runtime
    *
    * @return This builder instance for chaining purposes.
    */

  }, {
    key: "runtime",
    value: function runtime() {
      this._builtOrigin.runtime();

      return this;
    }
  }, {
    key: "text",
    value: function text(a, b, c) {
      this._builtOrigin.text(a, b, c);

      return this;
    }
    /**
    * Add a buffer element to the part of the underlying range origin that is
    * currently built.
    *
    * @see UnidocOrigin.buffer
    *
    * @return This builder instance for chaining purposes.
    */

  }, {
    key: "buffer",
    value: function buffer(_byte) {
      this._builtOrigin.buffer(_byte);

      return this;
    }
    /**
    * Add a resource element to the part of the underlying range origin that is
    * currently built.
    *
    * @see UnidocOrigin.resource
    *
    * @return This builder instance for chaining purposes.
    */

  }, {
    key: "resource",
    value: function resource(unifiedResourceIdentifier) {
      this._builtOrigin.resource(unifiedResourceIdentifier);

      return this;
    }
    /**
    * Add a network element to the part of the underlying range origin that is
    * currently built.
    *
    * @see UnidocOrigin.network
    *
    * @return This builder instance for chaining purposes.
    */

  }, {
    key: "network",
    value: function network(address) {
      this._builtOrigin.network(address);

      return this;
    }
    /**
    * Do nothing but may help to make things fancier.
    *
    * @return This builder instance for chaining purposes.
    */

  }, {
    key: "at",
    value: function at() {
      return this;
    }
  }, {
    key: "copy",
    value: function copy(toCopy) {
      if (toCopy instanceof UnidocRangeOrigin) {
        this.state.copy(toCopy);
      } else if (toCopy instanceof UnidocRangeOriginBuilder) {
        this.state.copy(toCopy.state);
      } else {
        this._builtOrigin.copy(toCopy);
      }

      return this;
    }
  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocRangeOriginBuilder();
      result.copy(this);
      return result;
    }
    /**
    * Clear this builder.
    *
    * @return This builder instance for chaining purposes.
    */

  }, {
    key: "clear",
    value: function clear() {
      this.state.clear();
      return this;
    }
  }, {
    key: "build",
    value: function build() {
      var result = this.state.clone();
      this.state.clear();
      return result;
    }
    /**
    * @see Object.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocRangeOriginBuilder) {
        return this.state.equals(other.state);
      }

      return false;
    }
  }]);

  return UnidocRangeOriginBuilder;
}();

(function (UnidocRangeOriginBuilder) {
  /**
  * Instantiate a new range origin.
  */
  function create() {
    return new UnidocRangeOriginBuilder();
  }

  UnidocRangeOriginBuilder.create = create;
})(UnidocRangeOriginBuilder || (UnidocRangeOriginBuilder = {}));
;// CONCATENATED MODULE: ./sources/origin/UnidocRangeOrigin.ts
function UnidocRangeOrigin_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocRangeOrigin_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocRangeOrigin_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocRangeOrigin_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocRangeOrigin_defineProperties(Constructor, staticProps); return Constructor; }



/**
* An object that define a continuity between two origins as the origin of a unidoc value.
*/

var UnidocRangeOrigin = /*#__PURE__*/function () {
  function UnidocRangeOrigin() {
    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;

    UnidocRangeOrigin_classCallCheck(this, UnidocRangeOrigin);

    this.from = new UnidocOrigin(capacity);
    this.to = new UnidocOrigin(capacity);
  }

  UnidocRangeOrigin_createClass(UnidocRangeOrigin, [{
    key: "reallocate",
    value: function reallocate(capacity) {
      this.from.reallocate(capacity);
      this.to.reallocate(capacity);
    }
  }, {
    key: "runtime",
    value: function runtime() {
      this.from.runtime();
      this.to.runtime();
      return this;
    }
  }, {
    key: "at",
    value: function at(origin) {
      this.from.copy(origin);
      this.to.copy(origin);
      return this;
    }
  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.from.copy(toCopy.from);
      this.to.copy(toCopy.to);
    }
  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocRangeOrigin();
      result.copy(this);
      return result;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.from.clear();
      this.to.clear();
    }
    /**
    * @see Object.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      if (this.from.equals(this.to)) {
        return this.from.toString();
      } else {
        return 'from ' + this.from.toString() + ' to ' + this.to.toString();
      }
    }
    /**
    * @see Object.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocRangeOrigin) {
        return this.from.equals(other.from) && this.to.equals(other.to);
      }

      return false;
    }
  }]);

  return UnidocRangeOrigin;
}();

(function (UnidocRangeOrigin) {
  /**
  * Instantiate a new range origin.
  */
  function create() {
    return new UnidocRangeOrigin();
  }

  UnidocRangeOrigin.create = create;
  UnidocRangeOrigin.RUNTIME = new UnidocRangeOrigin(1).runtime();

  function runtime() {
    return UnidocRangeOrigin.RUNTIME;
  }

  UnidocRangeOrigin.runtime = runtime;
  /**
  * Instantiate a new unidoc range origin builder and return it.
  *
  * @param [capacity = 8] - Initial capacity of the range origin to build.
  *
  * @return An unidoc range origin builder instance.
  */

  function builder() {
    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;
    return new UnidocRangeOriginBuilder(capacity);
  }

  UnidocRangeOrigin.builder = builder;
})(UnidocRangeOrigin || (UnidocRangeOrigin = {}));
;// CONCATENATED MODULE: ./sources/event/UnidocEvent.ts
function UnidocEvent_toConsumableArray(arr) { return UnidocEvent_arrayWithoutHoles(arr) || UnidocEvent_iterableToArray(arr) || UnidocEvent_unsupportedIterableToArray(arr) || UnidocEvent_nonIterableSpread(); }

function UnidocEvent_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function UnidocEvent_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function UnidocEvent_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return UnidocEvent_arrayLikeToArray(arr); }

function UnidocEvent_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = UnidocEvent_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function UnidocEvent_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return UnidocEvent_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return UnidocEvent_arrayLikeToArray(o, minLen); }

function UnidocEvent_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function UnidocEvent_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocEvent_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocEvent_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocEvent_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocEvent_defineProperties(Constructor, staticProps); return Constructor; }






var TAG_EVENT_CONFIGURATION = /^([a-zA-Z0-9\-]+)(#[a-zA-Z0-9\-]+)?((?:\.[a-zA-Z0-9\-]+)+)?$/i;
var EMPTY_STRING = '';
/**
* A unidoc event.
*/

var UnidocEvent = /*#__PURE__*/function () {
  /**
  * Instantiate a new unidoc event.
  */
  function UnidocEvent() {
    UnidocEvent_classCallCheck(this, UnidocEvent);

    this.index = 0;
    this.type = UnidocEventType.START_TAG;
    this.tag = EMPTY_STRING;
    this.identifier = EMPTY_STRING;
    this.classes = new Set();
    this.symbols = gl_tool_collection_.Pack.uint32(128);
    this.origin = new UnidocRangeOrigin().runtime();
  }
  /**
  * @return This token as a javascript string.
  */


  UnidocEvent_createClass(UnidocEvent, [{
    key: "substring",

    /**
    * A part of this token as a javascript string.
    *
    * @param start - Number of symbols of this token to skip.
    * @param [length = this.symbols.size - start] - Number of symbols of this token to keep.
    *
    * @return The requested part of this token as a string.
    */
    value: function substring(start) {
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.symbols.size - start;
      var buffer = [];
      var from = start;
      var to = start + length;

      for (var index = from; index < to; ++index) {
        buffer.push(this.symbols.get(index));
      }

      return String.fromCodePoint.apply(String, buffer);
    }
    /**
    * @return This token as a string without invisible symbols.
    */

  }, {
    key: "isStartOfAnyTag",

    /**
    *
    */
    value: function isStartOfAnyTag() {
      return this.type === UnidocEventType.START_TAG;
    }
    /**
    *
    */

  }, {
    key: "isStartOfTag",
    value: function isStartOfTag(tag) {
      return this.type === UnidocEventType.START_TAG && this.tag === tag;
    }
    /**
    *
    */

  }, {
    key: "isEndOfAnyTag",
    value: function isEndOfAnyTag() {
      return this.type === UnidocEventType.END_TAG;
    }
    /**
    *
    */

  }, {
    key: "isEndOfTag",
    value: function isEndOfTag(tag) {
      return this.type === UnidocEventType.END_TAG && this.tag === tag;
    }
    /**
    *
    */

  }, {
    key: "isWhitespace",
    value: function isWhitespace() {
      return this.type === UnidocEventType.WHITESPACE;
    }
    /**
    *
    */

  }, {
    key: "isWord",
    value: function isWord() {
      return this.type === UnidocEventType.WORD;
    }
    /**
    *
    */

  }, {
    key: "ofIndex",
    value: function ofIndex(index) {
      this.index = index;
      return this;
    }
    /**
    * Configure this event as a new word event.
    *
    * @param content - Content of the resulting event.
    */

  }, {
    key: "asWord",
    value: function asWord(content) {
      this.identifier = EMPTY_STRING;
      this.tag = EMPTY_STRING;
      this.classes.clear();
      this.type = UnidocEventType.WORD;
      this.text = content;
    }
    /**
    * Configure this event as a new whitespace event.
    *
    * @param content - Content of the resulting event.
    */

  }, {
    key: "asWhitespace",
    value: function asWhitespace(content) {
      this.identifier = EMPTY_STRING;
      this.tag = EMPTY_STRING;
      this.classes.clear();
      this.type = UnidocEventType.WHITESPACE;
      this.text = content;
    }
    /**
    * Configure this event as a new starting tag event.
    *
    * @param configuration - Type, identifiers and classes of the resulting tag.
    */

  }, {
    key: "asTagStart",
    value: function asTagStart(configuration) {
      this.symbols.clear();
      this.classes.clear();
      this.type = UnidocEventType.START_TAG;
      this.tag = EMPTY_STRING;
      this.identifier = EMPTY_STRING;
      var tokens = TAG_EVENT_CONFIGURATION.exec(configuration);

      if (tokens != null) {
        this.tag = tokens[1];
        this.identifier = tokens[2] == null ? EMPTY_STRING : tokens[2].substring(1);

        if (tokens[3] != null) {
          var _iterator = UnidocEvent_createForOfIteratorHelper(tokens[3].substring(1).split('.')),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var token = _step.value;
              this.classes.add(token);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        }
      }
    }
    /**
    * Configure this event as a new ending tag event.
    *
    * @param configuration - Type, identifiers and classes of the resulting tag.
    */

  }, {
    key: "asTagEnd",
    value: function asTagEnd(configuration) {
      this.symbols.clear();
      this.classes.clear();
      this.type = UnidocEventType.END_TAG;
      this.tag = EMPTY_STRING;
      this.identifier = EMPTY_STRING;
      var tokens = TAG_EVENT_CONFIGURATION.exec(configuration);

      if (tokens != null) {
        this.tag = tokens[1];
        this.identifier = tokens[2] == null ? EMPTY_STRING : tokens[2].substring(1);

        if (tokens[3] != null) {
          var _iterator2 = UnidocEvent_createForOfIteratorHelper(tokens[3].substring(1).split('.')),
              _step2;

          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              var token = _step2.value;
              this.classes.add(token);
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
        }
      }
    }
    /**
    * Add the given classes to this event set of classes.
    *
    * @param classes - An iterable of classes to add to this event set of classes.
    */

  }, {
    key: "addClasses",
    value: function addClasses(classes) {
      var _iterator3 = UnidocEvent_createForOfIteratorHelper(classes),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var clazz = _step3.value;
          this.classes.add(clazz);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }
    /**
    * Deep copy an existing instance.
    *
    * @param toCopy - An instance to copy.
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.index = toCopy.index;
      this.type = toCopy.type;
      this.tag = toCopy.tag;
      this.identifier = toCopy.identifier;
      this.symbols.copy(toCopy.symbols);
      this.origin.copy(toCopy.origin);
      this.classes.clear();

      var _iterator4 = UnidocEvent_createForOfIteratorHelper(toCopy.classes),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var clazz = _step4.value;
          this.classes.add(clazz);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }
    /**
    * @return A deep copy of this event.
    */

  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocEvent();
      result.copy(this);
      return result;
    }
    /**
    * Reset this event instance in order to reuse it.
    */

  }, {
    key: "clear",
    value: function clear() {
      this.index = 0;
      this.type = UnidocEventType.START_TAG;
      this.tag = EMPTY_STRING;
      this.identifier = EMPTY_STRING;
      this.origin.clear();
      this.origin.runtime();
      this.classes.clear();
      this.symbols.clear();
    }
    /**
    * @see Object.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      var result = '';
      result += this.index;
      result += ' ';
      result += UnidocEventType.toString(this.type);
      result += ' ';
      result += this.origin.toString();

      if (this.tag.length > 0) {
        result += ' \\';
        result += this.tag;
      }

      if (this.identifier.length > 0) {
        result += ' #';
        result += this.identifier;
      }

      if (this.classes.size > 0) {
        result += ' ';

        var _iterator5 = UnidocEvent_createForOfIteratorHelper(this.classes),
            _step5;

        try {
          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
            var clazz = _step5.value;
            result += '.';
            result += clazz;
          }
        } catch (err) {
          _iterator5.e(err);
        } finally {
          _iterator5.f();
        }
      }

      if (this.symbols.size > 0) {
        result += ' "';
        result += this.debugText;
        result += '"';
      }

      return result;
    }
    /**
    * @see Object.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocEvent) {
        if (other.index !== this.index || other.type !== this.type || other.classes.size !== this.classes.size || other.identifier !== this.identifier || other.tag !== this.tag || !other.origin.equals(this.origin)) {
          return false;
        }

        var _iterator6 = UnidocEvent_createForOfIteratorHelper(other.classes),
            _step6;

        try {
          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
            var clazz = _step6.value;

            if (!this.classes.has(clazz)) {
              return false;
            }
          }
        } catch (err) {
          _iterator6.e(err);
        } finally {
          _iterator6.f();
        }

        return this.symbols.equals(other.symbols);
      }

      return false;
    }
  }, {
    key: "text",
    get: function get() {
      return String.fromCodePoint.apply(String, UnidocEvent_toConsumableArray(this.symbols));
    }
    /**
    * Update the content associated to this event.
    *
    * @param content - The new content associated to this event.
    */
    ,
    set: function set(content) {
      this.symbols.clear();
      this.symbols.size = content.length;

      for (var index = 0; index < content.length; ++index) {
        // no undefined code point due to boundary limit
        this.symbols.set(index, content.codePointAt(index));
      }
    }
  }, {
    key: "debugText",
    get: function get() {
      var buffer = [];

      var _iterator7 = UnidocEvent_createForOfIteratorHelper(this.symbols),
          _step7;

      try {
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
          var codePoint = _step7.value;

          switch (codePoint) {
            case CodePoint.NEW_LINE:
              buffer.push(CodePoint.COLON);
              buffer.push(CodePoint.n);
              break;

            case CodePoint.CARRIAGE_RETURN:
              buffer.push(CodePoint.COLON);
              buffer.push(CodePoint.r);
              break;

            case CodePoint.TABULATION:
              buffer.push(CodePoint.COLON);
              buffer.push(CodePoint.t);
              break;

            case CodePoint.SPACE:
              buffer.push(CodePoint.COLON);
              buffer.push(CodePoint.s);
              break;

            case CodePoint.FORM_FEED:
              buffer.push(CodePoint.COLON);
              buffer.push(CodePoint.f);
              break;

            default:
              buffer.push(codePoint);
              break;
          }
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }

      return String.fromCodePoint.apply(String, buffer);
    }
  }]);

  return UnidocEvent;
}();

(function (UnidocEvent) {
  /**
  * Create a new unidoc event.
  */
  function create() {
    return new UnidocEvent();
  }

  UnidocEvent.create = create;
  /**
  * Create a word unidoc event.
  */

  function word(content) {
    var result = new UnidocEvent();
    result.asWord(content);
    return result;
  }

  UnidocEvent.word = word;
  /**
  * Create a whitespace unidoc event.
  */

  function whitespace(content) {
    var result = new UnidocEvent();
    result.asWhitespace(content);
    return result;
  }

  UnidocEvent.whitespace = whitespace;
  /**
  * Create a tag start unidoc event.
  */

  function tagStart(configuration) {
    var result = new UnidocEvent();
    result.asTagStart(configuration);
    return result;
  }

  UnidocEvent.tagStart = tagStart;
  /**
  * Create a tag end unidoc event.
  */

  function tagEnd(configuration) {
    var result = new UnidocEvent();
    result.asTagEnd(configuration);
    return result;
  }

  UnidocEvent.tagEnd = tagEnd;

  function copy(toCopy) {
    return toCopy == null ? toCopy : toCopy.clone();
  }

  UnidocEvent.copy = copy;
  UnidocEvent.ALLOCATOR = gl_tool_collection_.Duplicator.fromFactory(create);
  /**
  * Return true if both object instances are equals.
  *
  * @param left - The first operand.
  * @param right - The second operand.
  *
  * @return True if both operand are equals.
  */

  function equals(left, right) {
    return left == null ? left == right : left.equals(right);
  }

  UnidocEvent.equals = equals;
})(UnidocEvent || (UnidocEvent = {}));
;// CONCATENATED MODULE: ./sources/compilation/reduction/UnidocReductionInputType.ts
var UnidocReductionInputType;

(function (UnidocReductionInputType) {
  /**
  *
  */
  UnidocReductionInputType.START = 0;
  /**
  *
  */

  UnidocReductionInputType.EVENT = 1;
  /**
  *
  */

  UnidocReductionInputType.GROUP_START = 2;
  /**
  *
  */

  UnidocReductionInputType.GROUP_END = 3;
  /**
  *
  */

  UnidocReductionInputType.END = 4;
  /**
  *
  */

  UnidocReductionInputType.ALL = [UnidocReductionInputType.START, UnidocReductionInputType.EVENT, UnidocReductionInputType.GROUP_START, UnidocReductionInputType.GROUP_END, UnidocReductionInputType.END];
  /**
  *
  */

  UnidocReductionInputType.DEFAULT = UnidocReductionInputType.START;
  /**
  *
  */

  function toString(type) {
    switch (type) {
      case UnidocReductionInputType.START:
        return 'START';

      case UnidocReductionInputType.EVENT:
        return 'EVENT';

      case UnidocReductionInputType.GROUP_START:
        return 'GROUP_START';

      case UnidocReductionInputType.GROUP_END:
        return 'GROUP_END';

      case UnidocReductionInputType.END:
        return 'END';

      default:
        return undefined;
    }
  }

  UnidocReductionInputType.toString = toString;
  /**
  *
  */

  function toDebugString(value) {
    return '#' + value + ' (' + (toString(value) || 'undefined') + ')';
  }

  UnidocReductionInputType.toDebugString = toDebugString;
})(UnidocReductionInputType || (UnidocReductionInputType = {}));
;// CONCATENATED MODULE: ./sources/compilation/reduction/UnidocReductionInput.ts
function UnidocReductionInput_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocReductionInput_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocReductionInput_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocReductionInput_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocReductionInput_defineProperties(Constructor, staticProps); return Constructor; }





var UnidocReductionInput = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocReductionInput() {
    UnidocReductionInput_classCallCheck(this, UnidocReductionInput);

    this.type = UnidocReductionInputType.DEFAULT;
    this.event = new UnidocEvent();
    this.group = undefined;
  }
  /**
  *
  */


  UnidocReductionInput_createClass(UnidocReductionInput, [{
    key: "isStart",
    value: function isStart() {
      return this.type === UnidocReductionInputType.START;
    }
    /**
    *
    */

  }, {
    key: "isEnd",
    value: function isEnd() {
      return this.type === UnidocReductionInputType.END;
    }
    /**
    *
    */

  }, {
    key: "isEvent",
    value: function isEvent() {
      return this.type === UnidocReductionInputType.EVENT;
    }
    /**
    *
    */

  }, {
    key: "isWhitespace",
    value: function isWhitespace() {
      return this.type === UnidocReductionInputType.EVENT && this.event.type === UnidocEventType.WHITESPACE;
    }
    /**
    *
    */

  }, {
    key: "isWord",
    value: function isWord(content) {
      return this.type === UnidocReductionInputType.EVENT && this.event.type === UnidocEventType.WORD && this.event.text === content;
    }
    /**
    *
    */

  }, {
    key: "isAnyWord",
    value: function isAnyWord() {
      return this.type === UnidocReductionInputType.EVENT && this.event.type === UnidocEventType.WORD;
    }
    /**
    *
    */

  }, {
    key: "isStartOfTag",
    value: function isStartOfTag(tag) {
      return this.type === UnidocReductionInputType.EVENT && this.event.type === UnidocEventType.START_TAG && this.event.tag === tag;
    }
    /**
    *
    */

  }, {
    key: "isEndOfTag",
    value: function isEndOfTag(tag) {
      return this.type === UnidocReductionInputType.EVENT && this.event.type === UnidocEventType.END_TAG && this.event.tag === tag;
    }
    /**
    *
    */

  }, {
    key: "isStartOfAnyTag",
    value: function isStartOfAnyTag() {
      return this.type === UnidocReductionInputType.EVENT && this.event.type === UnidocEventType.START_TAG;
    }
    /**
    *
    */

  }, {
    key: "isEndOfAnyTag",
    value: function isEndOfAnyTag() {
      return this.type === UnidocReductionInputType.EVENT && this.event.type === UnidocEventType.END_TAG;
    }
    /**
    *
    */

  }, {
    key: "isStartOfAnyGroup",
    value: function isStartOfAnyGroup() {
      return this.type === UnidocReductionInputType.GROUP_START;
    }
    /**
    *
    */

  }, {
    key: "isStartOfGroup",
    value: function isStartOfGroup(group) {
      return this.type === UnidocReductionInputType.GROUP_START && this.group === group;
    }
    /**
    *
    */

  }, {
    key: "isEndOfAnyGroup",
    value: function isEndOfAnyGroup() {
      return this.type === UnidocReductionInputType.GROUP_END;
    }
    /**
    *
    */

  }, {
    key: "isEndOfGroup",
    value: function isEndOfGroup(group) {
      return this.type === UnidocReductionInputType.GROUP_END && this.group === group;
    }
    /**
    *
    */

  }, {
    key: "asStart",
    value: function asStart() {
      this.type = UnidocReductionInputType.START;
      this.event.clear();
      this.group = undefined;
      return this;
    }
    /**
    *
    */

  }, {
    key: "asEvent",
    value: function asEvent(event) {
      this.type = UnidocReductionInputType.EVENT;
      this.event.copy(event);
      this.group = undefined;
      return this;
    }
    /**
    *
    */

  }, {
    key: "asGroupStart",
    value: function asGroupStart(group) {
      this.type = UnidocReductionInputType.GROUP_START;
      this.event.clear();
      this.group = group;
      return this;
    }
    /**
    *
    */

  }, {
    key: "asGroupEnd",
    value: function asGroupEnd(group) {
      this.type = UnidocReductionInputType.GROUP_END;
      this.event.clear();
      this.group = group;
      return this;
    }
    /**
    *
    */

  }, {
    key: "asEnd",
    value: function asEnd() {
      this.type = UnidocReductionInputType.END;
      this.event.clear();
      this.group = undefined;
      return this;
    }
    /**
    *
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.type = toCopy.type;
      this.event.copy(toCopy.event);
      this.group = toCopy.group;
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this.type = UnidocReductionInputType.DEFAULT;
      this.event.clear();
      this.group = undefined;
    }
    /**
    *
    */

  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocReductionInput();
      result.copy(this);
      return result;
    }
    /**
    *
    */

  }, {
    key: "toString",
    value: function toString() {
      var result = this.constructor.name;
      result += ' ';
      result += UnidocReductionInputType.toDebugString(this.type);

      switch (this.type) {
        case UnidocReductionInputType.START:
        case UnidocReductionInputType.END:
          return result;

        case UnidocReductionInputType.EVENT:
          return result + ' ' + this.event.toString();

        case UnidocReductionInputType.GROUP_START:
        case UnidocReductionInputType.GROUP_END:
          return result + ' ' + this.group;

        default:
          throw new Error('Unable to stringify reduction event of type ' + UnidocReductionInputType.toDebugString(this.type) + ' ' + 'because no procedure was defined for that.');
      }
    }
    /**
    *
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocReductionInput) {
        return other.type === this.type && other.event.equals(this.event) && other.group === this.group;
      }

      return false;
    }
  }]);

  return UnidocReductionInput;
}();

(function (UnidocReductionInput) {
  /**
  *
  */
  UnidocReductionInput.START = new UnidocReductionInput().asStart();
  /**
  *
  */

  UnidocReductionInput.END = new UnidocReductionInput().asEnd();
  /**
  *
  */

  function create() {
    return new UnidocReductionInput();
  }

  UnidocReductionInput.create = create;
  /**
  *
  */

  function event(event) {
    return new UnidocReductionInput().asEvent(event);
  }

  UnidocReductionInput.event = event;

  function copy(toCopy) {
    return toCopy == null ? toCopy : toCopy.clone();
  }

  UnidocReductionInput.copy = copy;
  /**
  *
  */

  UnidocReductionInput.ALLOCATOR = gl_tool_collection_.Allocator.fromFactory(create);
  /**
  * Return true if both object instances are equals.
  *
  * @param left - The first operand.
  * @param right - The second operand.
  *
  * @return True if both operand are equals.
  */

  function equals(left, right) {
    return left == null ? left == right : left.equals(right);
  }

  UnidocReductionInput.equals = equals;
})(UnidocReductionInput || (UnidocReductionInput = {}));
;// CONCATENATED MODULE: ./sources/compilation/reduction/UnidocReductionRequest.ts
var UnidocReductionRequest;

(function (UnidocReductionRequest) {
  /**
  *
  */
  UnidocReductionRequest.CURRENT = 0;
  /**
  *
  */

  UnidocReductionRequest.NEXT = 1;
  /**
  *
  */

  UnidocReductionRequest.ALL = [UnidocReductionRequest.CURRENT, UnidocReductionRequest.NEXT];
  /**
  *
  */

  UnidocReductionRequest.DEFAULT = UnidocReductionRequest.CURRENT;
  /**
  *
  */

  function toString(type) {
    switch (type) {
      case UnidocReductionRequest.CURRENT:
        return 'CURRENT';

      case UnidocReductionRequest.NEXT:
        return 'NEXT';

      default:
        return undefined;
    }
  }

  UnidocReductionRequest.toString = toString;
  /**
  *
  */

  function toDebugString(value) {
    return '#' + value + ' (' + (toString(value) || 'undefined') + ')';
  }

  UnidocReductionRequest.toDebugString = toDebugString;
})(UnidocReductionRequest || (UnidocReductionRequest = {}));
;// CONCATENATED MODULE: ./sources/compilation/reduction/common/nextTag.ts


var _marked = /*#__PURE__*/regenerator_default().mark(nextTag);




/**
*
*/

function nextTag() {
  var input;
  return regenerator_default().wrap(function nextTag$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocReductionRequest.CURRENT;

        case 2:
          input = _context.sent;

        case 3:
          if (false) {}

          _context.t0 = input.type;
          _context.next = _context.t0 === UnidocReductionInputType.END ? 7 : _context.t0 === UnidocReductionInputType.EVENT ? 8 : 10;
          break;

        case 7:
          return _context.abrupt("return", input);

        case 8:
          if (!(input.event.type === UnidocEventType.START_TAG)) {
            _context.next = 10;
            break;
          }

          return _context.abrupt("return", input);

        case 10:
          _context.next = 12;
          return UnidocReductionRequest.NEXT;

        case 12:
          input = _context.sent;

        case 13:
          _context.next = 3;
          break;

        case 15:
        case "end":
          return _context.stop();
      }
    }
  }, _marked);
}
;// CONCATENATED MODULE: ./sources/compilation/reduction/UnidocReductionExecutor.ts
function UnidocReductionExecutor_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocReductionExecutor_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocReductionExecutor_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocReductionExecutor_typeof(obj); }

function UnidocReductionExecutor_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocReductionExecutor_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocReductionExecutor_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocReductionExecutor_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocReductionExecutor_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocReductionExecutor_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocReductionExecutor_setPrototypeOf(subClass, superClass); }

function UnidocReductionExecutor_setPrototypeOf(o, p) { UnidocReductionExecutor_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocReductionExecutor_setPrototypeOf(o, p); }

function UnidocReductionExecutor_createSuper(Derived) { var hasNativeReflectConstruct = UnidocReductionExecutor_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocReductionExecutor_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocReductionExecutor_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocReductionExecutor_possibleConstructorReturn(this, result); }; }

function UnidocReductionExecutor_possibleConstructorReturn(self, call) { if (call && (UnidocReductionExecutor_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocReductionExecutor_assertThisInitialized(self); }

function UnidocReductionExecutor_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocReductionExecutor_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocReductionExecutor_getPrototypeOf(o) { UnidocReductionExecutor_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocReductionExecutor_getPrototypeOf(o); }




var UnidocReductionExecutor = /*#__PURE__*/function (_SubscribableUnidocCo) {
  UnidocReductionExecutor_inherits(UnidocReductionExecutor, _SubscribableUnidocCo);

  var _super = UnidocReductionExecutor_createSuper(UnidocReductionExecutor);

  /**
  *
  */
  function UnidocReductionExecutor(reducerFactory) {
    var _this;

    UnidocReductionExecutor_classCallCheck(this, UnidocReductionExecutor);

    _this = _super.call(this);
    _this.reducerFactory = reducerFactory;
    _this._reducer = undefined;
    _this._output = new StaticUnidocProducer();
    return _this;
  }
  /**
  * @see UnidocConsumer.handleInitialization
  */


  UnidocReductionExecutor_createClass(UnidocReductionExecutor, [{
    key: "handleInitialization",
    value: function handleInitialization() {
      this._reducer = this.reducerFactory();

      this._output.initialize();
    }
    /**
    * @see UnidocConsumer.handleProduction
    */

  }, {
    key: "handleProduction",
    value: function handleProduction(event) {
      if (this._reducer) {
        var result = UnidocReducer.feed(this._reducer, event);

        if (result.done) {
          this._output.produce(result.value);

          this._reducer = undefined;
        }
      }
    }
    /**
    * @see UnidocConsumer.handleCompletion
    */

  }, {
    key: "handleCompletion",
    value: function handleCompletion() {
      if (this._reducer) {
        this._output.produce(UnidocReducer.finish(this._reducer));

        this._reducer = undefined;
      }

      this._output.complete();
    }
    /**
    * @see UnidocConsumer.handleFailure
    */

  }, {
    key: "handleFailure",
    value: function handleFailure(error) {
      this._output.fail(error);
    }
    /**
    * @see UnidocProducer.addEventListener
    */

  }, {
    key: "addEventListener",
    value: function addEventListener(event, listener) {
      this._output.addEventListener(event, listener);
    }
    /**
    * @see UnidocProducer.removeEventListener
    */

  }, {
    key: "removeEventListener",
    value: function removeEventListener(event, listener) {
      this._output.removeEventListener(event, listener);
    }
    /**
    * @see UnidocProducer.removeAllEventListener
    */

  }, {
    key: "removeAllEventListener",
    value: function removeAllEventListener() {
      var _this$_output;

      (_this$_output = this._output).removeAllEventListener.apply(_this$_output, arguments);
    }
  }]);

  return UnidocReductionExecutor;
}(SubscribableUnidocConsumer);
;// CONCATENATED MODULE: ./sources/validation/UnidocValidationEventType.ts
var UnidocValidationEventType;

(function (UnidocValidationEventType) {
  /**
  * Declare the validation of an event in a branch.
  */
  UnidocValidationEventType.VALIDATION = 0;
  /**
  * Declare the termination of the validated document..
  */

  UnidocValidationEventType.DOCUMENT_COMPLETION = 1;
  /**
  * Declare a message in a branch.
  */

  UnidocValidationEventType.MESSAGE = 2;
  /**
  * Declare the begining of a group match.
  */

  UnidocValidationEventType.BEGIN_GROUP = 3;
  /**
  * Declare the end of a group match.
  */

  UnidocValidationEventType.END_GROUP = 4;
  /**
  * Default value.
  */

  UnidocValidationEventType.DEFAULT = UnidocValidationEventType.VALIDATION;
  /**
  * All event types.
  */

  UnidocValidationEventType.ALL = [UnidocValidationEventType.VALIDATION, UnidocValidationEventType.DOCUMENT_COMPLETION, UnidocValidationEventType.MESSAGE, UnidocValidationEventType.BEGIN_GROUP, UnidocValidationEventType.END_GROUP];
  /**
  *
  */

  function toString(value) {
    switch (value) {
      case UnidocValidationEventType.VALIDATION:
        return 'VALIDATION';

      case UnidocValidationEventType.DOCUMENT_COMPLETION:
        return 'DOCUMENT_COMPLETION';

      case UnidocValidationEventType.MESSAGE:
        return 'MESSAGE';

      case UnidocValidationEventType.BEGIN_GROUP:
        return 'BEGIN_GROUP';

      case UnidocValidationEventType.END_GROUP:
        return 'END_GROUP';

      default:
        return undefined;
    }
  }

  UnidocValidationEventType.toString = toString;
  /**
  *
  */

  function toDebugString(value) {
    return '#' + value + ' (' + (toString(value) || 'undefined') + ')';
  }

  UnidocValidationEventType.toDebugString = toDebugString;
})(UnidocValidationEventType || (UnidocValidationEventType = {}));
;// CONCATENATED MODULE: ./sources/compilation/reduction/UnidocReductionInputProducer.ts
function UnidocReductionInputProducer_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocReductionInputProducer_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocReductionInputProducer_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocReductionInputProducer_typeof(obj); }

function UnidocReductionInputProducer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocReductionInputProducer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocReductionInputProducer_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocReductionInputProducer_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocReductionInputProducer_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocReductionInputProducer_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { UnidocReductionInputProducer_get = Reflect.get; } else { UnidocReductionInputProducer_get = function _get(target, property, receiver) { var base = UnidocReductionInputProducer_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return UnidocReductionInputProducer_get(target, property, receiver || target); }

function UnidocReductionInputProducer_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = UnidocReductionInputProducer_getPrototypeOf(object); if (object === null) break; } return object; }

function UnidocReductionInputProducer_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocReductionInputProducer_setPrototypeOf(subClass, superClass); }

function UnidocReductionInputProducer_setPrototypeOf(o, p) { UnidocReductionInputProducer_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocReductionInputProducer_setPrototypeOf(o, p); }

function UnidocReductionInputProducer_createSuper(Derived) { var hasNativeReflectConstruct = UnidocReductionInputProducer_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocReductionInputProducer_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocReductionInputProducer_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocReductionInputProducer_possibleConstructorReturn(this, result); }; }

function UnidocReductionInputProducer_possibleConstructorReturn(self, call) { if (call && (UnidocReductionInputProducer_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocReductionInputProducer_assertThisInitialized(self); }

function UnidocReductionInputProducer_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocReductionInputProducer_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocReductionInputProducer_getPrototypeOf(o) { UnidocReductionInputProducer_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocReductionInputProducer_getPrototypeOf(o); }



var UnidocReductionInputProducer = /*#__PURE__*/function (_ListenableUnidocProd) {
  UnidocReductionInputProducer_inherits(UnidocReductionInputProducer, _ListenableUnidocProd);

  var _super = UnidocReductionInputProducer_createSuper(UnidocReductionInputProducer);

  /**
  * Instantiate a new unidoc event.
  */
  function UnidocReductionInputProducer() {
    var _this;

    UnidocReductionInputProducer_classCallCheck(this, UnidocReductionInputProducer);

    _this = _super.call(this);
    _this._event = new UnidocReductionInput();
    return _this;
  }
  /**
  * @see ListenableUnidocProducer.fail
  */


  UnidocReductionInputProducer_createClass(UnidocReductionInputProducer, [{
    key: "fail",
    value: function fail(error) {
      UnidocReductionInputProducer_get(UnidocReductionInputProducer_getPrototypeOf(UnidocReductionInputProducer.prototype), "fail", this).call(this, error);
    }
    /**
    * @see ListenableUnidocProducer.initialize
    */

  }, {
    key: "initialize",
    value: function initialize() {
      UnidocReductionInputProducer_get(UnidocReductionInputProducer_getPrototypeOf(UnidocReductionInputProducer.prototype), "initialize", this).call(this);
    }
    /**
    *
    */

  }, {
    key: "produceStart",
    value: function produceStart() {
      this.produce(UnidocReductionInput.START);
      return this;
    }
    /**
    *
    */

  }, {
    key: "produceEvent",
    value: function produceEvent(event) {
      this.produce(this._event.asEvent(event));
      return this;
    }
    /**
    *
    */

  }, {
    key: "produceGroupStart",
    value: function produceGroupStart(group) {
      this.produce(this._event.asGroupStart(group));
      return this;
    }
    /**
    *
    */

  }, {
    key: "produceGroupEnd",
    value: function produceGroupEnd(group) {
      this.produce(this._event.asGroupEnd(group));
      return this;
    }
    /**
    *
    */

  }, {
    key: "produceEnd",
    value: function produceEnd() {
      this.produce(UnidocReductionInput.END);
      return this;
    }
    /**
    * @see ListenableUnidocProducer.produce
    */

  }, {
    key: "produce",
    value: function produce() {
      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._event;

      UnidocReductionInputProducer_get(UnidocReductionInputProducer_getPrototypeOf(UnidocReductionInputProducer.prototype), "produce", this).call(this, event);
    }
    /**
    * @see ListenableUnidocProducer.complete
    */

  }, {
    key: "complete",
    value: function complete() {
      UnidocReductionInputProducer_get(UnidocReductionInputProducer_getPrototypeOf(UnidocReductionInputProducer.prototype), "complete", this).call(this);
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this._event.clear();

      this.removeAllEventListener();
    }
  }]);

  return UnidocReductionInputProducer;
}(ListenableUnidocProducer);

(function (UnidocReductionInputProducer) {
  /**
  *
  */
  function create() {
    return new UnidocReductionInputProducer();
  }

  UnidocReductionInputProducer.create = create;
})(UnidocReductionInputProducer || (UnidocReductionInputProducer = {}));
;// CONCATENATED MODULE: ./sources/compilation/reduction/UnidocValidationToReductionTranslator.ts
function UnidocValidationToReductionTranslator_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocValidationToReductionTranslator_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocValidationToReductionTranslator_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocValidationToReductionTranslator_typeof(obj); }

function UnidocValidationToReductionTranslator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocValidationToReductionTranslator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocValidationToReductionTranslator_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocValidationToReductionTranslator_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocValidationToReductionTranslator_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocValidationToReductionTranslator_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocValidationToReductionTranslator_setPrototypeOf(subClass, superClass); }

function UnidocValidationToReductionTranslator_setPrototypeOf(o, p) { UnidocValidationToReductionTranslator_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocValidationToReductionTranslator_setPrototypeOf(o, p); }

function UnidocValidationToReductionTranslator_createSuper(Derived) { var hasNativeReflectConstruct = UnidocValidationToReductionTranslator_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocValidationToReductionTranslator_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocValidationToReductionTranslator_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocValidationToReductionTranslator_possibleConstructorReturn(this, result); }; }

function UnidocValidationToReductionTranslator_possibleConstructorReturn(self, call) { if (call && (UnidocValidationToReductionTranslator_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocValidationToReductionTranslator_assertThisInitialized(self); }

function UnidocValidationToReductionTranslator_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocValidationToReductionTranslator_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocValidationToReductionTranslator_getPrototypeOf(o) { UnidocValidationToReductionTranslator_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocValidationToReductionTranslator_getPrototypeOf(o); }




var UnidocValidationToReductionTranslator = /*#__PURE__*/function (_SubscribableUnidocCo) {
  UnidocValidationToReductionTranslator_inherits(UnidocValidationToReductionTranslator, _SubscribableUnidocCo);

  var _super = UnidocValidationToReductionTranslator_createSuper(UnidocValidationToReductionTranslator);

  /**
  *
  */
  function UnidocValidationToReductionTranslator() {
    var _this;

    UnidocValidationToReductionTranslator_classCallCheck(this, UnidocValidationToReductionTranslator);

    _this = _super.call(this);
    _this._output = new UnidocReductionInputProducer();
    return _this;
  }
  /**
  * @see UnidocConsumer.handleInitialization
  */


  UnidocValidationToReductionTranslator_createClass(UnidocValidationToReductionTranslator, [{
    key: "handleInitialization",
    value: function handleInitialization() {
      this._output.initialize();

      this._output.produceStart();
    }
    /**
    * @see UnidocConsumer.handleProduction
    */

  }, {
    key: "handleProduction",
    value: function handleProduction(event) {
      switch (event.type) {
        case UnidocValidationEventType.VALIDATION:
          this._output.produceEvent(event.event);

          return;

        case UnidocValidationEventType.DOCUMENT_COMPLETION:
        case UnidocValidationEventType.MESSAGE:
          return;

        case UnidocValidationEventType.BEGIN_GROUP:
          this._output.produceGroupStart(event.group);

          return;

        case UnidocValidationEventType.END_GROUP:
          this._output.produceGroupEnd(event.group);

          return;

        default:
          throw new Error('Unable to map validation event of type ' + UnidocValidationEventType.toDebugString(event.type) + ' because ' + 'no procedure was defined for that.');
      }
    }
    /**
    * @see UnidocConsumer.handleCompletion
    */

  }, {
    key: "handleCompletion",
    value: function handleCompletion() {
      this._output.produceEnd();

      this._output.complete();
    }
    /**
    * @see UnidocConsumer.handleFailure
    */

  }, {
    key: "handleFailure",
    value: function handleFailure(error) {
      this._output.fail(error);
    }
    /**
    * @see UnidocProducer.addEventListener
    */

  }, {
    key: "addEventListener",
    value: function addEventListener(event, listener) {
      this._output.addEventListener(event, listener);
    }
    /**
    * @see UnidocProducer.removeEventListener
    */

  }, {
    key: "removeEventListener",
    value: function removeEventListener(event, listener) {
      this._output.removeEventListener(event, listener);
    }
    /**
    * @see UnidocProducer.removeAllEventListener
    */

  }, {
    key: "removeAllEventListener",
    value: function removeAllEventListener() {
      var _this$_output;

      (_this$_output = this._output).removeAllEventListener.apply(_this$_output, arguments);
    }
  }]);

  return UnidocValidationToReductionTranslator;
}(SubscribableUnidocConsumer);
;// CONCATENATED MODULE: ./sources/compilation/reduction/common/reduce.ts



/**
* Transform a producer of tokens into a producer of document events.
*
* @param input - A producer of tokens.
*
* @return A producer of document events.
*/

function reduce(input, reducer) {
  var executor = new UnidocReductionExecutor(reducer);
  executor.subscribe(input);
  return executor;
}
/**
*
*/

(function (reduce) {
  /**
  *
  */
  function validation(input, reducer) {
    var executor = new UnidocReductionExecutor(reducer);
    var translator = new UnidocValidationToReductionTranslator();
    translator.subscribe(input);
    executor.subscribe(translator);
    return executor;
  }

  reduce.validation = validation;
  /**
  *
  */

  function iterator(input, reducer) {
    var next = input.next();

    while (!next.done) {
      var result = UnidocReducer.feed(reducer, next.value);

      if (result.done) {
        return result.value;
      } else {
        next = input.next();
      }
    }

    return UnidocReducer.finish(reducer);
  }

  reduce.iterator = iterator;
})(reduce || (reduce = {}));
;// CONCATENATED MODULE: ./sources/compilation/reduction/common/reduceEvents.ts


var reduceEvents_marked = /*#__PURE__*/regenerator_default().mark(reduceEvents);




/**
*
*/

function reduceEvents(reducer) {
  var current, result;
  return regenerator_default().wrap(function reduceEvents$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocReductionRequest.CURRENT;

        case 2:
          current = _context.sent;

        case 3:
          if (current.isEnd()) {
            _context.next = 17;
            break;
          }

          _context.t0 = current.type;
          _context.next = _context.t0 === UnidocReductionInputType.START ? 7 : _context.t0 === UnidocReductionInputType.EVENT ? 7 : 11;
          break;

        case 7:
          result = UnidocReducer.feed(reducer, current);

          if (!result.done) {
            _context.next = 10;
            break;
          }

          return _context.abrupt("return", result.value);

        case 10:
          return _context.abrupt("break", 12);

        case 11:
          return _context.abrupt("break", 12);

        case 12:
          _context.next = 14;
          return UnidocReductionRequest.NEXT;

        case 14:
          current = _context.sent;
          _context.next = 3;
          break;

        case 17:
          return _context.abrupt("return", UnidocReducer.finish(reducer));

        case 18:
        case "end":
          return _context.stop();
      }
    }
  }, reduceEvents_marked);
}
;// CONCATENATED MODULE: ./sources/compilation/reduction/common/reduceMany.ts


var reduceMany_marked = /*#__PURE__*/regenerator_default().mark(reduceMany);

/**
*
*/
function reduceMany(factory) {
  var result, next;
  return regenerator_default().wrap(function reduceMany$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          result = [];

        case 1:
          if (false) {}

          return _context.delegateYield(factory(), "t0", 3);

        case 3:
          next = _context.t0;

          if (!(next === undefined)) {
            _context.next = 8;
            break;
          }

          return _context.abrupt("return", result);

        case 8:
          result.push(next);

        case 9:
          _context.next = 1;
          break;

        case 11:
        case "end":
          return _context.stop();
      }
    }
  }, reduceMany_marked);
}
;// CONCATENATED MODULE: ./sources/compilation/reduction/common/skipStart.ts


var skipStart_marked = /*#__PURE__*/regenerator_default().mark(skipStart);


function skipStart() {
  var input;
  return regenerator_default().wrap(function skipStart$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocReductionRequest.CURRENT;

        case 2:
          input = _context.sent;

          if (!input.isStart()) {
            _context.next = 7;
            break;
          }

          _context.next = 6;
          return UnidocReductionRequest.NEXT;

        case 6:
          input = _context.sent;

        case 7:
        case "end":
          return _context.stop();
      }
    }
  }, skipStart_marked);
}
;// CONCATENATED MODULE: ./sources/compilation/reduction/common/skipWhitespaces.ts


var skipWhitespaces_marked = /*#__PURE__*/regenerator_default().mark(skipWhitespaces);


function skipWhitespaces() {
  var input;
  return regenerator_default().wrap(function skipWhitespaces$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocReductionRequest.CURRENT;

        case 2:
          input = _context.sent;

        case 3:
          if (!input.isWhitespace()) {
            _context.next = 9;
            break;
          }

          _context.next = 6;
          return UnidocReductionRequest.NEXT;

        case 6:
          input = _context.sent;
          _context.next = 3;
          break;

        case 9:
        case "end":
          return _context.stop();
      }
    }
  }, skipWhitespaces_marked);
}
;// CONCATENATED MODULE: ./sources/compilation/reduction/common/reduceTag.ts


var reduceTag_marked = /*#__PURE__*/regenerator_default().mark(reduceTag);








/**
*
*/

function reduceTag(reducer) {
  var current, depth, reduction;
  return regenerator_default().wrap(function reduceTag$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          return _context.delegateYield(skipStart(), "t0", 1);

        case 1:
          return _context.delegateYield(skipWhitespaces(), "t1", 2);

        case 2:
          _context.next = 4;
          return UnidocReductionRequest.CURRENT;

        case 4:
          current = _context.sent;

          if (!current.isStartOfAnyTag()) {
            _context.next = 37;
            break;
          }

          depth = 0;
          reduction = UnidocReducer.feed(reducer, UnidocReductionInput.START);

        case 8:
          _context.t2 = current.type;
          _context.next = _context.t2 === UnidocReductionInputType.END ? 11 : _context.t2 === UnidocReductionInputType.EVENT ? 16 : 24;
          break;

        case 11:
          if (!reduction.done) {
            _context.next = 15;
            break;
          }

          return _context.abrupt("return", reduction.value);

        case 15:
          return _context.abrupt("return", UnidocReducer.finish(reducer));

        case 16:
          _context.t3 = current.event.type;
          _context.next = _context.t3 === UnidocEventType.START_TAG ? 19 : _context.t3 === UnidocEventType.END_TAG ? 21 : 23;
          break;

        case 19:
          depth += 1;
          return _context.abrupt("break", 24);

        case 21:
          depth -= 1;
          return _context.abrupt("break", 24);

        case 23:
          return _context.abrupt("break", 24);

        case 24:
          if (!reduction.done) {
            reduction = UnidocReducer.feed(reducer, current);
          }

          return _context.abrupt("break", 26);

        case 26:
          _context.next = 28;
          return UnidocReductionRequest.NEXT;

        case 28:
          current = _context.sent;

        case 29:
          if (depth > 0) {
            _context.next = 8;
            break;
          }

        case 30:
          if (!reduction.done) {
            _context.next = 34;
            break;
          }

          return _context.abrupt("return", reduction.value);

        case 34:
          return _context.abrupt("return", UnidocReducer.finish(reducer));

        case 35:
          _context.next = 38;
          break;

        case 37:
          return _context.abrupt("return", undefined);

        case 38:
        case "end":
          return _context.stop();
      }
    }
  }, reduceTag_marked);
}
/**
*
*/

(function (reduceTag) {
  var _marked2 = /*#__PURE__*/regenerator_default().mark(content);

  /**
  *
  */
  function content(reducer) {
    var current, reduction, depth;
    return regenerator_default().wrap(function content$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            return _context2.delegateYield(skipStart(), "t0", 1);

          case 1:
            return _context2.delegateYield(skipWhitespaces(), "t1", 2);

          case 2:
            _context2.next = 4;
            return UnidocReductionRequest.CURRENT;

          case 4:
            current = _context2.sent;

            if (!current.isStartOfAnyTag()) {
              _context2.next = 65;
              break;
            }

            reduction = UnidocReducer.feed(reducer, UnidocReductionInput.START);
            _context2.next = 9;
            return UnidocReductionRequest.NEXT;

          case 9:
            current = _context2.sent;
            _context2.t2 = current.type;
            _context2.next = _context2.t2 === UnidocReductionInputType.END ? 13 : _context2.t2 === UnidocReductionInputType.EVENT ? 18 : 29;
            break;

          case 13:
            if (!reduction.done) {
              _context2.next = 17;
              break;
            }

            return _context2.abrupt("return", reduction.value);

          case 17:
            return _context2.abrupt("return", UnidocReducer.finish(reducer));

          case 18:
            _context2.t3 = current.event.type;
            _context2.next = _context2.t3 === UnidocEventType.END_TAG ? 21 : 28;
            break;

          case 21:
            _context2.next = 23;
            return UnidocReductionRequest.NEXT;

          case 23:
            if (!reduction.done) {
              _context2.next = 27;
              break;
            }

            return _context2.abrupt("return", reduction.value);

          case 27:
            return _context2.abrupt("return", UnidocReducer.finish(reducer));

          case 28:
            return _context2.abrupt("break", 29);

          case 29:
            return _context2.abrupt("break", 30);

          case 30:
            depth = 1;

          case 31:
            if (!(depth > 0)) {
              _context2.next = 55;
              break;
            }

            if (!reduction.done) {
              reduction = UnidocReducer.feed(reducer, current);
            }

            _context2.next = 35;
            return UnidocReductionRequest.NEXT;

          case 35:
            current = _context2.sent;
            _context2.t4 = current.type;
            _context2.next = _context2.t4 === UnidocReductionInputType.END ? 39 : _context2.t4 === UnidocReductionInputType.EVENT ? 44 : 52;
            break;

          case 39:
            if (!reduction.done) {
              _context2.next = 43;
              break;
            }

            return _context2.abrupt("return", reduction.value);

          case 43:
            return _context2.abrupt("return", UnidocReducer.finish(reducer));

          case 44:
            _context2.t5 = current.event.type;
            _context2.next = _context2.t5 === UnidocEventType.START_TAG ? 47 : _context2.t5 === UnidocEventType.END_TAG ? 49 : 51;
            break;

          case 47:
            depth += 1;
            return _context2.abrupt("break", 52);

          case 49:
            depth -= 1;
            return _context2.abrupt("break", 52);

          case 51:
            return _context2.abrupt("break", 52);

          case 52:
            return _context2.abrupt("break", 53);

          case 53:
            _context2.next = 31;
            break;

          case 55:
            while (depth > 0) {
              ;
            }

            _context2.next = 58;
            return UnidocReductionRequest.NEXT;

          case 58:
            if (!reduction.done) {
              _context2.next = 62;
              break;
            }

            return _context2.abrupt("return", reduction.value);

          case 62:
            return _context2.abrupt("return", UnidocReducer.finish(reducer));

          case 63:
            _context2.next = 66;
            break;

          case 65:
            return _context2.abrupt("return", undefined);

          case 66:
          case "end":
            return _context2.stop();
        }
      }
    }, _marked2);
  }

  reduceTag.content = content;
})(reduceTag || (reduceTag = {}));
;// CONCATENATED MODULE: ./sources/compilation/reduction/common/reduceWords.ts


var reduceWords_marked = /*#__PURE__*/regenerator_default().mark(reduceWords);


/**
*
*/

var reduceWords_EMPTY_STRING = '';
/**
*
*/

function reduceWords() {
  var result, current;
  return regenerator_default().wrap(function reduceWords$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocReductionRequest.CURRENT;

        case 2:
          current = _context.sent;

          if (!current.isStart()) {
            _context.next = 9;
            break;
          }

          _context.next = 6;
          return UnidocReductionRequest.NEXT;

        case 6:
          current = _context.sent;

          if (!current.isEnd()) {
            _context.next = 9;
            break;
          }

          return _context.abrupt("return", reduceWords_EMPTY_STRING);

        case 9:
          if (!current.isAnyWord()) {
            _context.next = 13;
            break;
          }

          result = current.event.text;
          _context.next = 14;
          break;

        case 13:
          return _context.abrupt("return", undefined);

        case 14:
          _context.next = 16;
          return UnidocReductionRequest.NEXT;

        case 16:
          current = _context.sent;

        case 17:
          if (!current.isAnyWord()) {
            _context.next = 24;
            break;
          }

          result += current.event.text;
          _context.next = 21;
          return UnidocReductionRequest.NEXT;

        case 21:
          current = _context.sent;
          _context.next = 17;
          break;

        case 24:
          return _context.abrupt("return", result);

        case 25:
        case "end":
          return _context.stop();
      }
    }
  }, reduceWords_marked);
}
;// CONCATENATED MODULE: ./sources/compilation/reduction/common/reduceText.ts


var reduceText_marked = /*#__PURE__*/regenerator_default().mark(reduceEventsToText);





/**
*
*/

var reduceText_EMPTY_STRING = '';
/**
*
*/

function reduceEventsToText() {
  var result, current;
  return regenerator_default().wrap(function reduceEventsToText$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocReductionRequest.CURRENT;

        case 2:
          current = _context.sent;

          if (!current.isStart()) {
            _context.next = 9;
            break;
          }

          _context.next = 6;
          return UnidocReductionRequest.NEXT;

        case 6:
          current = _context.sent;

          if (!current.isEnd()) {
            _context.next = 9;
            break;
          }

          return _context.abrupt("return", reduceText_EMPTY_STRING);

        case 9:
          if (!(current.isWhitespace() || current.isAnyWord())) {
            _context.next = 38;
            break;
          }

          return _context.delegateYield(skipWhitespaces(), "t0", 11);

        case 11:
          return _context.delegateYield(reduceWords(), "t2", 12);

        case 12:
          _context.t1 = _context.t2;

          if (_context.t1) {
            _context.next = 15;
            break;
          }

          _context.t1 = reduceText_EMPTY_STRING;

        case 15:
          result = _context.t1;
          _context.next = 18;
          return UnidocReductionRequest.CURRENT;

        case 18:
          current = _context.sent;

        case 19:
          if (!current.isWhitespace()) {
            _context.next = 37;
            break;
          }

          return _context.delegateYield(skipWhitespaces(), "t3", 21);

        case 21:
          _context.next = 23;
          return UnidocReductionRequest.CURRENT;

        case 23:
          current = _context.sent;

          if (!current.isAnyWord()) {
            _context.next = 31;
            break;
          }

          result += ' ';
          _context.t4 = result;
          return _context.delegateYield(reduceWords(), "t5", 28);

        case 28:
          result = _context.t4 += _context.t5;
          _context.next = 32;
          break;

        case 31:
          return _context.abrupt("return", result);

        case 32:
          _context.next = 34;
          return UnidocReductionRequest.CURRENT;

        case 34:
          current = _context.sent;
          _context.next = 19;
          break;

        case 37:
          return _context.abrupt("return", result);

        case 38:
          return _context.abrupt("return", undefined);

        case 39:
        case "end":
          return _context.stop();
      }
    }
  }, reduceText_marked);
}
/**
*
*/


function reduceText() {
  return reduceEvents(reduceEventsToText());
}
;// CONCATENATED MODULE: ./sources/compilation/reduction/common/reduceToken.ts


var reduceToken_marked = /*#__PURE__*/regenerator_default().mark(reduceEventsToToken);





var reduceToken_EMPTY_STRING = '';
/**
*
*/

function reduceEventsToToken() {
  var current;
  return regenerator_default().wrap(function reduceEventsToToken$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocReductionRequest.CURRENT;

        case 2:
          current = _context.sent;

          if (!current.isStart()) {
            _context.next = 9;
            break;
          }

          _context.next = 6;
          return UnidocReductionRequest.NEXT;

        case 6:
          current = _context.sent;

          if (!current.isEnd()) {
            _context.next = 9;
            break;
          }

          return _context.abrupt("return", reduceToken_EMPTY_STRING);

        case 9:
          if (!(current.isWhitespace() || current.isAnyWord())) {
            _context.next = 16;
            break;
          }

          return _context.delegateYield(skipWhitespaces(), "t0", 11);

        case 11:
          return _context.delegateYield(reduceWords(), "t2", 12);

        case 12:
          _context.t1 = _context.t2;

          if (_context.t1) {
            _context.next = 15;
            break;
          }

          _context.t1 = reduceToken_EMPTY_STRING;

        case 15:
          return _context.abrupt("return", _context.t1);

        case 16:
          return _context.abrupt("return", undefined);

        case 17:
        case "end":
          return _context.stop();
      }
    }
  }, reduceToken_marked);
}
/**
*
*/


function reduceToken() {
  return reduceEvents(reduceEventsToToken());
}
;// CONCATENATED MODULE: ./sources/compilation/reduction/common/reduceWhitespaces.ts


var reduceWhitespaces_marked = /*#__PURE__*/regenerator_default().mark(reduceWhitespaces);


/**
*
*/

var reduceWhitespaces_EMPTY_STRING = '';
/**
*
*/

function reduceWhitespaces() {
  var result, current;
  return regenerator_default().wrap(function reduceWhitespaces$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocReductionRequest.CURRENT;

        case 2:
          current = _context.sent;

          if (!current.isStart()) {
            _context.next = 9;
            break;
          }

          _context.next = 6;
          return UnidocReductionRequest.NEXT;

        case 6:
          current = _context.sent;

          if (!current.isEnd()) {
            _context.next = 9;
            break;
          }

          return _context.abrupt("return", reduceWhitespaces_EMPTY_STRING);

        case 9:
          if (!current.isWhitespace()) {
            _context.next = 13;
            break;
          }

          result = current.event.text;
          _context.next = 14;
          break;

        case 13:
          return _context.abrupt("return", undefined);

        case 14:
          _context.next = 16;
          return UnidocReductionRequest.NEXT;

        case 16:
          current = _context.sent;

        case 17:
          if (!current.isWhitespace()) {
            _context.next = 24;
            break;
          }

          result += current.event.text;
          _context.next = 21;
          return UnidocReductionRequest.NEXT;

        case 21:
          current = _context.sent;
          _context.next = 17;
          break;

        case 24:
          return _context.abrupt("return", result);

        case 25:
        case "end":
          return _context.stop();
      }
    }
  }, reduceWhitespaces_marked);
}
;// CONCATENATED MODULE: ./sources/compilation/reduction/common/skipEndOfAnyTag.ts


var skipEndOfAnyTag_marked = /*#__PURE__*/regenerator_default().mark(skipEndOfAnyTag);


function skipEndOfAnyTag() {
  var input;
  return regenerator_default().wrap(function skipEndOfAnyTag$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocReductionRequest.CURRENT;

        case 2:
          input = _context.sent;

          if (!input.isEndOfAnyTag()) {
            _context.next = 7;
            break;
          }

          _context.next = 6;
          return UnidocReductionRequest.NEXT;

        case 6:
          input = _context.sent;

        case 7:
        case "end":
          return _context.stop();
      }
    }
  }, skipEndOfAnyTag_marked);
}
;// CONCATENATED MODULE: ./sources/compilation/reduction/common/skipStartOfAnyTag.ts


var skipStartOfAnyTag_marked = /*#__PURE__*/regenerator_default().mark(skipStartOfAnyTag);


function skipStartOfAnyTag() {
  var input;
  return regenerator_default().wrap(function skipStartOfAnyTag$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocReductionRequest.CURRENT;

        case 2:
          input = _context.sent;

          if (!input.isStartOfAnyTag()) {
            _context.next = 7;
            break;
          }

          _context.next = 6;
          return UnidocReductionRequest.NEXT;

        case 6:
          input = _context.sent;

        case 7:
        case "end":
          return _context.stop();
      }
    }
  }, skipStartOfAnyTag_marked);
}
;// CONCATENATED MODULE: ./sources/compilation/reduction/common/skipTag.ts


var skipTag_marked = /*#__PURE__*/regenerator_default().mark(skipTag);






function skipTag() {
  var current, depth;
  return regenerator_default().wrap(function skipTag$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          return _context.delegateYield(skipStart(), "t0", 1);

        case 1:
          return _context.delegateYield(skipWhitespaces(), "t1", 2);

        case 2:
          _context.next = 4;
          return UnidocReductionRequest.CURRENT;

        case 4:
          current = _context.sent;

          if (!current.isStartOfAnyTag()) {
            _context.next = 30;
            break;
          }

          depth = 1;

        case 7:
          if (!(depth > 0)) {
            _context.next = 27;
            break;
          }

          _context.next = 10;
          return UnidocReductionRequest.NEXT;

        case 10:
          current = _context.sent;
          _context.t2 = current.type;
          _context.next = _context.t2 === UnidocReductionInputType.END ? 14 : _context.t2 === UnidocReductionInputType.EVENT ? 15 : 24;
          break;

        case 14:
          return _context.abrupt("return", current);

        case 15:
          _context.t3 = current.event.type;
          _context.next = _context.t3 === UnidocEventType.START_TAG ? 18 : _context.t3 === UnidocEventType.END_TAG ? 20 : 22;
          break;

        case 18:
          depth += 1;
          return _context.abrupt("break", 23);

        case 20:
          depth -= 1;
          return _context.abrupt("break", 23);

        case 22:
          return _context.abrupt("break", 23);

        case 23:
          return _context.abrupt("break", 25);

        case 24:
          return _context.abrupt("break", 25);

        case 25:
          _context.next = 7;
          break;

        case 27:
          _context.next = 29;
          return UnidocReductionRequest.NEXT;

        case 29:
          return _context.abrupt("return", _context.sent);

        case 30:
          _context.next = 32;
          return UnidocReductionRequest.CURRENT;

        case 32:
          return _context.abrupt("return", _context.sent);

        case 33:
        case "end":
          return _context.stop();
      }
    }
  }, skipTag_marked);
}
;// CONCATENATED MODULE: ./sources/compilation/reduction/common/index.ts














;// CONCATENATED MODULE: ./sources/compilation/reduction/UnidocReducer.ts




/**
*
*/

var UnidocReducer;

(function (UnidocReducer) {
  var _marked = /*#__PURE__*/regenerator_default().mark(log);

  /**
  *
  */
  function feed(reducer, input) {
    var result = reducer.next(input);

    while (!result.done && result.value === UnidocReductionRequest.CURRENT) {
      result = reducer.next(input);
    }

    return result;
  }

  UnidocReducer.feed = feed;
  /**
  *
  */

  function finish(reducer) {
    var result = feed(reducer, UnidocReductionInput.END);

    if (result.done) {
      return result.value;
    } else {
      throw new Error('Illegal nested reducer behavior, the nested reducer continue to run ' + 'despite the fact that it received the event that notify the end ' + 'of the reduction process.');
    }
  }

  UnidocReducer.finish = finish;
  /**
  *
  */

  function log() {
    var current;
    return regenerator_default().wrap(function log$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return UnidocReductionRequest.CURRENT;

          case 2:
            current = _context.sent;

          case 3:
            if (current.isEnd()) {
              _context.next = 10;
              break;
            }

            console.log(current.toString());
            _context.next = 7;
            return UnidocReductionRequest.NEXT;

          case 7:
            current = _context.sent;
            _context.next = 3;
            break;

          case 10:
            console.log(current.toString());

          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _marked);
  }

  UnidocReducer.log = log;
  /**
  *
  */

  UnidocReducer.nextTag = nextTag;
  /**
  *
  */

  UnidocReducer.reduce = reduce;
  /**
  *
  */

  UnidocReducer.reduceEvents = reduceEvents;
  /**
  *
  */

  UnidocReducer.reduceMany = reduceMany;
  /**
  *
  */

  UnidocReducer.reduceTag = reduceTag;
  /**
  *
  */

  UnidocReducer.reduceToken = reduceToken;
  /**
  *
  */

  UnidocReducer.reduceText = reduceText;
  /**
  *
  */

  UnidocReducer.reduceWhitespaces = reduceWhitespaces;
  /**
  *
  */

  UnidocReducer.reduceWords = reduceWords;
  /**
  *
  */

  UnidocReducer.skipEndOfAnyTag = skipEndOfAnyTag;
  /**
  *
  */

  UnidocReducer.skipStart = skipStart;
  /**
  *
  */

  UnidocReducer.skipStartOfAnyTag = skipStartOfAnyTag;
  /**
  *
  */

  UnidocReducer.skipTag = skipTag;
  /**
  *
  */

  UnidocReducer.skipWhitespaces = skipWhitespaces;
})(UnidocReducer || (UnidocReducer = {}));
;// CONCATENATED MODULE: ./sources/compilation/reduction/index.ts







;// CONCATENATED MODULE: ./sources/compilation/index.ts


;// CONCATENATED MODULE: ./sources/location/UnidocLocationTrackerState.ts
var UnidocLocationTrackerState;

(function (UnidocLocationTrackerState) {
  UnidocLocationTrackerState.SYMBOL = 0;
  UnidocLocationTrackerState.RETURN = 1;
  UnidocLocationTrackerState.DEFAULT = UnidocLocationTrackerState.SYMBOL;
  UnidocLocationTrackerState.ALL = [UnidocLocationTrackerState.SYMBOL, UnidocLocationTrackerState.RETURN];

  function toString(value) {
    switch (value) {
      case UnidocLocationTrackerState.SYMBOL:
        return 'SYMBOL';

      case UnidocLocationTrackerState.RETURN:
        return 'RETURN';

      default:
        return undefined;
    }
  }

  UnidocLocationTrackerState.toString = toString;

  function throwUnhandledState(value) {
    throw new Error('Unhandled or unknown unidoc source reader state ' + value + ' "' + toString(value) + '".');
  }

  UnidocLocationTrackerState.throwUnhandledState = throwUnhandledState;
})(UnidocLocationTrackerState || (UnidocLocationTrackerState = {}));
;// CONCATENATED MODULE: ./sources/location/UnidocLocationTracker.ts
function UnidocLocationTracker_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocLocationTracker_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocLocationTracker_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocLocationTracker_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocLocationTracker_defineProperties(Constructor, staticProps); return Constructor; }




var UnidocLocationTracker = /*#__PURE__*/function () {
  function UnidocLocationTracker() {
    UnidocLocationTracker_classCallCheck(this, UnidocLocationTracker);

    this.location = new UnidocLocation();
    this._state = UnidocLocationTrackerState.DEFAULT;
  }

  UnidocLocationTracker_createClass(UnidocLocationTracker, [{
    key: "nextString",
    value: function nextString(value) {
      for (var index = 0, size = value.length; index < size; ++index) {
        this.next(value.codePointAt(index));
      }
    }
  }, {
    key: "next",
    value: function next(symbol) {
      switch (symbol) {
        case CodePoint.CARRIAGE_RETURN:
          this.location.add(1, 0, 1);
          this.location.column = 0;
          this._state = UnidocLocationTrackerState.RETURN;
          break;

        case CodePoint.NEW_LINE:
          if (this._state === UnidocLocationTrackerState.RETURN) {
            this.location.add(0, 0, 1);
            this._state = UnidocLocationTrackerState.SYMBOL;
          } else {
            this.location.add(1, 0, 1);
          }

          this.location.column = 0;
          break;

        default:
          this.location.add(0, 1, 1);
          this._state = UnidocLocationTrackerState.SYMBOL;
          break;
      }
    }
  }, {
    key: "clear",
    value: function clear() {
      this.location.clear();
      this._state = UnidocLocationTrackerState.DEFAULT;
    }
  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.location.copy(toCopy.location);
      this._state = toCopy._state;
    }
  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocLocationTracker();
      result.copy(this);
      return result;
    }
  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocLocationTracker) {
        return other.location.equals(this.location) && other._state === this._state;
      }

      return false;
    }
  }]);

  return UnidocLocationTracker;
}();
;// CONCATENATED MODULE: ./sources/event/UnidocEventProducer.ts
function UnidocEventProducer_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocEventProducer_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocEventProducer_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocEventProducer_typeof(obj); }

function UnidocEventProducer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocEventProducer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocEventProducer_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocEventProducer_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocEventProducer_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocEventProducer_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { UnidocEventProducer_get = Reflect.get; } else { UnidocEventProducer_get = function _get(target, property, receiver) { var base = UnidocEventProducer_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return UnidocEventProducer_get(target, property, receiver || target); }

function UnidocEventProducer_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = UnidocEventProducer_getPrototypeOf(object); if (object === null) break; } return object; }

function UnidocEventProducer_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocEventProducer_setPrototypeOf(subClass, superClass); }

function UnidocEventProducer_setPrototypeOf(o, p) { UnidocEventProducer_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocEventProducer_setPrototypeOf(o, p); }

function UnidocEventProducer_createSuper(Derived) { var hasNativeReflectConstruct = UnidocEventProducer_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocEventProducer_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocEventProducer_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocEventProducer_possibleConstructorReturn(this, result); }; }

function UnidocEventProducer_possibleConstructorReturn(self, call) { if (call && (UnidocEventProducer_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocEventProducer_assertThisInitialized(self); }

function UnidocEventProducer_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocEventProducer_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocEventProducer_getPrototypeOf(o) { UnidocEventProducer_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocEventProducer_getPrototypeOf(o); }



var UnidocEventProducer = /*#__PURE__*/function (_ListenableUnidocProd) {
  UnidocEventProducer_inherits(UnidocEventProducer, _ListenableUnidocProd);

  var _super = UnidocEventProducer_createSuper(UnidocEventProducer);

  /**
  * Instantiate a new unidoc event.
  */
  function UnidocEventProducer() {
    var _this;

    UnidocEventProducer_classCallCheck(this, UnidocEventProducer);

    _this = _super.call(this);
    _this._event = new UnidocEvent();

    _this._event.origin.from.runtime();

    _this._event.origin.to.runtime();

    _this._index = 0;
    return _this;
  }
  /**
  * @see ListenableUnidocProducer.fail
  */


  UnidocEventProducer_createClass(UnidocEventProducer, [{
    key: "fail",
    value: function fail(error) {
      UnidocEventProducer_get(UnidocEventProducer_getPrototypeOf(UnidocEventProducer.prototype), "fail", this).call(this, error);
    }
    /**
    * @see ListenableUnidocProducer.initialize
    */

  }, {
    key: "initialize",
    value: function initialize() {
      UnidocEventProducer_get(UnidocEventProducer_getPrototypeOf(UnidocEventProducer.prototype), "initialize", this).call(this);
    }
  }, {
    key: "event",
    value: function event() {
      this._event.clear();

      return this;
    }
  }, {
    key: "withType",
    value: function withType(type) {
      this._event.type = type;
      return this;
    }
  }, {
    key: "withSymbols",
    value: function withSymbols(symbols) {
      this._event.symbols.copy(symbols);

      return this;
    }
  }, {
    key: "withTag",
    value: function withTag(tag) {
      this._event.tag = tag;
      return this;
    }
  }, {
    key: "withIdentifier",
    value: function withIdentifier(identifier) {
      this._event.identifier = identifier;
      return this;
    }
  }, {
    key: "withClasses",
    value: function withClasses(classes) {
      this._event.classes.clear();

      this._event.addClasses(classes);

      return this;
    }
  }, {
    key: "at",
    value: function at(origin) {
      this._event.origin.from.copy(origin);

      this._event.origin.to.copy(origin);

      return this;
    }
  }, {
    key: "from",
    value: function from(origin) {
      if (origin) {
        this._event.origin.from.copy(origin);

        return this;
      } else {
        this._event.origin.from.clear();

        return this._event.origin.from;
      }
    }
  }, {
    key: "to",
    value: function to(origin) {
      if (origin) {
        this._event.origin.to.copy(origin);

        return this;
      } else {
        this._event.origin.to.clear();

        return this._event.origin.to;
      }
    }
    /**
    * Produce a new word event.
    *
    * @param content - Content of the event to produce.
    *
    * @return This producer for chaining purposes.
    */

  }, {
    key: "produceWord",
    value: function produceWord(content) {
      this._event.asWord(content);

      this.produce(this._event);
      return this;
    }
    /**
    * Produce a new whitespace event.
    *
    * @param content - Content of the resulting event.
    *
    * @return This producer for chaining purposes.
    */

  }, {
    key: "produceWhitespace",
    value: function produceWhitespace(content) {
      this._event.asWhitespace(content);

      this.produce(this._event);
      return this;
    }
    /**
    * Configure this event as a new starting tag event.
    *
    * @param configuration - Type, identifiers and classes of the resulting tag.
    *
    * @return This producer for chaining purposes.
    */

  }, {
    key: "produceTagStart",
    value: function produceTagStart(configuration) {
      this._event.asTagStart(configuration);

      this.produce(this._event);
      return this;
    }
    /**
    * Configure this event as a new ending tag event.
    *
    * @param configuration - Type, identifiers and classes of the resulting tag.
    *
    * @return This producer for chaining purposes.
    */

  }, {
    key: "produceTagEnd",
    value: function produceTagEnd(configuration) {
      this._event.asTagEnd(configuration);

      this.produce(this._event);
      return this;
    }
  }, {
    key: "tag",
    value: function tag(configuration, definition) {
      this.produceTagStart(configuration);
      definition.call(this);
      this.produceTagEnd(configuration);
      return this;
    }
    /**
    * @see ListenableUnidocProducer.produce
    */

  }, {
    key: "produce",
    value: function produce() {
      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._event;
      event.index = this._index;
      this._index += 1;

      UnidocEventProducer_get(UnidocEventProducer_getPrototypeOf(UnidocEventProducer.prototype), "produce", this).call(this, event);
    }
    /**
    * @see ListenableUnidocProducer.complete
    */

  }, {
    key: "complete",
    value: function complete() {
      UnidocEventProducer_get(UnidocEventProducer_getPrototypeOf(UnidocEventProducer.prototype), "complete", this).call(this);
    }
  }, {
    key: "clear",
    value: function clear() {
      this._event.clear();

      this._index = 0;
      this.removeAllEventListener();
    }
  }]);

  return UnidocEventProducer;
}(ListenableUnidocProducer);

(function (UnidocEventProducer) {
  function create() {
    return new UnidocEventProducer();
  }

  UnidocEventProducer.create = create;
})(UnidocEventProducer || (UnidocEventProducer = {}));
;// CONCATENATED MODULE: ./sources/event/TrackedUnidocEventProducer.ts
function TrackedUnidocEventProducer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function TrackedUnidocEventProducer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function TrackedUnidocEventProducer_createClass(Constructor, protoProps, staticProps) { if (protoProps) TrackedUnidocEventProducer_defineProperties(Constructor.prototype, protoProps); if (staticProps) TrackedUnidocEventProducer_defineProperties(Constructor, staticProps); return Constructor; }




var DEFAULT_BLOCK_ENDING = '}';
var TrackedUnidocEventProducer = /*#__PURE__*/function () {
  /**
  * Instantiate a new unidoc event.
  */
  function TrackedUnidocEventProducer() {
    TrackedUnidocEventProducer_classCallCheck(this, TrackedUnidocEventProducer);

    this._producer = new UnidocEventProducer();
    this._tracker = new UnidocLocationTracker();
  }
  /**
  * @see UnidocProducer.initialize
  */


  TrackedUnidocEventProducer_createClass(TrackedUnidocEventProducer, [{
    key: "initialize",
    value: function initialize() {
      this._producer.initialize();

      return this;
    }
    /**
    * Produce a new word event.
    *
    * @param content - Content of the event to produce.
    * @param [line = content] - Line to use for computing the begining and the ending point of the event.
    *
    * @return This producer for chaining purposes.
    */

  }, {
    key: "produceWord",
    value: function produceWord(content) {
      var line = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : content;

      this._producer.from().text(this._tracker.location).runtime();

      this._tracker.nextString(line);

      this._producer.to().text(this._tracker.location).runtime();

      this._producer.produceWord(content);

      return this;
    }
    /**
    * Produce a text.
    *
    * @param lines - Lines of text to produce.
    *
    * @return This producer for chaining purposes.
    */

  }, {
    key: "produceText",
    value: function produceText() {
      for (var _len = arguments.length, lines = new Array(_len), _key = 0; _key < _len; _key++) {
        lines[_key] = arguments[_key];
      }

      return this.produceString(lines.join('\r\n'));
    }
    /**
    * Produce a line of text.
    *
    * @param line - Line of text to produce.
    *
    * @return This producer for chaining purposes.
    */

  }, {
    key: "produceString",
    value: function produceString(line) {
      if (line.length > 0) {
        var offset = 0;
        var spaces = CodePoint.isWhitespace(line.codePointAt(0));

        for (var index = 1, size = line.length; index < size; ++index) {
          if (CodePoint.isWhitespace(line.codePointAt(index)) !== spaces) {
            if (spaces) {
              this.produceWhitespace(line.substring(offset, index));
            } else {
              this.produceWord(line.substring(offset, index));
            }

            offset = index;
            spaces = !spaces;
          }
        }

        if (spaces) {
          this.produceWhitespace(line.substring(offset));
        } else {
          this.produceWord(line.substring(offset));
        }
      }

      return this;
    }
    /**
    * Produce a new whitespace event.
    *
    * @param content - Content of the resulting event.
    * @param [line = content] - Line to use for computing the begining and the ending point of the event.
    *
    * @return This producer for chaining purposes.
    */

  }, {
    key: "produceWhitespace",
    value: function produceWhitespace(content) {
      var line = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : content;

      this._producer.from().text(this._tracker.location).runtime();

      this._tracker.nextString(line);

      this._producer.to().text(this._tracker.location).runtime();

      this._producer.produceWhitespace(content);

      return this;
    }
    /**
    * Configure this event as a new starting tag event.
    *
    * @param configuration - Type, identifiers and classes of the resulting tag.
    * @param [line = '\\' + configuration + '{'] - Line to use for computing the begining and the ending point of the event.
    *
    * @return This producer for chaining purposes.
    */

  }, {
    key: "produceTagStart",
    value: function produceTagStart(configuration) {
      var line = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '\\' + configuration + '{';

      this._producer.from().text(this._tracker.location).runtime();

      this._tracker.nextString(line);

      this._producer.to().text(this._tracker.location).runtime();

      this._producer.produceTagStart(configuration);

      return this;
    }
    /**
    * Configure this event as a new ending tag event.
    *
    * @param configuration - Type, identifiers and classes of the resulting tag.
    * @param [line = DEFAULT_BLOCK_ENDING] - Line to use for computing the begining and the ending point of the event.
    *
    * @return This producer for chaining purposes.
    */

  }, {
    key: "produceTagEnd",
    value: function produceTagEnd(configuration) {
      var line = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_BLOCK_ENDING;

      this._producer.from().text(this._tracker.location).runtime();

      this._tracker.nextString(line);

      this._producer.to().text(this._tracker.location).runtime();

      this._producer.produceTagEnd(configuration);

      return this;
    }
  }, {
    key: "tag",
    value: function tag(configuration, definition) {
      this.produceTagStart(configuration);
      definition.call(this);
      this.produceTagEnd(configuration);
      return this;
    }
    /**
    * @see ListenableUnidocProducer.complete
    */

  }, {
    key: "complete",
    value: function complete() {
      this._producer.complete();
    }
  }, {
    key: "addEventListener",
    value: function addEventListener(event, listener) {
      this._producer.addEventListener(event, listener);
    }
  }, {
    key: "removeEventListener",
    value: function removeEventListener(event, listener) {
      this._producer.removeEventListener(event, listener);
    }
  }, {
    key: "removeAllEventListener",
    value: function removeAllEventListener() {
      var _this$_producer;

      (_this$_producer = this._producer).removeAllEventListener.apply(_this$_producer, arguments);
    }
  }]);

  return TrackedUnidocEventProducer;
}();

(function (TrackedUnidocEventProducer) {
  function create() {
    return new TrackedUnidocEventProducer();
  }

  TrackedUnidocEventProducer.create = create;
})(TrackedUnidocEventProducer || (TrackedUnidocEventProducer = {}));
;// CONCATENATED MODULE: ./sources/event/index.ts




;// CONCATENATED MODULE: ./sources/symbol/UnidocSymbolBuffer.ts
function UnidocSymbolBuffer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocSymbolBuffer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocSymbolBuffer_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocSymbolBuffer_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocSymbolBuffer_defineProperties(Constructor, staticProps); return Constructor; }



var UnidocSymbolBuffer = /*#__PURE__*/function () {
  function UnidocSymbolBuffer(capacity) {
    UnidocSymbolBuffer_classCallCheck(this, UnidocSymbolBuffer);

    this.from = new UnidocOrigin(16);
    this.to = new UnidocOrigin(16);
    this._symbols = gl_tool_collection_.Pack.uint32(capacity);
    this.symbols = this._symbols.view();
  }

  UnidocSymbolBuffer_createClass(UnidocSymbolBuffer, [{
    key: "bufferize",
    value: function bufferize(symbol) {
      if (this._symbols.size <= 0) {
        this.from.copy(symbol.origin.from);
      }

      this.to.copy(symbol.origin.to);

      this._symbols.push(symbol.symbol);
    }
  }, {
    key: "clear",
    value: function clear() {
      this.from.clear();
      this.to.clear();

      this._symbols.clear();
    }
  }]);

  return UnidocSymbolBuffer;
}();
;// CONCATENATED MODULE: ./sources/token/UnidocTokenType.ts
var UnidocTokenType;

(function (UnidocTokenType) {
  UnidocTokenType.DEFAULT_TYPE = 0;
  UnidocTokenType.IDENTIFIER = 0;
  UnidocTokenType.CLASS = 1;
  UnidocTokenType.TAG = 2;
  UnidocTokenType.BLOCK_START = 3;
  UnidocTokenType.BLOCK_END = 4;
  UnidocTokenType.NEW_LINE = 5;
  UnidocTokenType.SPACE = 6;
  UnidocTokenType.WORD = 7;
  UnidocTokenType.ALL = [UnidocTokenType.IDENTIFIER, UnidocTokenType.CLASS, UnidocTokenType.TAG, UnidocTokenType.BLOCK_START, UnidocTokenType.BLOCK_END, UnidocTokenType.NEW_LINE, UnidocTokenType.SPACE, UnidocTokenType.WORD];
  /**
  * Return a string representation of a given unidoc token type.
  *
  * @param value - Unidoc token type to stringify.
  */

  function toString(value) {
    switch (value) {
      case UnidocTokenType.IDENTIFIER:
        return 'IDENTIFIER';

      case UnidocTokenType.CLASS:
        return 'CLASS';

      case UnidocTokenType.TAG:
        return 'TAG';

      case UnidocTokenType.BLOCK_START:
        return 'BLOCK_START';

      case UnidocTokenType.BLOCK_END:
        return 'BLOCK_END';

      case UnidocTokenType.NEW_LINE:
        return 'NEW_LINE';

      case UnidocTokenType.SPACE:
        return 'SPACE';

      case UnidocTokenType.WORD:
        return 'WORD';

      default:
        return undefined;
    }
  }

  UnidocTokenType.toString = toString;
})(UnidocTokenType || (UnidocTokenType = {}));
;// CONCATENATED MODULE: ./sources/token/UnidocToken.ts
function UnidocToken_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = UnidocToken_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function UnidocToken_toConsumableArray(arr) { return UnidocToken_arrayWithoutHoles(arr) || UnidocToken_iterableToArray(arr) || UnidocToken_unsupportedIterableToArray(arr) || UnidocToken_nonIterableSpread(); }

function UnidocToken_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function UnidocToken_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return UnidocToken_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return UnidocToken_arrayLikeToArray(o, minLen); }

function UnidocToken_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function UnidocToken_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return UnidocToken_arrayLikeToArray(arr); }

function UnidocToken_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function UnidocToken_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocToken_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocToken_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocToken_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocToken_defineProperties(Constructor, staticProps); return Constructor; }






/**
* A unidoc token.
*/

var UnidocToken = /*#__PURE__*/function () {
  /**
  * Instantiate a new unidoc token.
  *
  * @param [capacity = 16] - Initial capacity of the symbol buffer of this token.
  */
  function UnidocToken() {
    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 16;

    UnidocToken_classCallCheck(this, UnidocToken);

    this.index = 0;
    this.type = UnidocTokenType.DEFAULT_TYPE;
    this.symbols = gl_tool_collection_.Pack.uint32(capacity);
    this.origin = new UnidocRangeOrigin();
  }
  /**
  * @return This token as a javascript string.
  */


  UnidocToken_createClass(UnidocToken, [{
    key: "substring",

    /**
    * A part of this token as a javascript string.
    *
    * @param start - Number of symbols of this token to skip.
    * @param [length = this.symbols.size - start] - Number of symbols of this token to keep.
    *
    * @return The requested part of this token as a string.
    */
    value: function substring(start) {
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.symbols.size - start;
      var buffer = [];
      var from = start;
      var to = start + length;

      for (var index = from; index < to; ++index) {
        buffer.push(this.symbols.get(index));
      }

      return String.fromCodePoint.apply(String, buffer);
    }
    /**
    * @return This token as a string without invisible symbols.
    */

  }, {
    key: "as",

    /**
    * Configure this token to be of the given type, at the given location and with
    * the given code points.
    *
    * @param type - New type of this token.
    * @param value - New code points of this token.
    */
    value: function as(type, value) {
      this.type = type;
      this.text = value;
    }
    /**
    * Configure this token as an identifier token that start at the given location
    * and contains the given code points.
    *
    * @param value - New code points of this token.
    */

  }, {
    key: "asIdentifier",
    value: function asIdentifier(value) {
      this.as(UnidocTokenType.IDENTIFIER, value);
    }
    /**
    * Configure this token as a class token that start at the given location and
    * that contains the given code points.
    *
    * @param value - New code points of this token.
    */

  }, {
    key: "asClass",
    value: function asClass(value) {
      this.as(UnidocTokenType.CLASS, value);
    }
    /**
    * Configure this token as a tag token that start at the given location and
    * contains the given code points.
    *
    * @param value - New code points of this token.
    */

  }, {
    key: "asTag",
    value: function asTag(value) {
      this.as(UnidocTokenType.TAG, value);
    }
    /**
    * Configure this token as a block start token that start at the given
    * location.
    */

  }, {
    key: "asBlockStart",
    value: function asBlockStart() {
      this.as(UnidocTokenType.BLOCK_START, '{');
    }
    /**
    * Configure this token as a block start token that start at the given
    * location.
    */

  }, {
    key: "asBlockEnd",
    value: function asBlockEnd() {
      this.as(UnidocTokenType.BLOCK_END, '}');
    }
    /**
    * Configure this token as a space token that start at the given location and
    * that contains the given code points.
    *
    * @param value - New code points of this token.
    */

  }, {
    key: "asSpace",
    value: function asSpace(value) {
      this.as(UnidocTokenType.SPACE, value);
    }
    /**
    * Configure this token as a space token that start at the given location and
    * that contains the given code points.
    *
    * @param [type = '\r\n'] - Type of new line to configure.
    */

  }, {
    key: "asNewline",
    value: function asNewline() {
      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '\r\n';
      this.as(UnidocTokenType.NEW_LINE, type);
    }
    /**
    * Configure this token as a word token that start at the given location and
    * that contains the given code points.
    *
    * @param value - New code points of this token.
    */

  }, {
    key: "asWord",
    value: function asWord(value) {
      this.as(UnidocTokenType.WORD, value);
    }
    /**
    * Assess if this token is a tag of the given type.
    *
    * @param tag - Type of tag to check.
    *
    * @return True if this token is a tag of the given type.
    */

  }, {
    key: "isTag",
    value: function isTag(tag) {
      if (this.type === UnidocTokenType.TAG) {
        if (this.symbols.get(0) !== CodePoint.ANTISLASH) return false;

        for (var index = 1; index < this.symbols.size; ++index) {
          var origin = this.symbols.get(index); // no undefined code point for valid string instances due to boundaries limitation

          var target = tag.codePointAt(index - 1);

          if (origin >= 65 && origin <= 90) {
            origin += 32;
          }

          if (target >= 65 && target <= 90) {
            target += 32;
          }

          if (origin !== target) {
            return false;
          }
        }

        return true;
      } else {
        return false;
      }
    }
    /**
    * Deep-copy another token instance.
    *
    * @param toCopy - Another token instance to copy.
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.index = toCopy.index;
      this.type = toCopy.type;
      this.origin.copy(toCopy.origin);
      this.symbols.copy(toCopy.symbols);
    }
    /**
    * @return A deep-copy of this token.
    */

  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocToken(this.symbols.capacity);
      result.copy(this);
      return result;
    }
    /**
    * Reset this token instance in order to reuse it.
    */

  }, {
    key: "clear",
    value: function clear() {
      this.index = 0;
      this.type = UnidocTokenType.DEFAULT_TYPE;
      this.symbols.clear();
      this.origin.clear();
    }
    /**
    * @see Object#toString
    */

  }, {
    key: "toString",
    value: function toString() {
      var result = '';
      result += 'unidoc token ';
      result += this.index.toString().padEnd(5);
      result += ' #';
      result += this.type.toString().padEnd(2);
      result += ' (';
      result += (UnidocTokenType.toString(this.type) || 'undefined').padEnd(10);
      result += ') "';
      result += this.debugText;
      result += '" ';
      result += this.origin.toString();
      return result;
    }
    /**
    * @see Object#equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocToken) {
        return other.index === this.index && other.type === this.type && other.origin.equals(this.origin) && other.symbols.equals(this.symbols);
      }

      return false;
    }
  }, {
    key: "text",
    get: function get() {
      return String.fromCodePoint.apply(String, UnidocToken_toConsumableArray(this.symbols));
    }
    /**
    * Update the symbol buffer of this token.
    *
    * @param value - A string to bufferize.
    */
    ,
    set: function set(value) {
      this.symbols.clear();

      for (var index = 0; index < value.length; ++index) {
        // no undefined code point for valid string instances due to boundaries limitation
        this.symbols.push(value.codePointAt(index));
      }
    }
  }, {
    key: "debugText",
    get: function get() {
      var buffer = [];

      var _iterator = UnidocToken_createForOfIteratorHelper(this.symbols),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var codePoint = _step.value;

          switch (codePoint) {
            case CodePoint.NEW_LINE:
              buffer.push(CodePoint.COLON);
              buffer.push(CodePoint.n);
              break;

            case CodePoint.CARRIAGE_RETURN:
              buffer.push(CodePoint.COLON);
              buffer.push(CodePoint.r);
              break;

            case CodePoint.TABULATION:
              buffer.push(CodePoint.COLON);
              buffer.push(CodePoint.t);
              break;

            case CodePoint.SPACE:
              buffer.push(CodePoint.COLON);
              buffer.push(CodePoint.s);
              break;

            case CodePoint.FORM_FEED:
              buffer.push(CodePoint.COLON);
              buffer.push(CodePoint.f);
              break;

            default:
              buffer.push(codePoint);
              break;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return String.fromCodePoint.apply(String, buffer);
    }
  }]);

  return UnidocToken;
}();

(function (UnidocToken) {
  function create() {
    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 16;
    return new UnidocToken(capacity);
  }

  UnidocToken.create = create;

  function copy(toCopy) {
    return toCopy == null ? toCopy : toCopy.clone();
  }

  UnidocToken.copy = copy;
  UnidocToken.ALLOCATOR = gl_tool_collection_.Duplicator.fromFactory(create);
})(UnidocToken || (UnidocToken = {}));
;// CONCATENATED MODULE: ./sources/token/UnidocTokenProducer.ts
function UnidocTokenProducer_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocTokenProducer_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocTokenProducer_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocTokenProducer_typeof(obj); }

function UnidocTokenProducer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocTokenProducer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocTokenProducer_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocTokenProducer_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocTokenProducer_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocTokenProducer_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { UnidocTokenProducer_get = Reflect.get; } else { UnidocTokenProducer_get = function _get(target, property, receiver) { var base = UnidocTokenProducer_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return UnidocTokenProducer_get(target, property, receiver || target); }

function UnidocTokenProducer_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = UnidocTokenProducer_getPrototypeOf(object); if (object === null) break; } return object; }

function UnidocTokenProducer_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocTokenProducer_setPrototypeOf(subClass, superClass); }

function UnidocTokenProducer_setPrototypeOf(o, p) { UnidocTokenProducer_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocTokenProducer_setPrototypeOf(o, p); }

function UnidocTokenProducer_createSuper(Derived) { var hasNativeReflectConstruct = UnidocTokenProducer_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocTokenProducer_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocTokenProducer_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocTokenProducer_possibleConstructorReturn(this, result); }; }

function UnidocTokenProducer_possibleConstructorReturn(self, call) { if (call && (UnidocTokenProducer_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocTokenProducer_assertThisInitialized(self); }

function UnidocTokenProducer_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocTokenProducer_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocTokenProducer_getPrototypeOf(o) { UnidocTokenProducer_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocTokenProducer_getPrototypeOf(o); }



/**
* A unidoc token producer.
*/

var UnidocTokenProducer = /*#__PURE__*/function (_ListenableUnidocProd) {
  UnidocTokenProducer_inherits(UnidocTokenProducer, _ListenableUnidocProd);

  var _super = UnidocTokenProducer_createSuper(UnidocTokenProducer);

  /**
  * Instantiate a new unidoc token.
  *
  * @param [capacity = 16] - Initial capacity of the symbol buffer of this token.
  */
  function UnidocTokenProducer() {
    var _this;

    UnidocTokenProducer_classCallCheck(this, UnidocTokenProducer);

    _this = _super.call(this);
    _this._token = new UnidocToken();

    _this._token.origin.from.runtime();

    _this._token.origin.to.runtime();

    _this._index = 0;
    return _this;
  }
  /**
  * @see ListenableUnidocProducer.initialize
  */


  UnidocTokenProducer_createClass(UnidocTokenProducer, [{
    key: "initialize",
    value: function initialize() {
      UnidocTokenProducer_get(UnidocTokenProducer_getPrototypeOf(UnidocTokenProducer.prototype), "initialize", this).call(this);
    }
  }, {
    key: "initializeIfFirst",
    value: function initializeIfFirst() {
      if (this._index === 0) {
        this.initialize();
      }
    }
    /**
    * @see ListenableUnidocProducer.fail
    */

  }, {
    key: "fail",
    value: function fail(error) {
      UnidocTokenProducer_get(UnidocTokenProducer_getPrototypeOf(UnidocTokenProducer.prototype), "fail", this).call(this, error);
    }
  }, {
    key: "at",
    value: function at(origin) {
      this._token.origin.from.copy(origin);

      this._token.origin.to.copy(origin);

      return this;
    }
  }, {
    key: "from",
    value: function from(origin) {
      if (origin) {
        this._token.origin.from.copy(origin);

        return this;
      } else {
        this._token.origin.from.clear();

        return this._token.origin.from;
      }
    }
  }, {
    key: "to",
    value: function to(origin) {
      if (origin) {
        this._token.origin.to.copy(origin);

        return this;
      } else {
        this._token.origin.to.clear();

        return this._token.origin.to;
      }
    }
  }, {
    key: "withSymbols",
    value: function withSymbols(symbols) {
      this._token.symbols.copy(symbols);

      return this;
    }
  }, {
    key: "withType",
    value: function withType(type) {
      this._token.type = type;
      return this;
    }
    /**
    * Produce an identifier token.
    *
    * @param value - Code points of the token to produce.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceIdentifier",
    value: function produceIdentifier(value) {
      this._token.asIdentifier(value);

      this.produce(this._token);
      return this;
    }
    /**
    * Produce a class token.
    *
    * @param value - Code points of the token to produce.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceClass",
    value: function produceClass(value) {
      this._token.asClass(value);

      this.produce(this._token);
      return this;
    }
    /**
    * Produce a tag token.
    *
    * @param value - Code points of the token to produce.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceTag",
    value: function produceTag(value) {
      this._token.asTag(value);

      this.produce(this._token);
      return this;
    }
    /**
    * Produce a block start token.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceBlockStart",
    value: function produceBlockStart() {
      this._token.asBlockStart();

      this.produce(this._token);
      return this;
    }
    /**
    * Produce a block end token.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceBlockEnd",
    value: function produceBlockEnd() {
      this._token.asBlockEnd();

      this.produce(this._token);
      return this;
    }
    /**
    * Produce a space token.
    *
    * @param value - Code points of the token to produce.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceSpace",
    value: function produceSpace(value) {
      this._token.asSpace(value);

      this.produce(this._token);
      return this;
    }
    /**
    * Produce a newline token.
    *
    * @param [type = '\r\n'] - Type of new line to produce.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceNewline",
    value: function produceNewline() {
      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '\r\n';

      this._token.asNewline(type);

      this.produce(this._token);
      return this;
    }
    /**
    * Produce a word token.
    *
    * @param value - Code points of the token to produce.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceWord",
    value: function produceWord(value) {
      this._token.asWord(value);

      this.produce(this._token);
      return this;
    }
    /**
    * @see ListenableUnidocProducer.produce
    */

  }, {
    key: "produce",
    value: function produce() {
      var token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._token;
      token.index = this._index;
      this._index += 1;

      UnidocTokenProducer_get(UnidocTokenProducer_getPrototypeOf(UnidocTokenProducer.prototype), "produce", this).call(this, token);
    }
  }, {
    key: "clear",
    value: function clear() {
      this._index = 0;

      this._token.clear();

      this.removeAllEventListener();
    }
    /**
    * @see ListenableUnidocProducer.complete
    */

  }, {
    key: "complete",
    value: function complete() {
      UnidocTokenProducer_get(UnidocTokenProducer_getPrototypeOf(UnidocTokenProducer.prototype), "complete", this).call(this);
    }
  }]);

  return UnidocTokenProducer;
}(ListenableUnidocProducer);

(function (UnidocTokenProducer) {
  function create() {
    return new UnidocTokenProducer();
  }

  UnidocTokenProducer.create = create;
})(UnidocTokenProducer || (UnidocTokenProducer = {}));
;// CONCATENATED MODULE: ./sources/lexer/UnidocLexerState.ts
/**
*
*/
var UnidocLexerState;

(function (UnidocLexerState) {
  /**
  *
  */
  UnidocLexerState.START = 0;
  /**
  *
  */

  UnidocLexerState.ANTISLASH = 1;
  /**
  *
  */

  UnidocLexerState.SHARP = 2;
  /**
  *
  */

  UnidocLexerState.IDENTIFIER = 3;
  /**
  *
  */

  UnidocLexerState.DOT = 4;
  /**
  *
  */

  UnidocLexerState.CLASS = 5;
  /**
  *
  */

  UnidocLexerState.TAG = 6;
  /**
  *
  */

  UnidocLexerState.SPACE = 7;
  /**
  *
  */

  UnidocLexerState.CARRIAGE_RETURN = 8;
  /**
  *
  */

  UnidocLexerState.WORD = 9;
  /**
  *
  */

  UnidocLexerState.END = 10;
  /**
  *
  */

  UnidocLexerState.ALL = [UnidocLexerState.START, UnidocLexerState.ANTISLASH, UnidocLexerState.SHARP, UnidocLexerState.IDENTIFIER, UnidocLexerState.DOT, UnidocLexerState.CLASS, UnidocLexerState.TAG, UnidocLexerState.SPACE, UnidocLexerState.CARRIAGE_RETURN, UnidocLexerState.WORD, UnidocLexerState.END];
  /**
  *
  */

  UnidocLexerState.DEFAULT = UnidocLexerState.START;
  /**
  *
  */

  function toString(state) {
    switch (state) {
      case UnidocLexerState.START:
        return 'START';

      case UnidocLexerState.ANTISLASH:
        return 'ANTISLASH';

      case UnidocLexerState.SHARP:
        return 'SHARP';

      case UnidocLexerState.IDENTIFIER:
        return 'IDENTIFIER';

      case UnidocLexerState.DOT:
        return 'DOT';

      case UnidocLexerState.CLASS:
        return 'CLASS';

      case UnidocLexerState.TAG:
        return 'TAG';

      case UnidocLexerState.SPACE:
        return 'SPACE';

      case UnidocLexerState.CARRIAGE_RETURN:
        return 'CARRIAGE_RETURN';

      case UnidocLexerState.WORD:
        return 'WORD';

      case UnidocLexerState.END:
        return 'END';

      default:
        return undefined;
    }
  }

  UnidocLexerState.toString = toString;
  /**
  *
  */

  function toDebugString(state) {
    return '#' + state + ' (' + (toString(state) || 'undefined') + ')';
  }

  UnidocLexerState.toDebugString = toDebugString;
})(UnidocLexerState || (UnidocLexerState = {}));
;// CONCATENATED MODULE: ./sources/lexer/UnidocLexer.ts
function UnidocLexer_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocLexer_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocLexer_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocLexer_typeof(obj); }

function UnidocLexer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocLexer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocLexer_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocLexer_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocLexer_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocLexer_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocLexer_setPrototypeOf(subClass, superClass); }

function UnidocLexer_setPrototypeOf(o, p) { UnidocLexer_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocLexer_setPrototypeOf(o, p); }

function UnidocLexer_createSuper(Derived) { var hasNativeReflectConstruct = UnidocLexer_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocLexer_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocLexer_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocLexer_possibleConstructorReturn(this, result); }; }

function UnidocLexer_possibleConstructorReturn(self, call) { if (call && (UnidocLexer_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocLexer_assertThisInitialized(self); }

function UnidocLexer_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocLexer_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocLexer_getPrototypeOf(o) { UnidocLexer_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocLexer_getPrototypeOf(o); }







/**
* Unidoc lexer.
*/

var UnidocLexer = /*#__PURE__*/function (_SubscribableUnidocCo) {
  UnidocLexer_inherits(UnidocLexer, _SubscribableUnidocCo);

  var _super = UnidocLexer_createSuper(UnidocLexer);

  /**
  * Instantiate a new unidoc lexer.
  *
  * @param [capacity = 64] - Unidoc lexer internal symbol buffer capacity.
  */
  function UnidocLexer() {
    var _this;

    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 64;

    UnidocLexer_classCallCheck(this, UnidocLexer);

    _this = _super.call(this);
    _this._state = UnidocLexerState.START;
    _this._symbols = new UnidocSymbolBuffer(capacity);
    _this._producer = new UnidocTokenProducer();
    return _this;
  }
  /**
  * @return The current state of this lexer.
  */


  UnidocLexer_createClass(UnidocLexer, [{
    key: "handleInitialization",

    /**
    * @see UnidocConsumer.handleInitialization
    */
    value: function handleInitialization() {}
    /**
    * @see UnidocConsumer.handleProduction
    */

  }, {
    key: "handleProduction",
    value: function handleProduction(symbol) {
      this.next(symbol);
    }
    /**
    * @see UnidocConsumer.handleCompletion
    */

  }, {
    key: "handleCompletion",
    value: function handleCompletion() {
      this.complete();
    }
    /**
    * @see UnidocConsumer.handleFailure
    */

  }, {
    key: "handleFailure",
    value: function handleFailure(error) {
      this._producer.fail(error);
    }
    /**
    * Feed this lexer with the given symbol.
    *
    * @param codePoint - A symbol to give to this lexer.
    */

  }, {
    key: "next",
    value: function next(symbol) {
      switch (this._state) {
        case UnidocLexerState.SPACE:
          this.handleAfterSpace(symbol);
          break;

        case UnidocLexerState.CARRIAGE_RETURN:
          this.handleAfterCarriageReturn(symbol);
          break;

        case UnidocLexerState.SHARP:
          this.handleAfterSharp(symbol);
          break;

        case UnidocLexerState.IDENTIFIER:
          this.handleAfterIdentifier(symbol);
          break;

        case UnidocLexerState.DOT:
          this.handleAfterDot(symbol);
          break;

        case UnidocLexerState.CLASS:
          this.handleAfterClass(symbol);
          break;

        case UnidocLexerState.ANTISLASH:
          this.handleAfterAntislash(symbol);
          break;

        case UnidocLexerState.TAG:
          this.handleAfterTag(symbol);
          break;

        case UnidocLexerState.WORD:
          this.handleAfterWord(symbol);
          break;

        default:
          this.handleAfterStart(symbol);
          break;
      }
    }
    /**
    * Notify to this lexer that the stream of symbol has terminated.
    */

  }, {
    key: "complete",
    value: function complete() {
      switch (this._state) {
        case UnidocLexerState.END:
          //this.error()
          break;

        case UnidocLexerState.SHARP:
        case UnidocLexerState.DOT:
        case UnidocLexerState.ANTISLASH:
          this.emitBuffer(UnidocTokenType.WORD);
          break;

        case UnidocLexerState.SPACE:
          this.emitBuffer(UnidocTokenType.SPACE);
          break;

        case UnidocLexerState.CARRIAGE_RETURN:
          this.emitBuffer(UnidocTokenType.NEW_LINE);
          break;

        case UnidocLexerState.TAG:
          this.emitBuffer(UnidocTokenType.TAG);
          break;

        case UnidocLexerState.WORD:
          this.emitBuffer(UnidocTokenType.WORD);
          break;

        case UnidocLexerState.IDENTIFIER:
          this.emitBuffer(UnidocTokenType.IDENTIFIER);
          break;

        case UnidocLexerState.CLASS:
          this.emitBuffer(UnidocTokenType.CLASS);
          break;

        case UnidocLexerState.START:
          break;
      }

      this._state = UnidocLexerState.END;

      this._producer.complete();
    }
    /**
    * Handle the given symbol after an antislash.
    *
    * @param symbol - The symbol to handle.
    */

  }, {
    key: "handleAfterAntislash",
    value: function handleAfterAntislash(symbol) {
      var codePoint = symbol.symbol;

      if (codePoint >= CodePoint.a && codePoint <= CodePoint.z || codePoint >= CodePoint.A && codePoint <= CodePoint.Z || codePoint >= CodePoint.ZERO && codePoint <= CodePoint.NINE || codePoint === CodePoint.MINUS || codePoint === CodePoint.DOUBLE_DOT) {
        this._symbols.bufferize(symbol);

        this._state = UnidocLexerState.TAG;
      } else {
        switch (codePoint) {
          case CodePoint.SPACE:
          case CodePoint.TABULATION:
          case CodePoint.FORM_FEED:
          case CodePoint.NEW_LINE:
          case CodePoint.CARRIAGE_RETURN:
            this.emitBuffer(UnidocTokenType.WORD);
            this._state = UnidocLexerState.START;
            this.handleAfterStart(symbol);
            break;

          default:
            this._symbols.bufferize(symbol);

            this._state = UnidocLexerState.WORD;
            break;
        }
      }
    }
    /**
    * Handle the given symbol after a tag.
    *
    * @param symbol - The symbol to handle.
    */

  }, {
    key: "handleAfterTag",
    value: function handleAfterTag(symbol) {
      var codePoint = symbol.symbol;

      if (codePoint >= CodePoint.a && codePoint <= CodePoint.z || codePoint >= CodePoint.A && codePoint <= CodePoint.Z || codePoint >= CodePoint.ZERO && codePoint <= CodePoint.NINE || codePoint === CodePoint.MINUS) {
        this._symbols.bufferize(symbol);
      } else {
        switch (codePoint) {
          case CodePoint.TABULATION:
          case CodePoint.ANTISLASH:
          case CodePoint.SPACE:
          case CodePoint.FORM_FEED:
          case CodePoint.NEW_LINE:
          case CodePoint.CARRIAGE_RETURN:
          case CodePoint.DOT:
          case CodePoint.SHARP:
          case CodePoint.OPENING_BRACE:
          case CodePoint.CLOSING_BRACE:
            this.emitBuffer(UnidocTokenType.TAG);
            this._state = UnidocLexerState.START;
            this.handleAfterStart(symbol);
            break;

          default:
            this._symbols.bufferize(symbol);

            this._state = UnidocLexerState.WORD;
            break;
        }
      }
    }
    /**
    * Handle the given symbol after a word.
    *
    * @param symbol - The symbol to handle.
    */

  }, {
    key: "handleAfterWord",
    value: function handleAfterWord(symbol) {
      var codePoint = symbol.symbol;

      switch (codePoint) {
        case CodePoint.TABULATION:
        case CodePoint.SPACE:
        case CodePoint.FORM_FEED:
        case CodePoint.NEW_LINE:
        case CodePoint.ANTISLASH:
        case CodePoint.CARRIAGE_RETURN:
        case CodePoint.OPENING_BRACE:
        case CodePoint.CLOSING_BRACE:
          this.emitBuffer(UnidocTokenType.WORD);
          this._state = UnidocLexerState.START;
          this.handleAfterStart(symbol);
          break;

        default:
          this._symbols.bufferize(symbol);

          break;
      }
    }
    /**
    * Handle the given symbol after a carriage return.
    *
    * @param symbol - The symbol to handle.
    */

  }, {
    key: "handleAfterCarriageReturn",
    value: function handleAfterCarriageReturn(symbol) {
      var codePoint = symbol.symbol;

      switch (codePoint) {
        case CodePoint.NEW_LINE:
          this._symbols.bufferize(symbol);

          this.emitBuffer(UnidocTokenType.NEW_LINE);
          this._state = UnidocLexerState.START;
          break;

        default:
          this.emitBuffer(UnidocTokenType.NEW_LINE);
          this._state = UnidocLexerState.START;
          this.handleAfterStart(symbol);
          break;
      }
    }
    /**
    * Handle the given symbol after a space.
    *
    * @param symbol - The symbol to handle.
    */

  }, {
    key: "handleAfterSpace",
    value: function handleAfterSpace(symbol) {
      var codePoint = symbol.symbol;

      switch (codePoint) {
        case CodePoint.SPACE:
        case CodePoint.TABULATION:
        case CodePoint.FORM_FEED:
          this._symbols.bufferize(symbol);

          break;

        default:
          this.emitBuffer(UnidocTokenType.SPACE);
          this._state = UnidocLexerState.START;
          this.handleAfterStart(symbol);
          break;
      }
    }
    /**
    * Handle the given symbol after a dot.
    *
    * @param symbol - The symbol to handle.
    */

  }, {
    key: "handleAfterDot",
    value: function handleAfterDot(symbol) {
      var codePoint = symbol.symbol;

      if (codePoint >= CodePoint.a && codePoint <= CodePoint.z || codePoint >= CodePoint.A && codePoint <= CodePoint.Z || codePoint >= CodePoint.ZERO && codePoint <= CodePoint.NINE || codePoint === CodePoint.MINUS) {
        this._symbols.bufferize(symbol);

        this._state = UnidocLexerState.CLASS;
      } else {
        switch (codePoint) {
          case CodePoint.SPACE:
          case CodePoint.TABULATION:
          case CodePoint.FORM_FEED:
          case CodePoint.NEW_LINE:
          case CodePoint.CARRIAGE_RETURN:
          case CodePoint.OPENING_BRACE:
          case CodePoint.CLOSING_BRACE:
            this.emitBuffer(UnidocTokenType.WORD);
            this._state = UnidocLexerState.START;
            this.handleAfterStart(symbol);
            break;

          default:
            this._symbols.bufferize(symbol);

            this._state = UnidocLexerState.WORD;
            break;
        }
      }
    }
    /**
    * Handle the given symbol after a class.
    *
    * @param symbol - The symbol to handle.
    */

  }, {
    key: "handleAfterClass",
    value: function handleAfterClass(symbol) {
      var codePoint = symbol.symbol;

      if (codePoint >= CodePoint.a && codePoint <= CodePoint.z || codePoint >= CodePoint.A && codePoint <= CodePoint.Z || codePoint >= CodePoint.ZERO && codePoint <= CodePoint.NINE || codePoint === CodePoint.MINUS) {
        this._symbols.bufferize(symbol);
      } else {
        switch (codePoint) {
          case CodePoint.TABULATION:
          case CodePoint.ANTISLASH:
          case CodePoint.SPACE:
          case CodePoint.NEW_LINE:
          case CodePoint.CARRIAGE_RETURN:
          case CodePoint.DOT:
          case CodePoint.SHARP:
          case CodePoint.OPENING_BRACE:
          case CodePoint.CLOSING_BRACE:
            this.emitBuffer(UnidocTokenType.CLASS);
            this._state = UnidocLexerState.START;
            this.handleAfterStart(symbol);
            break;

          default:
            this._symbols.bufferize(symbol);

            this._state = UnidocLexerState.WORD;
            break;
        }
      }
    }
    /**
    * Handle the given symbol after a sharp.
    *
    * @param symbol - The symbol to handle.
    */

  }, {
    key: "handleAfterSharp",
    value: function handleAfterSharp(symbol) {
      var codePoint = symbol.symbol;

      if (codePoint >= CodePoint.a && codePoint <= CodePoint.z || codePoint >= CodePoint.A && codePoint <= CodePoint.Z || codePoint >= CodePoint.ZERO && codePoint <= CodePoint.NINE || codePoint === CodePoint.MINUS) {
        this._symbols.bufferize(symbol);

        this._state = UnidocLexerState.IDENTIFIER;
      } else {
        switch (codePoint) {
          case CodePoint.SPACE:
          case CodePoint.TABULATION:
          case CodePoint.FORM_FEED:
          case CodePoint.NEW_LINE:
          case CodePoint.CARRIAGE_RETURN:
          case CodePoint.OPENING_BRACE:
          case CodePoint.CLOSING_BRACE:
            this.emitBuffer(UnidocTokenType.WORD);
            this._state = UnidocLexerState.START;
            this.handleAfterStart(symbol);
            break;

          default:
            this._symbols.bufferize(symbol);

            this._state = UnidocLexerState.WORD;
            break;
        }
      }
    }
    /**
    * Handle the given symbol after an identifier.
    *
    * @param symbol - The symbol to handle.
    */

  }, {
    key: "handleAfterIdentifier",
    value: function handleAfterIdentifier(symbol) {
      var codePoint = symbol.symbol;

      if (codePoint >= CodePoint.a && codePoint <= CodePoint.z || codePoint >= CodePoint.A && codePoint <= CodePoint.Z || codePoint >= CodePoint.ZERO && codePoint <= CodePoint.NINE || codePoint === CodePoint.MINUS) {
        this._symbols.bufferize(symbol);
      } else {
        switch (codePoint) {
          case CodePoint.TABULATION:
          case CodePoint.ANTISLASH:
          case CodePoint.SPACE:
          case CodePoint.NEW_LINE:
          case CodePoint.CARRIAGE_RETURN:
          case CodePoint.DOT:
          case CodePoint.SHARP:
          case CodePoint.OPENING_BRACE:
          case CodePoint.CLOSING_BRACE:
            this.emitBuffer(UnidocTokenType.IDENTIFIER);
            this._state = UnidocLexerState.START;
            this.handleAfterStart(symbol);
            break;

          default:
            this._symbols.bufferize(symbol);

            this._state = UnidocLexerState.WORD;
            break;
        }
      }
    }
    /**
    * Handle the given symbol at the entry state of this lexer.
    *
    * @param symbol - The symbol to handle.
    */

  }, {
    key: "handleAfterStart",
    value: function handleAfterStart(symbol) {
      var codePoint = symbol.symbol;

      switch (codePoint) {
        case CodePoint.OPENING_BRACE:
          this._symbols.bufferize(symbol);

          this.emitBuffer(UnidocTokenType.BLOCK_START);
          break;

        case CodePoint.CLOSING_BRACE:
          this._symbols.bufferize(symbol);

          this.emitBuffer(UnidocTokenType.BLOCK_END);
          break;

        case CodePoint.ANTISLASH:
          this._symbols.bufferize(symbol);

          this._state = UnidocLexerState.ANTISLASH;
          break;

        case CodePoint.SPACE:
        case CodePoint.TABULATION:
        case CodePoint.FORM_FEED:
          this._state = UnidocLexerState.SPACE;
          this.next(symbol);
          break;

        case CodePoint.NEW_LINE:
          this._symbols.bufferize(symbol);

          this.emitBuffer(UnidocTokenType.NEW_LINE);
          break;

        case CodePoint.CARRIAGE_RETURN:
          this._symbols.bufferize(symbol);

          this._state = UnidocLexerState.CARRIAGE_RETURN;
          break;

        case CodePoint.SHARP:
          this._symbols.bufferize(symbol);

          this._state = UnidocLexerState.SHARP;
          break;

        case CodePoint.DOT:
          this._symbols.bufferize(symbol);

          this._state = UnidocLexerState.DOT;
          break;

        default:
          this._symbols.bufferize(symbol);

          this._state = UnidocLexerState.WORD;
          break;
      }
    }
  }, {
    key: "emitBuffer",
    value: function emitBuffer(type) {
      this._producer.initializeIfFirst();

      this._producer.from(this._symbols.from).to(this._symbols.to).withType(type).withSymbols(this._symbols.symbols);

      this._symbols.clear();

      this._producer.produce();
    }
  }, {
    key: "addEventListener",
    value: function addEventListener(event, listener) {
      this._producer.addEventListener(event, listener);
    }
  }, {
    key: "removeEventListener",
    value: function removeEventListener(event, listener) {
      this._producer.removeEventListener(event, listener);
    }
  }, {
    key: "removeAllEventListener",
    value: function removeAllEventListener() {
      var _this$_producer;

      (_this$_producer = this._producer).removeAllEventListener.apply(_this$_producer, arguments);
    }
    /**
    * Reset this lexer in order to reuse-it.
    */

  }, {
    key: "clear",
    value: function clear() {
      this._producer.clear();

      this._state = UnidocLexerState.START;

      this._symbols.clear();

      this.removeAllEventListener();
    }
  }, {
    key: "state",
    get: function get() {
      return this._state;
    }
  }]);

  return UnidocLexer;
}(SubscribableUnidocConsumer);
;// CONCATENATED MODULE: ./sources/lexer/index.ts


;// CONCATENATED MODULE: ./sources/location/index.ts



;// CONCATENATED MODULE: ./sources/origin/index.ts










;// CONCATENATED MODULE: ./sources/parser/UnidocParserStateType.ts
var UnidocParserStateType;

(function (UnidocParserStateType) {
  /**
  * State of the parser after it's initialization. In other words, this is the
  * state of the parser before it discover the first token of the document.
  */
  UnidocParserStateType.START = 0;
  /**
  * State of the parser after the discovering an arbitrary number of leading
  * spaces at the begining of the document. In this particular state the parser
  * await for more tokens for clarifing if theses spaces are inner document
  * content or if they just leading a stream tag declaration.
  */

  UnidocParserStateType.LEADING_WHITESPACE = 1;
  /**
  * State of the parser when it has discovered a stream tag with an arbitrary
  * number of classes. In this state the parser expect to receive another stream
  * tag classes, a stream tag identifier, spaces, or any document content.
  */

  UnidocParserStateType.CLASS_OF_STREAM_WITHOUT_IDENTIFIER = 2;
  /**
  * State of the parser when it has discovered an arbitrary number of
  * whitespaces after a stream tag followed by an arbitrary number of classes.
  * In this state the parser expect to receive another stream tag classes, a
  * stream tag identifier, more spaces, or any document content.
  */

  UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_STREAM_WITHOUT_IDENTIFIER = 3;
  /**
  * State of the parser when it has discovered a stream tag followed by an
  * arbitrary number of classes, an identifier and another arbitrary number of
  * classes. In this state the parser expect to receive another stream
  * tag classes, spaces, or any document content.
  */

  UnidocParserStateType.CLASS_OF_STREAM_WITH_IDENTIFIER = 4;
  /**
  * State of the parser when it has discovered an arbitrary number of
  * whitespaces after a stream tag followed by an arbitrary number of classes,
  * an identifier and another arbitrary number of classes. In this state the
  * parser expect to receive another stream tag classes, spaces, or any document
  * content.
  */

  UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_STREAM_WITH_IDENTIFIER = 5;
  /**
  * State of the parser when it await any document stream content. More
  * precisely any new spaces, tag or word.
  */

  UnidocParserStateType.STREAM_CONTENT = 6;
  /**
  * State of the parser when it await any tag content. More precisely any new
  * spaces, tag, word or tag block termination.
  */

  UnidocParserStateType.BLOCK_CONTENT = 7;
  /**
  * State of the parser when it fail in an unrecoverable error.
  */

  UnidocParserStateType.ERROR = 8;
  /**
  * State of the parser when it has discovered an arbitrary number of
  * whitespaces that are a content of a tag or a document. In this state the
  * parser await for more whitespaces or any new content.
  */

  UnidocParserStateType.WHITESPACE = 9;
  /**
  * State of the parser when it has discovered an arbitrary number of words
  * that are a content of a tag or a document. In this state the parser await
  * for more words or any new content.
  */

  UnidocParserStateType.WORD = 10;
  /**
  * State of the parser when it has discovered a tag with an arbitrary number of
  * classes. In this state the parser expect to receive another tag classes, a
  * tag identifier, spaces, at tag block begining or any following content.
  */

  UnidocParserStateType.CLASS_OF_TAG_WITHOUT_IDENTIFIER = 11;
  /**
  * State of the parser when it has discovered an arbitrary number of
  * whitespaces after a tag followed by an arbitrary number of classes.
  * In this state the parser expect to receive another tag classes, a tag
  * identifier, more spaces, a tag block begining or any following content.
  */

  UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_TAG_WITHOUT_IDENTIFIER = 12;
  /**
  * State of the parser when it has discovered a tag followed by an arbitrary
  * number of classes, an identifier and another arbitrary number of classes. In
  * this state the parser expect to receive another tag classes, spaces, a tag
  * block begining or any following content.
  */

  UnidocParserStateType.CLASS_OF_TAG_WITH_IDENTIFIER = 13;
  /**
  * State of the parser when it has discovered an arbitrary number of
  * whitespaces after a tag followed by an arbitrary number of classes, an
  * identifier and another arbitrary number of classes. In this state the parser
  * expect to receive another tag classes, spaces, a tag block begining or any
  * following content.
  */

  UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_TAG_WITH_IDENTIFIER = 14;
  /**
  * State of the parser at the end of the stream.
  */

  UnidocParserStateType.TERMINATION = 15;
  /**
  * State of the parser by default.
  */

  UnidocParserStateType.DEFAULT = UnidocParserStateType.START;
  /**
  * A list of all possible states of a parser.
  */

  UnidocParserStateType.ALL = [UnidocParserStateType.START, UnidocParserStateType.LEADING_WHITESPACE, UnidocParserStateType.CLASS_OF_STREAM_WITHOUT_IDENTIFIER, UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_STREAM_WITHOUT_IDENTIFIER, UnidocParserStateType.CLASS_OF_STREAM_WITH_IDENTIFIER, UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_STREAM_WITH_IDENTIFIER, UnidocParserStateType.STREAM_CONTENT, UnidocParserStateType.BLOCK_CONTENT, UnidocParserStateType.ERROR, UnidocParserStateType.WHITESPACE, UnidocParserStateType.WORD, UnidocParserStateType.CLASS_OF_TAG_WITHOUT_IDENTIFIER, UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_TAG_WITHOUT_IDENTIFIER, UnidocParserStateType.CLASS_OF_TAG_WITH_IDENTIFIER, UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_TAG_WITH_IDENTIFIER, UnidocParserStateType.TERMINATION];
  /**
  * Stringify the given state.
  *
  * @param state - A state to stringify.
  *
  * @return A string representation of the given state.
  */

  function toString(state) {
    switch (state) {
      case UnidocParserStateType.START:
        return 'START';

      case UnidocParserStateType.LEADING_WHITESPACE:
        return 'LEADING_WHITESPACE';

      case UnidocParserStateType.CLASS_OF_STREAM_WITHOUT_IDENTIFIER:
        return 'CLASS_OF_STREAM_WITHOUT_IDENTIFIER';

      case UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_STREAM_WITHOUT_IDENTIFIER:
        return 'WHITESPACE_AFTER_CLASS_OF_STREAM_WITHOUT_IDENTIFIER';

      case UnidocParserStateType.CLASS_OF_STREAM_WITH_IDENTIFIER:
        return 'CLASS_OF_STREAM_WITH_IDENTIFIER';

      case UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_STREAM_WITH_IDENTIFIER:
        return 'WHITESPACE_AFTER_CLASS_OF_STREAM_WITH_IDENTIFIER';

      case UnidocParserStateType.STREAM_CONTENT:
        return 'STREAM_CONTENT';

      case UnidocParserStateType.BLOCK_CONTENT:
        return 'BLOCK_CONTENT';

      case UnidocParserStateType.ERROR:
        return 'ERROR';

      case UnidocParserStateType.WHITESPACE:
        return 'WHITESPACE';

      case UnidocParserStateType.WORD:
        return 'WORD';

      case UnidocParserStateType.CLASS_OF_TAG_WITHOUT_IDENTIFIER:
        return 'CLASS_OF_TAG_WITHOUT_IDENTIFIER';

      case UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_TAG_WITHOUT_IDENTIFIER:
        return 'WHITESPACE_AFTER_CLASS_OF_TAG_WITHOUT_IDENTIFIER';

      case UnidocParserStateType.CLASS_OF_TAG_WITH_IDENTIFIER:
        return 'CLASS_OF_TAG_WITH_IDENTIFIER';

      case UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_TAG_WITH_IDENTIFIER:
        return 'WHITESPACE_AFTER_CLASS_OF_TAG_WITH_IDENTIFIER';

      case UnidocParserStateType.TERMINATION:
        return 'TERMINATION';

      default:
        return undefined;
    }
  }

  UnidocParserStateType.toString = toString;
})(UnidocParserStateType || (UnidocParserStateType = {}));
;// CONCATENATED MODULE: ./sources/parser/UnidocParserState.ts
function UnidocParserState_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = UnidocParserState_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function UnidocParserState_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return UnidocParserState_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return UnidocParserState_arrayLikeToArray(o, minLen); }

function UnidocParserState_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function UnidocParserState_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocParserState_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocParserState_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocParserState_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocParserState_defineProperties(Constructor, staticProps); return Constructor; }






var UnidocParserState_EMPTY_STRING = '';
var UnidocParserState = /*#__PURE__*/function () {
  /**
  * Instantiate a new empty state.
  */
  function UnidocParserState() {
    UnidocParserState_classCallCheck(this, UnidocParserState);

    this.type = UnidocParserStateType.START;
    this.tag = UnidocParserState_EMPTY_STRING;
    this.identifier = UnidocParserState_EMPTY_STRING;
    this.content = gl_tool_collection_.Pack.uint32(128);
    this.classes = new Set();
    this.origin = new UnidocRangeOrigin();
    this.origin.from.text(0, 0, 0).runtime();
    this.origin.to.text(0, 0, 0).runtime();
  }

  UnidocParserState_createClass(UnidocParserState, [{
    key: "begin",
    value: function begin(type, start) {
      this.clear();
      this.type = type;

      if (start instanceof UnidocToken) {
        switch (start.type) {
          case UnidocTokenType.CLASS:
            this.classes.add(start.substring(1));
            break;

          case UnidocTokenType.IDENTIFIER:
            this.identifier = start.substring(1);
            break;

          case UnidocTokenType.TAG:
            this.tag = start.substring(1);
            break;

          case UnidocTokenType.NEW_LINE:
          case UnidocTokenType.SPACE:
          case UnidocTokenType.WORD:
            this.content.concat(start.symbols);
            break;
        }

        this.origin.copy(start.origin);
      } else {
        this.origin.at(start);
      }
    }
  }, {
    key: "append",
    value: function append(token) {
      switch (token.type) {
        case UnidocTokenType.CLASS:
          this.classes.add(token.substring(1));
          break;

        case UnidocTokenType.IDENTIFIER:
          this.identifier = token.substring(1);
          break;

        case UnidocTokenType.TAG:
          this.tag = token.substring(1);
          break;

        case UnidocTokenType.NEW_LINE:
        case UnidocTokenType.SPACE:
        case UnidocTokenType.WORD:
          this.content.concat(token.symbols);
          break;
      }

      this.origin.to.copy(token.origin.to);
    }
    /**
    * Reset this instance in order to reuse it.
    */

  }, {
    key: "clear",
    value: function clear() {
      this.type = UnidocParserStateType.START;
      this.tag = UnidocParserState_EMPTY_STRING;
      this.identifier = UnidocParserState_EMPTY_STRING;
      this.content.clear();
      this.classes.clear();
      this.origin.clear();
      this.origin.from.text(0, 0, 0).runtime();
      this.origin.to.text(0, 0, 0).runtime();
    }
    /**
    * Copy an existing parser state instance.
    *
    * @param toCopy - A parser state to copy.
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.type = toCopy.type;
      this.tag = toCopy.tag;
      this.identifier = toCopy.identifier;
      this.content.copy(toCopy.content);
      this.origin.copy(toCopy.origin);
      this.classes.clear();

      var _iterator = UnidocParserState_createForOfIteratorHelper(toCopy.classes),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var element = _step.value;
          this.classes.add(element);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
    * @see Object.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocParserState) {
        if (other.type !== this.type || other.tag !== this.tag || other.identifier !== this.identifier || !other.content.equals(this.content) || !other.origin.equals(this.origin) || other.classes.size !== this.classes.size) {
          return false;
        }

        var _iterator2 = UnidocParserState_createForOfIteratorHelper(other.classes),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var element = _step2.value;

            if (!this.classes.has(element)) {
              return false;
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }

        return true;
      }

      return false;
    }
  }]);

  return UnidocParserState;
}();

(function (UnidocParserState) {
  function create() {
    return new UnidocParserState();
  }

  UnidocParserState.create = create;
  UnidocParserState.ALLOCATOR = gl_tool_collection_.Duplicator.fromFactory(create);
})(UnidocParserState || (UnidocParserState = {}));
;// CONCATENATED MODULE: ./sources/parser/UnidocParserStateBuffer.ts
function UnidocParserStateBuffer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocParserStateBuffer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocParserStateBuffer_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocParserStateBuffer_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocParserStateBuffer_defineProperties(Constructor, staticProps); return Constructor; }



var UnidocParserStateBuffer = /*#__PURE__*/function () {
  /**
  * Instantiate a new empty token buffer with the given capacity.
  *
  * @param [capacity = 32] - Capacity of the buffer to instantiate.
  */
  function UnidocParserStateBuffer() {
    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;

    UnidocParserStateBuffer_classCallCheck(this, UnidocParserStateBuffer);

    this._states = gl_tool_collection_.Pack.instance(UnidocParserState.ALLOCATOR, capacity);
    this.states = this._states.view();
  }

  UnidocParserStateBuffer_createClass(UnidocParserStateBuffer, [{
    key: "reallocate",
    value: function reallocate(capacity) {
      this._states.reallocate(capacity);
    }
    /**
    * @see MutableSequence.get
    */

  }, {
    key: "get",
    value: function get(index) {
      return this.states.get(index);
    }
    /**
    * Append an identifier token at the end of this buffer.
    *
    * @param value - Code points of the token to append.
    */

  }, {
    key: "push",
    value: function push(type) {
      this._states.size += 1;
      this._states.last.type = type;
    }
  }, {
    key: "delete",
    value: function _delete(index) {
      this._states["delete"](index);
    }
  }, {
    key: "pop",
    value: function pop() {
      this._states.pop();
    }
    /**
    * Reset this token buffer.
    */

  }, {
    key: "clear",
    value: function clear() {
      this._states.clear();
    }
    /**
    * @see Object.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocParserStateBuffer) {
        if (other._states.size !== this._states.size) return false;

        for (var index = 0, size = this._states.size; index < size; ++index) {
          if (!other._states.get(index).equals(this._states.get(index))) {
            return false;
          }
        }

        return true;
      }

      return false;
    }
  }, {
    key: "first",
    get: function get() {
      return this._states.first;
    }
  }, {
    key: "last",
    get: function get() {
      return this._states.last;
    }
  }, {
    key: "capacity",
    get: function get() {
      return this._states.capacity;
    }
    /**
    * @see MutableSequence.size
    */

  }, {
    key: "size",
    get: function get() {
      return this._states.size;
    }
    /**
    * @see MutableSequence.size
    */
    ,
    set: function set(newSize) {
      this._states.size = newSize;
    }
  }]);

  return UnidocParserStateBuffer;
}();
;// CONCATENATED MODULE: ./sources/parser/UnidocParser.ts
function UnidocParser_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocParser_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocParser_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocParser_typeof(obj); }

function UnidocParser_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocParser_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocParser_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocParser_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocParser_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocParser_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocParser_setPrototypeOf(subClass, superClass); }

function UnidocParser_setPrototypeOf(o, p) { UnidocParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocParser_setPrototypeOf(o, p); }

function UnidocParser_createSuper(Derived) { var hasNativeReflectConstruct = UnidocParser_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocParser_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocParser_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocParser_possibleConstructorReturn(this, result); }; }

function UnidocParser_possibleConstructorReturn(self, call) { if (call && (UnidocParser_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocParser_assertThisInitialized(self); }

function UnidocParser_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocParser_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocParser_getPrototypeOf(o) { UnidocParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocParser_getPrototypeOf(o); }







var DOCUMENT_TAG = 'document';
var BLOCK_TAG = 'block';
/***
* CORRIGER SINGLETON POUR SINGLETON + ELEMENT EN (SINGLETON) ONLY.
*/

/**
* A unidoc token stream parser.
*/

var UnidocParser = /*#__PURE__*/function (_SubscribableUnidocCo) {
  UnidocParser_inherits(UnidocParser, _SubscribableUnidocCo);

  var _super = UnidocParser_createSuper(UnidocParser);

  /**
  * Unidoc validation instance for publication.
  */
  //private _validation: UnidocValidation

  /**
  * Instantiate a new unidoc parser with a given token buffer capacity.
  *
  * @param [capacity = 32] - Initial state buffer capacity of the parser.
  */
  function UnidocParser() {
    var _this;

    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;

    UnidocParser_classCallCheck(this, UnidocParser);

    _this = _super.call(this);
    _this._states = new UnidocParserStateBuffer(capacity);
    _this._producer = new UnidocEventProducer(); //this._validation = new UnidocValidation()

    _this._states.push(UnidocParserStateType.START);

    return _this;
  }
  /**
  * @see UnidocConsumer.handleInitialization
  */


  UnidocParser_createClass(UnidocParser, [{
    key: "handleInitialization",
    value: function handleInitialization() {}
    /**
    * @see UnidocConsumer.handleProduction
    */

  }, {
    key: "handleProduction",
    value: function handleProduction(value) {
      this.next(value);
    }
    /**
    * @see UnidocConsumer.handleCompletion
    */

  }, {
    key: "handleCompletion",
    value: function handleCompletion() {
      this.complete();
    }
    /**
    * @see UnidocConsumer.handleFailure
    */

  }, {
    key: "handleFailure",
    value: function handleFailure(error) {
      this._producer.fail(error);
    }
    /**
    * Feed this parser with the given token.
    *
    * @param token - The token to give to the parser.
    */

  }, {
    key: "next",
    value: function next(token) {
      switch (this._states.last.type) {
        case UnidocParserStateType.START:
          this.handleAfterStart(token);
          break;

        case UnidocParserStateType.STREAM_CONTENT:
          this.handleAfterStreamContent(token);
          break;

        case UnidocParserStateType.BLOCK_CONTENT:
          this.handleAfterBlockContent(token);
          break;

        case UnidocParserStateType.WHITESPACE:
          this.handleAfterWhitespace(token);
          break;

        case UnidocParserStateType.WORD:
          this.handleAfterWord(token);
          break;

        case UnidocParserStateType.CLASS_OF_TAG_WITHOUT_IDENTIFIER:
          this.handleAfterClassOfTagWithoutIdentifier(token);
          break;

        case UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_TAG_WITHOUT_IDENTIFIER:
          this.handleAfterWhitespaceAfterClassOfTagWithoutIdentifier(token);
          break;

        case UnidocParserStateType.CLASS_OF_TAG_WITH_IDENTIFIER:
          this.handleAfterClassOfTagWithIdentifier(token);
          break;

        case UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_TAG_WITH_IDENTIFIER:
          this.handleAfterWhitespaceAfterClassOfTagWithIdentifier(token);
          break;

        case UnidocParserStateType.ERROR:
          this.handleAfterError(token);
          break;

        case UnidocParserStateType.LEADING_WHITESPACE:
          this.handleAfterLeadingWhitespace(token);
          break;

        case UnidocParserStateType.CLASS_OF_STREAM_WITHOUT_IDENTIFIER:
          this.handleAfterClassOfStreamWithoutIdentifier(token);
          break;

        case UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_STREAM_WITHOUT_IDENTIFIER:
          this.handleAfterWhitespaceAfterClassOfStreamWithoutIdentifier(token);
          break;

        case UnidocParserStateType.CLASS_OF_STREAM_WITH_IDENTIFIER:
          this.handleAfterClassOfStreamWithIdentifier(token);
          break;

        case UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_STREAM_WITH_IDENTIFIER:
          this.handleAfterWhitespaceAfterClassOfStreamWithIdentifier(token);
          break;

        default:
          this.throwUhandledParserState(token);
      }
    }
  }, {
    key: "throwUhandledParserState",
    value: function throwUhandledParserState(token) {
      throw new Error('Unable to handle token of type #' + token.type + ' "' + UnidocTokenType.toString(token.type) + '" because this parser does not ' + 'define an execution process when it has to handle a token when it is ' + 'in #' + this._states.last.type + ' "' + UnidocParserStateType.toString(this._states.last.type) + '" state');
    }
    /**
    * Call when the stream of tokens reach it's end.
    */

  }, {
    key: "complete",
    value: function complete() {
      switch (this._states.last.type) {
        case UnidocParserStateType.START:
          this.emitVirtualDocumentStart();
          this.emitVirtualDocumentEnd();
          this._states.last.type = UnidocParserStateType.TERMINATION;
          this.complete();
          break;

        case UnidocParserStateType.STREAM_CONTENT:
          this.emitTagEnd();
          this._states.last.type = UnidocParserStateType.TERMINATION;

          this._states.last.origin.at(this._states.last.origin.to);

          this.complete();
          break;

        case UnidocParserStateType.BLOCK_CONTENT:
          // ERROR & RECOVER
          this.emitTagEnd();
          this._states.last.type = UnidocParserStateType.TERMINATION;

          this._states.last.origin.at(this._states.last.origin.to);

          this.complete();
          break;

        case UnidocParserStateType.WHITESPACE:
          this.emitWhitespaceEvent();

          this._states.get(this._states.size - 2).origin.at(this._states.last.origin.to);

          this._states.pop();

          this.complete();
          break;

        case UnidocParserStateType.WORD:
          this.emitWordEvent();

          this._states.get(this._states.size - 2).origin.at(this._states.last.origin.to);

          this._states.pop();

          this.complete();
          break;

        case UnidocParserStateType.CLASS_OF_TAG_WITHOUT_IDENTIFIER:
        case UnidocParserStateType.CLASS_OF_TAG_WITH_IDENTIFIER:
          this.emitTagStart();

          this._states.last.origin.at(this._states.last.origin.to);

          this.emitTagEnd();

          this._states.pop();

          this.complete();
          break;

        case UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_TAG_WITHOUT_IDENTIFIER:
        case UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_TAG_WITH_IDENTIFIER:
          this.emitTagStart(this._states.get(this._states.size - 2));

          this._states.get(this._states.size - 2).origin.at(this._states.last.origin.from);

          this.emitTagEnd(this._states.get(this._states.size - 2));
          this.emitWhitespaceEvent();

          this._states.pop();

          this._states.pop();

          this.complete();
          break;

        case UnidocParserStateType.ERROR:
          this.throwUnhandledCompletionParserState();
          break;

        case UnidocParserStateType.LEADING_WHITESPACE:
          this.emitVirtualDocumentStart();
          this.emitWhitespaceEvent();
          this.emitVirtualDocumentEnd();
          this._states.last.type = UnidocParserStateType.TERMINATION;

          this._states.last.origin.at(this._states.last.origin.to);

          this.complete();
          break;

        case UnidocParserStateType.CLASS_OF_STREAM_WITHOUT_IDENTIFIER:
        case UnidocParserStateType.CLASS_OF_STREAM_WITH_IDENTIFIER:
          this.emitTagStart();
          this.emitVirtualDocumentEnd();
          this._states.last.type = UnidocParserStateType.TERMINATION;

          this._states.last.origin.at(this._states.last.origin.to);

          this.complete();
          break;

        case UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_STREAM_WITHOUT_IDENTIFIER:
          this.emitTagStart(this._states.get(this._states.size - 2));

          this._states.get(this._states.size - 2).origin.at(this._states.last.origin.from);

          this.emitWhitespaceEvent();

          this._states.pop();

          this.emitVirtualDocumentEnd();
          this._states.last.type = UnidocParserStateType.TERMINATION;

          this._states.last.origin.at(this._states.last.origin.to);

          this.complete();
          break;

        case UnidocParserStateType.TERMINATION:
          this._producer.complete();

          return;

        default:
          this.throwUnhandledCompletionParserState();
      }
    }
  }, {
    key: "throwUnhandledCompletionParserState",
    value: function throwUnhandledCompletionParserState() {
      throw new Error('Unable to handle stream completion because this parser does not ' + 'define an execution process when it has to handle a completion when ' + 'it is in #' + this._states.last.type + ' "' + UnidocParserStateType.toString(this._states.last.type) + '" state');
    }
    /**
    * Handle the given token after start.
    *
    * @param token - A unidock token to handle.
    */

  }, {
    key: "handleAfterStart",
    value: function handleAfterStart(token) {
      this._states.last.origin.at(token.origin.from);

      this._states.last.tag = DOCUMENT_TAG;

      switch (token.type) {
        case UnidocTokenType.NEW_LINE:
        case UnidocTokenType.SPACE:
          this._states.last.type = UnidocParserStateType.LEADING_WHITESPACE;

          this._states.last.append(token);

          return;

        case UnidocTokenType.TAG:
        case UnidocTokenType.BLOCK_START:
        case UnidocTokenType.WORD:
        case UnidocTokenType.IDENTIFIER:
        case UnidocTokenType.CLASS:
          if (token.isTag(DOCUMENT_TAG)) {
            this._states.last.type = UnidocParserStateType.CLASS_OF_STREAM_WITHOUT_IDENTIFIER;

            this._states.last.origin.to.copy(token.origin.to);
          } else {
            this.emitVirtualDocumentStart();
            this._states.last.type = UnidocParserStateType.STREAM_CONTENT;
            this.next(token);
          }

          return;

        case UnidocTokenType.BLOCK_END:
          this.emitDocumentStartWithBlockEndingError();
          this.recoverFromDocumentStartWithBlockEndingError(token);
          return;

        default:
          this.throwUnhandledTokenType(token);
      }
    }
  }, {
    key: "handleAfterLeadingWhitespace",
    value: function handleAfterLeadingWhitespace(token) {
      switch (token.type) {
        case UnidocTokenType.NEW_LINE:
        case UnidocTokenType.SPACE:
          this._states.last.append(token);

          return;

        case UnidocTokenType.TAG:
        case UnidocTokenType.BLOCK_START:
        case UnidocTokenType.WORD:
        case UnidocTokenType.IDENTIFIER:
        case UnidocTokenType.CLASS:
          if (token.isTag(DOCUMENT_TAG)) {
            this._states.last.type = UnidocParserStateType.CLASS_OF_STREAM_WITHOUT_IDENTIFIER;

            this._states.last.origin.to.copy(token.origin.to);

            this._states.last.content.clear();
          } else {
            this.emitVirtualDocumentStart();
            this.emitWhitespaceEvent();
            this._states.last.type = UnidocParserStateType.STREAM_CONTENT;

            this._states.last.origin.at(token.origin.from);

            this.next(token);
          }

          return;

        case UnidocTokenType.BLOCK_END:
          this.emitDocumentStartWithBlockEndingError();
          this.recoverFromDocumentStartWithBlockEndingError(token);
          return;

        default:
          this.throwUnhandledTokenType(token);
      }
    }
  }, {
    key: "handleAfterClassOfStreamWithoutIdentifier",
    value: function handleAfterClassOfStreamWithoutIdentifier(token) {
      switch (token.type) {
        case UnidocTokenType.SPACE:
        case UnidocTokenType.NEW_LINE:
          this._states.push(UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_STREAM_WITHOUT_IDENTIFIER);

          this._states.last.origin.at(token.origin.from);

          this._states.last.append(token);

          return;

        case UnidocTokenType.IDENTIFIER:
          this._states.last.append(token);

          this._states.last.type = UnidocParserStateType.CLASS_OF_STREAM_WITH_IDENTIFIER;
          return;

        case UnidocTokenType.CLASS:
          this._states.last.append(token);

          return;

        case UnidocTokenType.TAG:
        case UnidocTokenType.WORD:
        case UnidocTokenType.BLOCK_START:
        case UnidocTokenType.BLOCK_END:
          this.emitTagStart();
          this._states.last.type = UnidocParserStateType.STREAM_CONTENT;

          this._states.last.origin.at(token.origin.from);

          this.next(token);
          return;

        default:
          this.throwUnhandledTokenType(token);
      }
    }
  }, {
    key: "handleAfterWhitespaceAfterClassOfStreamWithoutIdentifier",
    value: function handleAfterWhitespaceAfterClassOfStreamWithoutIdentifier(token) {
      switch (token.type) {
        case UnidocTokenType.SPACE:
        case UnidocTokenType.NEW_LINE:
          this._states.last.append(token);

          return;

        case UnidocTokenType.IDENTIFIER:
        case UnidocTokenType.CLASS:
          this._states.pop();

          this.next(token);
          return;

        case UnidocTokenType.TAG:
        case UnidocTokenType.WORD:
        case UnidocTokenType.BLOCK_START:
        case UnidocTokenType.BLOCK_END:
          this.emitTagStart(this._states.get(this._states.size - 2));
          this.emitWhitespaceEvent();

          this._states.pop();

          this._states.last.type = UnidocParserStateType.STREAM_CONTENT;

          this._states.last.origin.at(token.origin.from);

          this.next(token);
          return;

        default:
          this.throwUnhandledTokenType(token);
      }
    }
  }, {
    key: "handleAfterClassOfStreamWithIdentifier",
    value: function handleAfterClassOfStreamWithIdentifier(token) {
      switch (token.type) {
        case UnidocTokenType.SPACE:
        case UnidocTokenType.NEW_LINE:
          this._states.push(UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_STREAM_WITH_IDENTIFIER);

          this._states.last.origin.at(token.origin.from);

          this._states.last.append(token);

          return;

        case UnidocTokenType.CLASS:
          this._states.last.append(token);

          return;

        case UnidocTokenType.TAG:
        case UnidocTokenType.WORD:
        case UnidocTokenType.BLOCK_START:
        case UnidocTokenType.BLOCK_END:
        case UnidocTokenType.IDENTIFIER:
          this.emitTagStart();
          this._states.last.type = UnidocParserStateType.STREAM_CONTENT;

          this._states.last.origin.at(token.origin.from);

          this.next(token);
          return;

        default:
          this.throwUnhandledTokenType(token);
      }
    }
  }, {
    key: "handleAfterWhitespaceAfterClassOfStreamWithIdentifier",
    value: function handleAfterWhitespaceAfterClassOfStreamWithIdentifier(token) {
      switch (token.type) {
        case UnidocTokenType.SPACE:
        case UnidocTokenType.NEW_LINE:
          this._states.last.append(token);

          return;

        case UnidocTokenType.CLASS:
          this._states.pop();

          this.next(token);
          return;

        case UnidocTokenType.IDENTIFIER:
        case UnidocTokenType.TAG:
        case UnidocTokenType.WORD:
        case UnidocTokenType.BLOCK_START:
        case UnidocTokenType.BLOCK_END:
          this.emitTagStart(this._states.get(0));
          this.emitWhitespaceEvent();

          this._states.pop();

          this._states.last.type = UnidocParserStateType.STREAM_CONTENT;

          this._states.last.origin.at(token.origin.from);

          this.next(token);
          return;

        default:
          this.throwUnhandledTokenType(token);
      }
    }
  }, {
    key: "handleAfterStreamContent",
    value: function handleAfterStreamContent(token) {
      switch (token.type) {
        case UnidocTokenType.TAG:
        case UnidocTokenType.NEW_LINE:
        case UnidocTokenType.SPACE:
        case UnidocTokenType.WORD:
        case UnidocTokenType.IDENTIFIER:
        case UnidocTokenType.CLASS:
        case UnidocTokenType.BLOCK_START:
          this.handleAfterContent(token);
          return;

        case UnidocTokenType.BLOCK_END:
          throw new Error('Trying to terminate a stream of content.');

        default:
          this.throwUnhandledTokenType(token);
      }
    }
  }, {
    key: "handleAfterBlockContent",
    value: function handleAfterBlockContent(token) {
      switch (token.type) {
        case UnidocTokenType.TAG:
        case UnidocTokenType.NEW_LINE:
        case UnidocTokenType.SPACE:
        case UnidocTokenType.WORD:
        case UnidocTokenType.IDENTIFIER:
        case UnidocTokenType.CLASS:
        case UnidocTokenType.BLOCK_START:
          this.handleAfterContent(token);
          return;

        case UnidocTokenType.BLOCK_END:
          this._states.last.append(token);

          this.emitTagEnd();

          this._states.pop();

          this._states.last.origin.at(token.origin.to);

          break;

        default:
          this.throwUnhandledTokenType(token);
      }
    }
  }, {
    key: "handleAfterContent",
    value: function handleAfterContent(token) {
      switch (token.type) {
        case UnidocTokenType.TAG:
          this._states.push(UnidocParserStateType.CLASS_OF_TAG_WITHOUT_IDENTIFIER);

          this._states.last.origin.at(token.origin.from);

          this._states.last.append(token);

          break;

        case UnidocTokenType.NEW_LINE:
        case UnidocTokenType.SPACE:
          this._states.push(UnidocParserStateType.WHITESPACE);

          this._states.last.origin.at(token.origin.from);

          this._states.last.append(token);

          break;

        case UnidocTokenType.WORD:
          this._states.push(UnidocParserStateType.WORD);

          this._states.last.origin.at(token.origin.from);

          this._states.last.append(token);

          break;

        case UnidocTokenType.IDENTIFIER:
          this._states.push(UnidocParserStateType.CLASS_OF_TAG_WITH_IDENTIFIER);

          this._states.last.origin.at(token.origin.from);

          this._states.last.append(token);

          this._states.last.tag = BLOCK_TAG;
          break;

        case UnidocTokenType.CLASS:
          this._states.push(UnidocParserStateType.CLASS_OF_TAG_WITHOUT_IDENTIFIER);

          this._states.last.origin.at(token.origin.from);

          this._states.last.append(token);

          this._states.last.tag = BLOCK_TAG;
          break;

        case UnidocTokenType.BLOCK_START:
          this._states.push(UnidocParserStateType.BLOCK_CONTENT);

          this._states.last.origin.at(token.origin.from);

          this._states.last.append(token);

          this._states.last.tag = BLOCK_TAG;
          this.emitTagStart();

          this._states.last.origin.from.copy(token.origin.to);

          break;

        default:
          this.throwUnhandledTokenType(token);
      }
    }
  }, {
    key: "handleAfterWhitespace",
    value: function handleAfterWhitespace(token) {
      switch (token.type) {
        case UnidocTokenType.SPACE:
        case UnidocTokenType.NEW_LINE:
          this._states.last.append(token);

          return;

        default:
          this.emitWhitespaceEvent();

          this._states.pop();

          this._states.last.origin.at(token.origin.from);

          this.next(token);
          return;
      }
    }
  }, {
    key: "handleAfterWord",
    value: function handleAfterWord(token) {
      switch (token.type) {
        case UnidocTokenType.WORD:
          this._states.last.append(token);

          return;

        default:
          this.emitWordEvent();

          this._states.pop();

          this._states.last.origin.at(token.origin.from);

          this.next(token);
          return;
      }
    }
  }, {
    key: "handleAfterClassOfTagWithoutIdentifier",
    value: function handleAfterClassOfTagWithoutIdentifier(token) {
      switch (token.type) {
        case UnidocTokenType.SPACE:
        case UnidocTokenType.NEW_LINE:
          this._states.push(UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_TAG_WITHOUT_IDENTIFIER);

          this._states.last.origin.at(token.origin.from);

          this._states.last.append(token);

          return;

        case UnidocTokenType.IDENTIFIER:
          this._states.last.append(token);

          this._states.last.type = UnidocParserStateType.CLASS_OF_TAG_WITH_IDENTIFIER;
          return;

        case UnidocTokenType.CLASS:
          this._states.last.append(token);

          return;

        case UnidocTokenType.TAG:
        case UnidocTokenType.WORD:
        case UnidocTokenType.BLOCK_END:
          this.emitTagStart();

          this._states.last.origin.at(this._states.last.origin.to);

          this.emitTagEnd();

          this._states.pop();

          this.next(token);
          return;

        case UnidocTokenType.BLOCK_START:
          this._states.last.append(token);

          this.emitTagStart();
          this._states.last.type = UnidocParserStateType.BLOCK_CONTENT;

          this._states.last.origin.at(token.origin.to);

          return;

        default:
          this.throwUnhandledTokenType(token);
      }
    }
  }, {
    key: "handleAfterWhitespaceAfterClassOfTagWithoutIdentifier",
    value: function handleAfterWhitespaceAfterClassOfTagWithoutIdentifier(token) {
      switch (token.type) {
        case UnidocTokenType.SPACE:
        case UnidocTokenType.NEW_LINE:
          this._states.last.append(token);

          return;

        case UnidocTokenType.IDENTIFIER:
        case UnidocTokenType.CLASS:
        case UnidocTokenType.BLOCK_START:
          this._states.pop();

          this._states.last.origin.to.copy(token.origin.from);

          this.next(token);
          return;

        case UnidocTokenType.TAG:
        case UnidocTokenType.WORD:
        case UnidocTokenType.BLOCK_END:
          this.emitTagStart(this._states.get(this._states.size - 2));

          this._states.get(this._states.size - 2).origin.at(this._states.last.origin.from);

          this.emitTagEnd(this._states.get(this._states.size - 2));
          this.emitWhitespaceEvent();

          this._states.pop();

          this._states.pop();

          this.next(token);
          return;

        default:
          this.throwUnhandledTokenType(token);
      }
    }
  }, {
    key: "handleAfterClassOfTagWithIdentifier",
    value: function handleAfterClassOfTagWithIdentifier(token) {
      switch (token.type) {
        case UnidocTokenType.SPACE:
        case UnidocTokenType.NEW_LINE:
          this._states.push(UnidocParserStateType.WHITESPACE_AFTER_CLASS_OF_TAG_WITH_IDENTIFIER);

          this._states.last.origin.at(token.origin.from);

          this._states.last.append(token);

          return;

        case UnidocTokenType.CLASS:
          this._states.last.append(token);

          return;

        case UnidocTokenType.TAG:
        case UnidocTokenType.WORD:
        case UnidocTokenType.BLOCK_END:
        case UnidocTokenType.IDENTIFIER:
          this.emitTagStart();

          this._states.last.origin.at(this._states.last.origin.to);

          this.emitTagEnd();

          this._states.pop();

          this.next(token);
          return;

        case UnidocTokenType.BLOCK_START:
          this._states.last.append(token);

          this.emitTagStart();
          this._states.last.type = UnidocParserStateType.BLOCK_CONTENT;

          this._states.last.origin.at(token.origin.to);

          return;

        default:
          this.throwUnhandledTokenType(token);
      }
    }
  }, {
    key: "handleAfterWhitespaceAfterClassOfTagWithIdentifier",
    value: function handleAfterWhitespaceAfterClassOfTagWithIdentifier(token) {
      switch (token.type) {
        case UnidocTokenType.SPACE:
        case UnidocTokenType.NEW_LINE:
          this._states.last.append(token);

          return;

        case UnidocTokenType.CLASS:
        case UnidocTokenType.BLOCK_START:
          this._states.pop();

          this._states.last.origin.to.copy(token.origin.from);

          this.next(token);
          return;

        case UnidocTokenType.IDENTIFIER:
        case UnidocTokenType.TAG:
        case UnidocTokenType.WORD:
        case UnidocTokenType.BLOCK_END:
          this.emitTagStart(this._states.get(this._states.size - 2));

          this._states.get(this._states.size - 2).origin.at(this._states.last.origin.from);

          this.emitTagEnd(this._states.get(this._states.size - 2));
          this.emitWhitespaceEvent();

          this._states.pop();

          this._states.pop();

          this.next(token);
          return;

        default:
          this.throwUnhandledTokenType(token);
      }
    }
    /**
    * Handle the given token after error.
    *
    * @param token - A unidock token to handle.
    */

  }, {
    key: "handleAfterError",
    value: function handleAfterError(token) {
      this.throwUnhandledTokenType(token);
    }
  }, {
    key: "throwUnhandledTokenType",
    value: function throwUnhandledTokenType(token) {
      throw new Error('The token type #' + token.type + ' "' + UnidocTokenType.toString(token.type) + '" is currently not handled by ' + 'this parser when it is in state #' + this._states.last.type + ' "' + UnidocParserStateType.toString(this._states.last.type) + '".');
    }
  }, {
    key: "recoverFromDocumentStartWithBlockEndingError",
    value: function recoverFromDocumentStartWithBlockEndingError(token) {
      this._states.last.origin.from.copy(token.origin.to);
    }
  }, {
    key: "emitDocumentStartWithBlockEndingError",
    value: function emitDocumentStartWithBlockEndingError() {//this._validation.clear()
      //this._validation.asError('An unidoc document cannot start with a block ending character.')
      //this.emitValidation(this._validation)

      /** @TODO */
    }
  }, {
    key: "emitVirtualDocumentStart",
    value: function emitVirtualDocumentStart() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._states.last;

      this._producer.initialize();

      this._producer.event().at(state.origin.from).withType(UnidocEventType.START_TAG).withTag(DOCUMENT_TAG).produce();
    }
  }, {
    key: "emitVirtualDocumentEnd",
    value: function emitVirtualDocumentEnd() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._states.last;

      this._producer.event().at(state.origin.to).withType(UnidocEventType.END_TAG).withTag(DOCUMENT_TAG).produce();
    }
  }, {
    key: "emitTagStart",
    value: function emitTagStart() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._states.last;

      this._producer.event().from(state.origin.from).to(state.origin.to).withType(UnidocEventType.START_TAG).withClasses(state.classes).withIdentifier(state.identifier).withTag(state.tag).produce();
    }
    /**
    * Emit a unidoc tag termination event.
    */

  }, {
    key: "emitTagEnd",
    value: function emitTagEnd() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._states.last;

      this._producer.event().from(state.origin.from).to(state.origin.to).withType(UnidocEventType.END_TAG).withClasses(state.classes).withIdentifier(state.identifier).withTag(state.tag).produce();
    }
    /**
    * Emit a unidoc whitespace event.
    */

  }, {
    key: "emitWhitespaceEvent",
    value: function emitWhitespaceEvent() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._states.last;

      this._producer.event().from(state.origin.from).to(state.origin.to).withType(UnidocEventType.WHITESPACE).withSymbols(state.content).produce();
    }
    /**
    * Emit a unidoc word event.
    */

  }, {
    key: "emitWordEvent",
    value: function emitWordEvent() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._states.last;

      this._producer.event().from(state.origin.from).to(state.origin.to).withType(UnidocEventType.WORD).withSymbols(state.content).produce();
    }
    /**
    * Reset this parser in order to reuse-it.
    */

  }, {
    key: "clear",
    value: function clear() {
      this._states.clear();

      this.removeAllEventListener();

      this._states.push(UnidocParserStateType.START);

      this._producer.clear();
    }
  }, {
    key: "addEventListener",
    value: function addEventListener(event, listener) {
      this._producer.addEventListener(event, listener);
    }
  }, {
    key: "removeEventListener",
    value: function removeEventListener(event, listener) {
      this._producer.removeEventListener(event, listener);
    }
  }, {
    key: "removeAllEventListener",
    value: function removeAllEventListener() {
      var _this$_producer;

      (_this$_producer = this._producer).removeAllEventListener.apply(_this$_producer, arguments);
    }
  }]);

  return UnidocParser;
}(SubscribableUnidocConsumer);
;// CONCATENATED MODULE: ./sources/parser/index.ts


;// CONCATENATED MODULE: ./sources/path/UnidocPathElementType.ts
var UnidocPathElementType;

(function (UnidocPathElementType) {
  /**
   * The location of a tag in a stream or a file.
   */
  UnidocPathElementType.TAG = 0;
  /**
   * The location of a symbol in a stream or a file.
   */

  UnidocPathElementType.SYMBOL = 1;
  /**
   * The location of a symbol in a stream.
   */

  UnidocPathElementType.STREAM = 2;
  /**
   * The location of a symbol in a file.
   */

  UnidocPathElementType.FILE = 3;
  /**
   * The location of a symbol in memory.
   */

  UnidocPathElementType.MEMORY = 4;
  UnidocPathElementType.ALL = [UnidocPathElementType.TAG, UnidocPathElementType.SYMBOL, UnidocPathElementType.STREAM, UnidocPathElementType.FILE, UnidocPathElementType.MEMORY];

  function toString(value) {
    switch (value) {
      case UnidocPathElementType.TAG:
        return 'TAG';

      case UnidocPathElementType.SYMBOL:
        return 'SYMBOL';

      case UnidocPathElementType.STREAM:
        return 'STREAM';

      case UnidocPathElementType.FILE:
        return 'FILE';

      case UnidocPathElementType.MEMORY:
        return 'MEMORY';

      default:
        return undefined;
    }
  }

  UnidocPathElementType.toString = toString;
})(UnidocPathElementType || (UnidocPathElementType = {}));
;// CONCATENATED MODULE: ./sources/path/UnidocPathElement.ts
function UnidocPathElement_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = UnidocPathElement_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function UnidocPathElement_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return UnidocPathElement_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return UnidocPathElement_arrayLikeToArray(o, minLen); }

function UnidocPathElement_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function UnidocPathElement_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocPathElement_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocPathElement_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocPathElement_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocPathElement_defineProperties(Constructor, staticProps); return Constructor; }




var TAG_ELEMENT_CONFIGURATION = /^([a-zA-Z0-9\-]+)(#[a-zA-Z0-9\-]+)?(\.[a-zA-Z0-9\-]+)*$/i;
var UnidocPathElement_EMPTY_STRING = '';
var UnidocPathElement = /*#__PURE__*/function () {
  /**
  * Instantiate a new empty path element.
  */
  function UnidocPathElement() {
    UnidocPathElement_classCallCheck(this, UnidocPathElement);

    this.type = UnidocPathElementType.SYMBOL;
    this.from = new UnidocLocation();
    this.to = new UnidocLocation();
    this.name = UnidocPathElement_EMPTY_STRING;
    this.identifier = UnidocPathElement_EMPTY_STRING;
    this.classes = new Set();
  }
  /**
  * Transform this path element as a file path element.
  *
  * @param url - URL of the file.
  * @param from - Starting location of the tag, may be unknown.
  * @param [to = from] - Ending location of the tag, may be unknown.
  */


  UnidocPathElement_createClass(UnidocPathElement, [{
    key: "asFile",
    value: function asFile(url, from) {
      var to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : from;
      this.clear();
      this.type = UnidocPathElementType.FILE;
      this.name = url;
      this.from.copy(from);
      this.to.copy(to);
    }
    /**
    * Transform this path element as a stream path element.
    *
    * @param from - Starting location in the stream, may be unknown.
    * @param [to = from] - Ending location in the stream, may be unknown.
    */

  }, {
    key: "asStream",
    value: function asStream(from) {
      var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : from;
      this.clear();
      this.type = UnidocPathElementType.STREAM;
      this.from.copy(from);
      this.to.copy(to);
    }
    /**
    * Transform this path element as a memory path element.
    *
    * @param name - Name associated to this memory element.
    * @param from - Starting location in memory, may be unknown.
    * @param [to = from]- Ending location in memory, may be unknown.
    */

  }, {
    key: "asMemory",
    value: function asMemory(name, from) {
      var to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : from;
      this.clear();
      this.type = UnidocPathElementType.MEMORY;
      this.name = name;
      this.from.copy(from);
      this.to.copy(to);
    }
    /**
    * Transform this path element as a symbol path element.
    *
    * @param location - Location of the symbol in the parent document.
    */

  }, {
    key: "asSymbol",
    value: function asSymbol(location) {
      this.clear();
      this.type = UnidocPathElementType.SYMBOL;
      this.from.copy(location);
      this.to.copy(location);
    }
    /**
    * Transform this path element as a tag path element.
    *
    * @param from - Starting location of the tag.
    * @param to - Ending location of the tag, may be unknown.
    * @param configuration - Type, identifier and classes of the tag element.
    */

  }, {
    key: "asTag",
    value: function asTag(from, to) {
      var configuration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
      this.clear();
      this.type = UnidocPathElementType.TAG;
      this.from.copy(from);
      this.to.copy(to);
      var tokens = TAG_ELEMENT_CONFIGURATION.exec(configuration);

      if (tokens != null) {
        for (var index = 1; index < tokens.length; ++index) {
          var token = tokens[index];

          if (token.startsWith('#')) {
            this.identifier = token.substring(1);
          } else if (token.startsWith('.')) {
            this.classes.add(token.substring(1));
          } else {
            this.name = token;
          }
        }
      }
    }
    /**
    * Add the given classes to this path element.
    *
    * @param classes - Classes to add to this path element.
    */

  }, {
    key: "addClasses",
    value: function addClasses(classes) {
      var _iterator = UnidocPathElement_createForOfIteratorHelper(classes),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var clazz = _step.value;
          this.classes.add(clazz);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
    * Deep copy another path element.
    *
    * @param other - Another path element to copy.
    */

  }, {
    key: "copy",
    value: function copy(other) {
      this.type = other.type;
      this.from.copy(other.from);
      this.to.copy(other.to);
      this.name = other.name;
      this.identifier = other.identifier;
      this.classes.clear();

      var _iterator2 = UnidocPathElement_createForOfIteratorHelper(other.classes),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var clazz = _step2.value;
          this.classes.add(clazz);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
    /**
    * @return A deep copy of this path element.
    */

  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocPathElement();
      result.copy(this);
      return result;
    }
    /**
    * Reset this path element to its initial state to reuse-it.
    */

  }, {
    key: "clear",
    value: function clear() {
      this.type = UnidocPathElementType.SYMBOL;
      this.from.clear();
      this.to.clear();
      this.name = UnidocPathElement_EMPTY_STRING;
      this.identifier = UnidocPathElement_EMPTY_STRING;
      this.classes.clear();
    }
    /**
    * @see Object#toString
    */

  }, {
    key: "toString",
    value: function toString() {
      var result = '';

      if (this.type === UnidocPathElementType.SYMBOL) {
        result += 'symbol';
      }

      if (this.type === UnidocPathElementType.STREAM) {
        result += 'stream';
      }

      if (this.type === UnidocPathElementType.MEMORY) {
        result += 'memory:\\\\';
      }

      if (this.type === UnidocPathElementType.FILE) {
        result += 'file:\\\\';
      }

      if (this.name.length > 0) {
        if (this.type === UnidocPathElementType.TAG) {
          result += '\\';
        }

        result += this.name;
      }

      if (this.identifier.length > 0) {
        result += '#';
        result += this.identifier;
      }

      var _iterator3 = UnidocPathElement_createForOfIteratorHelper(this.classes),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var clazz = _step3.value;
          result += '.';
          result += clazz;
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }

      if (!this.from.isUnknown() && !this.to.isUnknown()) {
        if (this.from.equals(this.to)) {
          result += ' at ' + this.from.toString();
        } else {
          result += ' between ' + this.from.toString() + ' and ' + this.to.toString();
        }
      } else if (!this.from.isUnknown()) {
        result += ' from ' + this.from.toString();
      } else if (!this.to.isUnknown()) {
        result += ' until ' + this.to.toString();
      }

      return result;
    }
    /**
    * @see Object#equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocPathElement) {
        if (other.type !== this.type || other.classes.size !== this.classes.size || other.identifier !== this.identifier || other.name !== this.name || !other.from.equals(this.from) || !other.to.equals(this.to)) {
          return false;
        }

        var _iterator4 = UnidocPathElement_createForOfIteratorHelper(other.classes),
            _step4;

        try {
          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
            var clazz = _step4.value;

            if (!this.classes.has(clazz)) {
              return false;
            }
          }
        } catch (err) {
          _iterator4.e(err);
        } finally {
          _iterator4.f();
        }

        return true;
      }

      return false;
    }
  }]);

  return UnidocPathElement;
}();

(function (UnidocPathElement) {
  function create() {
    return new UnidocPathElement();
  }

  UnidocPathElement.create = create;

  function copy(toCopy) {
    return toCopy == null ? toCopy : toCopy.clone();
  }

  UnidocPathElement.copy = copy;
  UnidocPathElement.ALLOCATOR = gl_tool_collection_.Duplicator.fromFactory(create);
})(UnidocPathElement || (UnidocPathElement = {}));
;// CONCATENATED MODULE: ./sources/path/UnidocPath.ts


function _construct(Parent, args, Class) { if (UnidocPath_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) UnidocPath_setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function UnidocPath_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocPath_setPrototypeOf(o, p) { UnidocPath_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocPath_setPrototypeOf(o, p); }

function UnidocPath_toConsumableArray(arr) { return UnidocPath_arrayWithoutHoles(arr) || UnidocPath_iterableToArray(arr) || UnidocPath_unsupportedIterableToArray(arr) || UnidocPath_nonIterableSpread(); }

function UnidocPath_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function UnidocPath_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function UnidocPath_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return UnidocPath_arrayLikeToArray(arr); }

function UnidocPath_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = UnidocPath_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function UnidocPath_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return UnidocPath_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return UnidocPath_arrayLikeToArray(o, minLen); }

function UnidocPath_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function UnidocPath_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocPath_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocPath_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocPath_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocPath_defineProperties(Constructor, staticProps); return Constructor; }




/**
* A path in a unidoc document.
*/

var UnidocPath = /*#__PURE__*/function () {
  /**
  * Instantiate a new empty path.
  *
  * @param [capacity = 16] - Capacity to pre-allocate for the path in element.
  */
  function UnidocPath() {
    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 16;

    UnidocPath_classCallCheck(this, UnidocPath);

    this._elements = gl_tool_collection_.Pack.instance(UnidocPathElement.ALLOCATOR, capacity);
    this.elements = this._elements.view();
  }
  /**
  * @return The maximum number of element in this path.
  */


  UnidocPath_createClass(UnidocPath, [{
    key: "push",

    /**
    * Append the given element at the end of the path.
    *
    * @param step - New element to append at the end of the path.
    *
    * @return This path instance for chaining purpose.
    */
    value: function push(step) {
      this._elements.push(step);

      return this;
    }
    /**
    * Push a new symbol at the end of this path.
    *
    * @param location - Location of the symbol in its parent document.
    *
    * @return This path instance for chaining purpose.
    */

  }, {
    key: "pushSymbol",
    value: function pushSymbol(location) {
      this._elements.size += 1;

      this._elements.last.asSymbol(location);

      return this;
    }
    /**
    * Push a new tag at the end of this path.
    *
    * @param from - Starting location of the tag in its parent document.
    * @param to - Ending location of the tag in its parent document, may be unknown.
    * @param configuration - Type, identifier and classes of the tag to append.
    *
    * @return This path instance for chaining purpose.
    */

  }, {
    key: "pushTag",
    value: function pushTag(from, to) {
      var configuration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
      this._elements.size += 1;

      this._elements.last.asTag(from, to, configuration);

      return this;
    }
    /**
    * Push a stream element into this path.
    *
    * @param from - Starting location in the stream, may be unknown.
    * @param [to = from] - Ending location in the stream, may be unknown.
    *
    * @return This path instance for chaining purpose.
    */

  }, {
    key: "pushStream",
    value: function pushStream(from) {
      var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : from;
      this._elements.size += 1;

      this._elements.last.asStream(from, to);

      return this;
    }
    /**
    * Push a memory element into this path.
    *
    * @param name - Name associated to the memory element.
    * @param from - Starting location in memory, may be unknown.
    * @param [to = from] - Ending location in memory, may be unknown.
    *
    * @return This path instance for chaining purpose.
    */

  }, {
    key: "pushMemory",
    value: function pushMemory(name, from) {
      var to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : from;
      this._elements.size += 1;

      this._elements.last.asMemory(name, from, to);

      return this;
    }
    /**
    * Push a file element into this path.
    *
    * @param url - URL of the file.
    * @param from - Starting location in the file, may be unknown.
    * @param [to = from] - Ending location in the file, may be unknown.
    *
    * @return This path instance for chaining purpose.
    */

  }, {
    key: "pushFile",
    value: function pushFile(url, from) {
      var to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : from;
      this._elements.size += 1;

      this._elements.last.asFile(url, from, to);

      return this;
    }
  }, {
    key: "snapToEnd",
    value: function snapToEnd() {
      var _iterator = UnidocPath_createForOfIteratorHelper(this._elements),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var element = _step.value;
          element.from.copy(element.to);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return this;
    }
  }, {
    key: "snapToStart",
    value: function snapToStart() {
      var _iterator2 = UnidocPath_createForOfIteratorHelper(this._elements),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var element = _step2.value;
          element.to.copy(element.from);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      return this;
    }
    /**
    * Replace an element of this path.
    *
    * @param index - The index of the element to replace.
    * @param step - The element to set at the given index.
    */

  }, {
    key: "set",
    value: function set(index, step) {
      this._elements.set(index, step);
    }
    /**
    * Replace an element of this path with a symbol element.
    *
    * @param index - The index of the element to replace.
    * @param location - Location of the symbol in its parent document.
    */

  }, {
    key: "setSymbol",
    value: function setSymbol(index, location) {
      this._elements.get(index).asSymbol(location);
    }
    /**
    * Replace an element of this path with a tag element.
    *
    * @param index - The index of the element to replace.
    * @param from - Starting location of the tag in its parent document.
    * @param to - Ending location of the tag in its parent document, may be unknown.
    * @param configuration - Type, identifier and classes of the tag to append.
    */

  }, {
    key: "setTag",
    value: function setTag(index, from, to) {
      var configuration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';

      this._elements.get(index).asTag(from, to, configuration);
    }
    /**
    * Concat the given path at the end of this path.
    *
    * All concatenated elements will be deep-copied.
    *
    * @param toConcat - A path to append at the end of this path.
    */

  }, {
    key: "concat",
    value: function concat(toConcat) {
      var _iterator3 = UnidocPath_createForOfIteratorHelper(toConcat._elements),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var element = _step3.value;

          this._elements.push(element);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }
    /**
    * Delete the elements in the given range.
    *
    * @param from - Index of the first element to delete.
    * @param [length = 1] - Number of elements to delete.
    */

  }, {
    key: "delete",
    value: function _delete(from) {
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

      this._elements.deleteMany(from, length);
    }
    /**
    * Delete the last element of the path.
    */

  }, {
    key: "pop",
    value: function pop() {
      this._elements.pop();
    }
    /**
    * Update this path to keep only the given subpath.
    *
    * @param from - Index of the first element to keep.
    * @param [length = 1] - Number of elements to keep.
    */

  }, {
    key: "keep",
    value: function keep(from) {
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      this._elements.size = from + length;

      this._elements.deleteMany(0, from);
    }
    /**
    * @return A deep copy of this path.
    */

  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocPath(this.size);
      result.copy(this);
      return result;
    }
    /**
    * Deeply copy the given path.
    *
    * @param toCopy - A path instance to copy.
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this._elements.size = 0;

      var _iterator4 = UnidocPath_createForOfIteratorHelper(toCopy._elements),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var element = _step4.value;

          this._elements.push(element);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }
    /**
    * Empty this path.
    */

  }, {
    key: "clear",
    value: function clear() {
      this._elements.clear();
    }
    /**
    * @see Object#toString
    */

  }, {
    key: "toString",
    value: function toString() {
      var result = '';

      var _iterator5 = UnidocPath_createForOfIteratorHelper(this.elements),
          _step5;

      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
          var element = _step5.value;

          if (result.length > 0) {
            result += ' > ';
          }

          result += element.toString();
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }

      return result;
    }
    /**
    * @see Object#equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocPath) {
        if (other._elements.size !== this._elements.size) {
          return false;
        }

        for (var index = 0, length = other.size; index < length; ++index) {
          if (!this._elements.get(index).equals(other._elements.get(index))) {
            return false;
          }
        }

        return true;
      }

      return false;
    }
    /**
    * @see Symbol.iterator
    */

  }, {
    key: Symbol.iterator,
    value: /*#__PURE__*/regenerator_default().mark(function value() {
      return regenerator_default().wrap(function value$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.delegateYield(this._elements, "t0", 1);

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, value, this);
    })
  }, {
    key: "capacity",
    get: function get() {
      return this._elements.capacity;
    }
    /**
    * @return The number of element in this path.
    */

  }, {
    key: "size",
    get: function get() {
      return this._elements.size;
    }
    /**
    * Update the number of element into this path.
    *
    * @param size - The new number of element into this path.
    */
    ,
    set: function set(size) {
      this._elements.size = size;
    }
    /**
    * @see Sequence.last
    */

  }, {
    key: "last",
    get: function get() {
      return this._elements.last;
    }
    /**
    * @see Sequence.first
    */

  }, {
    key: "first",
    get: function get() {
      return this._elements.first;
    }
  }]);

  return UnidocPath;
}();

(function (UnidocPath) {
  /**
  * Class of each instance of a path element.
  */
  UnidocPath.Element = UnidocPathElement;
  /**
  * An empty unidoc path.
  */

  UnidocPath.EMPTY = new UnidocPath(0);
  /**
  * Instantiate a new unidoc path of the given capacity.
  *
  * @param capacity - Capacity of the path to instantiate.
  *
  * @return An instance of unidoc path of the given capacity.
  */

  function create(capacity) {
    return new UnidocPath(capacity);
  }

  UnidocPath.create = create;

  function memory(name, from) {
    var to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : from;
    return UnidocPath.create(1).pushMemory(name, from instanceof UnidocLocation ? from : _construct(UnidocLocation, UnidocPath_toConsumableArray(from)), to instanceof UnidocLocation ? to : _construct(UnidocLocation, UnidocPath_toConsumableArray(to)));
  }

  UnidocPath.memory = memory;

  function copy(toCopy) {
    return toCopy == null ? toCopy : toCopy.clone();
  }

  UnidocPath.copy = copy;
})(UnidocPath || (UnidocPath = {}));
;// CONCATENATED MODULE: ./sources/path/index.ts



;// CONCATENATED MODULE: ./sources/predicate/index.ts





;// CONCATENATED MODULE: ./sources/producer/RxJSUnidocInput.ts
function RxJSUnidocInput_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { RxJSUnidocInput_typeof = function _typeof(obj) { return typeof obj; }; } else { RxJSUnidocInput_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return RxJSUnidocInput_typeof(obj); }

function RxJSUnidocInput_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function RxJSUnidocInput_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function RxJSUnidocInput_createClass(Constructor, protoProps, staticProps) { if (protoProps) RxJSUnidocInput_defineProperties(Constructor.prototype, protoProps); if (staticProps) RxJSUnidocInput_defineProperties(Constructor, staticProps); return Constructor; }

function RxJSUnidocInput_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { RxJSUnidocInput_get = Reflect.get; } else { RxJSUnidocInput_get = function _get(target, property, receiver) { var base = RxJSUnidocInput_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return RxJSUnidocInput_get(target, property, receiver || target); }

function RxJSUnidocInput_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = RxJSUnidocInput_getPrototypeOf(object); if (object === null) break; } return object; }

function RxJSUnidocInput_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) RxJSUnidocInput_setPrototypeOf(subClass, superClass); }

function RxJSUnidocInput_setPrototypeOf(o, p) { RxJSUnidocInput_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return RxJSUnidocInput_setPrototypeOf(o, p); }

function RxJSUnidocInput_createSuper(Derived) { var hasNativeReflectConstruct = RxJSUnidocInput_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = RxJSUnidocInput_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = RxJSUnidocInput_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return RxJSUnidocInput_possibleConstructorReturn(this, result); }; }

function RxJSUnidocInput_possibleConstructorReturn(self, call) { if (call && (RxJSUnidocInput_typeof(call) === "object" || typeof call === "function")) { return call; } return RxJSUnidocInput_assertThisInitialized(self); }

function RxJSUnidocInput_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function RxJSUnidocInput_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function RxJSUnidocInput_getPrototypeOf(o) { RxJSUnidocInput_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return RxJSUnidocInput_getPrototypeOf(o); }


var RxJSUnidocInput = /*#__PURE__*/function (_ListenableUnidocProd) {
  RxJSUnidocInput_inherits(RxJSUnidocInput, _ListenableUnidocProd);

  var _super = RxJSUnidocInput_createSuper(RxJSUnidocInput);

  function RxJSUnidocInput(observable) {
    var _this;

    RxJSUnidocInput_classCallCheck(this, RxJSUnidocInput);

    _this = _super.call(this);
    _this._observable = observable;
    _this._first = true;
    _this.produce = _this.produce.bind(RxJSUnidocInput_assertThisInitialized(_this));
    _this.fail = _this.fail.bind(RxJSUnidocInput_assertThisInitialized(_this));
    _this.complete = _this.complete.bind(RxJSUnidocInput_assertThisInitialized(_this));
    _this._subscription = _this._observable.subscribe(_this.produce, _this.fail, _this.complete);
    return _this;
  }

  RxJSUnidocInput_createClass(RxJSUnidocInput, [{
    key: "produce",
    value: function produce(value) {
      if (this._first) {
        this.initialize();
        this._first = false;
      }

      RxJSUnidocInput_get(RxJSUnidocInput_getPrototypeOf(RxJSUnidocInput.prototype), "produce", this).call(this, value);
    }
  }, {
    key: "unsubscribe",
    value: function unsubscribe() {
      if (this._subscription) {
        this._subscription.unsubscribe();

        this._subscription = null;
      }
    }
  }, {
    key: "subscribe",
    value: function subscribe() {
      if (this._subscription == null) {
        this._subscription = this._observable.subscribe(this.produce, this.fail, this.complete);
      }
    }
  }]);

  return RxJSUnidocInput;
}(ListenableUnidocProducer);
;// CONCATENATED MODULE: ./sources/producer/index.ts




;// CONCATENATED MODULE: ./sources/symbol/UnidocSymbol.ts
function UnidocSymbol_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocSymbol_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocSymbol_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocSymbol_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocSymbol_defineProperties(Constructor, staticProps); return Constructor; }




/**
* A symbol of a unidoc document.
*/

var UnidocSymbol = /*#__PURE__*/function () {
  /**
  * Instantiate a new empty unidoc symbol.
  */
  function UnidocSymbol() {
    UnidocSymbol_classCallCheck(this, UnidocSymbol);

    this.symbol = 0;
    this.origin = new UnidocRangeOrigin(4).runtime();
  }
  /**
  * Update the underlying symbol.
  *
  * @param symbol - The new underlying symbol as a unidoc code point.
  *
  * @return This symbol instance for chaining purposes.
  */


  UnidocSymbol_createClass(UnidocSymbol, [{
    key: "setSymbol",
    value: function setSymbol(symbol) {
      this.symbol = symbol;
      return this;
    }
    /**
    * Update the origin of this symbol.
    *
    * @param origin - The new origin of this symbol.
    *
    * @return This symbol instance for chaining purposes.
    */

  }, {
    key: "setOrigin",
    value: function setOrigin(origin) {
      this.origin.copy(origin);
      return this;
    }
    /**
    * Copy an existing unidoc symbol.
    *
    * @param toCopy - An existing unidoc symbol to copy.
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.symbol = toCopy.symbol;
      this.origin.copy(toCopy.origin);
    }
    /**
    * @return A copy of this symbol.
    */

  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocSymbol();
      result.copy(this);
      return result;
    }
    /**
    * Reset this instance to it's initial state.
    */

  }, {
    key: "clear",
    value: function clear() {
      this.symbol = 0;
      this.origin.clear();
      this.origin.runtime();
    }
    /**
    * @see Object.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      var result = 'symbol(';
      result += CodePoint.toDebugString(this.symbol);
      result += ') ';
      result += this.origin.toString();
      return result;
    }
    /**
    * @see Object.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocSymbol) {
        return other.symbol === this.symbol && other.origin.equals(this.origin);
      }

      return false;
    }
  }]);

  return UnidocSymbol;
}();

(function (UnidocSymbol) {
  /**
  * Return true if the given instances of unidoc symbol are equals.
  *
  * @param left - The instance to use as a left operand.
  * @param right - The instance to use as a right operand.
  *
  * @return True if both operands are equals.
  */
  function equals(left, right) {
    return left == null ? left === right : left.equals(right);
  }

  UnidocSymbol.equals = equals;
  /**
  * Instantiate and initialize a symbol.
  *
  * @param [symbol = 0] - The unicode symbol to wrap.
  * @param [origin = UnidocRangeOrigin.runtime()] - The origin of the symbol.
  *
  * @return The requested unidoc symbol instance.
  */

  function create() {
    var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : UnidocRangeOrigin.runtime();
    return new UnidocSymbol().setSymbol(symbol).setOrigin(origin);
  }

  UnidocSymbol.create = create;

  function copy(toCopy) {
    return toCopy == null ? toCopy : toCopy.clone();
  }

  UnidocSymbol.copy = copy;
  /**
  * An allocator of unidoc symbol instances.
  */

  UnidocSymbol.ALLOCATOR = gl_tool_collection_.Duplicator.fromFactory(create);
})(UnidocSymbol || (UnidocSymbol = {}));
;// CONCATENATED MODULE: ./sources/reader/UnidocStringReader.ts


function UnidocStringReader_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocStringReader_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocStringReader_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocStringReader_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocStringReader_defineProperties(Constructor, staticProps); return Constructor; }




var UnidocStringReader = /*#__PURE__*/function () {
  function UnidocStringReader(source) {
    var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : UnidocOrigin.runtime();

    UnidocStringReader_classCallCheck(this, UnidocStringReader);

    this.source = source;
    this.origin = new UnidocOrigin();
    this.origin.copy(origin);
    this._location = new UnidocLocationTracker();
    this._symbol = new UnidocSymbol();
  }
  /**
  * @see UnidocSymbolReader.hasNext
  */


  UnidocStringReader_createClass(UnidocStringReader, [{
    key: "hasNext",
    value: function hasNext() {
      return this._location.location.index < this.source.length;
    }
    /**
    * @see UnidocSymbolReader.skip
    */

  }, {
    key: "skip",
    value: function skip(count) {
      while (this.hasNext() && count > 0) {
        this.next();
        count -= 1;
      }

      return this;
    }
    /**
    * @see UnidocSymbolReader.current
    */

  }, {
    key: "current",
    value: function current() {
      if (this._location.location.index === 0) {
        throw new Error('No current symbol.');
      }

      return this._symbol;
    }
    /**
    * @see UnidocSymbolReader.next
    */

  }, {
    key: "next",
    value: function next() {
      var nextCodePoint = this.source.codePointAt(this._location.location.index);

      if (nextCodePoint == null) {
        throw new Error('Unable to read the next available code point at ' + this._location.toString() + ' from the underlying source : "' + this.source + '" in memory.');
      } else {
        this._symbol.symbol = nextCodePoint;

        this._symbol.origin.clear();

        this._symbol.origin.from.text(this._location.location).concat(this.origin);

        this._location.next(nextCodePoint);

        this._symbol.origin.to.text(this._location.location).concat(this.origin);

        return this._symbol;
      }
    }
    /**
    * @see UnidocSymbolReader.location
    */

  }, {
    key: "location",
    value: function location() {
      return this._location.location;
    }
    /**
    * @see Symbol.iterator
    */

  }, {
    key: Symbol.iterator,
    value: /*#__PURE__*/regenerator_default().mark(function value() {
      return regenerator_default().wrap(function value$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!this.hasNext()) {
                _context.next = 5;
                break;
              }

              _context.next = 3;
              return this.next();

            case 3:
              _context.next = 0;
              break;

            case 5:
            case "end":
              return _context.stop();
          }
        }
      }, value, this);
    })
  }]);

  return UnidocStringReader;
}();
;// CONCATENATED MODULE: ./sources/reader/UnidocNullReader.ts


function UnidocNullReader_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocNullReader_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocNullReader_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocNullReader_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocNullReader_defineProperties(Constructor, staticProps); return Constructor; }


var UnidocNullReader = /*#__PURE__*/function () {
  function UnidocNullReader() {
    UnidocNullReader_classCallCheck(this, UnidocNullReader);

    this._location = new UnidocLocation(0, 0, 0);
  }
  /**
  * @see UnidocSymbolReader.hasNext
  */


  UnidocNullReader_createClass(UnidocNullReader, [{
    key: "hasNext",
    value: function hasNext() {
      return false;
    }
    /**
    * @see UnidocSymbolReader.skip
    */

  }, {
    key: "skip",
    value: function skip(count) {
      return this;
    }
    /**
    * @see UnidocSymbolReader.current
    */

  }, {
    key: "current",
    value: function current() {
      throw new Error('No current symbol.');
    }
    /**
    * @see UnidocSymbolReader.next
    */

  }, {
    key: "next",
    value: function next() {
      throw new Error('There is no code point to read in a null reader.');
    }
    /**
    * @see UnidocSymbolReader.location
    */

  }, {
    key: "location",
    value: function location() {
      return this._location;
    }
    /**
    * @see Symbol.iterator
    */

  }, {
    key: Symbol.iterator,
    value: /*#__PURE__*/regenerator_default().mark(function value() {
      return regenerator_default().wrap(function value$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
            case "end":
              return _context.stop();
          }
        }
      }, value);
    })
  }]);

  return UnidocNullReader;
}();

(function (UnidocNullReader) {
  UnidocNullReader.INSTANCE = new UnidocNullReader();
})(UnidocNullReader || (UnidocNullReader = {}));
;// CONCATENATED MODULE: ./sources/reader/UnidocSymbolReaderProducer.ts
function UnidocSymbolReaderProducer_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocSymbolReaderProducer_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocSymbolReaderProducer_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocSymbolReaderProducer_typeof(obj); }

function UnidocSymbolReaderProducer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocSymbolReaderProducer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocSymbolReaderProducer_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocSymbolReaderProducer_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocSymbolReaderProducer_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocSymbolReaderProducer_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocSymbolReaderProducer_setPrototypeOf(subClass, superClass); }

function UnidocSymbolReaderProducer_setPrototypeOf(o, p) { UnidocSymbolReaderProducer_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocSymbolReaderProducer_setPrototypeOf(o, p); }

function UnidocSymbolReaderProducer_createSuper(Derived) { var hasNativeReflectConstruct = UnidocSymbolReaderProducer_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocSymbolReaderProducer_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocSymbolReaderProducer_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocSymbolReaderProducer_possibleConstructorReturn(this, result); }; }

function UnidocSymbolReaderProducer_possibleConstructorReturn(self, call) { if (call && (UnidocSymbolReaderProducer_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocSymbolReaderProducer_assertThisInitialized(self); }

function UnidocSymbolReaderProducer_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocSymbolReaderProducer_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocSymbolReaderProducer_getPrototypeOf(o) { UnidocSymbolReaderProducer_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocSymbolReaderProducer_getPrototypeOf(o); }


var UnidocSymbolReaderProducer = /*#__PURE__*/function (_ListenableUnidocProd) {
  UnidocSymbolReaderProducer_inherits(UnidocSymbolReaderProducer, _ListenableUnidocProd);

  var _super = UnidocSymbolReaderProducer_createSuper(UnidocSymbolReaderProducer);

  function UnidocSymbolReaderProducer(reader) {
    var _this;

    UnidocSymbolReaderProducer_classCallCheck(this, UnidocSymbolReaderProducer);

    _this = _super.call(this);
    _this._reader = reader;
    return _this;
  }

  UnidocSymbolReaderProducer_createClass(UnidocSymbolReaderProducer, [{
    key: "read",
    value: function read(from) {
      if (from == null) {
        while (this._reader.hasNext()) {
          this.produce(this._reader.next());
        }

        this.complete();
      } else {
        while (this._reader.hasNext() && from > 0) {
          this.produce(this._reader.next());
          from -= 1;
        }

        if (!this._reader.hasNext()) {
          this.complete();
        }
      }
    }
  }, {
    key: "readWithoutCompletion",
    value: function readWithoutCompletion(from) {
      if (from == null) {
        while (this._reader.hasNext()) {
          this.produce(this._reader.next());
        }
      } else {
        while (this._reader.hasNext() && from > 0) {
          this.produce(this._reader.next());
          from -= 1;
        }
      }
    }
  }]);

  return UnidocSymbolReaderProducer;
}(ListenableUnidocProducer);
;// CONCATENATED MODULE: ./sources/reader/UnidocSymbolReader.ts


 //import { UnidocFileReader } from './UnidocFileReader'


var UnidocSymbolReader;

(function (UnidocSymbolReader) {
  function fromNothing() {
    return UnidocNullReader.INSTANCE;
  }

  UnidocSymbolReader.fromNothing = fromNothing;

  function fromString(source) {
    var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : UnidocOrigin.runtime();
    return new UnidocStringReader(source, origin);
  }

  UnidocSymbolReader.fromString = fromString;
  /*export function fromFile(source: string): UnidocSymbolReader {
    return new UnidocFileReader(source)
  }*/

  function produceString(source) {
    var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : UnidocOrigin.runtime();
    return new UnidocSymbolReaderProducer(new UnidocStringReader(source, origin));
  }

  UnidocSymbolReader.produceString = produceString;

  function asProducer(source) {
    return new UnidocSymbolReaderProducer(source);
  }

  UnidocSymbolReader.asProducer = asProducer;
})(UnidocSymbolReader || (UnidocSymbolReader = {}));
;// CONCATENATED MODULE: ./sources/reader/index.ts



;// CONCATENATED MODULE: ./sources/stream/UnidocImportationResolver.ts


function UnidocImportationResolver_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocImportationResolver_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocImportationResolver_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocImportationResolver_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocImportationResolver_defineProperties(Constructor, staticProps); return Constructor; }

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var UnidocImportationResolver = /*#__PURE__*/function () {
  function UnidocImportationResolver() {
    UnidocImportationResolver_classCallCheck(this, UnidocImportationResolver);
  }

  UnidocImportationResolver_createClass(UnidocImportationResolver, [{
    key: "resolve",
    value: function resolve(value) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                throw new Error('UnidocImportationResolver#resolve was not implemented.');

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
    }
  }]);

  return UnidocImportationResolver;
}();
;// CONCATENATED MODULE: ./sources/stream/UnidocImportation.ts
function UnidocImportation_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocImportation_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocImportation_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocImportation_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocImportation_defineProperties(Constructor, staticProps); return Constructor; }



var UnidocImportation_EMPTY_STRING = '';
var UnidocImportation = /*#__PURE__*/function () {
  function UnidocImportation() {
    UnidocImportation_classCallCheck(this, UnidocImportation);

    this.origin = new UnidocRangeOrigin(8);
    this.resource = UnidocImportation_EMPTY_STRING;
  }

  UnidocImportation_createClass(UnidocImportation, [{
    key: "copy",
    value: function copy(toCopy) {
      this.origin.copy(toCopy.origin);
      this.resource = toCopy.resource;
    }
  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocImportation();
      result.copy(this);
      return result;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.origin.clear();
      this.resource = UnidocImportation_EMPTY_STRING;
    }
  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocImportation) {
        return other.origin.equals(this.origin) && other.resource === this.resource;
      }

      return false;
    }
  }]);

  return UnidocImportation;
}();

(function (UnidocImportation) {
  function copy(toCopy) {
    return toCopy == null ? toCopy : toCopy.clone();
  }

  UnidocImportation.copy = copy;
  /**
  * Return true if both object instances are equals.
  *
  * @param left - The first operand.
  * @param right - The second operand.
  *
  * @return True if both operand are equals.
  */

  function equals(left, right) {
    return left == null ? left == right : left.equals(right);
  }

  UnidocImportation.equals = equals;

  function create() {
    return new UnidocImportation();
  }

  UnidocImportation.create = create;
  UnidocImportation.ALLOCATOR = gl_tool_collection_.Duplicator.fromFactory(create);
})(UnidocImportation || (UnidocImportation = {}));
;// CONCATENATED MODULE: ./sources/stream/UnidocResource.ts
function UnidocResource_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocResource_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocResource_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocResource_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocResource_defineProperties(Constructor, staticProps); return Constructor; }



var UnidocResource_EMPTY_STRING = '';
var UnidocResource = /*#__PURE__*/function () {
  function UnidocResource() {
    UnidocResource_classCallCheck(this, UnidocResource);

    this.origin = new UnidocImportation();
    this.resource = UnidocResource_EMPTY_STRING;
    this.reader = UnidocSymbolReader.fromNothing();
  }

  UnidocResource_createClass(UnidocResource, [{
    key: "copy",
    value: function copy(toCopy) {
      this.origin.copy(toCopy.origin);
      this.resource = toCopy.resource;
      this.reader = toCopy.reader;
    }
  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocResource();
      result.copy(this);
      return result;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.origin.clear();
      this.resource = UnidocResource_EMPTY_STRING;
      this.reader = UnidocSymbolReader.fromNothing();
    }
  }]);

  return UnidocResource;
}();
;// CONCATENATED MODULE: ./sources/stream/UnidocFragmentResolver.ts
function UnidocFragmentResolver_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocFragmentResolver_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocFragmentResolver_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocFragmentResolver_typeof(obj); }



function UnidocFragmentResolver_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocFragmentResolver_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocFragmentResolver_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocFragmentResolver_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocFragmentResolver_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocFragmentResolver_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocFragmentResolver_setPrototypeOf(subClass, superClass); }

function UnidocFragmentResolver_setPrototypeOf(o, p) { UnidocFragmentResolver_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocFragmentResolver_setPrototypeOf(o, p); }

function UnidocFragmentResolver_createSuper(Derived) { var hasNativeReflectConstruct = UnidocFragmentResolver_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocFragmentResolver_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocFragmentResolver_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocFragmentResolver_possibleConstructorReturn(this, result); }; }

function UnidocFragmentResolver_possibleConstructorReturn(self, call) { if (call && (UnidocFragmentResolver_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocFragmentResolver_assertThisInitialized(self); }

function UnidocFragmentResolver_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocFragmentResolver_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocFragmentResolver_getPrototypeOf(o) { UnidocFragmentResolver_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocFragmentResolver_getPrototypeOf(o); }

var UnidocFragmentResolver_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};





var UnidocFragmentResolver = /*#__PURE__*/function (_UnidocImportationRes) {
  UnidocFragmentResolver_inherits(UnidocFragmentResolver, _UnidocImportationRes);

  var _super = UnidocFragmentResolver_createSuper(UnidocFragmentResolver);

  function UnidocFragmentResolver() {
    var _this;

    UnidocFragmentResolver_classCallCheck(this, UnidocFragmentResolver);

    _this = _super.call(this);
    _this._fragments = new Map();
    return _this;
  }

  UnidocFragmentResolver_createClass(UnidocFragmentResolver, [{
    key: "set",
    value: function set(fragment, content) {
      this._fragments.set(fragment, content);
    }
  }, {
    key: "resolve",
    value: function resolve(value) {
      return UnidocFragmentResolver_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default().mark(function _callee() {
        var fragment, resource;
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                fragment = this._fragments.get(value.resource);

                if (!(fragment == null)) {
                  _context.next = 5;
                  break;
                }

                throw new Error('Unable to resolve fragment : ' + value.resource + ' because there is ' + 'no fragment registered with the given name.');

              case 5:
                resource = new UnidocResource();
                resource.resource = 'fragment://' + value.resource;
                resource.reader = UnidocSymbolReader.fromString(fragment, new UnidocOrigin().resource('fragment://' + value.resource));
                resource.origin.copy(value);
                return _context.abrupt("return", resource);

              case 10:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
  }]);

  return UnidocFragmentResolver;
}(UnidocImportationResolver);
;// CONCATENATED MODULE: ./sources/stream/UnidocImportationProducer.ts
function UnidocImportationProducer_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocImportationProducer_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocImportationProducer_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocImportationProducer_typeof(obj); }

function UnidocImportationProducer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocImportationProducer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocImportationProducer_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocImportationProducer_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocImportationProducer_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocImportationProducer_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { UnidocImportationProducer_get = Reflect.get; } else { UnidocImportationProducer_get = function _get(target, property, receiver) { var base = UnidocImportationProducer_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return UnidocImportationProducer_get(target, property, receiver || target); }

function UnidocImportationProducer_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = UnidocImportationProducer_getPrototypeOf(object); if (object === null) break; } return object; }

function UnidocImportationProducer_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocImportationProducer_setPrototypeOf(subClass, superClass); }

function UnidocImportationProducer_setPrototypeOf(o, p) { UnidocImportationProducer_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocImportationProducer_setPrototypeOf(o, p); }

function UnidocImportationProducer_createSuper(Derived) { var hasNativeReflectConstruct = UnidocImportationProducer_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocImportationProducer_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocImportationProducer_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocImportationProducer_possibleConstructorReturn(this, result); }; }

function UnidocImportationProducer_possibleConstructorReturn(self, call) { if (call && (UnidocImportationProducer_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocImportationProducer_assertThisInitialized(self); }

function UnidocImportationProducer_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocImportationProducer_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocImportationProducer_getPrototypeOf(o) { UnidocImportationProducer_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocImportationProducer_getPrototypeOf(o); }



var UnidocImportationProducer = /*#__PURE__*/function (_ListenableUnidocProd) {
  UnidocImportationProducer_inherits(UnidocImportationProducer, _ListenableUnidocProd);

  var _super = UnidocImportationProducer_createSuper(UnidocImportationProducer);

  /**
  * Instantiate a new unidoc event.
  */
  function UnidocImportationProducer() {
    var _this;

    UnidocImportationProducer_classCallCheck(this, UnidocImportationProducer);

    _this = _super.call(this);
    _this._importation = new UnidocImportation();
    return _this;
  }
  /**
  * @see ListenableUnidocProducer.fail
  */


  UnidocImportationProducer_createClass(UnidocImportationProducer, [{
    key: "fail",
    value: function fail(error) {
      UnidocImportationProducer_get(UnidocImportationProducer_getPrototypeOf(UnidocImportationProducer.prototype), "fail", this).call(this, error);
    }
    /**
    * @see ListenableUnidocProducer.initialize
    */

  }, {
    key: "initialize",
    value: function initialize() {
      UnidocImportationProducer_get(UnidocImportationProducer_getPrototypeOf(UnidocImportationProducer.prototype), "initialize", this).call(this);
    }
  }, {
    key: "ofResource",
    value: function ofResource(resource) {
      this._importation.resource = resource;
      return this;
    }
  }, {
    key: "at",
    value: function at(origin) {
      this._importation.origin.from.copy(origin);

      this._importation.origin.to.copy(origin);

      return this;
    }
  }, {
    key: "from",
    value: function from(origin) {
      if (origin) {
        this._importation.origin.from.copy(origin);

        return this;
      } else {
        this._importation.origin.from.clear();

        return this._importation.origin.from;
      }
    }
  }, {
    key: "to",
    value: function to(origin) {
      if (origin) {
        this._importation.origin.to.copy(origin);

        return this;
      } else {
        this._importation.origin.to.clear();

        return this._importation.origin.to;
      }
    }
    /**
    * @see ListenableUnidocProducer.produce
    */

  }, {
    key: "produce",
    value: function produce() {
      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._importation;

      UnidocImportationProducer_get(UnidocImportationProducer_getPrototypeOf(UnidocImportationProducer.prototype), "produce", this).call(this, event);
    }
    /**
    * @see ListenableUnidocProducer.complete
    */

  }, {
    key: "complete",
    value: function complete() {
      UnidocImportationProducer_get(UnidocImportationProducer_getPrototypeOf(UnidocImportationProducer.prototype), "complete", this).call(this);
    }
  }, {
    key: "clear",
    value: function clear() {
      this._importation.clear();

      this.removeAllEventListener();
    }
  }]);

  return UnidocImportationProducer;
}(ListenableUnidocProducer);

(function (UnidocImportationProducer) {
  function create() {
    return new UnidocImportationProducer();
  }

  UnidocImportationProducer.create = create;
})(UnidocImportationProducer || (UnidocImportationProducer = {}));
;// CONCATENATED MODULE: ./sources/stream/UnidocImportationFilterState.ts
var UnidocImportationFilterState;

(function (UnidocImportationFilterState) {
  UnidocImportationFilterState.CONTENT = 0;
  UnidocImportationFilterState.IMPORTATION_START = 1;
  UnidocImportationFilterState.IMPORTATION_CONTENT = 2;
  UnidocImportationFilterState.IMPORTATION_TRAILING_WHITESPACE = 3;
  UnidocImportationFilterState.ALL = [UnidocImportationFilterState.CONTENT, UnidocImportationFilterState.IMPORTATION_START, UnidocImportationFilterState.IMPORTATION_CONTENT, UnidocImportationFilterState.IMPORTATION_TRAILING_WHITESPACE];

  function toString(value) {
    switch (value) {
      case UnidocImportationFilterState.CONTENT:
        return 'CONTENT';

      case UnidocImportationFilterState.IMPORTATION_START:
        return 'IMPORTATION_START';

      case UnidocImportationFilterState.IMPORTATION_CONTENT:
        return 'IMPORTATION_CONTENT';

      case UnidocImportationFilterState.IMPORTATION_TRAILING_WHITESPACE:
        return 'IMPORTATION_TRAILING_WHITESPACE';

      default:
        return undefined;
    }
  }

  UnidocImportationFilterState.toString = toString;
})(UnidocImportationFilterState || (UnidocImportationFilterState = {}));
;// CONCATENATED MODULE: ./sources/stream/UnidocImportationFilter.ts
function UnidocImportationFilter_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocImportationFilter_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocImportationFilter_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocImportationFilter_typeof(obj); }

function UnidocImportationFilter_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = UnidocImportationFilter_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function UnidocImportationFilter_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return UnidocImportationFilter_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return UnidocImportationFilter_arrayLikeToArray(o, minLen); }

function UnidocImportationFilter_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function UnidocImportationFilter_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocImportationFilter_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocImportationFilter_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocImportationFilter_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocImportationFilter_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocImportationFilter_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocImportationFilter_setPrototypeOf(subClass, superClass); }

function UnidocImportationFilter_setPrototypeOf(o, p) { UnidocImportationFilter_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocImportationFilter_setPrototypeOf(o, p); }

function UnidocImportationFilter_createSuper(Derived) { var hasNativeReflectConstruct = UnidocImportationFilter_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocImportationFilter_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocImportationFilter_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocImportationFilter_possibleConstructorReturn(this, result); }; }

function UnidocImportationFilter_possibleConstructorReturn(self, call) { if (call && (UnidocImportationFilter_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocImportationFilter_assertThisInitialized(self); }

function UnidocImportationFilter_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocImportationFilter_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocImportationFilter_getPrototypeOf(o) { UnidocImportationFilter_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocImportationFilter_getPrototypeOf(o); }








var UnidocImportationFilter_EMPTY_STRING = '';
var IMPORTATION_TAG = 'import';
var UnidocImportationFilter = /*#__PURE__*/function (_SubscribableUnidocCo) {
  UnidocImportationFilter_inherits(UnidocImportationFilter, _SubscribableUnidocCo);

  var _super = UnidocImportationFilter_createSuper(UnidocImportationFilter);

  function UnidocImportationFilter() {
    var _this;

    UnidocImportationFilter_classCallCheck(this, UnidocImportationFilter);

    _this = _super.call(this);
    _this.importations = new UnidocImportationProducer();
    _this._output = new UnidocEventProducer();
    _this._nextIdentifier = UnidocImportationFilter_EMPTY_STRING;
    _this._buffer = UnidocBuffer.create(UnidocEvent.ALLOCATOR, 16);
    _this._state = UnidocImportationFilterState.CONTENT;
    return _this;
  }

  UnidocImportationFilter_createClass(UnidocImportationFilter, [{
    key: "handleInitialization",
    value: function handleInitialization() {
      this._output.initialize();

      this.importations.initialize();

      this._buffer.clear();

      this._nextIdentifier = UnidocImportationFilter_EMPTY_STRING;
      this._state = UnidocImportationFilterState.CONTENT;
    }
  }, {
    key: "handleProduction",
    value: function handleProduction(value) {
      switch (this._state) {
        case UnidocImportationFilterState.CONTENT:
          return this.handleProductionAfterContent(value);

        case UnidocImportationFilterState.IMPORTATION_START:
          return this.handleProductionAfterImportationStart(value);

        case UnidocImportationFilterState.IMPORTATION_CONTENT:
          return this.handleProductionAfterImportationContent(value);

        case UnidocImportationFilterState.IMPORTATION_TRAILING_WHITESPACE:
          return this.handleProductionAfterTrailingWhitespace(value);

        default:
          throw new Error('Unable to handle production in state #' + this._state + '(' + UnidocImportationFilterState.toString(this._state) + ') because ' + 'no procedure was defined for that.');
      }
    }
  }, {
    key: "handleProductionAfterContent",
    value: function handleProductionAfterContent(value) {
      if (value.type === UnidocEventType.START_TAG && value.tag === IMPORTATION_TAG) {
        this._buffer.push(value);

        this.importations.from(value.origin.from);
        this._state = UnidocImportationFilterState.IMPORTATION_START;
      } else {
        this._output.produce(value);
      }
    }
  }, {
    key: "handleProductionAfterImportationStart",
    value: function handleProductionAfterImportationStart(value) {
      if (value.type === UnidocEventType.WHITESPACE) {
        this._buffer.push(value);
      } else if (value.type === UnidocEventType.WORD) {
        this._buffer.push(value);

        this._nextIdentifier += value.text;
        this._state = UnidocImportationFilterState.IMPORTATION_CONTENT;
      } else {
        this.handleInvalidImportationTag(value);
      }
    }
  }, {
    key: "handleProductionAfterImportationContent",
    value: function handleProductionAfterImportationContent(value) {
      if (value.type === UnidocEventType.WHITESPACE) {
        this._buffer.push(value);

        this._state = UnidocImportationFilterState.IMPORTATION_TRAILING_WHITESPACE;
      } else if (value.type === UnidocEventType.END_TAG) {
        if (value.tag === IMPORTATION_TAG) {
          this.importations.to(value.origin.to);
          this.emitValidImportation();
        } else {
          this.handleInvalidImportationTag(value);
        }
      } else if (value.type === UnidocEventType.WORD) {
        this._buffer.push(value);

        this._nextIdentifier += value.text;
      } else {
        this.handleInvalidImportationTag(value);
      }
    }
  }, {
    key: "handleProductionAfterTrailingWhitespace",
    value: function handleProductionAfterTrailingWhitespace(value) {
      if (value.type === UnidocEventType.WHITESPACE) {
        this._buffer.push(value);

        this._state = UnidocImportationFilterState.IMPORTATION_TRAILING_WHITESPACE;
      } else if (value.type === UnidocEventType.END_TAG) {
        if (value.tag === IMPORTATION_TAG) {
          this.importations.to(value.origin.to);
          this.emitValidImportation();
        } else {
          this.handleInvalidImportationTag(value);
        }
      } else {
        this.handleInvalidImportationTag(value);
      }
    }
  }, {
    key: "handleInvalidImportationTag",
    value: function handleInvalidImportationTag(value) {
      var _iterator = UnidocImportationFilter_createForOfIteratorHelper(this._buffer),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var event = _step.value;

          this._output.produce(event);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      this._output.produce(value);

      this._buffer.clear();

      this._nextIdentifier = '';
      this._state = UnidocImportationFilterState.CONTENT;
    }
  }, {
    key: "emitValidImportation",
    value: function emitValidImportation() {
      this._buffer.clear();

      this._state = UnidocImportationFilterState.CONTENT;
      this.importations.ofResource(this._nextIdentifier);
      this._nextIdentifier = '';
      this.importations.produce();
    }
  }, {
    key: "handleCompletion",
    value: function handleCompletion() {
      this.importations.complete();

      this._output.complete();

      this._buffer.clear();

      this._nextIdentifier = UnidocImportationFilter_EMPTY_STRING;
      this._state = UnidocImportationFilterState.CONTENT;
    }
  }, {
    key: "handleFailure",
    value: function handleFailure(error) {
      console.error(error);
    }
    /**
    * @see UnidocProducer.addEventListener
    */

  }, {
    key: "addEventListener",
    value: function addEventListener(event, listener) {
      this._output.addEventListener(event, listener);
    }
    /**
    * @see UnidocProducer.removeEventListener
    */

  }, {
    key: "removeEventListener",
    value: function removeEventListener(event, listener) {
      this._output.removeEventListener(event, listener);
    }
    /**
    * @see UnidocProducer.removeAllEventListener
    */

  }, {
    key: "removeAllEventListener",
    value: function removeAllEventListener() {
      var _this$_output;

      (_this$_output = this._output).removeAllEventListener.apply(_this$_output, arguments);
    }
  }]);

  return UnidocImportationFilter;
}(SubscribableUnidocConsumer);
;// CONCATENATED MODULE: ./sources/stream/UnidocNullResolver.ts
function UnidocNullResolver_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocNullResolver_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocNullResolver_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocNullResolver_typeof(obj); }



function UnidocNullResolver_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocNullResolver_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocNullResolver_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocNullResolver_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocNullResolver_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocNullResolver_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocNullResolver_setPrototypeOf(subClass, superClass); }

function UnidocNullResolver_setPrototypeOf(o, p) { UnidocNullResolver_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocNullResolver_setPrototypeOf(o, p); }

function UnidocNullResolver_createSuper(Derived) { var hasNativeReflectConstruct = UnidocNullResolver_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocNullResolver_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocNullResolver_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocNullResolver_possibleConstructorReturn(this, result); }; }

function UnidocNullResolver_possibleConstructorReturn(self, call) { if (call && (UnidocNullResolver_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocNullResolver_assertThisInitialized(self); }

function UnidocNullResolver_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocNullResolver_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocNullResolver_getPrototypeOf(o) { UnidocNullResolver_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocNullResolver_getPrototypeOf(o); }

var UnidocNullResolver_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};


var UnidocNullResolver = /*#__PURE__*/function (_UnidocImportationRes) {
  UnidocNullResolver_inherits(UnidocNullResolver, _UnidocImportationRes);

  var _super = UnidocNullResolver_createSuper(UnidocNullResolver);

  function UnidocNullResolver() {
    UnidocNullResolver_classCallCheck(this, UnidocNullResolver);

    return _super.apply(this, arguments);
  }

  UnidocNullResolver_createClass(UnidocNullResolver, [{
    key: "resolve",
    value: function resolve(value) {
      return UnidocNullResolver_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                throw 'A null resolver can\'t resolve unidoc resources.';

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
    }
  }]);

  return UnidocNullResolver;
}(UnidocImportationResolver);

(function (UnidocNullResolver) {
  UnidocNullResolver.INSTANCE = new UnidocNullResolver();
})(UnidocNullResolver || (UnidocNullResolver = {}));
;// CONCATENATED MODULE: ./sources/stream/UnidocStreamState.ts
var UnidocStreamState;

(function (UnidocStreamState) {
  UnidocStreamState.CREATED = 0;
  UnidocStreamState.RUNNING = 1;
  UnidocStreamState.IMPORTING = 2;
  UnidocStreamState.COMPLETED = 3;
  UnidocStreamState.ALL = [UnidocStreamState.CREATED, UnidocStreamState.RUNNING, UnidocStreamState.IMPORTING, UnidocStreamState.COMPLETED];

  function toString(value) {
    switch (value) {
      case UnidocStreamState.CREATED:
        return 'CREATED';

      case UnidocStreamState.RUNNING:
        return 'RUNNING';

      case UnidocStreamState.IMPORTING:
        return 'IMPORTING';

      case UnidocStreamState.COMPLETED:
        return 'COMPLETED';

      default:
        return undefined;
    }
  }

  UnidocStreamState.toString = toString;
})(UnidocStreamState || (UnidocStreamState = {}));
;// CONCATENATED MODULE: ./sources/stream/UnidocStream.ts
function UnidocStream_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocStream_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocStream_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocStream_typeof(obj); }

function UnidocStream_toConsumableArray(arr) { return UnidocStream_arrayWithoutHoles(arr) || UnidocStream_iterableToArray(arr) || UnidocStream_unsupportedIterableToArray(arr) || UnidocStream_nonIterableSpread(); }

function UnidocStream_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function UnidocStream_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function UnidocStream_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return UnidocStream_arrayLikeToArray(arr); }

function UnidocStream_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = UnidocStream_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function UnidocStream_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return UnidocStream_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return UnidocStream_arrayLikeToArray(o, minLen); }

function UnidocStream_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function UnidocStream_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocStream_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocStream_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocStream_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocStream_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocStream_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { UnidocStream_get = Reflect.get; } else { UnidocStream_get = function _get(target, property, receiver) { var base = UnidocStream_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return UnidocStream_get(target, property, receiver || target); }

function UnidocStream_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = UnidocStream_getPrototypeOf(object); if (object === null) break; } return object; }

function UnidocStream_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocStream_setPrototypeOf(subClass, superClass); }

function UnidocStream_setPrototypeOf(o, p) { UnidocStream_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocStream_setPrototypeOf(o, p); }

function UnidocStream_createSuper(Derived) { var hasNativeReflectConstruct = UnidocStream_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocStream_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocStream_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocStream_possibleConstructorReturn(this, result); }; }

function UnidocStream_possibleConstructorReturn(self, call) { if (call && (UnidocStream_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocStream_assertThisInitialized(self); }

function UnidocStream_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocStream_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocStream_getPrototypeOf(o) { UnidocStream_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocStream_getPrototypeOf(o); }







var UnidocStream = /*#__PURE__*/function (_ListenableUnidocProd) {
  UnidocStream_inherits(UnidocStream, _ListenableUnidocProd);

  var _super = UnidocStream_createSuper(UnidocStream);

  function UnidocStream(resolver) {
    var _this;

    UnidocStream_classCallCheck(this, UnidocStream);

    _this = _super.call(this);
    _this._resources = gl_tool_collection_.Pack.any(16);
    _this._import = new UnidocImportation();
    _this._symbol = new UnidocSymbol();
    _this._resolver = resolver;
    _this._state = UnidocStreamState.CREATED;
    _this._oldState = UnidocStreamState.CREATED;
    _this.executeImport = _this.executeImport.bind(UnidocStream_assertThisInitialized(_this));
    _this.fail = _this.fail.bind(UnidocStream_assertThisInitialized(_this));
    return _this;
  }

  UnidocStream_createClass(UnidocStream, [{
    key: "initializeIfNecessary",
    value: function initializeIfNecessary() {
      if (this._state === UnidocStreamState.CREATED) {
        this.initialize();
        this._state = UnidocStreamState.RUNNING;
      }
    }
  }, {
    key: "import",
    value: function _import(parameter) {
      if (typeof parameter === 'string') {
        this._import.resource = parameter;

        this._import.origin.at(UnidocOrigin.runtime());

        this.resolveImport(this._import);
      } else {
        this.resolveImport(parameter);
      }
    }
  }, {
    key: "resolveImport",
    value: function resolveImport(importation) {
      this._oldState = this._state;
      this._state = UnidocStreamState.IMPORTING;

      this._resolver.resolve(importation).then(this.executeImport)["catch"](this.fail);
    }
  }, {
    key: "executeImport",
    value: function executeImport(resource) {
      this._state = this._oldState;
      this.stream(resource);
    }
  }, {
    key: "stream",
    value: function stream(resource) {
      this.assertThatThereIsNoCircularDependency(resource);
      this.initializeIfNecessary();

      this._resources.push(resource);

      while (this.hasNext() && this._state === UnidocStreamState.RUNNING) {
        this.next();
      }

      if (this._state === UnidocStreamState.RUNNING) {
        this._state = UnidocStreamState.COMPLETED;
        this.complete();
      }
    }
  }, {
    key: "assertThatThereIsNoCircularDependency",
    value: function assertThatThereIsNoCircularDependency(resource) {
      var _iterator = UnidocStream_createForOfIteratorHelper(this._resources),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var existingResource = _step.value;

          if (existingResource.resource === resource.resource) {
            throw new Error('Unable to stream resource ' + resource.resource + ' imported from ' + resource.origin.origin.toString() + ' because there is a circular ' + 'dependency : ' + UnidocStream_toConsumableArray(this._resources).map(function (x) {
              return x.resource;
            }).join(' > ') + ' > ' + resource.resource + '.');
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "fail",
    value: function fail(error) {
      UnidocStream_get(UnidocStream_getPrototypeOf(UnidocStream.prototype), "fail", this).call(this, error);
    }
  }, {
    key: "hasNext",
    value: function hasNext() {
      return this._resources.size > 0;
    }
  }, {
    key: "next",
    value: function next() {
      var next = this._resources.last.reader.next();

      this._symbol.symbol = next.symbol;

      while (this._resources.size > 0 && !this._resources.last.reader.hasNext()) {
        this._resources.pop();
      }

      this.produce(next);
    }
  }]);

  return UnidocStream;
}(ListenableUnidocProducer);
;// CONCATENATED MODULE: ./sources/stream/index.ts








;// CONCATENATED MODULE: ./sources/symbol/index.ts



;// CONCATENATED MODULE: ./sources/token/TrackedUnidocTokenProducer.ts
function TrackedUnidocTokenProducer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function TrackedUnidocTokenProducer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function TrackedUnidocTokenProducer_createClass(Constructor, protoProps, staticProps) { if (protoProps) TrackedUnidocTokenProducer_defineProperties(Constructor.prototype, protoProps); if (staticProps) TrackedUnidocTokenProducer_defineProperties(Constructor, staticProps); return Constructor; }





var DEFAULT_OPENING_BLOCK_LINE = '{';
var DEFAULT_CLOSING_BLOCK_LINE = '}';
var STATE_WORD = 0;
var STATE_SPACE = 1;
var STATE_CARRIAGE_RETURN = 2;
var STATE_NEWLINE = 3;

function getState(codePoint) {
  switch (codePoint) {
    case CodePoint.NEW_LINE:
      return STATE_NEWLINE;

    case CodePoint.CARRIAGE_RETURN:
      return STATE_CARRIAGE_RETURN;

    case CodePoint.SPACE:
    case CodePoint.TABULATION:
    case CodePoint.FORM_FEED:
      return STATE_SPACE;

    default:
      return STATE_WORD;
  }
}
/**
* A unidoc token.
*/


var TrackedUnidocTokenProducer = /*#__PURE__*/function () {
  /**
  * Instantiate a new unidoc token.
  *
  * @param [capacity = 16] - Initial capacity of the symbol buffer of this token.
  */
  function TrackedUnidocTokenProducer() {
    TrackedUnidocTokenProducer_classCallCheck(this, TrackedUnidocTokenProducer);

    this._producer = new UnidocTokenProducer();
    this._tracker = new UnidocLocationTracker();
  }
  /**
  * Produce an identifier token.
  *
  * @param value - Code points of the token to produce.
  * @param [line = value] - The line of text associated with the token.
  *
  * @return This producer instance for chaining purposes.
  */


  TrackedUnidocTokenProducer_createClass(TrackedUnidocTokenProducer, [{
    key: "produceIdentifier",
    value: function produceIdentifier(value) {
      var line = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : value;

      this._producer.from().text(this._tracker.location).runtime();

      this._tracker.nextString(line);

      this._producer.to().text(this._tracker.location).runtime();

      this._producer.produceIdentifier(value);

      return this;
    }
    /**
    * Produce a class token.
    *
    * @param value - Code points of the token to produce.
    * @param [line = value] - The line of text associated with the token.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceClass",
    value: function produceClass(value) {
      var line = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : value;

      this._producer.from().text(this._tracker.location).runtime();

      this._tracker.nextString(line);

      this._producer.to().text(this._tracker.location).runtime();

      this._producer.produceClass(value);

      return this;
    }
    /**
    * Produce a tag token.
    *
    * @param value - Code points of the token to produce.
    * @param [line = value] - The line of text associated with the token.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceTag",
    value: function produceTag(value) {
      var line = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : value;

      this._producer.from().text(this._tracker.location).runtime();

      this._tracker.nextString(line);

      this._producer.to().text(this._tracker.location).runtime();

      this._producer.produceTag(value);

      return this;
    }
    /**
    * Produce a block start token.
    *
    * @param [line = DEFAULT_OPENING_BLOCK_LINE] - The line of text associated with the token.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceBlockStart",
    value: function produceBlockStart() {
      var line = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_OPENING_BLOCK_LINE;

      this._producer.from().text(this._tracker.location).runtime();

      this._tracker.nextString(line);

      this._producer.to().text(this._tracker.location).runtime();

      this._producer.produceBlockStart();

      return this;
    }
    /**
    * Produce a block end token.
    *
    * @param [line = DEFAULT_CLOSING_BLOCK_LINE] - The line of text associated with the token.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceBlockEnd",
    value: function produceBlockEnd() {
      var line = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_CLOSING_BLOCK_LINE;

      this._producer.from().text(this._tracker.location).runtime();

      this._tracker.nextString(line);

      this._producer.to().text(this._tracker.location).runtime();

      this._producer.produceBlockEnd();

      return this;
    }
    /**
    * Produce a space token.
    *
    * @param value - Code points of the token to produce.
    * @param [line = value] - The line of text associated with the token.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceSpace",
    value: function produceSpace(value) {
      var line = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : value;

      this._producer.from().text(this._tracker.location).runtime();

      this._tracker.nextString(line);

      this._producer.to().text(this._tracker.location).runtime();

      this._producer.produceSpace(value);

      return this;
    }
    /**
    * Produce a newline token.
    *
    * @param [type = '\r\n'] - Type of new line to produce.
    * @param [line = type] - The line of text associated with the token.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceNewline",
    value: function produceNewline() {
      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '\r\n';
      var line = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : type;

      this._producer.from().text(this._tracker.location).runtime();

      this._tracker.nextString(line);

      this._producer.to().text(this._tracker.location).runtime();

      this._producer.produceNewline(type);

      return this;
    }
    /**
    * Produce a word token.
    *
    * @param value - Code points of the token to produce.
    * @param [line = value] - The line of text associated with the token.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceWord",
    value: function produceWord(value) {
      var line = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : value;

      this._producer.from().text(this._tracker.location).runtime();

      this._tracker.nextString(line);

      this._producer.to().text(this._tracker.location).runtime();

      this._producer.produceWord(value);

      return this;
    }
    /**
    * Produce all extractable word, space and newline tokens of the given string.
    *
    * @param value - The string to split into word, space and newline tokens.
    *
    * @return This producer instance for chaining purposes.
    */

  }, {
    key: "produceString",
    value: function produceString(value) {
      if (value.length > 0) {
        var offset = 0;
        var cursor = 1;
        var state = getState(value.codePointAt(0));

        while (cursor < value.length) {
          var nextState = getState(value.codePointAt(cursor));

          switch (state) {
            case STATE_WORD:
              if (nextState !== state) {
                this.produceWord(value.substring(offset, cursor));
                offset = cursor;
              }

              break;

            case STATE_SPACE:
              if (nextState !== state) {
                this.produceSpace(value.substring(offset, cursor));
                offset = cursor;
              }

              break;

            case STATE_CARRIAGE_RETURN:
              if (nextState !== STATE_NEWLINE) {
                this.produceNewline(value.substring(offset, cursor));
                offset = cursor;
              }

              break;

            case STATE_NEWLINE:
              this.produceNewline(value.substring(offset, cursor));
              offset = cursor;
              break;
          }

          cursor += 1;
          state = nextState;
        }

        switch (state) {
          case STATE_WORD:
            this.produceWord(value.substring(offset, cursor));
            break;

          case STATE_SPACE:
            this.produceSpace(value.substring(offset, cursor));
            break;

          case STATE_CARRIAGE_RETURN:
            this.produceNewline(value.substring(offset, cursor));
            break;

          case STATE_NEWLINE:
            this.produceNewline(value.substring(offset, cursor));
            break;
        }
      }

      return this;
    }
    /**
    * @see ListenableUnidocProducer.complete
    */

  }, {
    key: "complete",
    value: function complete() {
      this._producer.complete();
    }
  }, {
    key: "addEventListener",
    value: function addEventListener(event, listener) {
      this._producer.addEventListener(event, listener);
    }
  }, {
    key: "removeEventListener",
    value: function removeEventListener(event, listener) {
      this._producer.removeEventListener(event, listener);
    }
  }, {
    key: "removeAllEventListener",
    value: function removeAllEventListener() {
      var _this$_producer;

      (_this$_producer = this._producer).removeAllEventListener.apply(_this$_producer, arguments);
    }
  }]);

  return TrackedUnidocTokenProducer;
}();

(function (TrackedUnidocTokenProducer) {
  function create() {
    return new TrackedUnidocTokenProducer();
  }

  TrackedUnidocTokenProducer.create = create;

  function forBuffer(buffer) {
    var result = new TrackedUnidocTokenProducer();
    result.addEventListener(UnidocProducerEvent.PRODUCTION, buffer.push.bind(buffer));
    result.addEventListener(UnidocProducerEvent.COMPLETION, buffer.fit.bind(buffer));
    return result;
  }

  TrackedUnidocTokenProducer.forBuffer = forBuffer;

  function forParser(parser) {
    var result = new TrackedUnidocTokenProducer();
    result.addEventListener(UnidocProducerEvent.PRODUCTION, parser.next.bind(parser));
    result.addEventListener(UnidocProducerEvent.COMPLETION, parser.complete.bind(parser));
    return result;
  }

  TrackedUnidocTokenProducer.forParser = forParser;
})(TrackedUnidocTokenProducer || (TrackedUnidocTokenProducer = {}));
;// CONCATENATED MODULE: ./sources/token/UnidocTokenBuffer.ts
function UnidocTokenBuffer_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocTokenBuffer_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocTokenBuffer_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocTokenBuffer_typeof(obj); }



function UnidocTokenBuffer_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = UnidocTokenBuffer_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function UnidocTokenBuffer_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return UnidocTokenBuffer_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return UnidocTokenBuffer_arrayLikeToArray(o, minLen); }

function UnidocTokenBuffer_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function UnidocTokenBuffer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocTokenBuffer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocTokenBuffer_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocTokenBuffer_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocTokenBuffer_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocTokenBuffer_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocTokenBuffer_setPrototypeOf(subClass, superClass); }

function UnidocTokenBuffer_setPrototypeOf(o, p) { UnidocTokenBuffer_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocTokenBuffer_setPrototypeOf(o, p); }

function UnidocTokenBuffer_createSuper(Derived) { var hasNativeReflectConstruct = UnidocTokenBuffer_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocTokenBuffer_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocTokenBuffer_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocTokenBuffer_possibleConstructorReturn(this, result); }; }

function UnidocTokenBuffer_possibleConstructorReturn(self, call) { if (call && (UnidocTokenBuffer_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocTokenBuffer_assertThisInitialized(self); }

function UnidocTokenBuffer_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocTokenBuffer_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocTokenBuffer_getPrototypeOf(o) { UnidocTokenBuffer_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocTokenBuffer_getPrototypeOf(o); }





var UnidocTokenBuffer = /*#__PURE__*/function (_SubscribableUnidocCo) {
  UnidocTokenBuffer_inherits(UnidocTokenBuffer, _SubscribableUnidocCo);

  var _super = UnidocTokenBuffer_createSuper(UnidocTokenBuffer);

  /**
  * Instantiate a new empty token buffer with the given capacity.
  *
  * @param [capacity = 32] - Capacity of the buffer to instantiate.
  */
  function UnidocTokenBuffer() {
    var _this;

    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;

    UnidocTokenBuffer_classCallCheck(this, UnidocTokenBuffer);

    _this = _super.call(this);
    _this._tokens = gl_tool_collection_.Pack.instance(UnidocToken.ALLOCATOR, capacity);
    _this.tokens = _this._tokens.view();
    return _this;
  }
  /**
  * @see UnidocConsumer.handleInitialization
  */


  UnidocTokenBuffer_createClass(UnidocTokenBuffer, [{
    key: "handleInitialization",
    value: function handleInitialization() {}
    /**
    * @see UnidocConsumer.handleProduction
    */

  }, {
    key: "handleProduction",
    value: function handleProduction(value) {
      this.push(value);
    }
    /**
    * @see UnidocConsumer.handleCompletion
    */

  }, {
    key: "handleCompletion",
    value: function handleCompletion() {}
    /**
    * @see UnidocConsumer.handleFailure
    */

  }, {
    key: "handleFailure",
    value: function handleFailure(error) {
      console.error(error);
    }
  }, {
    key: "slice",
    value: function slice(from, length) {
      var result = new UnidocTokenBuffer(length);
      var size = Math.min(length, this.size - from);

      for (var index = 0; index < size; ++index) {
        result.push(this._tokens.get(index + from));
      }

      return result;
    }
  }, {
    key: "reallocate",
    value: function reallocate(capacity) {
      this._tokens.reallocate(capacity);
    }
  }, {
    key: "fit",
    value: function fit() {
      this._tokens.fit();
    }
    /**
    * @see MutableSequence.get
    */

  }, {
    key: "get",
    value: function get(index) {
      return this._tokens.get(index);
    }
    /**
    * Append a copy of the given token at the end of this buffer.
    *
    * @param token - A token to append.
    */

  }, {
    key: "push",
    value: function push(token) {
      this._tokens.push(token);
    }
    /**
    * Remove a token from this buffer.
    *
    * @param index - Index of the token to remove.
    */

  }, {
    key: "delete",
    value: function _delete(index) {
      this._tokens["delete"](index);
    }
    /**
    * @see Pack#deleteMany
    */

  }, {
    key: "deleteMany",
    value: function deleteMany(index, length) {
      this._tokens.deleteMany(index, length);
    }
    /**
    * Reset this token buffer.
    */

  }, {
    key: "concat",
    value: function concat(tokens) {
      var _iterator = UnidocTokenBuffer_createForOfIteratorHelper(tokens),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var token = _step.value;

          this._tokens.push(token);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
    * Deep copy the given buffer.
    *
    * @param toCopy - A buffer instance to copy.
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this._tokens.clear();

      var _iterator2 = UnidocTokenBuffer_createForOfIteratorHelper(toCopy.tokens),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var token = _step2.value;

          this._tokens.push(token);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
    /**
    * Reset this token buffer.
    */

  }, {
    key: "clear",
    value: function clear() {
      this._tokens.clear();
    }
  }, {
    key: "toString",
    value: function toString() {
      var result = '[';

      for (var index = 0; index < this._tokens.size; ++index) {
        if (index > 0) result += ',';
        result += '\r\n' + this._tokens.get(index).toString();
      }

      if (this._tokens.size > 0) result += '\r\n';
      result += ']';
      return result;
    }
    /**
    * @see Symbol.iterator
    */

  }, {
    key: Symbol.iterator,
    value: /*#__PURE__*/regenerator_default().mark(function value() {
      return regenerator_default().wrap(function value$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.delegateYield(this._tokens, "t0", 1);

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, value, this);
    })
    /**
    * @see Object.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocTokenBuffer) {
        if (other.tokens.size !== this._tokens.size) return false;

        for (var index = 0, size = this._tokens.size; index < size; ++index) {
          if (!other.tokens.get(index).equals(this._tokens.get(index))) {
            return false;
          }
        }

        return true;
      }

      return false;
    }
  }, {
    key: "capacity",
    get: function get() {
      return this._tokens.capacity;
    }
    /**
    * @see MutableSequence.size
    */

  }, {
    key: "size",
    get: function get() {
      return this._tokens.size;
    }
    /**
    * @see MutableSequence.size
    */
    ,
    set: function set(newSize) {
      this._tokens.size = newSize;
    }
    /**
    * @see Sequence.last
    */

  }, {
    key: "last",
    get: function get() {
      return this._tokens.last;
    }
    /**
    * @see Sequence.first
    */

  }, {
    key: "first",
    get: function get() {
      return this._tokens.first;
    }
    /**
    * @return The starting location of this buffer.
    */

  }, {
    key: "from",
    get: function get() {
      return this._tokens.size === 0 ? UnidocOrigin.runtime() : this._tokens.first.origin.from;
    }
    /**
    * @return The ending location of this buffer.
    */

  }, {
    key: "to",
    get: function get() {
      return this._tokens.size === 0 ? UnidocOrigin.runtime() : this._tokens.last.origin.to;
    }
    /**
    * @return The text content associated with this buffer.
    */

  }, {
    key: "text",
    get: function get() {
      var result = '';

      var _iterator3 = UnidocTokenBuffer_createForOfIteratorHelper(this._tokens),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var token = _step3.value;
          result += token.text;
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }

      return result;
    }
  }]);

  return UnidocTokenBuffer;
}(SubscribableUnidocConsumer);

(function (UnidocTokenBuffer) {
  /**
  * Assert that both buffers are equals.
  *
  * @param left - Buffer to use as a left operand.
  * @param right - Buffer to use as a right operand.
  */
  function assert(left, right) {
    if (left.tokens.size !== right.tokens.size) {
      throw new Error('Buffers ' + right.toString() + ' and ' + left.toString() + ' are ' + 'not equals because thay contains a different amount of tokens ' + right.tokens.size + ' !== ' + left.tokens.size + '.');
    }

    for (var index = 0, size = right.tokens.size; index < size; ++index) {
      if (!left.tokens.get(index).equals(right.tokens.get(index))) {
        throw new Error('Buffers ' + right.toString() + ' and ' + left.toString() + ' are ' + 'not equals because their #' + index + ' token are not equal ' + right.tokens.get(index).toString() + ' !== ' + left.tokens.get(index).toString() + '.');
      }
    }
  }

  UnidocTokenBuffer.assert = assert;
})(UnidocTokenBuffer || (UnidocTokenBuffer = {}));
;// CONCATENATED MODULE: ./sources/token/index.ts





;// CONCATENATED MODULE: ./sources/validation/UnidocValidationMessageType.ts
var UnidocValidationMessageType;

(function (UnidocValidationMessageType) {
  /**
  * A message that is intented to be used for debugging purposes.
  */
  UnidocValidationMessageType.VERBOSE = 0;
  /**
  * A message that describe an optional suggestion that may lead to an
  * improvment of the underlying document.
  */

  UnidocValidationMessageType.INFORMATION = 1;
  /**
  * A message that describe a property of the underlying document that may make
  * it invalid in a particular context.
  */

  UnidocValidationMessageType.WARNING = 2;
  /**
  * A message that describe a property of the underlying document that make it
  * invalid. The validation process of a document may continue after an error.
  */

  UnidocValidationMessageType.ERROR = 3;
  /**
  * A message that describe a property of the underlying document that make it
  * invalid and that immediatly stop the validation process.
  */

  UnidocValidationMessageType.FAILURE = 4;
  /**
  *
  */

  UnidocValidationMessageType.ALL = [UnidocValidationMessageType.VERBOSE, UnidocValidationMessageType.INFORMATION, UnidocValidationMessageType.WARNING, UnidocValidationMessageType.ERROR, UnidocValidationMessageType.FAILURE];
  /**
  *
  */

  UnidocValidationMessageType.DEFAULT = 0;
  /**
  * Stringify the given validation type constant.
  *
  * @param type - A validation type constant.
  *
  * @return A text representation of the given type constant.
  */

  function toString(type) {
    switch (type) {
      case UnidocValidationMessageType.VERBOSE:
        return 'VERBOSE';

      case UnidocValidationMessageType.INFORMATION:
        return 'INFORMATION';

      case UnidocValidationMessageType.WARNING:
        return 'WARNING';

      case UnidocValidationMessageType.ERROR:
        return 'ERROR';

      case UnidocValidationMessageType.FAILURE:
        return 'FAILURE';

      default:
        return undefined;
    }
  }

  UnidocValidationMessageType.toString = toString;
  /**
  *
  */

  function toDebugString(type) {
    return '#' + type + ' (' + (toString(type) || 'undefined') + ')';
  }

  UnidocValidationMessageType.toDebugString = toDebugString;
})(UnidocValidationMessageType || (UnidocValidationMessageType = {}));
;// CONCATENATED MODULE: ./sources/validation/UnidocValidationMessage.ts
function UnidocValidationMessage_toConsumableArray(arr) { return UnidocValidationMessage_arrayWithoutHoles(arr) || UnidocValidationMessage_iterableToArray(arr) || UnidocValidationMessage_unsupportedIterableToArray(arr) || UnidocValidationMessage_nonIterableSpread(); }

function UnidocValidationMessage_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function UnidocValidationMessage_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function UnidocValidationMessage_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return UnidocValidationMessage_arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || UnidocValidationMessage_unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function UnidocValidationMessage_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = UnidocValidationMessage_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function UnidocValidationMessage_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return UnidocValidationMessage_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return UnidocValidationMessage_arrayLikeToArray(o, minLen); }

function UnidocValidationMessage_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function UnidocValidationMessage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocValidationMessage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocValidationMessage_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocValidationMessage_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocValidationMessage_defineProperties(Constructor, staticProps); return Constructor; }



var UnidocValidationMessage_EMPTY_STRING = '';
var UnidocValidationMessage = /*#__PURE__*/function () {
  /**
  * Instantiate a new validation instance.
  */
  function UnidocValidationMessage() {
    UnidocValidationMessage_classCallCheck(this, UnidocValidationMessage);

    this.type = UnidocValidationMessageType.DEFAULT;
    this.code = UnidocValidationMessage_EMPTY_STRING;
    this.data = new Map();
  }
  /**
  *
  */


  UnidocValidationMessage_createClass(UnidocValidationMessage, [{
    key: "setData",
    value: function setData(key, value) {
      this.data.set(key, value);
      return this;
    }
    /**
    *
    */

  }, {
    key: "setCode",
    value: function setCode(code) {
      this.code = code;
      return this;
    }
    /**
    *
    */

  }, {
    key: "setType",
    value: function setType(type) {
      this.type = type;
      return this;
    }
    /**
    * Configure this validation as verbose message.
    *
    * @see UnidocValidationEventType.VERBOSE
    */

  }, {
    key: "asVerbose",
    value: function asVerbose() {
      this.type = UnidocValidationMessageType.VERBOSE;
      return this;
    }
    /**
    * Configure this validation as an information.
    *
    * @see UnidocValidationEventType.INFORMATION
    */

  }, {
    key: "asInformation",
    value: function asInformation() {
      this.type = UnidocValidationMessageType.INFORMATION;
      return this;
    }
    /**
    * Configure this validation as a warning.
    *
    * @see UnidocValidationEventType.WARNING
    */

  }, {
    key: "asWarning",
    value: function asWarning() {
      this.type = UnidocValidationMessageType.WARNING;
      return this;
    }
    /**
    * Configure this validation as an error.
    *
    * @see UnidocValidationEventType.ERROR
    */

  }, {
    key: "asError",
    value: function asError() {
      this.type = UnidocValidationMessageType.ERROR;
      return this;
    }
    /**
    * Configure this validation as a failure.
    *
    * @see UnidocValidationEventType.FAILURE
    */

  }, {
    key: "asFailure",
    value: function asFailure() {
      this.type = UnidocValidationMessageType.FAILURE;
      return this;
    }
    /**
    *
    */

  }, {
    key: "isVerbose",
    value: function isVerbose() {
      return this.type === UnidocValidationMessageType.VERBOSE;
    }
    /**
    *
    */

  }, {
    key: "isInformation",
    value: function isInformation() {
      return this.type === UnidocValidationMessageType.INFORMATION;
    }
    /**
    *
    */

  }, {
    key: "isWarning",
    value: function isWarning() {
      return this.type === UnidocValidationMessageType.WARNING;
    }
    /**
    *
    */

  }, {
    key: "isError",
    value: function isError() {
      return this.type === UnidocValidationMessageType.ERROR;
    }
    /**
    *
    */

  }, {
    key: "isFailure",
    value: function isFailure() {
      return this.type === UnidocValidationMessageType.FAILURE;
    }
    /**
    * Clear this validation instance in order to reuse it.
    */

  }, {
    key: "clear",
    value: function clear() {
      this.type = UnidocValidationMessageType.DEFAULT;
      this.code = UnidocValidationMessage_EMPTY_STRING;
      this.data.clear();
    }
    /**
    * Copy an existing instance.
    *
    * @param toCopy - An instance to copy.
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.type = toCopy.type;
      this.code = toCopy.code;
      this.data.clear();

      var _iterator = UnidocValidationMessage_createForOfIteratorHelper(toCopy.data),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var _step$value = _slicedToArray(_step.value, 2),
              key = _step$value[0],
              data = _step$value[1];

          this.data.set(key, data);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
    * Return a copy of this instance.
    *
    * @return A copy of this instance.
    */

  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocValidationMessage();
      result.copy(this);
      return result;
    }
    /**
    * @see Object#toString
    */

  }, {
    key: "toString",
    value: function toString() {
      return "".concat(UnidocValidationMessageType.toDebugString(this.type), " ").concat(this.code, " : {").concat(UnidocValidationMessage_toConsumableArray(this.data.entries()).map(function (x) {
        return x[0] + ': ' + x[1];
      }).join(', '), "}");
    }
    /**
    * @see Object#equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocValidationMessage) {
        if (other.type !== this.type || other.code !== this.code || other.data.size !== this.data.size) return false;

        var _iterator2 = UnidocValidationMessage_createForOfIteratorHelper(this.data),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var _step2$value = _slicedToArray(_step2.value, 2),
                key = _step2$value[0],
                data = _step2$value[1];

            var value = other.data.get(key);

            if (value.equals) {
              if (!value.equals(data)) {
                return false;
              }
            } else if (value !== data) {
              return false;
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }

        return true;
      }

      return false;
    }
  }]);

  return UnidocValidationMessage;
}();

(function (UnidocValidationMessage) {
  function copy(toCopy) {
    return toCopy == null ? toCopy : toCopy.clone();
  }

  UnidocValidationMessage.copy = copy;
  /**
  *
  */

  function create() {
    return new UnidocValidationMessage();
  }

  UnidocValidationMessage.create = create;
  /**
  *
  */

  UnidocValidationMessage.ALLOCATOR = gl_tool_collection_.Duplicator.fromFactory(create);
})(UnidocValidationMessage || (UnidocValidationMessage = {}));
;// CONCATENATED MODULE: ./sources/validation/UnidocValidationEvent.ts
function UnidocValidationEvent_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocValidationEvent_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocValidationEvent_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocValidationEvent_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocValidationEvent_defineProperties(Constructor, staticProps); return Constructor; }





var UnidocValidationEvent = /*#__PURE__*/function () {
  /**
  * Instantiate a new event instance.
  */
  function UnidocValidationEvent() {
    UnidocValidationEvent_classCallCheck(this, UnidocValidationEvent);

    this.index = 0;
    this.batch = 0;
    this.type = UnidocValidationEventType.DEFAULT;
    this.event = new UnidocEvent();
    this.message = new UnidocValidationMessage();
    this.group = undefined;
  }
  /**
  *
  */


  UnidocValidationEvent_createClass(UnidocValidationEvent, [{
    key: "setIndex",
    value: function setIndex(index) {
      this.index = index;
      return this;
    }
    /**
    *
    */

  }, {
    key: "setBatch",
    value: function setBatch(batch) {
      this.batch = batch;
      return this;
    }
    /**
    *
    */

  }, {
    key: "isMessage",
    value: function isMessage() {
      return this.type === UnidocValidationEventType.MESSAGE;
    }
    /**
    *
    */

  }, {
    key: "isValidation",
    value: function isValidation() {
      return this.type === UnidocValidationEventType.VALIDATION;
    }
    /**
    *
    */

  }, {
    key: "isBeginGroup",
    value: function isBeginGroup() {
      return this.type === UnidocValidationEventType.BEGIN_GROUP;
    }
    /**
    *
    */

  }, {
    key: "isEndGroup",
    value: function isEndGroup() {
      return this.type === UnidocValidationEventType.END_GROUP;
    }
    /**
    *
    */

  }, {
    key: "isDocumentCompletion",
    value: function isDocumentCompletion() {
      return this.type === UnidocValidationEventType.DOCUMENT_COMPLETION;
    }
    /**
    * Transform this event instance into a validation event.
    *
    * @param event - The unidoc event that is validated at this point.
    *
    * @return This event instance for chaining purposes.
    */

  }, {
    key: "asValidation",
    value: function asValidation(event) {
      this.message.clear();
      this.event.copy(event);
      this.type = UnidocValidationEventType.VALIDATION;
      this.group = undefined;
      return this;
    }
    /**
    * Transform this event instance into a document completion event.
    *
    * @return This event instance for chaining purposes.
    */

  }, {
    key: "asDocumentCompletion",
    value: function asDocumentCompletion() {
      this.message.clear();
      this.event.clear();
      this.type = UnidocValidationEventType.DOCUMENT_COMPLETION;
      this.group = undefined;
      return this;
    }
    /**
    *
    */

  }, {
    key: "asBeginGroup",
    value: function asBeginGroup(group) {
      this.message.clear();
      this.event.clear();
      this.type = UnidocValidationEventType.BEGIN_GROUP;
      this.group = group;
      return this;
    }
    /**
    *
    */

  }, {
    key: "asEndGroup",
    value: function asEndGroup(group) {
      this.message.clear();
      this.event.clear();
      this.type = UnidocValidationEventType.END_GROUP;
      this.group = group;
      return this;
    }
    /**
    * Transform this event instance into a message event.
    *
    * @param [message] - The message to publish.
    *
    * @return This event instance for chaining purposes.
    */

  }, {
    key: "asMessage",
    value: function asMessage(message) {
      this.event.clear();

      if (message) {
        this.message.copy(message);
      } else {
        this.message.clear();
      }

      this.type = UnidocValidationEventType.MESSAGE;
      this.group = undefined;
      return this;
    }
    /**
    * Clear this event instance in order to reuse it.
    */

  }, {
    key: "clear",
    value: function clear() {
      this.index = 0;
      this.batch = 0;
      this.type = UnidocValidationEventType.DEFAULT;
      this.message.clear();
      this.event.clear();
      this.group = undefined;
    }
    /**
    * Copy an existing instance.
    *
    * @param toCopy - An instance to copy.
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.index = toCopy.index;
      this.batch = toCopy.batch;
      this.type = toCopy.type;
      this.message.copy(toCopy.message);
      this.event.copy(toCopy.event);
      this.group = toCopy.group;
    }
    /**
    * Return a copy of this instance.
    *
    * @return A copy of this instance.
    */

  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocValidationEvent();
      result.copy(this);
      return result;
    }
    /**
    * @see Object.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      var result = this.index.toString().padEnd(5);
      result += ' batch #';
      result += this.batch.toString().padEnd(5);
      result += ' of type ';
      result += UnidocValidationEventType.toDebugString(this.type);

      switch (this.type) {
        case UnidocValidationEventType.MESSAGE:
          result += ' ';
          result += this.message.toString();
          break;

        case UnidocValidationEventType.VALIDATION:
          result += ' validating ';
          result += this.event;
          break;

        case UnidocValidationEventType.DOCUMENT_COMPLETION:
          result += ' document completion';
          break;

        case UnidocValidationEventType.BEGIN_GROUP:
          result += ' start of group ';
          result += this.group ? this.group.toString() : 'null';
          break;

        case UnidocValidationEventType.END_GROUP:
          result += ' end of group ';
          result += this.group ? this.group.toString() : 'null';
          break;

        default:
          throw new Error('Unable to stringify validation event of type ' + UnidocValidationEventType.toDebugString(this.type) + ' because ' + 'no procedure was defined to stringify this type of event.');
      }

      return result;
    }
    /**
    * @see Object.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocValidationEvent) {
        return this.index === other.index && this.batch === other.batch && this.type === other.type && this.message.equals(other.message) && this.event.equals(other.event) && this.group === other.group;
      }

      return false;
    }
  }]);

  return UnidocValidationEvent;
}();

(function (UnidocValidationEvent) {
  function copy(toCopy) {
    return toCopy == null ? toCopy : toCopy.clone();
  }

  UnidocValidationEvent.copy = copy;
  /**
  *
  */

  function create() {
    return new UnidocValidationEvent();
  }

  UnidocValidationEvent.create = create;
  /**
  *
  */

  UnidocValidationEvent.ALLOCATOR = gl_tool_collection_.Duplicator.fromFactory(create);
})(UnidocValidationEvent || (UnidocValidationEvent = {}));
;// CONCATENATED MODULE: ./sources/validation/UnidocValidationEventBuilder.ts
function UnidocValidationEventBuilder_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocValidationEventBuilder_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocValidationEventBuilder_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocValidationEventBuilder_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocValidationEventBuilder_defineProperties(Constructor, staticProps); return Constructor; }


var UnidocValidationEventBuilder = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocValidationEventBuilder() {
    UnidocValidationEventBuilder_classCallCheck(this, UnidocValidationEventBuilder);

    this.event = new UnidocValidationEvent();
  }
  /**
  *
  */


  UnidocValidationEventBuilder_createClass(UnidocValidationEventBuilder, [{
    key: "setIndex",
    value: function setIndex(index) {
      this.event.setIndex(index);
      return this;
    }
    /**
    *
    */

  }, {
    key: "setBatch",
    value: function setBatch(batch) {
      this.event.setBatch(batch);
      return this;
    }
    /**
    *
    */

  }, {
    key: "asValidation",
    value: function asValidation(event) {
      this.event.asValidation(event);
      return this;
    }
    /**
    *
    */

  }, {
    key: "asDocumentCompletion",
    value: function asDocumentCompletion() {
      this.event.asDocumentCompletion();
      return this;
    }
    /**
    *
    */

  }, {
    key: "asBeginGroup",
    value: function asBeginGroup(group) {
      this.event.asBeginGroup(group);
      return this;
    }
    /**
    *
    */

  }, {
    key: "asEndGroup",
    value: function asEndGroup(group) {
      this.event.asEndGroup(group);
      return this;
    }
    /**
    *
    */

  }, {
    key: "asMessage",
    value: function asMessage(message) {
      this.event.asMessage(message);
      return this;
    }
    /**
    *
    */

  }, {
    key: "build",
    value: function build() {
      return this.event.clone();
    }
    /**
    *
    */

  }, {
    key: "get",
    value: function get() {
      return this.event;
    }
    /**
    *
    */

  }, {
    key: "configure",
    value: function configure(event) {
      event.copy(this.event);
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this.event.clear();
    }
    /**
    *
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      if (toCopy instanceof UnidocValidationEventBuilder) {
        this.event.copy(toCopy.event);
      } else {
        this.event.copy(toCopy);
      }

      return this;
    }
    /**
    *
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocValidationEventBuilder) {
        return other.event.equals(this.event);
      }

      return false;
    }
  }]);

  return UnidocValidationEventBuilder;
}();

(function (UnidocValidationEventBuilder) {
  /**
  *
  */
  UnidocValidationEventBuilder.INSTANCE = new UnidocValidationEventBuilder();
  /**
  *
  */

  function create() {
    return new UnidocValidationEventBuilder();
  }

  UnidocValidationEventBuilder.create = create;
  /**
  *
  */

  function get() {
    return UnidocValidationEventBuilder.INSTANCE;
  }

  UnidocValidationEventBuilder.get = get;
})(UnidocValidationEventBuilder || (UnidocValidationEventBuilder = {}));
;// CONCATENATED MODULE: ./sources/validation/UnidocValidationEventProducer.ts
function UnidocValidationEventProducer_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocValidationEventProducer_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocValidationEventProducer_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocValidationEventProducer_typeof(obj); }

function UnidocValidationEventProducer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocValidationEventProducer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocValidationEventProducer_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocValidationEventProducer_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocValidationEventProducer_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocValidationEventProducer_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { UnidocValidationEventProducer_get = Reflect.get; } else { UnidocValidationEventProducer_get = function _get(target, property, receiver) { var base = UnidocValidationEventProducer_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return UnidocValidationEventProducer_get(target, property, receiver || target); }

function UnidocValidationEventProducer_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = UnidocValidationEventProducer_getPrototypeOf(object); if (object === null) break; } return object; }

function UnidocValidationEventProducer_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocValidationEventProducer_setPrototypeOf(subClass, superClass); }

function UnidocValidationEventProducer_setPrototypeOf(o, p) { UnidocValidationEventProducer_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocValidationEventProducer_setPrototypeOf(o, p); }

function UnidocValidationEventProducer_createSuper(Derived) { var hasNativeReflectConstruct = UnidocValidationEventProducer_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocValidationEventProducer_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocValidationEventProducer_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocValidationEventProducer_possibleConstructorReturn(this, result); }; }

function UnidocValidationEventProducer_possibleConstructorReturn(self, call) { if (call && (UnidocValidationEventProducer_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocValidationEventProducer_assertThisInitialized(self); }

function UnidocValidationEventProducer_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocValidationEventProducer_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocValidationEventProducer_getPrototypeOf(o) { UnidocValidationEventProducer_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocValidationEventProducer_getPrototypeOf(o); }




var UnidocValidationEventProducer = /*#__PURE__*/function (_ListenableUnidocProd) {
  UnidocValidationEventProducer_inherits(UnidocValidationEventProducer, _ListenableUnidocProd);

  var _super = UnidocValidationEventProducer_createSuper(UnidocValidationEventProducer);

  /**
  *
  */
  function UnidocValidationEventProducer() {
    var _this;

    UnidocValidationEventProducer_classCallCheck(this, UnidocValidationEventProducer);

    _this = _super.call(this);
    _this._event = new UnidocValidationEvent();
    _this._index = 0;
    _this._batch = 0;
    return _this;
  }
  /**
  * @see ListenableUnidocProducer.fail
  */


  UnidocValidationEventProducer_createClass(UnidocValidationEventProducer, [{
    key: "fail",
    value: function fail(error) {
      UnidocValidationEventProducer_get(UnidocValidationEventProducer_getPrototypeOf(UnidocValidationEventProducer.prototype), "fail", this).call(this, error);
    }
    /**
    * @see ListenableUnidocProducer.initialize
    */

  }, {
    key: "initialize",
    value: function initialize() {
      UnidocValidationEventProducer_get(UnidocValidationEventProducer_getPrototypeOf(UnidocValidationEventProducer.prototype), "initialize", this).call(this);
    }
    /**
    *
    */

  }, {
    key: "produceValidation",
    value: function produceValidation(event) {
      this._event.asValidation(event);

      this.produce(this._event);
      return this;
    }
    /**
    *
    */

  }, {
    key: "produceDocumentCompletion",
    value: function produceDocumentCompletion() {
      this._event.asDocumentCompletion();

      this.produce(this._event);
      return this;
    }
    /**
    *
    */

  }, {
    key: "produceBeginGroup",
    value: function produceBeginGroup(group) {
      this._event.asBeginGroup(group);

      this.produce(this._event);
      return this;
    }
    /**
    *
    */

  }, {
    key: "produceEndGroup",
    value: function produceEndGroup(group) {
      this._event.asEndGroup(group);

      this.produce(this._event);
      return this;
    }
    /**
    *
    */

  }, {
    key: "produceMessage",
    value: function produceMessage(message) {
      this._event.asMessage(message);

      this.produce(this._event);
      return this;
    }
    /**
    * @see ListenableUnidocProducer.produce
    */

  }, {
    key: "produce",
    value: function produce() {
      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._event;

      if (event.type === UnidocValidationEventType.VALIDATION || event.type === UnidocValidationEventType.DOCUMENT_COMPLETION) {
        this._batch += 1;
      }

      event.index = this._index;
      event.batch = this._batch;
      this._index += 1;

      UnidocValidationEventProducer_get(UnidocValidationEventProducer_getPrototypeOf(UnidocValidationEventProducer.prototype), "produce", this).call(this, event);
    }
    /**
    * @see ListenableUnidocProducer.complete
    */

  }, {
    key: "complete",
    value: function complete() {
      UnidocValidationEventProducer_get(UnidocValidationEventProducer_getPrototypeOf(UnidocValidationEventProducer.prototype), "complete", this).call(this);
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this._event.clear();

      this._index = 0;
      this._batch = 0;
      this.removeAllEventListener();
    }
  }]);

  return UnidocValidationEventProducer;
}(ListenableUnidocProducer);

(function (UnidocValidationEventProducer) {
  /**
  *
  */
  function create() {
    return new UnidocValidationEventProducer();
  }

  UnidocValidationEventProducer.create = create;
})(UnidocValidationEventProducer || (UnidocValidationEventProducer = {}));
;// CONCATENATED MODULE: ./sources/validation/UnidocValidationMessageBuilder.ts
function UnidocValidationMessageBuilder_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocValidationMessageBuilder_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocValidationMessageBuilder_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocValidationMessageBuilder_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocValidationMessageBuilder_defineProperties(Constructor, staticProps); return Constructor; }


var UnidocValidationMessageBuilder = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocValidationMessageBuilder() {
    UnidocValidationMessageBuilder_classCallCheck(this, UnidocValidationMessageBuilder);

    this.message = new UnidocValidationMessage();
  }
  /**
  *
  */


  UnidocValidationMessageBuilder_createClass(UnidocValidationMessageBuilder, [{
    key: "setData",
    value: function setData(key, value) {
      this.message.setData(key, value);
      return this;
    }
    /**
    *
    */

  }, {
    key: "setCode",
    value: function setCode(code) {
      this.message.setCode(code);
      return this;
    }
    /**
    *
    */

  }, {
    key: "setType",
    value: function setType(type) {
      this.message.setType(type);
      return this;
    }
    /**
    *
    */

  }, {
    key: "asVerbose",
    value: function asVerbose() {
      this.message.asVerbose();
      return this;
    }
    /**
    *
    */

  }, {
    key: "asInformation",
    value: function asInformation() {
      this.message.asInformation();
      return this;
    }
    /**
    *
    */

  }, {
    key: "asWarning",
    value: function asWarning() {
      this.message.asWarning();
      return this;
    }
    /**
    *
    */

  }, {
    key: "asError",
    value: function asError() {
      this.message.asError();
      return this;
    }
    /**
    *
    */

  }, {
    key: "asFailure",
    value: function asFailure() {
      this.message.asFailure();
      return this;
    }
    /**
    *
    */

  }, {
    key: "build",
    value: function build() {
      return this.message.clone();
    }
    /**
    *
    */

  }, {
    key: "get",
    value: function get() {
      return this.message;
    }
    /**
    *
    */

  }, {
    key: "configure",
    value: function configure(message) {
      message.copy(this.message);
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this.message.clear();
    }
    /**
    *
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      if (toCopy instanceof UnidocValidationMessageBuilder) {
        this.message.copy(toCopy.message);
      } else {
        this.message.copy(toCopy);
      }

      return this;
    }
    /**
    *
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocValidationMessageBuilder) {
        return other.message.equals(this.message);
      }

      return false;
    }
  }]);

  return UnidocValidationMessageBuilder;
}();

(function (UnidocValidationMessageBuilder) {
  /**
  *
  */
  UnidocValidationMessageBuilder.INSTANCE = new UnidocValidationMessageBuilder();
  /**
  *
  */

  function create() {
    return new UnidocValidationMessageBuilder();
  }

  UnidocValidationMessageBuilder.create = create;
  /**
  *
  */

  function get() {
    return UnidocValidationMessageBuilder.INSTANCE;
  }

  UnidocValidationMessageBuilder.get = get;
})(UnidocValidationMessageBuilder || (UnidocValidationMessageBuilder = {}));
;// CONCATENATED MODULE: ./sources/validation/index.ts







;// CONCATENATED MODULE: ./sources/validator/message/ExpectedContent.ts

var ExpectedContent;

(function (ExpectedContent) {
  ExpectedContent.TYPE = UnidocValidationMessageType.FAILURE;
  ExpectedContent.CODE = 'standard:blueprint:failure:expected-content';
  var Data;

  (function (Data) {
    Data.BLUEPRINT = 'blueprint';
  })(Data = ExpectedContent.Data || (ExpectedContent.Data = {}));
})(ExpectedContent || (ExpectedContent = {}));
;// CONCATENATED MODULE: ./sources/validator/message/PreferredContent.ts

var PreferredContent;

(function (PreferredContent) {
  PreferredContent.TYPE = UnidocValidationMessageType.WARNING;
  PreferredContent.CODE = 'standard:blueprint:warning:preffered-content';
  var Data;

  (function (Data) {
    Data.BLUEPRINT = 'blueprint';
  })(Data = PreferredContent.Data || (PreferredContent.Data = {}));
})(PreferredContent || (PreferredContent = {}));
;// CONCATENATED MODULE: ./sources/validator/message/TooManyContent.ts

var TooManyContent;

(function (TooManyContent) {
  TooManyContent.TYPE = UnidocValidationMessageType.ERROR;
  TooManyContent.CODE = 'standard:blueprint:error:too-many-content';
  var Data;

  (function (Data) {
    Data.BLUEPRINT = 'blueprint';
  })(Data = TooManyContent.Data || (TooManyContent.Data = {}));

  var Strict;

  (function (Strict) {
    Strict.TYPE = UnidocValidationMessageType.FAILURE;
    Strict.CODE = 'standard:blueprint:failure:too-many-content';
    var Data;

    (function (Data) {
      Data.BLUEPRINT = 'blueprint';
    })(Data = Strict.Data || (Strict.Data = {}));
  })(Strict = TooManyContent.Strict || (TooManyContent.Strict = {}));
})(TooManyContent || (TooManyContent = {}));
;// CONCATENATED MODULE: ./sources/validator/kiss/common/captureValidatedText.ts


var captureValidatedText_marked = /*#__PURE__*/regenerator_default().mark(captureValidatedText);

function captureValidatedText_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = captureValidatedText_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function captureValidatedText_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return captureValidatedText_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return captureValidatedText_arrayLikeToArray(o, minLen); }

function captureValidatedText_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }


/**
*
*/

function captureValidatedText(validator) {
  var text, whitespace, _iterator, _step, output;

  return regenerator_default().wrap(function captureValidatedText$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          text = '';
          whitespace = false;
          _iterator = captureValidatedText_createForOfIteratorHelper(UnidocKissValidator.match(validator));
          _context.prev = 3;

          _iterator.s();

        case 5:
          if ((_step = _iterator.n()).done) {
            _context.next = 25;
            break;
          }

          output = _step.value;

          if (!(output.isEmit() && output.event.isValidation())) {
            _context.next = 13;
            break;
          }

          if (output.event.event.isWord()) {
            if (whitespace && text.length > 0) {
              text += ' ';
              whitespace = false;
            }

            text += output.event.event.text;
          } else if (output.event.event.isWhitespace()) {
            whitespace = true;
          }

          _context.next = 11;
          return output;

        case 11:
          _context.next = 23;
          break;

        case 13:
          if (!output.isEnd()) {
            _context.next = 17;
            break;
          }

          return _context.abrupt("return", undefined);

        case 17:
          if (!output.isMatch()) {
            _context.next = 21;
            break;
          }

          return _context.abrupt("return", text);

        case 21:
          _context.next = 23;
          return output;

        case 23:
          _context.next = 5;
          break;

        case 25:
          _context.next = 30;
          break;

        case 27:
          _context.prev = 27;
          _context.t0 = _context["catch"](3);

          _iterator.e(_context.t0);

        case 30:
          _context.prev = 30;

          _iterator.f();

          return _context.finish(30);

        case 33:
          return _context.abrupt("return", text);

        case 34:
        case "end":
          return _context.stop();
      }
    }
  }, captureValidatedText_marked, null, [[3, 27, 30, 33]]);
}
;// CONCATENATED MODULE: ./sources/validator/kiss/common/validateContentThatMatch.ts


var validateContentThatMatch_marked = /*#__PURE__*/regenerator_default().mark(validateContentThatMatch);




/**
*
*/

function validateContentThatMatch(validator, regexp) {
  var content;
  return regenerator_default().wrap(function validateContentThatMatch$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          return _context.delegateYield(captureValidatedText(validator), "t0", 1);

        case 1:
          content = _context.t0;

          if (!(content === undefined)) {
            _context.next = 6;
            break;
          }

          return _context.abrupt("return", UnidocKissValidator.output.end());

        case 6:
          if (!regexp.test(content)) {
            _context.next = 10;
            break;
          }

          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 10:
          _context.next = 12;
          return UnidocKissValidator.output.message.expectedContent(UnidocBlueprint.regexp(regexp));

        case 12:
          return _context.abrupt("return", UnidocKissValidator.output.end());

        case 13:
        case "end":
          return _context.stop();
      }
    }
  }, validateContentThatMatch_marked);
}
;// CONCATENATED MODULE: ./sources/validator/kiss/common/requireText.ts


var requireText_marked = /*#__PURE__*/regenerator_default().mark(requireText);




/**
*
*/

function requireText() {
  var current;
  return regenerator_default().wrap(function requireText$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocKissValidator.output.current();

        case 2:
          current = _context.sent;

        case 3:
          if (!(current && current.isWhitespace())) {
            _context.next = 11;
            break;
          }

          _context.next = 6;
          return UnidocKissValidator.output.validation(current);

        case 6:
          _context.next = 8;
          return UnidocKissValidator.output.next();

        case 8:
          current = _context.sent;
          _context.next = 3;
          break;

        case 11:
          if (!(current == null || !current.isWord())) {
            _context.next = 17;
            break;
          }

          _context.next = 14;
          return UnidocKissValidator.output.validation(current);

        case 14:
          _context.next = 16;
          return UnidocKissValidator.output.message.expectedContent(UnidocBlueprint.word());

        case 16:
          return _context.abrupt("return", UnidocKissValidator.output.end());

        case 17:
          if (!(current && (current.isWhitespace() || current.isWord()))) {
            _context.next = 25;
            break;
          }

          _context.next = 20;
          return UnidocKissValidator.output.validation(current);

        case 20:
          _context.next = 22;
          return UnidocKissValidator.output.next();

        case 22:
          current = _context.sent;
          _context.next = 17;
          break;

        case 25:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 26:
        case "end":
          return _context.stop();
      }
    }
  }, requireText_marked);
}
/**
 *
 */

(function (requireText) {
  /**
   *
   */
  function thatMatch(regexp) {
    return validateContentThatMatch(requireText(), regexp);
  }

  requireText.thatMatch = thatMatch;
})(requireText || (requireText = {}));
;// CONCATENATED MODULE: ./sources/validator/kiss/common/requireToken.ts


var requireToken_marked = /*#__PURE__*/regenerator_default().mark(requireToken);




/**
*
*/

function requireToken() {
  var current;
  return regenerator_default().wrap(function requireToken$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocKissValidator.output.current();

        case 2:
          current = _context.sent;

        case 3:
          if (!(current && current.isWhitespace())) {
            _context.next = 11;
            break;
          }

          _context.next = 6;
          return UnidocKissValidator.output.validation(current);

        case 6:
          _context.next = 8;
          return UnidocKissValidator.output.next();

        case 8:
          current = _context.sent;
          _context.next = 3;
          break;

        case 11:
          if (!(current == null || !current.isWord())) {
            _context.next = 17;
            break;
          }

          _context.next = 14;
          return UnidocKissValidator.output.validation(current);

        case 14:
          _context.next = 16;
          return UnidocKissValidator.output.message.expectedContent(UnidocBlueprint.word());

        case 16:
          return _context.abrupt("return", UnidocKissValidator.output.end());

        case 17:
          if (!(current && current.isWord())) {
            _context.next = 25;
            break;
          }

          _context.next = 20;
          return UnidocKissValidator.output.validation(current);

        case 20:
          _context.next = 22;
          return UnidocKissValidator.output.next();

        case 22:
          current = _context.sent;
          _context.next = 17;
          break;

        case 25:
          if (!(current && current.isWhitespace())) {
            _context.next = 33;
            break;
          }

          _context.next = 28;
          return UnidocKissValidator.output.validation(current);

        case 28:
          _context.next = 30;
          return UnidocKissValidator.output.next();

        case 30:
          current = _context.sent;
          _context.next = 25;
          break;

        case 33:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 34:
        case "end":
          return _context.stop();
      }
    }
  }, requireToken_marked);
}
/**
 *
 */

(function (requireToken) {
  /**
   *
   */
  function thatMatch(regexp) {
    return validateContentThatMatch(requireToken(), regexp);
  }

  requireToken.thatMatch = thatMatch;
})(requireToken || (requireToken = {}));
;// CONCATENATED MODULE: ./sources/validator/kiss/common/validateEnd.ts


var validateEnd_marked = /*#__PURE__*/regenerator_default().mark(validateEnd);



/**
*
*/

function validateEnd() {
  var current;
  return regenerator_default().wrap(function validateEnd$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocKissValidator.output.current();

        case 2:
          current = _context.sent;
          _context.next = 5;
          return UnidocKissValidator.output.validation(current);

        case 5:
          if (!current) {
            _context.next = 11;
            break;
          }

          _context.next = 8;
          return UnidocKissValidator.output.message.expectedContent(UnidocBlueprint.end());

        case 8:
          return _context.abrupt("return", UnidocKissValidator.output.end());

        case 11:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 12:
        case "end":
          return _context.stop();
      }
    }
  }, validateEnd_marked);
}
;// CONCATENATED MODULE: ./sources/validator/kiss/UnidocKissValidatorOutputType.ts
var UnidocKissValidatorOutputType;

(function (UnidocKissValidatorOutputType) {
  /**
  *
  */
  UnidocKissValidatorOutputType.CURRENT = 0;
  /**
  *
  */

  UnidocKissValidatorOutputType.NEXT = 1;
  /**
  *
  */

  UnidocKissValidatorOutputType.EMIT = 2;
  /**
  *
  */

  UnidocKissValidatorOutputType.END = 3;
  /**
  *
  */

  UnidocKissValidatorOutputType.MATCH = 4;
  /**
  *
  */

  UnidocKissValidatorOutputType.ALL = [UnidocKissValidatorOutputType.CURRENT, UnidocKissValidatorOutputType.NEXT, UnidocKissValidatorOutputType.EMIT, UnidocKissValidatorOutputType.END, UnidocKissValidatorOutputType.MATCH];
  /**
  *
  */

  UnidocKissValidatorOutputType.DEFAULT = UnidocKissValidatorOutputType.CURRENT;
  /**
  *
  */

  function toString(type) {
    switch (type) {
      case UnidocKissValidatorOutputType.CURRENT:
        return 'CURRENT';

      case UnidocKissValidatorOutputType.NEXT:
        return 'NEXT';

      case UnidocKissValidatorOutputType.EMIT:
        return 'EMIT';

      case UnidocKissValidatorOutputType.END:
        return 'END';

      default:
        return undefined;
    }
  }

  UnidocKissValidatorOutputType.toString = toString;
  /**
  *
  */

  function toDebugString(type) {
    return '#' + type + ' (' + (toString(type) || 'undefined') + ')';
  }

  UnidocKissValidatorOutputType.toDebugString = toDebugString;
})(UnidocKissValidatorOutputType || (UnidocKissValidatorOutputType = {}));
;// CONCATENATED MODULE: ./sources/validator/kiss/UnidocKissValidatorOutput.ts
function UnidocKissValidatorOutput_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocKissValidatorOutput_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocKissValidatorOutput_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocKissValidatorOutput_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocKissValidatorOutput_defineProperties(Constructor, staticProps); return Constructor; }




var UnidocKissValidatorOutput = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocKissValidatorOutput() {
    UnidocKissValidatorOutput_classCallCheck(this, UnidocKissValidatorOutput);

    this.type = UnidocKissValidatorOutputType.DEFAULT;
    this.event = new UnidocValidationEvent();
  }
  /**
  *
  */


  UnidocKissValidatorOutput_createClass(UnidocKissValidatorOutput, [{
    key: "isCurrent",
    value: function isCurrent() {
      return this.type === UnidocKissValidatorOutputType.CURRENT;
    }
    /**
    *
    */

  }, {
    key: "isNext",
    value: function isNext() {
      return this.type === UnidocKissValidatorOutputType.NEXT;
    }
    /**
    *
    */

  }, {
    key: "isEmit",
    value: function isEmit() {
      return this.type === UnidocKissValidatorOutputType.EMIT;
    }
    /**
    *
    */

  }, {
    key: "isEnd",
    value: function isEnd() {
      return this.type === UnidocKissValidatorOutputType.END;
    }
    /**
    *
    */

  }, {
    key: "isMatch",
    value: function isMatch() {
      return this.type === UnidocKissValidatorOutputType.MATCH;
    }
    /**
    *
    */

  }, {
    key: "asCurrent",
    value: function asCurrent() {
      this.type = UnidocKissValidatorOutputType.CURRENT;
      this.event.clear();
      return this;
    }
    /**
    *
    */

  }, {
    key: "asNext",
    value: function asNext() {
      this.type = UnidocKissValidatorOutputType.NEXT;
      this.event.clear();
      return this;
    }
    /**
    *
    */

  }, {
    key: "asMatch",
    value: function asMatch() {
      this.type = UnidocKissValidatorOutputType.MATCH;
      this.event.clear();
      return this;
    }
    /**
    *
    */

  }, {
    key: "asEmit",
    value: function asEmit(event) {
      this.type = UnidocKissValidatorOutputType.EMIT;
      this.event.copy(event);
      return this;
    }
    /**
    *
    */

  }, {
    key: "asEnd",
    value: function asEnd() {
      this.type = UnidocKissValidatorOutputType.END;
      this.event.clear();
      return this;
    }
    /**
    * Clear this event instance in order to reuse it.
    */

  }, {
    key: "clear",
    value: function clear() {
      this.type = UnidocKissValidatorOutputType.DEFAULT;
      this.event.clear();
    }
    /**
    * Copy an existing instance.
    *
    * @param toCopy - An instance to copy.
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      this.type = toCopy.type;
      this.event.copy(toCopy.event);
    }
    /**
    * Return a copy of this instance.
    *
    * @return A copy of this instance.
    */

  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocKissValidatorOutput();
      result.copy(this);
      return result;
    }
    /**
    * @see Object.toString
    */

  }, {
    key: "toString",
    value: function toString() {
      var result = UnidocKissValidatorOutputType.toDebugString(this.type);

      switch (this.type) {
        case UnidocKissValidatorOutputType.CURRENT:
          result += ' get current event';
          break;

        case UnidocKissValidatorOutputType.NEXT:
          result += ' get next event';
          break;

        case UnidocKissValidatorOutputType.EMIT:
          result += ' emit ';
          result += this.event.toString();
          break;

        case UnidocKissValidatorOutputType.END:
          result += ' end';
          break;

        case UnidocKissValidatorOutputType.MATCH:
          result += ' match';
          break;

        default:
          throw new Error('Unable to stringify validator output of type ' + UnidocKissValidatorOutputType.toDebugString(this.type) + ' because ' + 'no procedure was defined to stringify this type of event.');
      }

      return result;
    }
    /**
    * @see Object.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocKissValidatorOutput) {
        return this.type === other.type && this.event.equals(other.event);
      }

      return false;
    }
  }]);

  return UnidocKissValidatorOutput;
}();

(function (UnidocKissValidatorOutput) {
  /**
  *
  */
  UnidocKissValidatorOutput.CURRENT = create().asCurrent();
  /**
  *
  */

  UnidocKissValidatorOutput.NEXT = create().asNext();
  /**
  *
  */

  UnidocKissValidatorOutput.END = create().asEnd();
  /**
  *
  */

  UnidocKissValidatorOutput.MATCH = create().asMatch();

  function copy(toCopy) {
    return toCopy == null ? toCopy : toCopy.clone();
  }

  UnidocKissValidatorOutput.copy = copy;
  /**
  *
  */

  function create() {
    return new UnidocKissValidatorOutput();
  }

  UnidocKissValidatorOutput.create = create;
  /**
  *
  */

  UnidocKissValidatorOutput.ALLOCATOR = gl_tool_collection_.Allocator.fromFactory(create);
})(UnidocKissValidatorOutput || (UnidocKissValidatorOutput = {}));
;// CONCATENATED MODULE: ./sources/validator/kiss/common/validateEndOfAnyTag.ts


var validateEndOfAnyTag_marked = /*#__PURE__*/regenerator_default().mark(validateEndOfAnyTag);





/**
*
*/

function validateEndOfAnyTag() {
  var current;
  return regenerator_default().wrap(function validateEndOfAnyTag$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocKissValidatorOutput.CURRENT;

        case 2:
          current = _context.sent;
          _context.next = 5;
          return UnidocKissValidator.output.validation(current);

        case 5:
          if (!(current && current.isEndOfAnyTag())) {
            _context.next = 11;
            break;
          }

          _context.next = 8;
          return UnidocKissValidator.output.next();

        case 8:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 11:
          _context.next = 13;
          return UnidocKissValidator.output.message.expectedContent(UnidocBlueprint.event(UnidocPredicate.isTagEnd()));

        case 13:
          return _context.abrupt("return", UnidocKissValidator.output.end());

        case 14:
        case "end":
          return _context.stop();
      }
    }
  }, validateEndOfAnyTag_marked);
}
;// CONCATENATED MODULE: ./sources/validator/kiss/common/validateEndOfTag.ts


var validateEndOfTag_marked = /*#__PURE__*/regenerator_default().mark(validateEndOfTag);



/**
*
*/

function validateEndOfTag(tag) {
  var current;
  return regenerator_default().wrap(function validateEndOfTag$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocKissValidator.output.current();

        case 2:
          current = _context.sent;
          _context.next = 5;
          return UnidocKissValidator.output.validation(current);

        case 5:
          if (!(current && current.isEndOfTag(tag))) {
            _context.next = 11;
            break;
          }

          _context.next = 8;
          return UnidocKissValidator.output.next();

        case 8:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 11:
          _context.next = 13;
          return UnidocKissValidator.output.message.expectedContent(UnidocBlueprint.tagStart(tag));

        case 13:
          return _context.abrupt("return", UnidocKissValidator.output.end());

        case 14:
        case "end":
          return _context.stop();
      }
    }
  }, validateEndOfTag_marked);
}
/**
*
*/

(function (validateEndOfTag) {
  /**
  *
  */
  function factory(name) {
    return validateEndOfTag.bind(undefined, name);
  }

  validateEndOfTag.factory = factory;
})(validateEndOfTag || (validateEndOfTag = {}));
;// CONCATENATED MODULE: ./sources/validator/kiss/common/validateEpsilon.ts


var validateEpsilon_marked = /*#__PURE__*/regenerator_default().mark(validateEpsilon);


/**
*
*/

function validateEpsilon() {
  return regenerator_default().wrap(function validateEpsilon$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 1:
        case "end":
          return _context.stop();
      }
    }
  }, validateEpsilon_marked);
}
;// CONCATENATED MODULE: ./sources/validator/kiss/common/validateManyWhitespace.ts


var validateManyWhitespace_marked = /*#__PURE__*/regenerator_default().mark(validateManyWhitespace);



/**
*
*/

function validateManyWhitespace() {
  var minimum,
      maximum,
      current,
      count,
      _args = arguments;
  return regenerator_default().wrap(function validateManyWhitespace$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          minimum = _args.length > 0 && _args[0] !== undefined ? _args[0] : 0;
          maximum = _args.length > 1 && _args[1] !== undefined ? _args[1] : Number.POSITIVE_INFINITY;
          _context.next = 4;
          return UnidocKissValidator.output.current();

        case 4:
          current = _context.sent;
          count = 0;

        case 6:
          if (!(current && current.isWhitespace())) {
            _context.next = 19;
            break;
          }

          if (!(count < maximum)) {
            _context.next = 16;
            break;
          }

          _context.next = 10;
          return UnidocKissValidator.output.validation(current);

        case 10:
          count += 1;
          _context.next = 13;
          return UnidocKissValidator.output.next();

        case 13:
          current = _context.sent;
          _context.next = 17;
          break;

        case 16:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 17:
          _context.next = 6;
          break;

        case 19:
          if (!(count < minimum)) {
            _context.next = 25;
            break;
          }

          _context.next = 22;
          return UnidocKissValidator.output.message.expectedContent(UnidocBlueprint.many(UnidocBlueprint.whitespace()).atLeast(minimum - count));

        case 22:
          return _context.abrupt("return", UnidocKissValidator.output.end());

        case 25:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 26:
        case "end":
          return _context.stop();
      }
    }
  }, validateManyWhitespace_marked);
}
;// CONCATENATED MODULE: ./sources/validator/kiss/common/validateManyWord.ts


var validateManyWord_marked = /*#__PURE__*/regenerator_default().mark(validateManyWord);



/**
*
*/

function validateManyWord() {
  var minimum,
      maximum,
      current,
      count,
      _args = arguments;
  return regenerator_default().wrap(function validateManyWord$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          minimum = _args.length > 0 && _args[0] !== undefined ? _args[0] : 0;
          maximum = _args.length > 1 && _args[1] !== undefined ? _args[1] : Number.POSITIVE_INFINITY;
          _context.next = 4;
          return UnidocKissValidator.output.current();

        case 4:
          current = _context.sent;
          count = 0;

        case 6:
          if (!(current && current.isWord())) {
            _context.next = 19;
            break;
          }

          if (!(count < maximum)) {
            _context.next = 16;
            break;
          }

          _context.next = 10;
          return UnidocKissValidator.output.validation(current);

        case 10:
          count += 1;
          _context.next = 13;
          return UnidocKissValidator.output.next();

        case 13:
          current = _context.sent;
          _context.next = 17;
          break;

        case 16:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 17:
          _context.next = 6;
          break;

        case 19:
          if (!(count < minimum)) {
            _context.next = 25;
            break;
          }

          _context.next = 22;
          return UnidocKissValidator.output.message.expectedContent(UnidocBlueprint.many(UnidocBlueprint.word()).atLeast(minimum - count));

        case 22:
          return _context.abrupt("return", UnidocKissValidator.output.end());

        case 25:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 26:
        case "end":
          return _context.stop();
      }
    }
  }, validateManyWord_marked);
}
;// CONCATENATED MODULE: ./sources/validator/kiss/common/validateSequence.ts


var validateSequence_marked = /*#__PURE__*/regenerator_default().mark(validateSequence);


/**
*
*/

function validateSequence() {
  var index,
      size,
      result,
      _args = arguments;
  return regenerator_default().wrap(function validateSequence$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          index = 0, size = _args.length;

        case 1:
          if (!(index < size)) {
            _context.next = 17;
            break;
          }

          return _context.delegateYield(index < 0 || _args.length <= index ? undefined : _args[index], "t0", 3);

        case 3:
          result = _context.t0;

          if (!(result == null)) {
            _context.next = 8;
            break;
          }

          throw new Error('Illegal behavior, a KISS validator returned nothing at the end of it\'s execution.');

        case 8:
          if (!result.isEnd()) {
            _context.next = 12;
            break;
          }

          return _context.abrupt("return", result);

        case 12:
          if (result.isMatch()) {
            _context.next = 14;
            break;
          }

          throw new Error('Illegal behavior, a KISS validator returned a result that was neither end nor match at the end of it\'s execution.');

        case 14:
          ++index;
          _context.next = 1;
          break;

        case 17:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 18:
        case "end":
          return _context.stop();
      }
    }
  }, validateSequence_marked);
}
;// CONCATENATED MODULE: ./sources/validator/kiss/common/validateStartOfAnyTag.ts


var validateStartOfAnyTag_marked = /*#__PURE__*/regenerator_default().mark(validateStartOfAnyTag);




/**
*
*/

function validateStartOfAnyTag() {
  var current;
  return regenerator_default().wrap(function validateStartOfAnyTag$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocKissValidator.output.current();

        case 2:
          current = _context.sent;
          _context.next = 5;
          return UnidocKissValidator.output.validation(current);

        case 5:
          if (!(current && current.isStartOfAnyTag())) {
            _context.next = 11;
            break;
          }

          _context.next = 8;
          return UnidocKissValidator.output.next();

        case 8:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 11:
          _context.next = 13;
          return UnidocKissValidator.output.message.expectedContent(UnidocBlueprint.event(UnidocPredicate.isTagStart()));

        case 13:
          return _context.abrupt("return", UnidocKissValidator.output.end());

        case 14:
        case "end":
          return _context.stop();
      }
    }
  }, validateStartOfAnyTag_marked);
}
;// CONCATENATED MODULE: ./sources/validator/kiss/common/validateStartOfTag.ts


var validateStartOfTag_marked = /*#__PURE__*/regenerator_default().mark(validateStartOfTag);



/**
*
*/

function validateStartOfTag(tag) {
  var current;
  return regenerator_default().wrap(function validateStartOfTag$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocKissValidator.output.current();

        case 2:
          current = _context.sent;
          _context.next = 5;
          return UnidocKissValidator.output.validation(current);

        case 5:
          if (!(current && current.isStartOfTag(tag))) {
            _context.next = 11;
            break;
          }

          _context.next = 8;
          return UnidocKissValidator.output.next();

        case 8:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 11:
          _context.next = 13;
          return UnidocKissValidator.output.message.expectedContent(UnidocBlueprint.tagStart(tag));

        case 13:
          return _context.abrupt("return", UnidocKissValidator.output.end());

        case 14:
        case "end":
          return _context.stop();
      }
    }
  }, validateStartOfTag_marked);
}
/**
*
*/

(function (validateStartOfTag) {
  /**
  *
  */
  function factory(name) {
    return validateStartOfTag.bind(undefined, name);
  }

  validateStartOfTag.factory = factory;
})(validateStartOfTag || (validateStartOfTag = {}));
;// CONCATENATED MODULE: ./sources/validator/kiss/common/validateText.ts


var validateText_marked = /*#__PURE__*/regenerator_default().mark(validateText);



/**
*
*/

function validateText() {
  var current;
  return regenerator_default().wrap(function validateText$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocKissValidator.output.current();

        case 2:
          current = _context.sent;

        case 3:
          if (!(current && current.isWhitespace())) {
            _context.next = 11;
            break;
          }

          _context.next = 6;
          return UnidocKissValidator.output.validation(current);

        case 6:
          _context.next = 8;
          return UnidocKissValidator.output.next();

        case 8:
          current = _context.sent;
          _context.next = 3;
          break;

        case 11:
          if (!(current && (current.isWhitespace() || current.isWord()))) {
            _context.next = 19;
            break;
          }

          _context.next = 14;
          return UnidocKissValidator.output.validation(current);

        case 14:
          _context.next = 16;
          return UnidocKissValidator.output.next();

        case 16:
          current = _context.sent;
          _context.next = 11;
          break;

        case 19:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 20:
        case "end":
          return _context.stop();
      }
    }
  }, validateText_marked);
}
/**
 *
 */

(function (validateText) {
  /**
   *
   */
  function thatMatch(regexp) {
    return validateContentThatMatch(validateText(), regexp);
  }

  validateText.thatMatch = thatMatch;
})(validateText || (validateText = {}));
;// CONCATENATED MODULE: ./sources/validator/kiss/common/validateToken.ts


var validateToken_marked = /*#__PURE__*/regenerator_default().mark(validateToken);



/**
*
*/

function validateToken() {
  var current;
  return regenerator_default().wrap(function validateToken$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocKissValidator.output.current();

        case 2:
          current = _context.sent;

        case 3:
          if (!(current && current.isWhitespace())) {
            _context.next = 11;
            break;
          }

          _context.next = 6;
          return UnidocKissValidator.output.validation(current);

        case 6:
          _context.next = 8;
          return UnidocKissValidator.output.next();

        case 8:
          current = _context.sent;
          _context.next = 3;
          break;

        case 11:
          if (!(current && current.isWord())) {
            _context.next = 19;
            break;
          }

          _context.next = 14;
          return UnidocKissValidator.output.validation(current);

        case 14:
          _context.next = 16;
          return UnidocKissValidator.output.next();

        case 16:
          current = _context.sent;
          _context.next = 11;
          break;

        case 19:
          if (!(current && current.isWhitespace())) {
            _context.next = 27;
            break;
          }

          _context.next = 22;
          return UnidocKissValidator.output.validation(current);

        case 22:
          _context.next = 24;
          return UnidocKissValidator.output.next();

        case 24:
          current = _context.sent;
          _context.next = 19;
          break;

        case 27:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 28:
        case "end":
          return _context.stop();
      }
    }
  }, validateToken_marked);
}
/**
 *
 */

(function (validateToken) {
  /**
   *
   */
  function thatMatch(regexp) {
    return validateContentThatMatch(validateToken(), regexp);
  }

  validateToken.thatMatch = thatMatch;
})(validateToken || (validateToken = {}));
;// CONCATENATED MODULE: ./sources/validator/kiss/common/validateWhitespace.ts


var validateWhitespace_marked = /*#__PURE__*/regenerator_default().mark(validateWhitespace);



/**
*
*/

function validateWhitespace() {
  var current;
  return regenerator_default().wrap(function validateWhitespace$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocKissValidator.output.current();

        case 2:
          current = _context.sent;
          _context.next = 5;
          return UnidocKissValidator.output.validation(current);

        case 5:
          if (!(current && current.isWhitespace())) {
            _context.next = 11;
            break;
          }

          _context.next = 8;
          return UnidocKissValidator.output.next();

        case 8:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 11:
          _context.next = 13;
          return UnidocKissValidator.output.message.expectedContent(UnidocBlueprint.whitespace());

        case 13:
          return _context.abrupt("return", UnidocKissValidator.output.end());

        case 14:
        case "end":
          return _context.stop();
      }
    }
  }, validateWhitespace_marked);
}
;// CONCATENATED MODULE: ./sources/validator/kiss/common/validateWord.ts


var validateWord_marked = /*#__PURE__*/regenerator_default().mark(validateWord);



/**
*
*/

function validateWord() {
  var current;
  return regenerator_default().wrap(function validateWord$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return UnidocKissValidator.output.current();

        case 2:
          current = _context.sent;
          _context.next = 5;
          return UnidocKissValidator.output.validation(current);

        case 5:
          if (!(current && current.isWord())) {
            _context.next = 11;
            break;
          }

          _context.next = 8;
          return UnidocKissValidator.output.next();

        case 8:
          return _context.abrupt("return", UnidocKissValidator.output.match());

        case 11:
          _context.next = 13;
          return UnidocKissValidator.output.message.expectedContent(UnidocBlueprint.word());

        case 13:
          return _context.abrupt("return", UnidocKissValidator.output.end());

        case 14:
        case "end":
          return _context.stop();
      }
    }
  }, validateWord_marked);
}
;// CONCATENATED MODULE: ./sources/validator/kiss/common/index.ts

















;// CONCATENATED MODULE: ./sources/validator/kiss/UnidocKissValidatorOutputBuilder.ts
function UnidocKissValidatorOutputBuilder_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocKissValidatorOutputBuilder_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocKissValidatorOutputBuilder_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocKissValidatorOutputBuilder_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocKissValidatorOutputBuilder_defineProperties(Constructor, staticProps); return Constructor; }


var UnidocKissValidatorOutputBuilder = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocKissValidatorOutputBuilder() {
    UnidocKissValidatorOutputBuilder_classCallCheck(this, UnidocKissValidatorOutputBuilder);

    this._output = new UnidocKissValidatorOutput();
  }
  /**
  *
  */


  UnidocKissValidatorOutputBuilder_createClass(UnidocKissValidatorOutputBuilder, [{
    key: "asCurrent",
    value: function asCurrent() {
      this._output.asCurrent();

      return this;
    }
    /**
    *
    */

  }, {
    key: "asNext",
    value: function asNext() {
      this._output.asNext();

      return this;
    }
    /**
    *
    */

  }, {
    key: "asEmit",
    value: function asEmit(event) {
      this._output.asEmit(event);

      return this;
    }
    /**
    *
    */

  }, {
    key: "asEnd",
    value: function asEnd() {
      this._output.asEnd();

      return this;
    }
    /**
    *
    */

  }, {
    key: "build",
    value: function build() {
      return this._output.clone();
    }
    /**
    *
    */

  }, {
    key: "get",
    value: function get() {
      return this._output;
    }
    /**
    *
    */

  }, {
    key: "configure",
    value: function configure(message) {
      message.copy(this._output);
    }
    /**
    * Clear this event instance in order to reuse it.
    */

  }, {
    key: "clear",
    value: function clear() {
      this._output.clear();
    }
    /**
    *
    */

  }, {
    key: "copy",
    value: function copy(toCopy) {
      if (toCopy instanceof UnidocKissValidatorOutputBuilder) {
        this._output.copy(toCopy._output);
      } else {
        this._output.copy(toCopy);
      }

      return this;
    }
    /**
    * Return a copy of this instance.
    *
    * @return A copy of this instance.
    */

  }, {
    key: "clone",
    value: function clone() {
      var result = new UnidocKissValidatorOutputBuilder();
      result.copy(this);
      return result;
    }
    /**
    * @see Object.equals
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof UnidocKissValidatorOutputBuilder) {
        return this._output.equals(other._output);
      }

      return false;
    }
  }]);

  return UnidocKissValidatorOutputBuilder;
}();

(function (UnidocKissValidatorOutputBuilder) {
  /**
  *
  */
  UnidocKissValidatorOutputBuilder.INSTANCE = new UnidocKissValidatorOutputBuilder();
  /**
  *
  */

  function create() {
    return new UnidocKissValidatorOutputBuilder();
  }

  UnidocKissValidatorOutputBuilder.create = create;
  /**
  *
  */

  function get() {
    return UnidocKissValidatorOutputBuilder.INSTANCE;
  }

  UnidocKissValidatorOutputBuilder.get = get;
})(UnidocKissValidatorOutputBuilder || (UnidocKissValidatorOutputBuilder = {}));
;// CONCATENATED MODULE: ./sources/validator/kiss/UnidocKissValidator.ts









/**
*
*/

var UnidocKissValidator;

(function (UnidocKissValidator) {
  var _marked = /*#__PURE__*/regenerator_default().mark(match),
      _marked2 = /*#__PURE__*/regenerator_default().mark(feed);

  /**
  *
  */
  var output;

  (function (output) {
    /**
    *
    */
    function current() {
      return UnidocKissValidatorOutput.CURRENT;
    }

    output.current = current;
    /**
    *
    */

    function next() {
      return UnidocKissValidatorOutput.NEXT;
    }

    output.next = next;
    /**
    *
    */

    function end() {
      return UnidocKissValidatorOutput.END;
    }

    output.end = end;
    /**
    *
    */

    function match() {
      return UnidocKissValidatorOutput.MATCH;
    }

    output.match = match;
    /**
    *
    */

    function emit(event) {
      return UnidocKissValidatorOutputBuilder.get().asEmit(event).get();
    }

    output.emit = emit;
    /**
    *
    */

    function validation(event) {
      if (event) {
        return UnidocKissValidatorOutputBuilder.get().asEmit(UnidocValidationEventBuilder.get().asValidation(event).get()).get();
      } else {
        return UnidocKissValidatorOutputBuilder.get().asEmit(UnidocValidationEventBuilder.get().asDocumentCompletion().get()).get();
      }
    }

    output.validation = validation;
    /**
    *
    */

    function message(message) {
      return UnidocKissValidatorOutputBuilder.get().asEmit(UnidocValidationEventBuilder.get().asMessage(message).get()).get();
    }

    output.message = message;
    /**
    *
    */

    function builder() {
      return UnidocKissValidatorOutputBuilder.get();
    }

    output.builder = builder;
    /**
    *
    */

    (function (message) {
      /**
      *
      */
      function builder() {
        return UnidocValidationMessageBuilder.get();
      }

      message.builder = builder;
      /**
      *
      */

      function expectedContent(blueprint) {
        return message(builder().setType(ExpectedContent.TYPE).setCode(ExpectedContent.CODE).setData(ExpectedContent.Data.BLUEPRINT, blueprint).get());
      }

      message.expectedContent = expectedContent;
      /**
      *
      */

      function preferredContent(blueprint) {
        return message(builder().setType(PreferredContent.TYPE).setCode(PreferredContent.CODE).setData(PreferredContent.Data.BLUEPRINT, blueprint).get());
      }

      message.preferredContent = preferredContent;
      /**
      *
      */

      function tooManyContent(blueprint) {
        return message(builder().setType(TooManyContent.TYPE).setCode(TooManyContent.CODE).setData(TooManyContent.Data.BLUEPRINT, blueprint).get());
      }

      message.tooManyContent = tooManyContent;
      /**
      *
      */

      (function (tooManyContent) {
        /**
        *
        */
        function strict(blueprint) {
          return message(builder().setType(TooManyContent.Strict.TYPE).setCode(TooManyContent.Strict.CODE).setData(TooManyContent.Strict.Data.BLUEPRINT, blueprint).get());
        }

        tooManyContent.strict = strict;
      })(tooManyContent = message.tooManyContent || (message.tooManyContent = {}));
    })(message = output.message || (output.message = {}));
  })(output = UnidocKissValidator.output || (UnidocKissValidator.output = {}));
  /**
  *
  */


  function match(validator) {
    var result;
    return regenerator_default().wrap(function match$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.delegateYield(validator, "t0", 1);

          case 1:
            result = _context.t0;

            if (!(result == null)) {
              _context.next = 6;
              break;
            }

            throw new Error('Illegal behavior, a KISS validator returned nothing at the end of it\'s execution.');

          case 6:
            if (!result.isEnd()) {
              _context.next = 10;
              break;
            }

            return _context.abrupt("return", false);

          case 10:
            if (!result.isMatch()) {
              _context.next = 14;
              break;
            }

            return _context.abrupt("return", true);

          case 14:
            throw new Error('Illegal behavior, a KISS validator returned a result that was neither end nor match at the end of it\'s execution.');

          case 15:
          case "end":
            return _context.stop();
        }
      }
    }, _marked);
  }

  UnidocKissValidator.match = match;
  /**
  *
  */

  UnidocKissValidator.captureValidatedText = captureValidatedText;
  /**
  *
  */

  UnidocKissValidator.requireText = requireText;
  /**
  *
  */

  UnidocKissValidator.requireToken = requireToken;
  /**
  *
  */

  UnidocKissValidator.validateContentThatMatch = validateContentThatMatch;
  /**
  *
  */

  UnidocKissValidator.validateEnd = validateEnd;
  /**
  *
  */

  UnidocKissValidator.validateEndOfAnyTag = validateEndOfAnyTag;
  /**
  *
  */

  UnidocKissValidator.validateEndOfTag = validateEndOfTag;
  /**
  *
  */

  UnidocKissValidator.validateEpsilon = validateEpsilon;
  /**
  *
  */

  UnidocKissValidator.validateManyWhitespace = validateManyWhitespace;
  /**
  *
  */

  UnidocKissValidator.validateManyWord = validateManyWord;
  /**
  *
  */

  UnidocKissValidator.validateSequence = validateSequence;
  /**
  *
  */

  UnidocKissValidator.validateStartOfAnyTag = validateStartOfAnyTag;
  /**
  *
  */

  UnidocKissValidator.validateStartOfTag = validateStartOfTag;
  /**
  *
  */

  UnidocKissValidator.validateText = requireText;
  /**
  *
  */

  UnidocKissValidator.validateToken = requireToken;
  /**
  *
  */

  UnidocKissValidator.validateWhitespace = validateWhitespace;
  /**
  *
  */

  UnidocKissValidator.validateWord = validateWord;
  /**
  *
  */

  function feed(validator, input) {
    var result;
    return regenerator_default().wrap(function feed$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            result = validator.next(input);

          case 1:
            if (!(!result.done && (result.value.isCurrent() || result.value.isEmit()))) {
              _context2.next = 7;
              break;
            }

            _context2.next = 4;
            return result.value;

          case 4:
            result = validator.next(input);
            _context2.next = 1;
            break;

          case 7:
            return _context2.abrupt("return", result.value);

          case 8:
          case "end":
            return _context2.stop();
        }
      }
    }, _marked2);
  }

  UnidocKissValidator.feed = feed;
})(UnidocKissValidator || (UnidocKissValidator = {}));
;// CONCATENATED MODULE: ./sources/validator/kiss/UnidocKissValidatorResolver.ts
function UnidocKissValidatorResolver_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocKissValidatorResolver_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocKissValidatorResolver_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocKissValidatorResolver_typeof(obj); }

function UnidocKissValidatorResolver_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocKissValidatorResolver_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocKissValidatorResolver_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocKissValidatorResolver_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocKissValidatorResolver_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocKissValidatorResolver_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocKissValidatorResolver_setPrototypeOf(subClass, superClass); }

function UnidocKissValidatorResolver_setPrototypeOf(o, p) { UnidocKissValidatorResolver_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocKissValidatorResolver_setPrototypeOf(o, p); }

function UnidocKissValidatorResolver_createSuper(Derived) { var hasNativeReflectConstruct = UnidocKissValidatorResolver_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocKissValidatorResolver_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocKissValidatorResolver_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocKissValidatorResolver_possibleConstructorReturn(this, result); }; }

function UnidocKissValidatorResolver_possibleConstructorReturn(self, call) { if (call && (UnidocKissValidatorResolver_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocKissValidatorResolver_assertThisInitialized(self); }

function UnidocKissValidatorResolver_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocKissValidatorResolver_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocKissValidatorResolver_getPrototypeOf(o) { UnidocKissValidatorResolver_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocKissValidatorResolver_getPrototypeOf(o); }





var UnidocKissValidatorResolver = /*#__PURE__*/function (_SubscribableUnidocCo) {
  UnidocKissValidatorResolver_inherits(UnidocKissValidatorResolver, _SubscribableUnidocCo);

  var _super = UnidocKissValidatorResolver_createSuper(UnidocKissValidatorResolver);

  /**
  *
  */
  function UnidocKissValidatorResolver(factory) {
    var _this;

    UnidocKissValidatorResolver_classCallCheck(this, UnidocKissValidatorResolver);

    _this = _super.call(this);
    _this.validator = null;
    _this.factory = factory;
    _this.output = new UnidocValidationEventProducer();
    return _this;
  }
  /**
  * @see UnidocProducer.addEventListener
  */


  UnidocKissValidatorResolver_createClass(UnidocKissValidatorResolver, [{
    key: "addEventListener",
    value: function addEventListener(event, listener) {
      this.output.addEventListener(event, listener);
    }
    /**
    * @see UnidocProducer.removeEventListener
    */

  }, {
    key: "removeEventListener",
    value: function removeEventListener(event, listener) {
      this.output.removeEventListener(event, listener);
    }
    /**
    * @see UnidocProducer.removeAllEventListener
    */

  }, {
    key: "removeAllEventListener",
    value: function removeAllEventListener(event) {
      this.output.removeAllEventListener(event);
    }
    /**
    *
    */

  }, {
    key: "handleInitialization",
    value: function handleInitialization() {
      var validator = this.factory();
      var output = this.output;
      output.initialize();
      this.validator = validator;
      var next = validator.next();

      while (!next.done) {
        switch (next.value.type) {
          case UnidocKissValidatorOutputType.CURRENT:
            return;

          case UnidocKissValidatorOutputType.NEXT:
            return;

          case UnidocKissValidatorOutputType.EMIT:
            if (next.value.event.message.isFailure()) {
              output.produce(next.value.event);
              next = validator["return"](UnidocKissValidator.output.end());
            } else {
              output.produce(next.value.event);
              next = validator.next();
            }

            break;

          case UnidocKissValidatorOutputType.END:
          case UnidocKissValidatorOutputType.MATCH:
            this.validator = null;
            return;

          default:
            throw new Error('Unable to handle kiss validator output of type ' + UnidocKissValidatorOutputType.toDebugString(next.value.type) + ' ' + 'because no procedure was defined for that.');
        }
      }
    }
    /**
    *
    */

  }, {
    key: "handleProduction",
    value: function handleProduction(value) {
      var validator = this.validator;
      var output = this.output;

      if (validator) {
        var next = validator.next(value);

        while (!next.done) {
          switch (next.value.type) {
            case UnidocKissValidatorOutputType.CURRENT:
              next = validator.next(value);
              break;

            case UnidocKissValidatorOutputType.NEXT:
              return;

            case UnidocKissValidatorOutputType.EMIT:
              if (next.value.event.message.isFailure()) {
                output.produce(next.value.event);
                next = validator["return"](UnidocKissValidator.output.end());
              } else {
                output.produce(next.value.event);
                next = validator.next();
              }

              break;

            case UnidocKissValidatorOutputType.END:
            case UnidocKissValidatorOutputType.MATCH:
              this.validator = null;
              return;

            default:
              throw new Error('Unable to handle kiss validator output of type ' + UnidocKissValidatorOutputType.toDebugString(next.value.type) + ' ' + 'because no procedure was defined for that.');
          }
        }
      }
    }
    /**
    *
    */

  }, {
    key: "handleCompletion",
    value: function handleCompletion() {
      var validator = this.validator;
      var output = this.output;

      if (validator) {
        var next = validator.next(undefined);

        while (!next.done) {
          switch (next.value.type) {
            case UnidocKissValidatorOutputType.CURRENT:
            case UnidocKissValidatorOutputType.NEXT:
              next = validator.next(undefined);
              break;

            case UnidocKissValidatorOutputType.EMIT:
              if (next.value.event.message.isFailure()) {
                output.produce(next.value.event);
                next = validator["return"](UnidocKissValidator.output.end());
              } else {
                output.produce(next.value.event);
                next = validator.next();
              }

              break;

            case UnidocKissValidatorOutputType.END:
            case UnidocKissValidatorOutputType.MATCH:
              this.validator = null;
              return;

            default:
              throw new Error('Unable to handle kiss validator output of type ' + UnidocKissValidatorOutputType.toDebugString(next.value.type) + ' ' + 'because no procedure was defined for that.');
          }
        }
      }

      output.complete();
    }
    /**
    *
    */

  }, {
    key: "handleFailure",
    value: function handleFailure(error) {
      this.output.fail(error);
    }
  }]);

  return UnidocKissValidatorResolver;
}(SubscribableUnidocConsumer);
;// CONCATENATED MODULE: ./sources/validator/kiss/index.ts





;// CONCATENATED MODULE: ./sources/validator/nfa/UnidocNFAValidationTreeType.ts
var UnidocNFAValidationTreeType;

(function (UnidocNFAValidationTreeType) {
  /**
  *
  */
  UnidocNFAValidationTreeType.START = 0;
  /**
  *
  */

  UnidocNFAValidationTreeType.STATE = 1;
  /**
  *
  */

  UnidocNFAValidationTreeType.EVENT = 2;
  /**
  *
  */

  UnidocNFAValidationTreeType.HEAD = 3;
  /**
  *
  */

  UnidocNFAValidationTreeType.ALL = [UnidocNFAValidationTreeType.START, UnidocNFAValidationTreeType.STATE, UnidocNFAValidationTreeType.EVENT, UnidocNFAValidationTreeType.HEAD];
  /**
  *
  */

  UnidocNFAValidationTreeType.DEFAULT = UnidocNFAValidationTreeType.START;
  /**
  *
  */

  function toString(type) {
    switch (type) {
      case UnidocNFAValidationTreeType.START:
        return 'START';

      case UnidocNFAValidationTreeType.STATE:
        return 'STATE';

      case UnidocNFAValidationTreeType.EVENT:
        return 'EVENT';

      case UnidocNFAValidationTreeType.HEAD:
        return 'HEAD';

      default:
        return undefined;
    }
  }

  UnidocNFAValidationTreeType.toString = toString;
  /**
  *
  */

  function toDebugString(type) {
    return '#' + type + ' (' + (toString(type) || 'undefined') + ')';
  }

  UnidocNFAValidationTreeType.toDebugString = toDebugString;
})(UnidocNFAValidationTreeType || (UnidocNFAValidationTreeType = {}));
;// CONCATENATED MODULE: ./sources/validator/nfa/UnidocNFAValidationTree.ts


function UnidocNFAValidationTree_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = UnidocNFAValidationTree_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function UnidocNFAValidationTree_toConsumableArray(arr) { return UnidocNFAValidationTree_arrayWithoutHoles(arr) || UnidocNFAValidationTree_iterableToArray(arr) || UnidocNFAValidationTree_unsupportedIterableToArray(arr) || UnidocNFAValidationTree_nonIterableSpread(); }

function UnidocNFAValidationTree_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function UnidocNFAValidationTree_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return UnidocNFAValidationTree_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return UnidocNFAValidationTree_arrayLikeToArray(o, minLen); }

function UnidocNFAValidationTree_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function UnidocNFAValidationTree_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return UnidocNFAValidationTree_arrayLikeToArray(arr); }

function UnidocNFAValidationTree_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function UnidocNFAValidationTree_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocNFAValidationTree_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocNFAValidationTree_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocNFAValidationTree_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocNFAValidationTree_defineProperties(Constructor, staticProps); return Constructor; }






var UnidocNFAValidationTree = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocNFAValidationTree() {
    UnidocNFAValidationTree_classCallCheck(this, UnidocNFAValidationTree);

    this._parent = null;
    this._children = gl_tool_collection_.PackSet.any(4);
    this.children = this._children.view();
    this.event = new UnidocValidationEvent();
    this.type = UnidocNFAValidationTreeType.DEFAULT;
    this.state = null;
  }
  /**
  *
  */


  UnidocNFAValidationTree_createClass(UnidocNFAValidationTree, [{
    key: "isLeaf",

    /**
    *
    */
    value: function isLeaf() {
      return this._children.size === 0;
    }
    /**
    *
    */

  }, {
    key: "isNode",
    value: function isNode() {
      return this._children.size > 0;
    }
    /**
    *
    */

  }, {
    key: "isEvent",
    value: function isEvent() {
      return this.type === UnidocNFAValidationTreeType.EVENT;
    }
    /**
    *
    */

  }, {
    key: "isState",
    value: function isState() {
      return this.type === UnidocNFAValidationTreeType.STATE;
    }
    /**
    *
    */

  }, {
    key: "isStart",
    value: function isStart() {
      return this.type === UnidocNFAValidationTreeType.START;
    }
    /**
    *
    */

  }, {
    key: "isHead",
    value: function isHead() {
      return this.type === UnidocNFAValidationTreeType.HEAD;
    }
    /**
    *
    */

  }, {
    key: "asEvent",
    value: function asEvent(event) {
      this.type = UnidocNFAValidationTreeType.EVENT;
      this.event.copy(event);
      this.state = null;
      return this;
    }
    /**
    *
    */

  }, {
    key: "asState",
    value: function asState(state) {
      this.type = UnidocNFAValidationTreeType.STATE;
      this.event.clear();
      this.state = state;
      return this;
    }
    /**
    *
    */

  }, {
    key: "asStart",
    value: function asStart() {
      this.type = UnidocNFAValidationTreeType.START;
      this.event.clear();
      this.state = null;
      return this;
    }
    /**
    *
    */

  }, {
    key: "asHead",
    value: function asHead() {
      this.type = UnidocNFAValidationTreeType.HEAD;
      this.event.clear();
      this.state = null;
      return this;
    }
    /**
    *
    */

  }, {
    key: "isUpward",
    value: function isUpward(node) {
      var parent = this._parent;

      while (parent) {
        if (parent === node) {
          return true;
        } else {
          parent = parent.parent;
        }
      }

      return false;
    }
    /**
    *
    */

  }, {
    key: "root",
    value: function root() {
      var result = this;

      while (result.parent != null) {
        result = result.parent;
      }

      return result;
    }
    /**
    *
    */

  }, {
    key: "up",
    value: /*#__PURE__*/regenerator_default().mark(function up() {
      var result;
      return regenerator_default().wrap(function up$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              result = this;

            case 1:
              if (!(result.parent != null)) {
                _context.next = 7;
                break;
              }

              result = result.parent;
              _context.next = 5;
              return result;

            case 5:
              _context.next = 1;
              break;

            case 7:
              return _context.abrupt("return", result);

            case 8:
            case "end":
              return _context.stop();
          }
        }
      }, up, this);
    })
    /**
    *
    */

  }, {
    key: "countMessages",
    value: function countMessages() {
      var output = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      for (var index = 0, size = UnidocValidationMessageType.ALL.length; index < size; ++index) {
        output[index] = 0;
      }

      var current = this;

      while (current) {
        if (current.type === UnidocNFAValidationTreeType.EVENT && current.event.isMessage()) {
          output[current.event.message.type] += 1;
        }

        current = current.parent;
      }

      return output;
    }
    /**
    *
    */

  }, {
    key: "batch",
    value: function batch() {
      var current = this;

      while (current) {
        if (current.type === UnidocNFAValidationTreeType.EVENT) {
          return current.event.batch;
        }

        current = current.parent;
      }

      return 0;
    }
    /**
    *
    */

  }, {
    key: "fork",
    value: function fork() {
      var next = UnidocNFAValidationTree.ALLOCATOR.allocate();
      next.parent = this;
      return next;
    }
    /**
    *
    */

  }, {
    key: "addChild",
    value: function addChild(child) {
      this._children.add(child);

      child.parent = this;
    }
    /**
    *
    */

  }, {
    key: "deleteChild",
    value: function deleteChild(child) {
      this._children["delete"](child);

      child.parent = null;
    }
    /**
    *
    */

  }, {
    key: "delete",
    value: function _delete() {
      var oldParent = this._parent;
      this.parent = null;

      while (this._children.size > 0) {
        this._children.first.parent = oldParent;
      }
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this.parent = null;

      while (this._children.size > 0) {
        this._children.first.parent = null;
      }
    }
    /**
    *
    */

  }, {
    key: "toString",
    value: function toString() {
      var result = this.constructor.name;

      switch (this.type) {
        case UnidocNFAValidationTreeType.START:
          return result + ' START with ' + this._children.size + ' children';

        case UnidocNFAValidationTreeType.STATE:
          return result + ' STATE #' + this.state.identifier + ' with ' + this._children.size + ' children';

        case UnidocNFAValidationTreeType.EVENT:
          return result + ' EVENT ' + this.event.toString() + ' with ' + this._children.size + ' children';

        case UnidocNFAValidationTreeType.HEAD:
          return result + ' HEAD with ' + this._children.size + ' children';

        default:
          throw new Error('Unable to stringify tree node of type ' + UnidocNFAValidationTreeType.toDebugString(this.type) + ' as no ' + 'procedure was defined for that.');
      }
    }
  }, {
    key: "parent",
    get: function get() {
      return this._parent;
    }
    /**
    *
    */
    ,
    set: function set(parent) {
      if (this._parent !== parent) {
        if (this._parent) {
          var oldParent = this._parent;
          this._parent = null;
          oldParent.deleteChild(this);
        }

        this._parent = parent;

        if (parent) {
          parent.addChild(this);
        }
      }
    }
  }]);

  return UnidocNFAValidationTree;
}();

(function (UnidocNFAValidationTree) {
  /**
  *
  */
  function create() {
    return new UnidocNFAValidationTree();
  }

  UnidocNFAValidationTree.create = create;
  /**
  *
  */

  UnidocNFAValidationTree.ALLOCATOR = gl_tool_collection_.Allocator.fromFactory(create);
  /**
  * Trash a tree and keep is root.
  *
  * @param root - Root of the tree to trash.
  */

  function trash(root) {
    var stack = UnidocNFAValidationTree_toConsumableArray(root.children);

    var next = stack.pop();

    while (next) {
      var _iterator = UnidocNFAValidationTree_createForOfIteratorHelper(next.children),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var child = _step.value;
          stack.push(child);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      UnidocNFAValidationTree.ALLOCATOR.free(next);
      next = stack.pop();
    }
  }

  UnidocNFAValidationTree.trash = trash;
  /**
  * Cut a branch of a tree and link it's starting node and it's ending node.
  *
  * @param node - A node of the branch to cut.
  */

  function cut(node) {
    var upmost = node.parent;
    node.parent = null;

    while (upmost && !upmost.isStart() && upmost.children.size === 0) {
      var next = upmost.parent;
      UnidocNFAValidationTree.ALLOCATOR.free(upmost);
      upmost = next;
    }

    var lowest = node;

    while (lowest && lowest.children.size < 2) {
      var _next = lowest.children.size === 1 ? lowest.children.first : null;

      UnidocNFAValidationTree.ALLOCATOR.free(lowest);
      lowest = _next;
    }

    if (lowest && upmost) {
      lowest.parent = upmost;
    }
  }

  UnidocNFAValidationTree.cut = cut;
})(UnidocNFAValidationTree || (UnidocNFAValidationTree = {}));
;// CONCATENATED MODULE: ./sources/validator/nfa/UnidocNFAValidationRelationship.ts
function UnidocNFAValidationRelationship_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocNFAValidationRelationship_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocNFAValidationRelationship_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocNFAValidationRelationship_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocNFAValidationRelationship_defineProperties(Constructor, staticProps); return Constructor; }

/**
*
*/
var UnidocNFAValidationRelationship = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocNFAValidationRelationship(from, to, validator) {
    UnidocNFAValidationRelationship_classCallCheck(this, UnidocNFAValidationRelationship);

    if (from.graph !== to.graph) {
      throw new Error('Unable to instantiate a relationship between the given states ' + 'because they both belongs to two different graphs.');
    }

    this.from = from;
    this.to = to;
    this.validator = validator;
    this.identifier = this.from.graph.addRelationship(this);
    this.from.addOutputRelationship(this);
  }
  /**
  *
  */


  UnidocNFAValidationRelationship_createClass(UnidocNFAValidationRelationship, [{
    key: "toString",
    value: function toString() {
      var result = this.constructor.name;
      result += ' #';
      result += this.identifier;
      result += ' from state #';
      result += this.from.identifier;
      result += ' to state #';
      result += this.to.identifier;
      return result;
    }
  }]);

  return UnidocNFAValidationRelationship;
}();
;// CONCATENATED MODULE: ./sources/validator/nfa/UnidocNFAValidationState.ts
function UnidocNFAValidationState_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocNFAValidationState_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocNFAValidationState_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocNFAValidationState_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocNFAValidationState_defineProperties(Constructor, staticProps); return Constructor; }




var UnidocNFAValidationState = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocNFAValidationState(graph) {
    UnidocNFAValidationState_classCallCheck(this, UnidocNFAValidationState);

    this.graph = graph;
    this._outputs = gl_tool_collection_.PackSet.any(4);
    this.outputs = this._outputs.view();
    this.identifier = graph.addState(this);
  }
  /**
  *
  */


  UnidocNFAValidationState_createClass(UnidocNFAValidationState, [{
    key: "isMatch",

    /**
    *
    */
    value: function isMatch() {
      return this._match !== undefined;
    }
    /**
    *
    */

  }, {
    key: "addOutputRelationship",
    value: function addOutputRelationship(relationship) {
      if (relationship.from !== this) {
        throw new Error('Unable to add the given relationship as an outgoing relationship of ' + 'this state as the given relationship originate from a different ' + 'state. #addOutputRelationship is a method that must be called at the' + 'right time, please do not use it if you do not know exactly what ' + 'you are doing.');
      }

      this._outputs.add(relationship);
    }
    /**
    *
    */

  }, {
    key: "output",
    value: function output(to, validator) {
      new UnidocNFAValidationRelationship(this, to, validator);
    }
    /**
    *
    */

  }, {
    key: "input",
    value: function input(from, validator) {
      new UnidocNFAValidationRelationship(from, this, validator);
    }
    /**
    *
    */

  }, {
    key: "epsilon",
    value: function epsilon(to) {
      new UnidocNFAValidationRelationship(this, to, UnidocKissValidator.validateEpsilon);
    }
    /**
    *
    */

  }, {
    key: "toString",
    value: function toString() {
      var result = this.constructor.name;
      result += ' #';
      result += this.identifier;

      if (this._match != null) {
        result += ' (MATCH:' + this._match + ')';
      }

      result += ' with outgoing relationships (';
      result += this._outputs.size;
      result += ') into [';

      for (var index = 0; index < this._outputs.size; ++index) {
        if (index > 0) {
          result += ', ';
        }

        result += this._outputs.get(index).to.identifier;
      }

      result += ']';
      return result;
    }
  }, {
    key: "match",
    set: function set(match) {
      if (this._match !== match) {
        this._match = match;

        if (this._match === undefined) {
          this.graph.deleteMatch(this);
        } else {
          this.graph.addMatch(this, match);
        }
      }
    }
    /**
    *
    */
    ,
    get: function get() {
      return this._match;
    }
  }]);

  return UnidocNFAValidationState;
}();
;// CONCATENATED MODULE: ./sources/validator/nfa/UnidocNFAValidationGraphBuilder.ts


function UnidocNFAValidationGraphBuilder_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = UnidocNFAValidationGraphBuilder_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function UnidocNFAValidationGraphBuilder_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return UnidocNFAValidationGraphBuilder_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return UnidocNFAValidationGraphBuilder_arrayLikeToArray(o, minLen); }

function UnidocNFAValidationGraphBuilder_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function UnidocNFAValidationGraphBuilder_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocNFAValidationGraphBuilder_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocNFAValidationGraphBuilder_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocNFAValidationGraphBuilder_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocNFAValidationGraphBuilder_defineProperties(Constructor, staticProps); return Constructor; }


var UnidocNFAValidationGraphBuilder = /*#__PURE__*/function () {
  function UnidocNFAValidationGraphBuilder(graph) {
    UnidocNFAValidationGraphBuilder_classCallCheck(this, UnidocNFAValidationGraphBuilder);

    this.graph = graph;
    var states = new Set();

    for (var _len = arguments.length, origins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      origins[_key - 1] = arguments[_key];
    }

    for (var _i = 0, _origins = origins; _i < _origins.length; _i++) {
      var origin = _origins[_i];

      if (origin instanceof UnidocNFAValidationState) {
        states.add(origin);
      } else {
        var _iterator = UnidocNFAValidationGraphBuilder_createForOfIteratorHelper(origin),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var state = _step.value;
            states.add(state);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
    }

    if (states.size === 0) {
      states.add(graph.start);
    }

    this._origin = states;
    this._input = undefined;
  }
  /**
  *
  */


  UnidocNFAValidationGraphBuilder_createClass(UnidocNFAValidationGraphBuilder, [{
    key: "origin",
    value: /*#__PURE__*/regenerator_default().mark(function origin() {
      return regenerator_default().wrap(function origin$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt("return", this._origin.values());

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, origin, this);
    })
  }, {
    key: "input",
    value: function input() {
      if (this._origin.size > 1) {
        if (this._input) {
          return this._input;
        } else {
          var input = this.graph.state();

          var _iterator2 = UnidocNFAValidationGraphBuilder_createForOfIteratorHelper(this._origin),
              _step2;

          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              var state = _step2.value;
              state.epsilon(input);
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }

          this._input = input;
          return input;
        }
      } else {
        return this._origin.values().next().value;
      }
    }
    /**
    *
    */

  }, {
    key: "then",
    value: function then(validator) {
      var output = this.graph.state();
      this.input().output(output, validator);
      return new UnidocNFAValidationGraphBuilder(this.graph, output);
    }
    /**
    *
    */

  }, {
    key: "match",
    value: function match() {
      var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var match = this.graph.state();
      match.match = identifier;

      var _iterator3 = UnidocNFAValidationGraphBuilder_createForOfIteratorHelper(this._origin),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var node = _step3.value;
          node.epsilon(match);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }

      return this.graph;
    }
    /**
    *
    */

  }, {
    key: "many",
    value: function many(validator) {
      var output = this.graph.state();
      var input = this.input();
      input.output(output, validator);
      input.epsilon(output);
      output.epsilon(input);
      return new UnidocNFAValidationGraphBuilder(this.graph, output);
    }
    /**
    *
    */

  }, {
    key: "optional",
    value: function optional(validator) {
      var output = this.graph.state();
      var input = this.input();
      input.output(output, validator);
      input.epsilon(output);
      return new UnidocNFAValidationGraphBuilder(this.graph, output);
    }
    /**
    *
    */

  }, {
    key: "atLeast",
    value: function atLeast(validator, times) {
      var current = this.input();

      for (var index = 0; index < times; ++index) {
        var next = this.graph.state();
        current.output(next, validator);
        current = next;
      }

      return new UnidocNFAValidationGraphBuilder(this.graph, current);
    }
    /**
    *
    */

  }, {
    key: "upTo",
    value: function upTo(validator, times) {
      var output = this.graph.state();
      var current = this.input();

      for (var index = 0; index < times - 1; ++index) {
        var next = this.graph.state();
        current.output(next, validator);
        current.epsilon(output);
        current = next;
      }

      current.output(output, validator);
      current.epsilon(output);
      return new UnidocNFAValidationGraphBuilder(this.graph, output);
    }
    /**
    *
    */

  }, {
    key: "range",
    value: function range(validator) {
      var minimum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var maximum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.POSITIVE_INFINITY;
      var current = this;

      if (minimum > 0) {
        current = current.atLeast(validator, minimum);
      }

      if (maximum === Number.POSITIVE_INFINITY) {
        current = current.many(validator);
      } else {
        current = current.upTo(validator, maximum - minimum);
      }

      return current;
    }
    /**
    *
    */

  }, {
    key: "any",
    value: function any() {
      var output = this.graph.state();
      var input = this.input();

      for (var _len2 = arguments.length, validators = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        validators[_key2] = arguments[_key2];
      }

      for (var _i2 = 0, _validators = validators; _i2 < _validators.length; _i2++) {
        var validator = _validators[_i2];
        input.output(output, validator);
      }

      return new UnidocNFAValidationGraphBuilder(this.graph, output);
    }
  }]);

  return UnidocNFAValidationGraphBuilder;
}();

(function (UnidocNFAValidationGraphBuilder) {
  /**
  *
  */
  function create(graph) {
    return new UnidocNFAValidationGraphBuilder(graph);
  }

  UnidocNFAValidationGraphBuilder.create = create;
})(UnidocNFAValidationGraphBuilder || (UnidocNFAValidationGraphBuilder = {}));
;// CONCATENATED MODULE: ./sources/validator/nfa/UnidocNFAValidationGraph.ts
function UnidocNFAValidationGraph_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocNFAValidationGraph_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocNFAValidationGraph_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocNFAValidationGraph_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocNFAValidationGraph_defineProperties(Constructor, staticProps); return Constructor; }





var UnidocNFAValidationGraph = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocNFAValidationGraph() {
    UnidocNFAValidationGraph_classCallCheck(this, UnidocNFAValidationGraph);

    this._states = gl_tool_collection_.Pack.any(2);
    this.states = this._states.view();
    this._relationships = gl_tool_collection_.Pack.any(0);
    this.relationships = this._relationships.view();
    this._matchs = new gl_tool_collection_.NativeSet(new Set());
    this.start = new UnidocNFAValidationState(this);
    this.matchs = this._matchs.view();
  }
  /**
  *
  */


  UnidocNFAValidationGraph_createClass(UnidocNFAValidationGraph, [{
    key: "addMatch",
    value: function addMatch(state, match) {
      this._matchs.add(state);

      state.match = match;
    }
    /**
    *
    */

  }, {
    key: "deleteMatch",
    value: function deleteMatch(state) {
      this._matchs["delete"](state);

      state.match = undefined;
    }
    /**
    *
    */

  }, {
    key: "addState",
    value: function addState(state) {
      if (state.graph !== this) {
        throw new Error('Unable to add the given state to this graph as it was instantiated ' + 'for another graph. #addState is a method that must be called at the ' + 'right time, please do not use it if you do not know exactly what ' + 'you are doing.');
      }

      if (state.identifier === undefined) {
        var identifier = this._states.size;

        this._states.push(state);

        return identifier;
      } else {
        return state.identifier;
      }
    }
    /**
    *
    */

  }, {
    key: "addRelationship",
    value: function addRelationship(relationship) {
      if (relationship.from.graph !== this) {
        throw new Error('Unable to add the given relationship to this graph as it was ' + 'instantiated for another graph. #addRelationship is a method that ' + 'must be called at the right time, please do not use it if you do ' + 'not know exactly what you are doing.');
      }

      if (relationship.identifier === undefined) {
        var identifier = this._relationships.size;

        this._relationships.push(relationship);

        return identifier;
      } else {
        return relationship.identifier;
      }
    }
    /**
    *
    */

  }, {
    key: "state",
    value: function state() {
      return new UnidocNFAValidationState(this);
    }
    /**
    *
    */

  }, {
    key: "builder",
    value: function builder() {
      return new UnidocNFAValidationGraphBuilder(this);
    }
  }]);

  return UnidocNFAValidationGraph;
}();

(function (UnidocNFAValidationGraph) {
  /**
  *
  */
  UnidocNFAValidationGraph.MATCH = new UnidocNFAValidationGraph().builder().match();
})(UnidocNFAValidationGraph || (UnidocNFAValidationGraph = {}));
;// CONCATENATED MODULE: ./sources/validator/nfa/UnidocNFAValidationProcess.ts
function UnidocNFAValidationProcess_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocNFAValidationProcess_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocNFAValidationProcess_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocNFAValidationProcess_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocNFAValidationProcess_defineProperties(Constructor, staticProps); return Constructor; }




/**
*
*/

var UnidocNFAValidationProcess = /*#__PURE__*/function () {
  /**
  *
  */
  function UnidocNFAValidationProcess() {
    UnidocNFAValidationProcess_classCallCheck(this, UnidocNFAValidationProcess);

    this.process = UnidocKissValidator.validateEpsilon();
    this.head = UnidocNFAValidationTree.ALLOCATOR.allocate().asHead();
    this.relationship = 0;
  }
  /**
  *
  */


  UnidocNFAValidationProcess_createClass(UnidocNFAValidationProcess, [{
    key: "push",
    value: function push(event) {
      var previousHead = this.head;
      this.head = UnidocNFAValidationTree.ALLOCATOR.allocate().asHead();
      previousHead.asEvent(event);
      this.head.parent = previousHead;
      return this;
    }
    /**
    *
    */

  }, {
    key: "clear",
    value: function clear() {
      this.process = UnidocKissValidator.validateEpsilon();
      this.relationship = 0;
      var oldHead = this.head;
      this.head = UnidocNFAValidationTree.ALLOCATOR.allocate().asHead();
      UnidocNFAValidationTree.cut(oldHead);
    }
  }]);

  return UnidocNFAValidationProcess;
}();

(function (UnidocNFAValidationProcess) {
  /**
  *
  */
  function create() {
    return new UnidocNFAValidationProcess();
  }

  UnidocNFAValidationProcess.create = create;
  /**
  *
  */

  UnidocNFAValidationProcess.ALLOCATOR = gl_tool_collection_.Allocator.fromFactory(create);
})(UnidocNFAValidationProcess || (UnidocNFAValidationProcess = {}));
;// CONCATENATED MODULE: ./sources/validator/nfa/UnidocNFAValidationGraphResolver.ts
function UnidocNFAValidationGraphResolver_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { UnidocNFAValidationGraphResolver_typeof = function _typeof(obj) { return typeof obj; }; } else { UnidocNFAValidationGraphResolver_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return UnidocNFAValidationGraphResolver_typeof(obj); }

function UnidocNFAValidationGraphResolver_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = UnidocNFAValidationGraphResolver_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function UnidocNFAValidationGraphResolver_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return UnidocNFAValidationGraphResolver_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return UnidocNFAValidationGraphResolver_arrayLikeToArray(o, minLen); }

function UnidocNFAValidationGraphResolver_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function UnidocNFAValidationGraphResolver_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UnidocNFAValidationGraphResolver_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function UnidocNFAValidationGraphResolver_createClass(Constructor, protoProps, staticProps) { if (protoProps) UnidocNFAValidationGraphResolver_defineProperties(Constructor.prototype, protoProps); if (staticProps) UnidocNFAValidationGraphResolver_defineProperties(Constructor, staticProps); return Constructor; }

function UnidocNFAValidationGraphResolver_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) UnidocNFAValidationGraphResolver_setPrototypeOf(subClass, superClass); }

function UnidocNFAValidationGraphResolver_setPrototypeOf(o, p) { UnidocNFAValidationGraphResolver_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return UnidocNFAValidationGraphResolver_setPrototypeOf(o, p); }

function UnidocNFAValidationGraphResolver_createSuper(Derived) { var hasNativeReflectConstruct = UnidocNFAValidationGraphResolver_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = UnidocNFAValidationGraphResolver_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = UnidocNFAValidationGraphResolver_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return UnidocNFAValidationGraphResolver_possibleConstructorReturn(this, result); }; }

function UnidocNFAValidationGraphResolver_possibleConstructorReturn(self, call) { if (call && (UnidocNFAValidationGraphResolver_typeof(call) === "object" || typeof call === "function")) { return call; } return UnidocNFAValidationGraphResolver_assertThisInitialized(self); }

function UnidocNFAValidationGraphResolver_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function UnidocNFAValidationGraphResolver_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function UnidocNFAValidationGraphResolver_getPrototypeOf(o) { UnidocNFAValidationGraphResolver_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return UnidocNFAValidationGraphResolver_getPrototypeOf(o); }








 // const LOGS: string[] = []
// function log(value: string) {
//   LOGS.push(value)
//
//   if (LOGS.length > 100) {
//     throw new Error(LOGS.join('\r\n'))
//   }
// }

var UnidocNFAValidationGraphResolver = /*#__PURE__*/function (_SubscribableUnidocCo) {
  UnidocNFAValidationGraphResolver_inherits(UnidocNFAValidationGraphResolver, _SubscribableUnidocCo);

  var _super = UnidocNFAValidationGraphResolver_createSuper(UnidocNFAValidationGraphResolver);

  /**
  *
  */
  function UnidocNFAValidationGraphResolver() {
    var _this;

    UnidocNFAValidationGraphResolver_classCallCheck(this, UnidocNFAValidationGraphResolver);

    _this = _super.call(this);
    _this._graph = UnidocNFAValidationGraph.MATCH;
    _this._visited = new Map();
    _this._pendingStack = gl_tool_collection_.Pack.any(16);
    _this._nextPendingStack = gl_tool_collection_.Pack.any(16);
    _this._matchs = gl_tool_collection_.Pack.any(16);
    _this._failures = gl_tool_collection_.Pack.any(16);
    _this._tree = new UnidocNFAValidationTree();
    _this._current = undefined;
    _this._output = new UnidocValidationEventProducer();
    return _this;
  }
  /**
  *
  */


  UnidocNFAValidationGraphResolver_createClass(UnidocNFAValidationGraphResolver, [{
    key: "validate",
    value: function validate(graph) {
      this.reset();
      this._graph = graph;
      var start = graph.start;

      var origin = this._tree.fork().asState(start);

      this._visited.set(start.identifier, origin);

      var _iterator = UnidocNFAValidationGraphResolver_createForOfIteratorHelper(start.outputs),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var relationship = _step.value;
          var process = UnidocNFAValidationProcess.ALLOCATOR.allocate();
          process.head.parent = origin;
          process.process = relationship.validator();

          this._pendingStack.push(process);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
    *
    */

  }, {
    key: "isLeftBetterThanRight",
    value: function isLeftBetterThanRight(left, right) {
      var leftMessages = left.countMessages();
      var leftBatch = left.batch();
      var rightMessages = right.countMessages();
      var rightBatch = right.batch();

      if (leftBatch === rightBatch) {
        var size = UnidocValidationMessageType.ALL.length;

        for (var index = 0; index < size; ++index) {
          var leftScore = leftMessages[size - index - 1];
          var rightScore = rightMessages[size - index - 1];

          if (leftScore === rightScore) {
            continue;
          } else {
            return leftScore < rightScore;
          }
        }

        return true;
      } else {
        return leftBatch > rightBatch;
      }
    }
    /**
    * @see SubscribableUnidocConsumer.handleInitialization
    */

  }, {
    key: "handleInitialization",
    value: function handleInitialization() {
      //log('handle initialization')
      var pendingStack = this._pendingStack;
      var nextPendingStack = this._nextPendingStack;

      while (pendingStack.size > 0) {
        this.continueProcess(this._pendingStack.pop());
      }

      this._pendingStack = nextPendingStack;
      this._nextPendingStack = pendingStack;

      this._visited.clear();

      if (this._matchs.size > 0) {
        this.handleGraphMatch();
      } else if (this._pendingStack.size === 0) {
        this.handleGraphError();
      } else {
        this.dump();
      }
    }
    /**
    * @see SubscribableUnidocConsumer.handleProduction
    */

  }, {
    key: "handleProduction",
    value: function handleProduction(value) {
      //log('handle production of ' + value.toString())
      this.dumpFailures();
      var pendingStack = this._pendingStack;
      var nextPendingStack = this._nextPendingStack;
      this._current = value;

      while (pendingStack.size > 0) {
        this.continueProcess(this._pendingStack.pop());
      }

      this._pendingStack = nextPendingStack;
      this._nextPendingStack = pendingStack;

      this._visited.clear();

      if (this._matchs.size > 0) {
        this.handleGraphMatch();
      } else if (this._pendingStack.size === 0) {
        this.handleGraphError();
      } else {
        this.dump();
      }
    }
    /**
    *
    */

  }, {
    key: "continueProcess",
    value: function continueProcess(process) {
      //log('  continue process ' + this._graph.relationships.get(process.relationship).toString())
      var validator = process.process;
      var current = this._current;
      var output = current ? validator.next(current) : validator.next();

      while (!output.done) {
        //log('    handling ' + output.value.toString())
        switch (output.value.type) {
          case UnidocKissValidatorOutputType.CURRENT:
            if (current) {
              output = validator.next(current);
              break;
            }

          case UnidocKissValidatorOutputType.NEXT:
            this._nextPendingStack.push(process);

            return;

          case UnidocKissValidatorOutputType.EMIT:
            process.push(output.value.event);

            if (output.value.event.isMessage() && output.value.event.message.isFailure()) {
              this._failures.push(process);

              return;
            } else {
              output = validator.next();
            }

            break;

          case UnidocKissValidatorOutputType.MATCH:
            this.handleProcessMatch(process);
            output = validator.next(undefined);
            break;

          case UnidocKissValidatorOutputType.END:
            throw new Error('Unable to continue a validation process because it\'s related ' + 'KISS validator yielded an end signal. An end signal must only ' + 'be returned as it will explicitely stop the occuring validation ' + 'process.');

          default:
            throw new Error('Unable to handle kiss validator output of type ' + UnidocKissValidatorOutputType.toDebugString(output.value.type) + ' because no procedure was defined for that.');
        }
      }

      if (output.value.isMatch()) {
        this.handleProcessMatch(process);
      } else if (output.value.isEnd()) {
        this._failures.push(process);
      } else {
        throw new Error('Unable to continue a validation process because it\'s related ' + 'KISS validator ended without returning a match nor an end signal.');
      }
    }
    /**
    * @see SubscribableUnidocConsumer.handleCompletion
    */

  }, {
    key: "handleCompletion",
    value: function handleCompletion() {
      //log('handle completion')
      this.dumpFailures();
      var pendingStack = this._pendingStack;
      this._current = undefined;

      while (pendingStack.size > 0) {
        this.terminateProcess(this._pendingStack.pop());
      }

      if (this._matchs.size > 0) {
        this.dumpFailures();
        this.handleGraphMatch();
      } else {
        this.handleGraphError();
      }
    }
    /**
    *
    */

  }, {
    key: "dumpFailures",
    value: function dumpFailures() {
      //log('  dumping failures')
      var failures = this._failures; //log('   ' + this._tree.children.size)

      while (failures.size > 0) {
        //log('    dumping process ' + this._graph.relationships.get(failures.last.relationship).toString())
        UnidocNFAValidationProcess.ALLOCATOR.free(failures.pop());
      } //log('   ' + this._tree.children.size)

    }
    /**
    *
    */

  }, {
    key: "handleGraphMatch",
    value: function handleGraphMatch() {
      //log('handling graph match')
      var bestMatch = this._matchs.pop();

      while (this._matchs.size > 0) {
        var challenger = this._matchs.pop();

        if (this.isLeftBetterThanRight(challenger.head, bestMatch.head)) {
          UnidocNFAValidationProcess.ALLOCATOR.free(bestMatch);
          bestMatch = challenger;
        } else {
          UnidocNFAValidationProcess.ALLOCATOR.free(challenger);
        }
      } //log('  ' + bestMatch.head.toString())
      // for (const element of bestMatch.head.up()) {
      //   //log('  ' + element.toString())
      // }


      this.dump();

      this._output.complete();

      bestMatch.head.parent = null;
      UnidocNFAValidationProcess.ALLOCATOR.free(bestMatch);
    }
    /**
    *
    */

  }, {
    key: "handleGraphError",
    value: function handleGraphError() {
      //log('handling graph error')
      var failures = this._failures;

      if (failures.size > 0) {
        var bestMatch = failures.pop();

        while (failures.size > 0) {
          var challenger = failures.pop();

          if (this.isLeftBetterThanRight(challenger.head, bestMatch.head)) {
            UnidocNFAValidationProcess.ALLOCATOR.free(bestMatch);
            bestMatch = challenger;
          } else {
            UnidocNFAValidationProcess.ALLOCATOR.free(challenger);
          }
        }

        this.dump();

        this._output.complete();

        bestMatch.head.parent = null;
        UnidocNFAValidationProcess.ALLOCATOR.free(bestMatch);
      } else {
        this.dump();

        this._output.complete();
      }
    }
    /**
    *
    */

  }, {
    key: "dump",
    value: function dump() {
      var tree = this._tree;

      while (tree.children.size === 1) {
        var next = tree.children.first;

        if (next.isHead()) {
          return;
        } else if (next.isEvent()) {
          this._output.produce(next.event);
        }

        next["delete"]();
        UnidocNFAValidationTree.ALLOCATOR.free(next);
      }
    }
    /**
    *
    */

  }, {
    key: "terminateProcess",
    value: function terminateProcess(process) {
      //log('  terminating process ' + this._graph.relationships.get(process.relationship).toString())
      var validator = process.process;
      var output = validator.next();

      while (!output.done) {
        //log('    handling ' + output.value.toString())
        switch (output.value.type) {
          case UnidocKissValidatorOutputType.CURRENT:
            output = validator.next(undefined);
            break;

          case UnidocKissValidatorOutputType.NEXT:
            throw new Error('Unable to terminate a validation process because it\'s related ' + 'KISS validator requested the next available event after the ' + 'reception of the end of document.');

          case UnidocKissValidatorOutputType.EMIT:
            process.push(output.value.event);

            if (output.value.event.isMessage() && output.value.event.message.isFailure()) {
              this._failures.push(process);

              return;
            } else {
              output = validator.next();
            }

            break;

          case UnidocKissValidatorOutputType.MATCH:
            this.handleProcessMatch(process);
            output = validator.next();
            break;

          case UnidocKissValidatorOutputType.END:
            throw new Error('Unable to terminate a validation process because it\'s related ' + 'KISS validator yielded an end signal. An end signal must only ' + 'be returned as it will explicitely stop the occuring validation ' + 'process.');

          default:
            throw new Error('Unable to handle kiss validator output of type ' + UnidocKissValidatorOutputType.toDebugString(output.value.type) + ' because no procedure was defined for that.');
        }
      }

      if (output.value.isMatch()) {
        this.handleProcessMatch(process);
      } else if (output.value.isEnd()) {
        this._failures.push(process);
      } else {
        throw new Error('Unable to terminate a validation process because it\'s related ' + 'KISS validator ended without returning a match nor an end signal.');
      }
    }
    /**
    * @see SubscribableUnidocConsumer.handleFailure
    */

  }, {
    key: "handleFailure",
    value: function handleFailure(error) {
      this._output.fail(error);
    }
    /**
    *
    */

  }, {
    key: "handleProcessMatch",
    value: function handleProcessMatch(process) {
      //log('    handle matching of process ' + this._graph.relationships.get(process.relationship).toString())
      var state = this._graph.relationships.get(process.relationship).to;

      if (state.isMatch()) {
        this._matchs.push(process);

        return;
      }

      var origin = this._visited.get(state.identifier);

      if (origin) {
        if (!process.head.isUpward(origin)) {
          //log('      merging ' + this._graph.relationships.get(process.relationship).toString())
          var originParent = origin.parent;
          var processParent = process.head.parent;
          process.head.parent = null;

          if (this.isLeftBetterThanRight(processParent, originParent)) {
            origin.parent = processParent;
            UnidocNFAValidationTree.cut(originParent);
          }
        } //log('      dumping ' + this._graph.relationships.get(process.relationship).toString())


        UnidocNFAValidationProcess.ALLOCATOR.free(process);
      } else {
        origin = process.head.parent.fork().asState(state);

        this._visited.set(state.identifier, origin);

        for (var index = 1; index < state.outputs.size; ++index) {
          var _relationship = state.outputs.get(index);

          var _process = UnidocNFAValidationProcess.ALLOCATOR.allocate();

          _process.head.parent = origin;
          _process.relationship = _relationship.identifier;
          _process.process = _relationship.validator();

          this._pendingStack.push(_process); //log('      forking ' + relationship.toString())

        }

        var relationship = state.outputs.get(0);
        process.head.parent = origin;
        process.relationship = relationship.identifier;
        process.process = relationship.validator();

        this._pendingStack.push(process); //log('      forking ' + relationship.toString())

      }
    }
    /**
    *
    */

  }, {
    key: "reset",
    value: function reset() {
      this._matchs.clear();

      this._visited.clear();

      this._pendingStack.clear();

      UnidocNFAValidationTree.trash(this._tree);
      this._current = undefined;
    }
    /**
    * @see UnidocProducer.addEventListener
    */

  }, {
    key: "addEventListener",
    value: function addEventListener(event, listener) {
      this._output.addEventListener(event, listener);
    }
    /**
    * @see UnidocProducer.removeEventListener
    */

  }, {
    key: "removeEventListener",
    value: function removeEventListener(event, listener) {
      this._output.removeEventListener(event, listener);
    }
    /**
    * @see UnidocProducer.removeAllEventListener
    */

  }, {
    key: "removeAllEventListener",
    value: function removeAllEventListener() {
      var _this$_output;

      (_this$_output = this._output).removeAllEventListener.apply(_this$_output, arguments);
    }
  }]);

  return UnidocNFAValidationGraphResolver;
}(SubscribableUnidocConsumer);
;// CONCATENATED MODULE: ./sources/validator/UnidocValidator.ts


/**
*
*/

var UnidocValidator;

(function (UnidocValidator) {
  /**
  *
  */
  function kiss(validator) {
    return new UnidocKissValidatorResolver(validator);
  }

  UnidocValidator.kiss = kiss;
  /**
  *
  */

  function graph(graph) {
    var resolver = new UnidocNFAValidationGraphResolver();
    resolver.validate(graph);
    return resolver;
  }

  UnidocValidator.graph = graph;
})(UnidocValidator || (UnidocValidator = {}));
// EXTERNAL MODULE: external "rxjs"
var external_rxjs_ = __webpack_require__(435);
;// CONCATENATED MODULE: ./sources/consumer/RxJSUnidocOutput.ts
function RxJSUnidocOutput_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { RxJSUnidocOutput_typeof = function _typeof(obj) { return typeof obj; }; } else { RxJSUnidocOutput_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return RxJSUnidocOutput_typeof(obj); }

function RxJSUnidocOutput_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = RxJSUnidocOutput_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function RxJSUnidocOutput_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return RxJSUnidocOutput_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return RxJSUnidocOutput_arrayLikeToArray(o, minLen); }

function RxJSUnidocOutput_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function RxJSUnidocOutput_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function RxJSUnidocOutput_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function RxJSUnidocOutput_createClass(Constructor, protoProps, staticProps) { if (protoProps) RxJSUnidocOutput_defineProperties(Constructor.prototype, protoProps); if (staticProps) RxJSUnidocOutput_defineProperties(Constructor, staticProps); return Constructor; }

function RxJSUnidocOutput_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) RxJSUnidocOutput_setPrototypeOf(subClass, superClass); }

function RxJSUnidocOutput_setPrototypeOf(o, p) { RxJSUnidocOutput_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return RxJSUnidocOutput_setPrototypeOf(o, p); }

function RxJSUnidocOutput_createSuper(Derived) { var hasNativeReflectConstruct = RxJSUnidocOutput_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = RxJSUnidocOutput_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = RxJSUnidocOutput_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return RxJSUnidocOutput_possibleConstructorReturn(this, result); }; }

function RxJSUnidocOutput_possibleConstructorReturn(self, call) { if (call && (RxJSUnidocOutput_typeof(call) === "object" || typeof call === "function")) { return call; } return RxJSUnidocOutput_assertThisInitialized(self); }

function RxJSUnidocOutput_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function RxJSUnidocOutput_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function RxJSUnidocOutput_getPrototypeOf(o) { RxJSUnidocOutput_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return RxJSUnidocOutput_getPrototypeOf(o); }



var RxJSUnidocOutput = /*#__PURE__*/function (_SubscribableUnidocCo) {
  RxJSUnidocOutput_inherits(RxJSUnidocOutput, _SubscribableUnidocCo);

  var _super = RxJSUnidocOutput_createSuper(RxJSUnidocOutput);

  function RxJSUnidocOutput() {
    var _this;

    RxJSUnidocOutput_classCallCheck(this, RxJSUnidocOutput);

    _this = _super.call(this);
    _this.handleRxSubscription = _this.handleRxSubscription.bind(RxJSUnidocOutput_assertThisInitialized(_this));
    _this._subscribers = new Set();
    _this.observable = new external_rxjs_.Observable(_this.handleRxSubscription);
    return _this;
  }

  RxJSUnidocOutput_createClass(RxJSUnidocOutput, [{
    key: "handleRxSubscription",
    value: function handleRxSubscription(subscriber) {
      this._subscribers.add(subscriber);
    }
  }, {
    key: "handleInitialization",
    value: function handleInitialization() {}
  }, {
    key: "handleProduction",
    value: function handleProduction(value) {
      var _iterator = RxJSUnidocOutput_createForOfIteratorHelper(this._subscribers),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var subscriber = _step.value;
          subscriber.next(value);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "handleCompletion",
    value: function handleCompletion() {
      var _iterator2 = RxJSUnidocOutput_createForOfIteratorHelper(this._subscribers),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var subscriber = _step2.value;
          subscriber.complete();
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
  }, {
    key: "handleFailure",
    value: function handleFailure(error) {
      var _iterator3 = RxJSUnidocOutput_createForOfIteratorHelper(this._subscribers),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var subscriber = _step3.value;
          subscriber.error(error);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }
  }]);

  return RxJSUnidocOutput;
}(SubscribableUnidocConsumer);
;// CONCATENATED MODULE: ./sources/validator/validate.ts


/**
* Transform a stream of events to a stream of validation.
*
* @return An operator that transform a stream of events to a stream of validation.
*/

function validate(validator) {
  return function (input) {
    validator.subscribe(new RxJSUnidocInput(input));
    var rxOutput = new RxJSUnidocOutput();
    rxOutput.subscribe(validator);
    return rxOutput.observable;
  };
}
;// CONCATENATED MODULE: ./sources/validator/index.ts



;// CONCATENATED MODULE: ./sources/fullyParse.ts




function fullyParse(input) {
  var lexer = new UnidocLexer();
  var parser = new UnidocParser();
  var importer = new UnidocImportationFilter();
  lexer.subscribe(input);
  parser.subscribe(lexer);
  importer.subscribe(parser);
  importer.importations.addEventListener(UnidocProducerEvent.PRODUCTION, input["import"].bind(input));
  importer.importations.addEventListener(UnidocProducerEvent.FAILURE, input.fail.bind(input));
  return importer;
}
;// CONCATENATED MODULE: ./sources/parse.ts

/**
* Transform a producer of tokens into a producer of document events.
*
* @param input - A producer of tokens.
*
* @return A producer of document events.
*/

function parse(input) {
  var parser = new UnidocParser();
  parser.subscribe(input);
  return parser;
}
;// CONCATENATED MODULE: ./sources/tokenize.ts

/**
* Transform a producer of symbols into a producer of tokens.
*
* @param input - A producer of symbols.
*
* @return A producer of tokens.
*/

function tokenize(input) {
  var lexer = new UnidocLexer();
  lexer.subscribe(input);
  return lexer;
}
;// CONCATENATED MODULE: ./sources/index.ts





















/***/ }),

/***/ 666:
/***/ ((module) => {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : undefined
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}


/***/ }),

/***/ 332:
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__332__;

/***/ }),

/***/ 435:
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__435__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => module['default'] :
/******/ 				() => module;
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// module exports must be returned from runtime so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(211);
/******/ })()
;
});

/***/ }),

/***/ "./node_modules/@cedric-demongivert/unidoc/node_modules/@cedric-demongivert/gl-tool-collection/index.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@cedric-demongivert/unidoc/node_modules/@cedric-demongivert/gl-tool-collection/index.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else {}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1);


/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./src/Collection.ts
var Collection;
(function (Collection) {
    /**
    * Return true if the given collection contains a non-finite number of element.
    *
    * @param collection - A collection to assert.
    *
    * @return True if the given collection contains a non-finite number of element.
    */
    function isInfinite(collection) {
        return collection.size !== Number.POSITIVE_INFINITY;
    }
    Collection.isInfinite = isInfinite;
    /**
    * Return true if the given collection contains a finite number of element.
    *
    * @param collection - A collection to assert.
    *
    * @return True if the given collection contains a finite number of element.
    */
    function isFinite(collection) {
        return collection.size !== Number.POSITIVE_INFINITY;
    }
    Collection.isFinite = isFinite;
    /**
    * Return a shallow copy of the given collection.
    *
    * A shallow-copy *b* of a collection *a* is an instance that follow both
    * properties :
    *  - b !== a
    *  - b.equals(a)
    *
    * @param toCopy - A collection to copy.
    *
    * @return A shallow copy of the given collection.
    */
    function copy(toCopy) {
        return toCopy.clone();
    }
    Collection.copy = copy;
})(Collection || (Collection = {}));

// CONCATENATED MODULE: ./src/SequenceIterator.ts
class SequenceIterator {
    /**
    * Instantiate a new random access iterator instance.
    */
    constructor() {
        this.sequence = null;
        this.index = 0;
    }
    /**
    * @see Iterator#collection
    */
    collection() {
        return this.sequence;
    }
    /**
    * @see ForwardIterator.hasNext
    */
    hasNext() {
        return this.sequence && (this.sequence.lastIndex === undefined ||
            this.index < this.sequence.lastIndex);
    }
    /**
    * @see BidirectionalIterator.go
    */
    go(index) {
        this.index = index;
    }
    /**
    * @see ForwardIterator.next
    */
    next() {
        this.index += 1;
    }
    /**
    * @see ForwardIterator.forward
    */
    forward(count) {
        this.index += count;
    }
    /**
    * @see ForwardIterator.end
    */
    end() {
        if (this.sequence && this.sequence.lastIndex !== undefined) {
            this.index = this.sequence.lastIndex;
        }
        else {
            throw new Error('Trying to access the first element of an infinite or ' +
                'semi-finite sequence that does not have an ending element.');
        }
    }
    /**
    * @see BackwardIterator.hasPrevious
    */
    hasPrevious() {
        return this.sequence && (this.sequence.firstIndex === undefined ||
            this.index > this.sequence.firstIndex);
    }
    /**
    * @see BackwardIterator.previous
    */
    previous() {
        this.index -= 1;
    }
    /**
    * @see BackwardIterator.backward
    */
    backward(count) {
        this.index -= count;
    }
    /**
    * @see BackwardIterator.start
    */
    start() {
        if (this.sequence && this.sequence.firstIndex !== undefined) {
            this.index = this.sequence.firstIndex;
        }
        else {
            throw new Error('Trying to access the first element of an infinite or ' +
                'semi-finite sequence that does not have a starting element.');
        }
    }
    /**
    * @see Iterator.get
    */
    get() {
        return this.sequence.get(this.index);
    }
    /**
    * @see Iterator.move
    */
    move(iterator) {
        if (iterator instanceof SequenceIterator) {
            this.sequence = iterator.sequence;
            this.index = iterator.index;
        }
        else {
            throw new Error('Trying to move to a location described by an unsupported type of ' +
                'iterator');
        }
    }
    /**
    * Shallow-copy the given instance.
    *
    * @param toCopy - An instance to shallow copy.
    */
    copy(toCopy) {
        this.sequence = toCopy.sequence;
        this.index = toCopy.index;
    }
    /**
    * @see Iterator.clone
    */
    clone() {
        const copy = new SequenceIterator();
        copy.copy(this);
        return copy;
    }
    /**
    * @see Iterator.equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        if (other instanceof SequenceIterator) {
            return other.sequence === this.sequence &&
                other.index === this.index;
        }
        return false;
    }
}
(function (SequenceIterator) {
    /**
    * Return a shallow copy of the given iterator.
    *
    * A shallow-copy *b* of an iterator *a* is an instance that follow both
    * properties :
    *  - b !== a
    *  - b.equals(a)
    *
    * @param toCopy - An iterator to copy.
    *
    * @return A shallow copy of the given iterator.
    */
    function copy(toCopy) {
        return toCopy.clone();
    }
    SequenceIterator.copy = copy;
})(SequenceIterator || (SequenceIterator = {}));

// CONCATENATED MODULE: ./src/sequence/EmptySequence.ts

class EmptySequence_EmptySequence {
    /**
    * @see Sequence.size
    */
    get size() {
        return 0;
    }
    /**
    * @see Sequence.get
    */
    get(index) {
        return undefined;
    }
    /**
    * @see Sequence.last
    */
    get last() {
        return undefined;
    }
    /**
    * @see Sequence.lastIndex
    */
    get lastIndex() {
        return 0;
    }
    /**
    * @see Sequence.first
    */
    get first() {
        return undefined;
    }
    /**
    * @see Sequence.firstIndex
    */
    get firstIndex() {
        return 0;
    }
    /**
    * @see Sequence.indexOf
    */
    indexOf(element) {
        return -1;
    }
    /**
    * @see Sequence.indexOfInSubsequence
    */
    indexOfInSubsequence(element, offset, size) {
        return -1;
    }
    /**
    * @see Sequence.has
    */
    has(element) {
        return false;
    }
    /**
    * @see Sequence.hasInSubsequence
    */
    hasInSubsequence(element, offset, size) {
        return false;
    }
    /**
    * @see Sequence.clone
    */
    clone() {
        return this;
    }
    /**
    * @see Sequence.view
    */
    view() {
        return this;
    }
    /**
    * @see Sequence.iterator
    */
    iterator() {
        const iterator = new SequenceIterator();
        iterator.sequence = this;
        return iterator;
    }
    /**
    * @see Sequence[Symbol.iterator]
    */
    *[Symbol.iterator]() {
    }
    /**
    * @see Sequence.equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        return other instanceof EmptySequence_EmptySequence;
    }
}
(function (EmptySequence) {
    EmptySequence.INSTANCE = new EmptySequence();
    function clone(sequence) {
        return sequence;
    }
    EmptySequence.clone = clone;
    function of() {
        return EmptySequence.INSTANCE;
    }
    EmptySequence.of = of;
})(EmptySequence_EmptySequence || (EmptySequence_EmptySequence = {}));

// CONCATENATED MODULE: ./src/Sequence.ts

var Sequence_Sequence;
(function (Sequence) {
    /**
    * A sequence marker to export in a namespace.
    */
    Sequence.SEQUENCE = Symbol();
    /**
    * Return true if the given collection is a sequence.
    *
    * @param collection - A collection to assert.
    *
    * @return True if the given collection is a sequence.
    */
    function isSequence(collection) {
        return Sequence.SEQUENCE in Object.getPrototypeOf(collection).constructor;
    }
    Sequence.isSequence = isSequence;
    /**
    * @return An instance of sequence that represent a static empty sequence.
    */
    function empty() {
        return EmptySequence_EmptySequence.of();
    }
    Sequence.empty = empty;
})(Sequence_Sequence || (Sequence_Sequence = {}));

// CONCATENATED MODULE: ./src/algorithm/bissect.ts
/**
* Default comparator used in order to bissect a collection.
*
* @see Comparator
*/
function defaultComparator(left, right) {
    return left < right ? -1 : (left > right ? 1 : 0);
}
/**
* Binary search an element in an ordered sequence and returns its location.
*
* If the given element does not exists into the given sequence this method
* will return its insertion index in the form of a negative number :
* (-insertionIndex -1)
*
* @param sequence - A sequence to search.
* @param value - A value to search.
* @param [comparator = defaultComparator] - A comparison function to use.
* @oaran [offset = 0] - Number of element to skip from the start of the sequence.
* @oaran [size = sequence.size - offset] - Number of element to search.
*/
function bissect(sequence, value, comparator = defaultComparator, offset = 0, size = sequence.size - offset) {
    if (size > 0) {
        let left = offset;
        let right = offset + size;
        while (left !== right) {
            const cursor = left + ((right - left) >>> 1);
            const comparison = comparator(value, sequence.get(cursor));
            if (comparison === 0) {
                return cursor;
            }
            else if (comparison > 0) {
                left = cursor + 1;
            }
            else {
                right = cursor;
            }
        }
        return -(left + 1);
    }
    else {
        return -1;
    }
}
(function (bissect) {
    /**
    * @see bissect
    *
    * A bissection that always return the FIRST element that match in the parent
    * sequence.
    *
    * @param sequence - A sequence to search.
    * @param value - A value to search.
    * @param [comparator = defaultComparator] - A comparison function to use.
    * @oaran [offset = 0] - Number of element to skip from the start of the sequence.
    * @oaran [size = sequence.size - offset] - Number of element to search.
    */
    function first(sequence, value, comparator = defaultComparator, offset = 0, size = sequence.size - offset) {
        let result = bissect(sequence, value, comparator, offset, size);
        if (result < 0)
            return result;
        while (result > 0 && comparator(value, sequence.get(result - 1)) === 0) {
            result -= 1;
        }
        return result;
    }
    bissect.first = first;
    /**
    * @see bissect
    *
    * A bissection that always return the LAST element that match in the parent
    * sequence.
    *
    * @param sequence - A sequence to search.
    * @param value - A value to search.
    * @param [comparator = defaultComparator] - A comparison function to use.
    * @oaran [offset = 0] - Number of element to skip from the start of the sequence.
    * @oaran [size = sequence.size - offset] - Number of element to search.
    */
    function last(sequence, value, comparator = defaultComparator, offset = 0, size = sequence.size - offset) {
        let result = bissect(sequence, value, comparator, offset, size);
        if (result < 0)
            return result;
        const end = sequence.size - 1;
        while (result < end && comparator(value, sequence.get(result + 1)) === 0) {
            result += 1;
        }
        return result;
    }
    bissect.last = last;
    /**
    * @see bissect
    *
    * A bissection that use an invertion of the given comparator.
    *
    * @param sequence - A sequence to search.
    * @param value - A value to search.
    * @param [comparator = defaultComparator] - A comparison function to use.
    * @oaran [offset = 0] - Number of element to skip from the start of the sequence.
    * @oaran [size = sequence.size - offset] - Number of element to search.
    */
    function invert(sequence, value, comparator = defaultComparator, offset = 0, size = sequence.size - offset) {
        if (size > 0) {
            let left = offset;
            let right = offset + size;
            while (left !== right) {
                const cursor = left + ((right - left) >>> 1);
                const comparison = -comparator(value, sequence.get(cursor));
                if (comparison === 0) {
                    return cursor;
                }
                else if (comparison > 0) {
                    left = cursor + 1;
                }
                else {
                    right = cursor;
                }
            }
            return -(left + 1);
        }
        else {
            return -1;
        }
    }
    bissect.invert = invert;
})(bissect || (bissect = {}));

// CONCATENATED MODULE: ./src/algorithm/equals.ts
function equals(left, right) {
    if (left === right)
        return true;
    if (left.equals)
        return left.equals(right);
    return false;
}

// CONCATENATED MODULE: ./src/algorithm/quicksort.ts
/**
* Default comparator used in order to quicksort a collection.
*
* @see Comparator
*/
function quicksort_defaultComparator(left, right) {
    return left < right ? -1 : (left > right ? 1 : 0);
}
/**
* Quicksort the given sequence.
*
* @param sequence - A sequence to quicksort.
* @param [comparator = defaultComparator] - A definition of the order to use.
* @param [offset = 0] - Number of element to skip from the begining of the sequence.
* @param [size = sequence.size - offset] - Number of element to sort.
*/
function quicksort(sequence, comparator = quicksort_defaultComparator, offset = 0, size = sequence.size - offset) { rquicksort(sequence, comparator, offset, offset + size - 1); }
function rquicksort(sequence, comparator, left, right) {
    if (left < right) {
        const pivot = partition(sequence, comparator, left, right);
        rquicksort(sequence, comparator, left, pivot);
        rquicksort(sequence, comparator, pivot + 1, right);
    }
}
function partition(sequence, comparator, left, right) {
    const pivot = sequence.get((left + right) >>> 1);
    let lower = left - 1;
    let upper = right + 1;
    do {
        do {
            lower += 1;
        } while (comparator(sequence.get(lower), pivot) < 0);
        do {
            upper -= 1;
        } while (comparator(sequence.get(upper), pivot) > 0);
        if (lower >= upper) {
            return upper;
        }
        sequence.swap(lower, upper);
    } while (true);
}

// CONCATENATED MODULE: ./src/algorithm/index.ts




// CONCATENATED MODULE: ./src/native/UnsignedIntegerBuffer.ts
var UnsignedIntegerBuffer;
(function (UnsignedIntegerBuffer) {
    /**
    * Instantiate a unsigned byte buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to instantiate.
    *
    * @return A unsigned byte buffer of the given capacity.
    */
    function uint8(capacity) {
        return new Uint8Array(capacity);
    }
    UnsignedIntegerBuffer.uint8 = uint8;
    /**
    * Instantiate a unsigned short buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to instantiate.
    *
    * @return A unsigned short buffer of the given capacity.
    */
    function uint16(capacity) {
        return new Uint16Array(capacity);
    }
    UnsignedIntegerBuffer.uint16 = uint16;
    /**
    * Instantiate a unsigned integer buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to instantiate.
    *
    * @return A unsigned integer buffer of the given capacity.
    */
    function uint32(capacity) {
        return new Uint32Array(capacity);
    }
    UnsignedIntegerBuffer.uint32 = uint32;
    /**
    * Instantiate an unsigned integer buffer that can store values up to the given
    * maximum (included).
    *
    * @param maximum - Maximum value that can be stored into the resulting buffer (included).
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return An unsigned integer buffer that can store values up to the given maximum (included).
    */
    function upTo(maximum, capacity) {
        if (maximum <= 0xff) {
            return new Uint8Array(capacity);
        }
        else if (maximum <= 0xffff) {
            return new Uint16Array(capacity);
        }
        else {
            return new Uint32Array(capacity);
        }
    }
    UnsignedIntegerBuffer.upTo = upTo;
})(UnsignedIntegerBuffer || (UnsignedIntegerBuffer = {}));

// CONCATENATED MODULE: ./src/native/IntegerBuffer.ts
var IntegerBuffer;
(function (IntegerBuffer) {
    /**
    * Instantiate a byte buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to instantiate.
    *
    * @return A byte buffer of the given capacity.
    */
    function int8(capacity) {
        return new Int8Array(capacity);
    }
    IntegerBuffer.int8 = int8;
    /**
    * Instantiate a short buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to instantiate.
    *
    * @return A short buffer of the given capacity.
    */
    function int16(capacity) {
        return new Int16Array(capacity);
    }
    IntegerBuffer.int16 = int16;
    /**
    * Instantiate an integer buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to instantiate.
    *
    * @return An integer buffer of the given capacity.
    */
    function int32(capacity) {
        return new Int32Array(capacity);
    }
    IntegerBuffer.int32 = int32;
    /**
    * Instantiate an integer buffer that can store values up to the given maximum (included).
    *
    * @param maximum - Maximum value that can be stored into the resulting buffer (included).
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return An integer buffer that can store values up to the given maximum (included).
    */
    function upTo(maximum, capacity) {
        if (maximum <= 0x7f) {
            return new Int8Array(capacity);
        }
        else if (maximum <= 0x7fff) {
            return new Int16Array(capacity);
        }
        else {
            return new Int32Array(capacity);
        }
    }
    IntegerBuffer.upTo = upTo;
})(IntegerBuffer || (IntegerBuffer = {}));

// CONCATENATED MODULE: ./src/native/FloatBuffer.ts
var FloatBuffer;
(function (FloatBuffer) {
    /**
    * Instantiate a float buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to instantiate.
    *
    * @return A float buffer of the given capacity.
    */
    function float32(capacity) {
        return new Float32Array(capacity);
    }
    FloatBuffer.float32 = float32;
    /**
    * Instantiate a double buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to instantiate.
    *
    * @return A double buffer of the given capacity.
    */
    function float64(capacity) {
        return new Float64Array(capacity);
    }
    FloatBuffer.float64 = float64;
})(FloatBuffer || (FloatBuffer = {}));

// CONCATENATED MODULE: ./src/native/Buffer.ts



var Buffer_Buffer;
(function (Buffer) {
    Buffer.float32 = FloatBuffer.float32;
    Buffer.float64 = FloatBuffer.float64;
    Buffer.uint8 = UnsignedIntegerBuffer.uint8;
    Buffer.uint16 = UnsignedIntegerBuffer.uint16;
    Buffer.uint32 = UnsignedIntegerBuffer.uint32;
    Buffer.unsignedUpTo = UnsignedIntegerBuffer.upTo;
    Buffer.int8 = IntegerBuffer.int8;
    Buffer.int16 = IntegerBuffer.int16;
    Buffer.int32 = IntegerBuffer.int32;
    Buffer.signedUpTo = IntegerBuffer.upTo;
    /**
    * Reallocate the given buffer.
    *
    * @param buffer - A buffer to reallocate.
    * @param capacity - The new capacity of the buffer.
    *
    * @return A reallocation of the given buffer.
    */
    function reallocate(buffer, capacity) {
        const result = new buffer.constructor(capacity);
        return result;
    }
    Buffer.reallocate = reallocate;
})(Buffer_Buffer || (Buffer_Buffer = {}));

// CONCATENATED MODULE: ./src/view/View.ts
/**
* A readonly view over a given collection of values.
*/
class View {
    /**
    * Create a new view over an existing collection.
    *
    * @param collection - A collection to wrap.
    */
    constructor(collection) {
        this._collection = collection;
    }
    /**
    * @see Collection.size
    */
    get size() {
        return this._collection.size;
    }
    /**
    * @see Collection.has
    */
    has(element) {
        return this._collection.has(element);
    }
    /**
    * @see Collection.iterator
    */
    iterator() {
        return this._collection.iterator();
    }
    /**
    * @see Collection.clone
    */
    clone() {
        return new View(this._collection);
    }
    /**
    * @see Collection.view
    */
    view() {
        return this;
    }
    /**
    * @see Collection.equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        if (other instanceof View) {
            return this._collection.equals(other._collection);
        }
        return false;
    }
    /**
    * @see Collection.iterator
    */
    *[Symbol.iterator]() {
        yield* this._collection;
    }
}
(function (View) {
    /**
    * Wrap an existing collection.
    *
    * @param collection - A collection to wrap in a view.
    *
    * @return A view over the given collection.
    */
    function wrap(collection) {
        if (collection instanceof View) {
            return collection;
        }
        else {
            return new View(collection);
        }
    }
    View.wrap = wrap;
})(View || (View = {}));

// CONCATENATED MODULE: ./src/view/SequenceView.ts

/**
* A readonly view over a given sequence of values.
*/
class SequenceView_SequenceView extends View {
    /**
    * Create a new view over an existing collection.
    *
    * @param collection - A collection to wrap.
    */
    constructor(collection) {
        super(collection);
        this._sequence = collection;
    }
    /**
    * @see Sequence.get
    */
    get(index) {
        return this._sequence.get(index);
    }
    /**
    * @see Sequence.firstIndex
    */
    get firstIndex() {
        return this._sequence.firstIndex;
    }
    /**
    * @see Sequence.first
    */
    get first() {
        return this._sequence.first;
    }
    /**
    * @see Sequence.lastIndex
    */
    get lastIndex() {
        return this._sequence.lastIndex;
    }
    /**
    * @see Sequence.last
    */
    get last() {
        return this._sequence.last;
    }
    /**
    * @see Collection.clone
    */
    clone() {
        return SequenceView_SequenceView.wrap(this._sequence);
    }
    /**
    * @see Sequence.indexOf
    */
    indexOf(element) {
        return this._sequence.indexOf(element);
    }
    /**
    * @see Sequence.hasInSubsequence
    */
    hasInSubsequence(element, offset, size) {
        return this._sequence.hasInSubsequence(element, offset, size);
    }
    /**
    * @see Sequence.indexOfInSubsequence
    */
    indexOfInSubsequence(element, offset, size) {
        return this._sequence.indexOfInSubsequence(element, offset, size);
    }
    /**
    * @see Sequence.iterator
    */
    *[Symbol.iterator]() {
        yield* this._sequence;
    }
}
(function (SequenceView) {
    /**
    * Wrap an existing collection.
    *
    * @param collection - A collection to wrap in a view.
    *
    * @return A view over the given collection.
    */
    function wrap(collection) {
        if (collection instanceof SequenceView) {
            return collection;
        }
        else {
            return new SequenceView(collection);
        }
    }
    SequenceView.wrap = wrap;
})(SequenceView_SequenceView || (SequenceView_SequenceView = {}));

// CONCATENATED MODULE: ./src/pack/PackIterator.ts
class PackIterator {
    /**
    * Instantiate a new random access iterator instance.
    */
    constructor() {
        this.pack = null;
        this.index = 0;
    }
    /**
    * @see Iterator.collection
    */
    collection() {
        return this.pack;
    }
    /**
    * @see ForwardIterator.hasNext
    */
    hasNext() {
        return this.pack && this.index < this.pack.size;
    }
    /**
    * @see ForwardIterator.next
    */
    next() {
        this.index += 1;
    }
    /**
    * @see ForwardIterator.forward
    */
    forward(count) {
        this.index += count;
    }
    /**
    * @see ForwardIterator.end
    */
    end() {
        this.index = this.pack ? this.pack.lastIndex : 0;
    }
    /**
    * @see BackwardIterator.hasPrevious
    */
    hasPrevious() {
        return this.pack && this.index > 0;
    }
    /**
    * @see BackwardIterator.previous
    */
    previous() {
        this.index -= 1;
    }
    /**
    * @see BackwardIterator.backward
    */
    backward(count) {
        this.index -= count;
    }
    /**
    * @see BackwardIterator.start
    */
    start() {
        this.index = 0;
    }
    /**
    * @see Iterator.get
    */
    get() {
        return this.pack.get(this.index);
    }
    /**
    * @see Iterator.move
    */
    move(iterator) {
        if (iterator instanceof PackIterator) {
            this.pack = iterator.pack;
            this.index = iterator.index;
        }
        else {
            throw new Error('Trying to move to a location described by an unsupported type of ' +
                'iterator');
        }
    }
    /**
    * @see BidirectionalIterator.go
    */
    go(index) {
        this.index = index;
    }
    /**
    * Shallow-copy the given instance.
    *
    * @param toCopy
    */
    copy(toCopy) {
        this.pack = toCopy.pack;
        this.index = toCopy.index;
    }
    /**
    * @see Iterator.clone
    */
    clone() {
        const copy = new PackIterator();
        copy.copy(this);
        return copy;
    }
    /**
    * @see Iterator.equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        if (other instanceof PackIterator) {
            return other.pack === this.pack &&
                other.index === this.index;
        }
        return false;
    }
}
(function (PackIterator) {
    /**
    * Return a shallow copy of the given iterator.
    *
    * A shallow-copy *b* of an iterator *a* is an instance that follow both
    * properties :
    *  - b !== a
    *  - b.equals(a)
    *
    * @param toCopy - An iterator to copy.
    *
    * @return A shallow copy of the given iterator.
    */
    function copy(toCopy) {
        return toCopy.clone();
    }
    PackIterator.copy = copy;
})(PackIterator || (PackIterator = {}));

// CONCATENATED MODULE: ./src/pack/BufferPack.ts







class BufferPack_BufferPack {
    /**
    * Wrap an existing buffer into a new pack instance.
    *
    * @param elements - The buffer to wrap, the resulting pack will have the capacity of the given buffer.
    * @param [size = 0] - Initial number of elements in the pack.
    */
    constructor(elements, size = 0) {
        this._elements = elements;
        this._size = size;
    }
    /**
    * @return The underlying typed array.
    */
    get array() {
        return this._elements;
    }
    /**
    * @return The underlying buffer.
    */
    get buffer() {
        return this._elements.buffer;
    }
    /**
    * @see Collection.size
    */
    get size() {
        return this._size;
    }
    /**
    * @see MutableSequence.size
    */
    set size(value) {
        if (value > this._elements.length) {
            this.reallocate(value);
        }
        for (let index = this._size; index < value; ++index) {
            this._elements[index] = 0;
        }
        this._size = value;
    }
    /**
    * @see StaticCollection.capacity
    */
    get capacity() {
        return this._elements.length;
    }
    /**
    * @see ReallocableCollection.reallocate
    */
    reallocate(capacity) {
        const old = this._elements;
        const oldSize = this._size;
        this._elements = Buffer_Buffer.reallocate(old, capacity);
        this._size = Math.min(this._size, capacity);
        for (let index = 0; index < oldSize; ++index) {
            this._elements[index] = old[index];
        }
    }
    /**
    * @see ReallocableCollection.fit
    */
    fit() {
        this.reallocate(this._size);
    }
    /**
    * @see Sequence.get
    */
    get(index) {
        return this._elements[index];
    }
    /**
    * @see MutableSequence.fill
    */
    fill(element) {
        for (let index = 0, size = this._size; index < size; ++index) {
            this._elements[index] = element;
        }
    }
    /**
    * @see Sequence.last
    */
    get last() {
        return this._elements[Math.max(this._size - 1, 0)];
    }
    /**
    * @see Sequence.last
    */
    get lastIndex() {
        return Math.max(this._size - 1, 0);
    }
    /**
    * @see Sequence.first
    */
    get first() {
        return this._elements[0];
    }
    /**
    * @see Sequence.firstIndex
    */
    get firstIndex() {
        return 0;
    }
    /**
    * @see MutableSequence.pop
    */
    pop() {
        const last = this._size - 1;
        const value = this._elements[last];
        this.delete(last);
        return value;
    }
    /**
    * @see MutableSequence.shift
    */
    shift() {
        const value = this._elements[0];
        this.delete(0);
        return value;
    }
    /**
    * @see Pack.sort
    */
    sort(comparator) {
        quicksort(this, comparator, 0, this._size);
    }
    /**
    * @see Pack.subsort
    */
    subsort(offset, size, comparator) {
        quicksort(this, comparator, offset, size);
    }
    /**
    * @see MutableSequence.swap
    */
    swap(first, second) {
        const tmp = this._elements[first];
        this._elements[first] = this._elements[second];
        this._elements[second] = tmp;
    }
    /**
    * @see MutableSequence.set
    */
    set(index, value) {
        if (index >= this._size)
            this.size = index + 1;
        this._elements[index] = value;
    }
    /**
    * @see MutableSequence.insert
    */
    insert(index, value) {
        if (index >= this._size) {
            this.set(index, value);
        }
        else {
            this.size += 1;
            for (let cursor = this._size - 1; cursor > index; --cursor) {
                this._elements[cursor] = this._elements[cursor - 1];
            }
            this._elements[index] = value;
        }
    }
    /**
    * @see MutableSequence.push
    */
    push(value) {
        const index = this._size;
        this.size += 1;
        this._elements[index] = value;
    }
    /**
    * @see MutableSequence.unshift
    */
    unshift(value) {
        this.size += 1;
        for (let index = this._size - 1; index > 0; --index) {
            this._elements[index] = this._elements[index - 1];
        }
        this._elements[0] = value;
    }
    /**
    * @see MutableSequence.delete
    */
    delete(index) {
        for (let cursor = index, size = this._size - 1; cursor < size; ++cursor) {
            this._elements[cursor] = this._elements[cursor + 1];
        }
        this.size -= 1;
    }
    /**
    * @see MutableSequence.deleteMany
    */
    deleteMany(from, size) {
        const toMove = this._size - from - size;
        const offset = from + size;
        for (let cursor = 0; cursor < toMove; ++cursor) {
            this._elements[from + cursor] = this._elements[offset + cursor];
        }
        this.size -= size;
    }
    /**
    * @see MutableSequence.empty
    */
    empty(index) {
        this.set(index, 0);
    }
    /**
    * @see MutableSequence.emptyMany
    */
    emptyMany(from, size) {
        for (let cursor = 0; cursor < size; ++cursor) {
            this.set(from + cursor, 0);
        }
    }
    /**
    * @see MutableSequence.warp
    */
    warp(index) {
        this._elements[index] = this._elements[this._size - 1];
        this.size -= 1;
    }
    /**
    * @see Collection.has
    */
    has(element) {
        return this.indexOf(element) >= 0;
    }
    /**
    * @see Sequence.indexOf
    */
    indexOf(element) {
        for (let index = 0, length = this._size; index < length; ++index) {
            if (equals(element, this._elements[index])) {
                return index;
            }
        }
        return -1;
    }
    /**
    * @see Sequence.hasInSubsequence
    */
    hasInSubsequence(element, offset, size) {
        return this.indexOfInSubsequence(element, offset, size) >= 0;
    }
    /**
    * @see Sequence.indexOfInSubsequence
    */
    indexOfInSubsequence(element, offset, size) {
        for (let index = offset, length = offset + size; index < length; ++index) {
            if (equals(element, this._elements[index])) {
                return index;
            }
        }
        return -1;
    }
    /**
    * @see Pack.copy
    */
    copy(toCopy) {
        this.size = toCopy.size;
        for (let index = 0, length = toCopy.size; index < length; ++index) {
            this.set(index, toCopy.get(index));
        }
    }
    /**
    * @see Sequence.concat
    */
    concat(toConcat) {
        const firstIndex = toConcat.firstIndex;
        const lastIndex = toConcat.lastIndex + 1;
        if (this.capacity < this.size + toConcat.size) {
            this.reallocate(this.size + toConcat.size);
        }
        for (let index = firstIndex; index < lastIndex; ++index) {
            this.push(toConcat.get(index));
        }
    }
    /**
    * @see Pack.allocate
    */
    allocate(capacity) {
        return new BufferPack_BufferPack(Buffer_Buffer.reallocate(this._elements, capacity));
    }
    /**
    * @see Collection.clone
    */
    clone() {
        const result = this.allocate(this._elements.length);
        result.copy(this);
        return result;
    }
    /**
    * @see MutableSequence.clear
    */
    clear() {
        this._size = 0;
    }
    /**
    * @see Collection.view
    */
    view() {
        return SequenceView_SequenceView.wrap(this);
    }
    /**
    * @see Collection.iterator
    */
    iterator() {
        const result = new PackIterator();
        result.pack = this;
        result.index = 0;
        return result;
    }
    /**
    * @see Collection.iterator
    */
    *[Symbol.iterator]() {
        for (let index = 0; index < this._size; ++index) {
            yield this._elements[index];
        }
    }
    /**
    * @see Collection.equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        if (other instanceof BufferPack_BufferPack) {
            if (other.size !== this._size)
                return false;
            for (let index = 0, size = this._size; index < size; ++index) {
                if (!equals(other.get(index), this._elements[index]))
                    return false;
            }
            return true;
        }
        return false;
    }
}
/**
* Default value of each new cell of this buffer.
*/
BufferPack_BufferPack.DEFAULT_VALUE = 0;
(function (BufferPack) {
    /**
    * Return a copy of another pack.
    *
    * @param toCopy - A pack to copy.
    */
    function copy(toCopy) {
        return toCopy == null ? null : toCopy.clone();
    }
    BufferPack.copy = copy;
    /**
    * Instantiate a new pack that wrap a unsigned byte buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a unsigned byte buffer of the given capacity.
    */
    function uint8(capacity) {
        return new BufferPack(new Uint8Array(capacity));
    }
    BufferPack.uint8 = uint8;
    /**
    * Instantiate a new pack that wrap a unsigned short buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a unsigned short buffer of the given capacity.
    */
    function uint16(capacity) {
        return new BufferPack(new Uint16Array(capacity));
    }
    BufferPack.uint16 = uint16;
    /**
    * Instantiate a new pack that wrap a unsigned integer buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a unsigned integer buffer of the given capacity.
    */
    function uint32(capacity) {
        return new BufferPack(new Uint32Array(capacity));
    }
    BufferPack.uint32 = uint32;
    /**
    * Instantiate a new pack that wrap a byte buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a byte buffer of the given capacity.
    */
    function int8(capacity) {
        return new BufferPack(new Int8Array(capacity));
    }
    BufferPack.int8 = int8;
    /**
    * Instantiate a new pack that wrap a short buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a short buffer of the given capacity.
    */
    function int16(capacity) {
        return new BufferPack(new Int16Array(capacity));
    }
    BufferPack.int16 = int16;
    /**
    * Instantiate a new pack that wrap a integer buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a integer buffer of the given capacity.
    */
    function int32(capacity) {
        return new BufferPack(new Int32Array(capacity));
    }
    BufferPack.int32 = int32;
    /**
    * Instantiate a new pack that wrap a float buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a float buffer of the given capacity.
    */
    function float32(capacity) {
        return new BufferPack(new Float32Array(capacity));
    }
    BufferPack.float32 = float32;
    /**
    * Instantiate a new pack that wrap a double buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a double buffer of the given capacity.
    */
    function float64(capacity) {
        return new BufferPack(new Float64Array(capacity));
    }
    BufferPack.float64 = float64;
    /**
    * Instantiate a new pack that wrap a unsigned integer buffer that can store
    * values in range [0, maximum] and that is of the given capacity.
    *
    * @param maximum - Maximum value that can be stored.
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a unsigned integer buffer that can store values
    *         in range [0, maximum] and that is of the given capacity.
    */
    function unsignedUpTo(maximum, capacity) {
        return new BufferPack(UnsignedIntegerBuffer.upTo(maximum, capacity));
    }
    BufferPack.unsignedUpTo = unsignedUpTo;
    /**
    * Instantiate a new pack that wrap a signed integer buffer that can store
    * values in range [-maximum, maximum] and that is of the given capacity.
    *
    * @param maximum - Maximum value that can be stored.
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a signed integer buffer that can store values
    *         in range [-maximum, maximum] and that is of the given capacity.
    */
    function signedUpTo(maximum, capacity) {
        return new BufferPack(IntegerBuffer.upTo(maximum, capacity));
    }
    BufferPack.signedUpTo = signedUpTo;
})(BufferPack_BufferPack || (BufferPack_BufferPack = {}));

// CONCATENATED MODULE: ./src/pack/ArrayPack.ts




/**
* A javascript array.
*
* @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M
*/
class ArrayPack_ArrayPack {
    /**
    * Wrap the given array as a pack.
    *
    * @param elements - A javascript array to wrap.
    * @param [size = elements.length] - Initial number of elements in the array to wrap.
    */
    constructor(elements, size = elements.length) {
        this._elements = elements;
        this._size = size;
    }
    /**
    * @see Collection.size
    */
    get size() {
        return this._size;
    }
    /**
    * @see MutableSequence.size
    */
    set size(value) {
        /**
        * @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M
        */
        while (value > this._elements.length) {
            this._elements.push(null);
        }
        for (let index = this._size; index < value; ++index) {
            this._elements[index] = null;
        }
        this._size = value;
    }
    /**
    * @see StaticCollection.capacity
    */
    get capacity() {
        return this._elements.length;
    }
    /**
    * @see ReallocableCollection.reallocate
    */
    reallocate(capacity) {
        if (capacity < this._elements.length) {
            this._elements.length = capacity;
            this._size = Math.min(this._size, capacity);
        }
        else {
            /**
            * @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M
            */
            while (this._elements.length != capacity) {
                this._elements.push(null);
            }
        }
    }
    /**
    * @see ReallocableCollection.fit
    */
    fit() {
        this._elements.length = this._size;
    }
    /**
    * @see Sequence.get
    */
    get(index) {
        return this._elements[index];
    }
    /**
    * @see MutableSequence.pop
    */
    pop() {
        const last = this._size - 1;
        const value = this._elements[last];
        this.delete(last);
        return value;
    }
    /**
    * @see Sequence.last
    */
    get last() {
        return this._elements[this._size - 1];
    }
    /**
    * @see Sequence.lastIndex
    */
    get lastIndex() {
        return Math.max(this._size - 1, 0);
    }
    /**
    * @see Sequence.first
    */
    get first() {
        return this._elements[0];
    }
    /**
    * @see Sequence.firstIndex
    */
    get firstIndex() {
        return 0;
    }
    /**
    * @see MutableSequence.fill
    */
    fill(element) {
        for (let index = 0, size = this._size; index < size; ++index) {
            this._elements[index] = element;
        }
    }
    /**
    * @see MutableSequence.shift
    */
    shift() {
        const value = this._elements[0];
        this.delete(0);
        return value;
    }
    /**
    * @see Pack.sort
    */
    sort(comparator) {
        quicksort(this, comparator, 0, this._size);
    }
    /**
    * @see Pack.subsort
    */
    subsort(offset, size, comparator) {
        quicksort(this, comparator, offset, size);
    }
    /**
    * @see MutableSequence.swap
    */
    swap(first, second) {
        const tmp = this._elements[first];
        this._elements[first] = this._elements[second];
        this._elements[second] = tmp;
    }
    /**
    * @see MutableSequence.set
    */
    set(index, value) {
        if (index >= this._size)
            this.size = index + 1;
        this._elements[index] = value;
    }
    /**
    * @see MutableSequence.insert
    */
    insert(index, value) {
        if (index >= this._size) {
            this.set(index, value);
        }
        else {
            this.size += 1;
            for (let cursor = this._size - 1; cursor > index; --cursor) {
                this._elements[cursor] = this._elements[cursor - 1];
            }
            this._elements[index] = value;
        }
    }
    /**
    * @see MutableSequence.push
    */
    push(value) {
        const index = this._size;
        this.size += 1;
        this._elements[index] = value;
    }
    /**
    * @see MutableSequence.unshift
    */
    unshift(value) {
        this.size += 1;
        for (let index = this._size - 1; index > 0; --index) {
            this._elements[index] = this._elements[index - 1];
        }
        this._elements[0] = value;
    }
    /**
    * @see MutableSequence.delete
    */
    delete(index) {
        for (let cursor = index, size = this._size - 1; cursor < size; ++cursor) {
            this._elements[cursor] = this._elements[cursor + 1];
        }
        this.size -= 1;
    }
    /**
    * @see MutableSequence.deleteMany
    */
    deleteMany(from, size) {
        const toMove = this._size - from - size;
        const offset = from + size;
        for (let cursor = 0; cursor < toMove; ++cursor) {
            this._elements[from + cursor] = this._elements[offset + cursor];
        }
        this.size -= size;
    }
    /**
    * @see MutableSequence.empty
    */
    empty(index) {
        this.set(index, null);
    }
    /**
    * @see MutableSequence.emptyMany
    */
    emptyMany(from, size) {
        for (let cursor = 0; cursor < size; ++cursor) {
            this.set(from + cursor, null);
        }
    }
    /**
    * @see MutableSequence.warp
    */
    warp(index) {
        this._elements[index] = this._elements[this._size - 1];
        this.size -= 1;
    }
    /**
    * @see Collection.has
    */
    has(element) {
        return this.indexOf(element) >= 0;
    }
    /**
    * @see Sequence.indexOf
    */
    indexOf(element) {
        for (let index = 0, length = this._size; index < length; ++index) {
            if (equals(element, this._elements[index])) {
                return index;
            }
        }
        return -1;
    }
    /**
    * @see Sequence.hasInSubsequence
    */
    hasInSubsequence(element, offset, size) {
        return this.indexOfInSubsequence(element, offset, size) >= 0;
    }
    /**
    * @see Sequence.indexOfInSubsequence
    */
    indexOfInSubsequence(element, offset, size) {
        for (let index = offset, length = offset + size; index < length; ++index) {
            if (equals(element, this._elements[index])) {
                return index;
            }
        }
        return -1;
    }
    /**
    * @see Pack.copy
    */
    copy(toCopy) {
        this.size = toCopy.size;
        for (let index = 0, length = toCopy.size; index < length; ++index) {
            this.set(index, toCopy.get(index));
        }
    }
    /**
    * @see Sequence.concat
    */
    concat(toConcat) {
        const firstIndex = toConcat.firstIndex;
        const lastIndex = toConcat.lastIndex + 1;
        if (this.capacity < this.size + toConcat.size) {
            this.reallocate(this.size + toConcat.size);
        }
        for (let index = firstIndex; index < lastIndex; ++index) {
            this.push(toConcat.get(index));
        }
    }
    /**
    * @see Pack.allocate
    */
    allocate(capacity) {
        return ArrayPack_ArrayPack.allocate(capacity);
    }
    /**
    * @see Pack.clone
    */
    clone() {
        return ArrayPack_ArrayPack.copy(this);
    }
    /**
    * @see Collection.view
    */
    view() {
        return SequenceView_SequenceView.wrap(this);
    }
    /**
    * @see Collection.iterator
    */
    iterator() {
        const result = new PackIterator();
        result.pack = this;
        result.index = 0;
        return result;
    }
    /**
    * @see MutableSequence.clear
    */
    clear() {
        this._size = 0;
    }
    /**
    * @see Sequence.iterator
    */
    *[Symbol.iterator]() {
        for (let index = 0; index < this._size; ++index) {
            yield this._elements[index];
        }
    }
    /**
    * @see Collection.equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        if (other instanceof ArrayPack_ArrayPack) {
            if (other.size !== this._size)
                return false;
            for (let index = 0, size = this._size; index < size; ++index) {
                if (!equals(other.get(index), this._elements[index]))
                    return false;
            }
            return true;
        }
        return false;
    }
}
(function (ArrayPack) {
    /**
    * Initial value of each new cell of a pack.
    */
    ArrayPack.DEFAULT_VALUE = null;
    /**
    * Return an empty array pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return An empty array pack of the given capacity.
    */
    function allocate(capacity) {
        const result = [];
        /**
        * @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M
        */
        while (result.length != capacity) {
            result.push(ArrayPack.DEFAULT_VALUE);
        }
        return new ArrayPack(result, 0);
    }
    ArrayPack.allocate = allocate;
    /**
    * Wrap an existing array as a pack.
    *
    * @param elements - Array to wrap.
    *
    * @return The given array wrapped as a pack.
    */
    function wrap(elements) {
        return new ArrayPack(elements);
    }
    ArrayPack.wrap = wrap;
    /**
    * Return a shallow copy of another pack as an array pack.
    *
    * @param toCopy - A pack to copy.
    *
    * @return An array pack that is a shallow copy of the given pack.
    */
    function copy(toCopy) {
        const result = allocate(toCopy.capacity);
        result.copy(toCopy);
        return result;
    }
    ArrayPack.copy = copy;
})(ArrayPack_ArrayPack || (ArrayPack_ArrayPack = {}));

// CONCATENATED MODULE: ./src/pack/InstancePack.ts



/**
* A javascript array of pre-allocated instances.
*
* @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M
*/
class InstancePack_InstancePack {
    /**
    * Makes an empty instance pack of the given capacity.
    *
    * @param duplicator - A duplicator that allows to manipulate the given instance type.
    * @param [capacity = 32] - Initial capacity of the pack.
    */
    constructor(duplicator, capacity = 32) {
        this.duplicator = duplicator;
        this._elements = Pack_Pack.any(capacity);
    }
    /**
    * @see Collection.size
    */
    get size() {
        return this._elements.size;
    }
    /**
    * @see MutableSequence.size
    */
    set size(value) {
        /**
        * @see https://v8.dev/blog/elements-kinds?fbclid=IwAR337wb3oxEpjz_5xVHL-Y14gUpVElementOztLSIikVVQLGN6qcKidEjMLJ4vO3M
        */
        while (this._elements.size < value) {
            this._elements.push(this.duplicator.allocate());
        }
        while (this._elements.size > value) {
            this.duplicator.free(this._elements.pop());
        }
    }
    /**
    * @see StaticCollection.capacity
    */
    get capacity() {
        return this._elements.capacity;
    }
    /**
    * @see ReallocableCollection.reallocate
    */
    reallocate(capacity) {
        while (this._elements.size > capacity) {
            this.duplicator.free(this._elements.pop());
        }
        this._elements.reallocate(capacity);
    }
    /**
    * @see ReallocableCollection.fit
    */
    fit() {
        this.reallocate(this._elements.size);
    }
    /**
    * @see Sequence.get
    */
    get(index) {
        return this._elements.get(index);
    }
    pop(output = null) {
        if (output == null) {
            return this._elements.pop();
        }
        else {
            const result = this._elements.pop();
            output.copy(result);
            this.duplicator.free(result);
            return output;
        }
    }
    /**
    * @see Sequence.last
    */
    get last() {
        return this._elements.last;
    }
    /**
    * @see Sequence.lastIndex
    */
    get lastIndex() {
        return this._elements.lastIndex;
    }
    /**
    * @see Sequence.first
    */
    get first() {
        return this._elements.first;
    }
    /**
    * @see Sequence.firstIndex
    */
    get firstIndex() {
        return 0;
    }
    /**
    * @see MutableSequence.fill
    */
    fill(element) {
        const elements = this._elements;
        const duplicator = this.duplicator;
        for (let index = 0, size = elements.size; index < size; ++index) {
            duplicator.free(elements.get(index));
            elements.set(index, duplicator.copy(element));
        }
    }
    shift(output = null) {
        if (output == null) {
            return this._elements.shift();
        }
        else {
            const result = this._elements.shift();
            output.copy(result);
            this.duplicator.free(result);
            return output;
        }
    }
    /**
    * @see Pack.sort
    */
    sort(comparator) {
        this._elements.sort(comparator);
    }
    /**
    * @see Pack.subsort
    */
    subsort(offset, size, comparator) {
        this._elements.subsort(offset, size, comparator);
    }
    /**
    * @see MutableSequence.swap
    */
    swap(first, second) {
        this._elements.swap(first, second);
    }
    /**
    * @see MutableSequence.set
    */
    set(index, value) {
        if (index >= this._elements.size) {
            this.size = index + 1;
        }
        this.duplicator.free(this._elements.get(index));
        this._elements.set(index, this.duplicator.copy(value));
    }
    /**
    * @see MutableSequence.insert
    */
    insert(index, value) {
        if (index >= this._elements.size) {
            this.set(index, value);
        }
        else {
            if (this._elements.size === this._elements.capacity) {
                this.reallocate(this.capacity * 2);
            }
            this._elements.insert(index, this.duplicator.copy(value));
        }
    }
    /**
    * @see MutableSequence.push
    */
    push(value) {
        if (this._elements.size === this._elements.capacity) {
            this.reallocate(this.capacity * 2);
        }
        this._elements.push(this.duplicator.copy(value));
    }
    /**
    * @see MutableSequence.unshift
    */
    unshift(value) {
        if (this._elements.size === this._elements.capacity) {
            this.reallocate(this.capacity * 2);
        }
        this._elements.unshift(this.duplicator.copy(value));
    }
    /**
    * @see MutableSequence.delete
    */
    delete(index) {
        this.duplicator.free(this._elements.get(index));
        this._elements.delete(index);
    }
    /**
    * @see MutableSequence.deleteMany
    */
    deleteMany(from, size) {
        for (let index = 0; index < size; ++index) {
            const element = this._elements.get(from + index);
            this.duplicator.free(element);
        }
        this._elements.deleteMany(from, size);
    }
    /**
    * @see MutableSequence.empty
    */
    empty(index) {
        if (index < this._elements.size) {
            this.duplicator.free(this._elements.get(index));
            this._elements.set(index, this.duplicator.allocate());
        }
        else {
            this.size = index + 1;
        }
    }
    /**
    * @see MutableSequence.emptyMany
    */
    emptyMany(from, size) {
        for (let cursor = 0; cursor < size; ++cursor) {
            this.empty(from + cursor);
        }
    }
    /**
    * @see MutableSequence.warp
    */
    warp(index) {
        const element = this._elements.get(index);
        this.duplicator.free(element);
        this._elements.warp(index);
    }
    /**
    * @see Collection.has
    */
    has(element) {
        return this.indexOf(element) >= 0;
    }
    /**
    * @see Sequence.indexOf
    */
    indexOf(element) {
        return this._elements.indexOf(element);
    }
    /**
    * @see Sequence.hasInSubsequence
    */
    hasInSubsequence(element, offset, size) {
        return this.indexOfInSubsequence(element, offset, size) >= 0;
    }
    /**
    * @see Sequence.indexOfInSubsequence
    */
    indexOfInSubsequence(element, offset, size) {
        return this._elements.indexOfInSubsequence(element, offset, size);
    }
    /**
    * @see Pack.copy
    */
    copy(toCopy) {
        this.size = toCopy.size;
        for (let index = 0, length = toCopy.size; index < length; ++index) {
            this.set(index, toCopy.get(index));
        }
    }
    /**
    * @see Sequence.concat
    */
    concat(toConcat) {
        const firstIndex = toConcat.firstIndex;
        const lastIndex = toConcat.lastIndex + 1;
        if (this.capacity < this.size + toConcat.size) {
            this.reallocate(this.size + toConcat.size);
        }
        for (let index = firstIndex; index < lastIndex; ++index) {
            this.push(toConcat.get(index));
        }
    }
    /**
    * @see Pack.allocate
    */
    allocate(capacity) {
        return new InstancePack_InstancePack(this.duplicator, capacity);
    }
    /**
    * @see Pack.clone
    */
    clone() {
        return InstancePack_InstancePack.copy(this);
    }
    /**
    * @see Collection.view
    */
    view() {
        return SequenceView_SequenceView.wrap(this);
    }
    /**
    * @see Collection.iterator
    */
    iterator() {
        const result = new PackIterator();
        result.pack = this;
        result.index = 0;
        return result;
    }
    /**
    * @see MutableSequence.clear
    */
    clear() {
        while (this._elements.size > 0) {
            this.duplicator.free(this._elements.pop());
        }
    }
    /**
    * @see Sequence.iterator
    */
    *[Symbol.iterator]() {
        yield* this._elements;
    }
    /**
    * @see Collection.equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        if (other instanceof InstancePack_InstancePack) {
            return this.duplicator === other.duplicator &&
                this._elements.equals(other._elements);
        }
        return false;
    }
}
(function (InstancePack) {
    /**
    * Return an empty array pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return An empty array pack of the given capacity.
    */
    function allocate(duplicator, capacity) {
        return new InstancePack(duplicator, capacity);
    }
    InstancePack.allocate = allocate;
    /**
    * Return a copy of another instance pack as an instance pack.
    *
    * @param toCopy - A pack to copy.
    *
    * @return An array pack that is a shallow copy of the given pack.
    */
    function copy(toCopy) {
        const result = toCopy.allocate(toCopy.capacity);
        result.copy(toCopy);
        return result;
    }
    InstancePack.copy = copy;
})(InstancePack_InstancePack || (InstancePack_InstancePack = {}));

// CONCATENATED MODULE: ./src/pack/Pack.ts





var Pack_Pack;
(function (Pack) {
    /**
    * Shallow copy the given instance and return it.
    *
    * @param toCopy - An instance to shallow copy.
    *
    * @return A new instance, shallow copy of the given one.
    */
    function copy(toCopy) {
        return toCopy == null ? null : toCopy.clone();
    }
    Pack.copy = copy;
    /**
    * Return the default value used by the given pack instance.
    *
    * @param pack - A pack instance.
    *
    * @return The default value used by the given pack instance.
    */
    function defaultValue(pack) {
        return Object.getPrototypeOf(pack).constructor.DEFAULT_VALUE;
    }
    Pack.defaultValue = defaultValue;
    /**
    * Instantiate a new pack that wrap an array of the given type of instance.
    *
    * @param pack - Instance of the type of pack to instantiate.
    * @param capacity - Capacity of the array to allocate.
    *
    * @return A new pack that wrap an array of the given type of instance.
    */
    function like(pack, capacity) {
        return pack.allocate(capacity);
    }
    Pack.like = like;
    /**
    * Instantiate a new pack that wrap an array of the given type of instance.
    *
    * @param capacity - Capacity of the array to allocate.
    *
    * @return A new pack that wrap an array of the given type of instance.
    */
    function any(capacity) {
        return ArrayPack_ArrayPack.allocate(capacity);
    }
    Pack.any = any;
    /**
    * Instantiate a new pack that wrap a unsigned byte buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a unsigned byte buffer of the given capacity.
    */
    function uint8(capacity) {
        return new BufferPack_BufferPack(new Uint8Array(capacity));
    }
    Pack.uint8 = uint8;
    /**
    * Instantiate a new pack that wrap a unsigned short buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a unsigned short buffer of the given capacity.
    */
    function uint16(capacity) {
        return new BufferPack_BufferPack(new Uint16Array(capacity));
    }
    Pack.uint16 = uint16;
    /**
    * Instantiate a new pack that wrap a unsigned integer buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a unsigned integer buffer of the given capacity.
    */
    function uint32(capacity) {
        return new BufferPack_BufferPack(new Uint32Array(capacity));
    }
    Pack.uint32 = uint32;
    /**
    * Instantiate a new pack that wrap a byte buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a byte buffer of the given capacity.
    */
    function int8(capacity) {
        return new BufferPack_BufferPack(new Int8Array(capacity));
    }
    Pack.int8 = int8;
    /**
    * Instantiate a new pack that wrap a short buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a short buffer of the given capacity.
    */
    function int16(capacity) {
        return new BufferPack_BufferPack(new Int16Array(capacity));
    }
    Pack.int16 = int16;
    /**
    * Instantiate a new pack that wrap a integer buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a integer buffer of the given capacity.
    */
    function int32(capacity) {
        return new BufferPack_BufferPack(new Int32Array(capacity));
    }
    Pack.int32 = int32;
    /**
    * Instantiate a new pack that wrap a float buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a float buffer of the given capacity.
    */
    function float32(capacity) {
        return new BufferPack_BufferPack(new Float32Array(capacity));
    }
    Pack.float32 = float32;
    /**
    * Instantiate a new pack that wrap a double buffer of the given capacity.
    *
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a double buffer of the given capacity.
    */
    function float64(capacity) {
        return new BufferPack_BufferPack(new Float64Array(capacity));
    }
    Pack.float64 = float64;
    /**
    * Instantiate a new pack that wrap a unsigned integer buffer that can store
    * values in range [0, maximum] and that is of the given capacity.
    *
    * @param maximum - Maximum value that can be stored.
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a unsigned integer buffer that can store values
    *         in range [0, maximum] and that is of the given capacity.
    */
    function unsignedUpTo(maximum, capacity) {
        return new BufferPack_BufferPack(UnsignedIntegerBuffer.upTo(maximum, capacity));
    }
    Pack.unsignedUpTo = unsignedUpTo;
    /**
    * Instantiate a new pack that wrap a signed integer buffer that can store
    * values in range [-maximum, maximum] and that is of the given capacity.
    *
    * @param maximum - Maximum value that can be stored.
    * @param capacity - Capacity of the buffer to allocate.
    *
    * @return A new pack that wrap a signed integer buffer that can store values
    *         in range [-maximum, maximum] and that is of the given capacity.
    */
    function signedUpTo(maximum, capacity) {
        return new BufferPack_BufferPack(IntegerBuffer.upTo(maximum, capacity));
    }
    Pack.signedUpTo = signedUpTo;
    function instance(allocator, capacity) {
        return new InstancePack_InstancePack(allocator, capacity);
    }
    Pack.instance = instance;
})(Pack_Pack || (Pack_Pack = {}));

// CONCATENATED MODULE: ./src/allocator/FactoryAllocator.ts

class FactoryAllocator_FactoryAllocator {
    /**
    * Instantiate a new factory allocator for a given type of object.
    *
    * @param factory - The factory to use for allocating new instances of the managed type of object.
    * @param [capacity = 16] - The number of object to pre-allocate.
    */
    constructor(factory, capacity = 16) {
        this._factory = factory;
        this._instances = Pack_Pack.any(capacity);
        while (this._instances.size < this._instances.capacity) {
            this._instances.push(this._factory());
        }
    }
    /**
    * @see Allocator.allocate
    */
    allocate() {
        if (this._instances.size > 0) {
            return this._instances.pop();
        }
        else {
            return this._factory();
        }
    }
    /**
    * @see Allocator.free
    */
    free(instance) {
        instance.clear();
        this._instances.push(instance);
    }
    /**
    * Empty this allocator of all of it's currently pre-allocated instances.
    */
    clear() {
        const instances = this._instances;
        for (let index = 0; index < instances.size; ++index) {
            instances.set(index, null);
        }
        instances.clear();
    }
}
(function (FactoryAllocator) {
    /**
    *
    */
    function create(factory, capacity = 16) {
        return new FactoryAllocator(factory, capacity);
    }
    FactoryAllocator.create = create;
})(FactoryAllocator_FactoryAllocator || (FactoryAllocator_FactoryAllocator = {}));

// CONCATENATED MODULE: ./src/allocator/Allocator.ts

var Allocator_Allocator;
(function (Allocator) {
    /**
    *
    */
    Allocator.fromFactory = FactoryAllocator_FactoryAllocator.create;
})(Allocator_Allocator || (Allocator_Allocator = {}));

// CONCATENATED MODULE: ./src/allocator/FactoryDuplicator.ts

class FactoryDuplicator_FactoryDuplicator {
    /**
    * Instantiate a new factory allocator for a given type of object.
    *
    * @param factory - The factory to use for allocating new instances of the managed type of object.
    * @param [capacity = 16] - The number of object to pre-allocate.
    */
    constructor(factory, capacity = 16) {
        this._factory = factory;
        this._instances = Pack_Pack.any(capacity);
        while (this._instances.size < this._instances.capacity) {
            this._instances.push(this._factory());
        }
    }
    /**
    * @see Allocator.allocate
    */
    allocate() {
        if (this._instances.size > 0) {
            return this._instances.pop();
        }
        else {
            return this._factory();
        }
    }
    /**
    * @see Allocator.copy
    */
    copy(toCopy) {
        if (this._instances.size > 0) {
            const result = this._instances.pop();
            result.copy(toCopy);
            return result;
        }
        else {
            const result = this._factory();
            result.copy(toCopy);
            return result;
        }
    }
    /**
    * @see Allocator.free
    */
    free(instance) {
        instance.clear();
        this._instances.push(instance);
    }
    /**
    * Empty this allocator of all of it's currently pre-allocated instances.
    */
    clear() {
        const instances = this._instances;
        for (let index = 0; index < instances.size; ++index) {
            instances.set(index, null);
        }
        instances.clear();
    }
}
(function (FactoryDuplicator) {
    /**
    *
    */
    function create(factory, capacity = 16) {
        return new FactoryDuplicator(factory, capacity);
    }
    FactoryDuplicator.create = create;
})(FactoryDuplicator_FactoryDuplicator || (FactoryDuplicator_FactoryDuplicator = {}));

// CONCATENATED MODULE: ./src/allocator/Duplicator.ts

var Duplicator_Duplicator;
(function (Duplicator) {
    /**
    *
    */
    Duplicator.fromFactory = FactoryDuplicator_FactoryDuplicator.create;
})(Duplicator_Duplicator || (Duplicator_Duplicator = {}));

// CONCATENATED MODULE: ./src/allocator/index.ts





// CONCATENATED MODULE: ./src/pack/index.ts






// CONCATENATED MODULE: ./src/set/BitSet.ts


// SWAR Algorithm [SIMD Within A Register]
function countBits(bits) {
    bits = (bits | 0) - ((bits >> 1) & 0x55555555);
    bits = (bits & 0x33333333) + ((bits >> 2) & 0x33333333);
    return (((bits + (bits >> 4)) & 0x0F0F0F0F) * 0x01010101) >> 24;
}
/**
*
*/
const BITSUMS = Pack_Pack.uint32(32);
for (let index = 0; index < 32; ++index) {
    BITSUMS.set(index, ~(0xFFFFFFFF << index));
}
class BitSet_BitSet {
    /**
    *
    */
    constructor(capacity = 32) {
        this._elements = Pack_Pack.uint32(capacity >> 5 + (capacity % 32 === 0 ? 0 : 1));
        this._size = 0;
    }
    /**
    * @see Collection.size
    */
    get size() {
        return this._size;
    }
    /**
    * @see StaticCollection.capacity
    */
    get capacity() {
        return this._elements.capacity * 32;
    }
    /**
    * @see Collection.has
    */
    has(element) {
        const elements = this._elements;
        const cell = element >> 5;
        const mask = 0b1 << (element % 32);
        return cell < elements.size && (elements.get(cell) & mask) > 0;
    }
    /**
    * @see Sequence.indexOf
    */
    indexOf(element) {
        const elements = this._elements;
        const cell = element >> 5;
        const mask = 0b1 << (element % 32);
        if (cell < elements.size && (elements.get(cell) & mask) > 0) {
            let offset = 0;
            for (let index = 0; index < cell; ++index) {
                offset += countBits(elements.get(index));
            }
            return offset + countBits(elements.get(cell) & ~(0xFFFFFFFF << element % 32)) - 1;
        }
        else {
            return -1;
        }
    }
    /**
    * @see Sequence.hasInSubsequence
    */
    hasInSubsequence(element, offset, size) {
        const index = this.indexOf(element);
        return index >= offset && index < offset + size;
    }
    /**
    * @see Sequence.indexOfInSubsequence
    */
    indexOfInSubsequence(element, offset, size) {
        const index = this.indexOf(element);
        if (index < size) {
            return Math.max(index - offset, -1);
        }
        else {
            return -1;
        }
    }
    /**
    * @see Set.add
    */
    add(element) {
        const elements = this._elements;
        const cell = element >> 5;
        const mask = 0b1 << (element % 32);
        if (cell >= elements.size || (elements.get(cell) & mask) === 0) {
            this._size += 1;
            if (elements.capacity < cell) {
                elements.reallocate(cell);
            }
            if (elements.size < cell) {
                elements.set(cell, mask);
            }
            else {
                elements.set(cell, elements.get(cell) | mask);
            }
        }
    }
    /**
    * @see Set.delete
    */
    delete(element) {
        const elements = this._elements;
        const cell = element >> 5;
        const mask = 0b1 << (element % 32);
        if (cell < elements.size && (elements.get(cell) & mask) > 0) {
            this._size -= 1;
            const nextBits = elements.get(cell) & ~mask;
            if (nextBits === 0) {
                do {
                    elements.size -= 1;
                } while (elements.last === 0);
            }
            else {
                elements.set(cell, nextBits);
            }
        }
    }
    /**
    * @see Collection.get
    */
    get(index) {
        if (index > this._size)
            return 0;
        const elements = this._elements;
        let skipped = 0;
        let cell = 0;
        let cellElements = countBits(elements.get(cell));
        while (skipped + cellElements < index) {
            cell += 1;
            skipped += cellElements;
            cellElements = countBits(elements.get(cell));
        }
        const bits = elements.get(cell);
        const rest = index - skipped; // + 1?
        /** generated **/
        if (countBits(bits & 0xffff) < rest) {
            if (countBits(bits & 0xffffff) < rest) {
                if (countBits(bits & 0xfffffff) < rest) {
                    if (countBits(bits & 0x3fffffff) < rest) {
                        return countBits(bits & 0x7fffffff) < rest ? cell * 32 + 31 : cell * 32 + 30;
                    }
                    else {
                        return countBits(bits & 0x1fffffff) < rest ? cell * 32 + 29 : cell * 32 + 28;
                    }
                }
                else {
                    if (countBits(bits & 0x3ffffff) < rest) {
                        return countBits(bits & 0x7ffffff) < rest ? cell * 32 + 27 : cell * 32 + 26;
                    }
                    else {
                        return countBits(bits & 0x1ffffff) < rest ? cell * 32 + 25 : cell * 32 + 24;
                    }
                }
            }
            else {
                if (countBits(bits & 0xfffff) < rest) {
                    if (countBits(bits & 0x3fffff) < rest) {
                        return countBits(bits & 0x7fffff) < rest ? cell * 32 + 23 : cell * 32 + 22;
                    }
                    else {
                        return countBits(bits & 0x1fffff) < rest ? cell * 32 + 21 : cell * 32 + 20;
                    }
                }
                else {
                    if (countBits(bits & 0x3ffff) < rest) {
                        return countBits(bits & 0x7ffff) < rest ? cell * 32 + 19 : cell * 32 + 18;
                    }
                    else {
                        return countBits(bits & 0x1ffff) < rest ? cell * 32 + 17 : cell * 32 + 16;
                    }
                }
            }
        }
        else {
            if (countBits(bits & 0xff) < rest) {
                if (countBits(bits & 0xfff) < rest) {
                    if (countBits(bits & 0x3fff) < rest) {
                        return countBits(bits & 0x7fff) < rest ? cell * 32 + 15 : cell * 32 + 14;
                    }
                    else {
                        return countBits(bits & 0x1fff) < rest ? cell * 32 + 13 : cell * 32 + 12;
                    }
                }
                else {
                    if (countBits(bits & 0x3ff) < rest) {
                        return countBits(bits & 0x7ff) < rest ? cell * 32 + 11 : cell * 32 + 10;
                    }
                    else {
                        return countBits(bits & 0x1ff) < rest ? cell * 32 + 9 : cell * 32 + 8;
                    }
                }
            }
            else {
                if (countBits(bits & 0xf) < rest) {
                    if (countBits(bits & 0x3f) < rest) {
                        return countBits(bits & 0x7f) < rest ? cell * 32 + 7 : cell * 32 + 6;
                    }
                    else {
                        return countBits(bits & 0x1f) < rest ? cell * 32 + 5 : cell * 32 + 4;
                    }
                }
                else {
                    if (countBits(bits & 0x3) < rest) {
                        return countBits(bits & 0x7) < rest ? cell * 32 + 3 : cell * 32 + 2;
                    }
                    else {
                        return countBits(bits & 0x1) < rest ? cell * 32 + 1 : cell * 32 + 0;
                    }
                }
            }
        }
    }
    /**
    * @see ReallocableCollection.reallocate
    */
    reallocate(capacity) {
        this._elements.reallocate(capacity);
    }
    /**
    * @see ReallocableCollection.fit
    */
    fit() {
        this._elements.fit();
    }
    /**
    * @see Set.copy
    */
    copy(toCopy) {
        this.clear();
        for (const element of toCopy) {
            this.add(element);
        }
    }
    /**
    * @see Collection.clone
    */
    clone() {
        const result = new BitSet_BitSet(this.capacity);
        result.copy(this);
        return result;
    }
    /**
    * @see Set.clear
    */
    clear() {
        this._elements.clear();
        this._size = 0;
    }
    /**
    * @see Sequence.first
    */
    get first() {
        return this.get(0);
    }
    /**
    * @see Sequence.firstIndex
    */
    get firstIndex() {
        return 0;
    }
    /**
    * @see Sequence.last
    */
    get last() {
        // optimizable
        return this.get(this._size - 1);
    }
    /**
    * @see Sequence.lastIndex
    */
    get lastIndex() {
        return this._size - 1;
    }
    /**
    * @see Collection.view
    */
    view() {
        return SequenceView_SequenceView.wrap(this);
    }
    /**
    * @see Collection.iterator
    */
    iterator() {
        throw new Error('Not implemented yet.');
    }
    /**
    * @see Set.iterator
    */
    *[Symbol.iterator]() {
        const elements = this._elements;
        for (let cell = 0; cell < elements.size; ++cell) {
            const base = cell * 32;
            for (let index = 0; index < 32; ++index) {
                if ((elements.get(cell) & (0b1 << index)) > 0) {
                    yield base + index;
                }
            }
        }
    }
    /**
    * @see Collection.equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        if (other instanceof BitSet_BitSet) {
            if (other.size !== this._elements.size)
                return false;
            for (let index = 0, length = other.size; index < length; ++index) {
                if (!this.has(other.get(index)))
                    return false;
            }
            return true;
        }
        return false;
    }
}
(function (BitSet) {
    /**
    * Return a copy of a given pack set.
    *
    * @param toCopy - A pack set to copy.
    */
    function copy(toCopy) {
        return toCopy == null ? toCopy : toCopy.clone();
    }
    BitSet.copy = copy;
    /**
    *
    */
    function allocate(capacity) {
        return new BitSet(capacity);
    }
    BitSet.allocate = allocate;
})(BitSet_BitSet || (BitSet_BitSet = {}));

// CONCATENATED MODULE: ./src/set/PackSet.ts


class PackSet_PackSet {
    /**
    * Create a new set collection based upon a pack instance.
    *
    * @param pack - An empty pack instance to wrap as a set.
    */
    constructor(elements) {
        this._elements = elements;
    }
    /**
    * @return Elementhis set underlying pack instance.
    */
    get elements() {
        return this._elements;
    }
    /**
    * Change the wrapped pack instance.
    *
    * @param elements - Elementhe new pack instance to wrap.
    */
    set elements(elements) {
        this._elements = elements;
    }
    /**
    * @see Collection.size
    */
    get size() {
        return this._elements.size;
    }
    /**
    * @see StaticCollection.capacity
    */
    get capacity() {
        return this._elements.capacity;
    }
    /**
    * @see Collection.has
    */
    has(element) {
        return this._elements.has(element);
    }
    /**
    * @see Sequence.indexOf
    */
    indexOf(element) {
        return this._elements.indexOf(element);
    }
    /**
    * @see Sequence.hasInSubsequence
    */
    hasInSubsequence(element, offset, size) {
        return this._elements.hasInSubsequence(element, offset, size);
    }
    /**
    * @see Sequence.indexOfInSubsequence
    */
    indexOfInSubsequence(element, offset, size) {
        return this._elements.indexOfInSubsequence(element, offset, size);
    }
    /**
    * @see Set.add
    */
    add(element) {
        if (this._elements.indexOf(element) === -1) {
            this._elements.push(element);
        }
    }
    /**
    * @see Set.delete
    */
    delete(element) {
        const index = this._elements.indexOf(element);
        if (index >= 0) {
            this._elements.warp(index);
        }
    }
    /**
    * @see Collection.get
    */
    get(index) {
        return this._elements.get(index);
    }
    /**
    * @see ReallocableCollection.reallocate
    */
    reallocate(capacity) {
        this._elements.reallocate(capacity);
    }
    /**
    * @see ReallocableCollection.fit
    */
    fit() {
        this._elements.fit();
    }
    /**
    * @see Set.copy
    */
    copy(toCopy) {
        this.clear();
        for (const element of toCopy) {
            this.add(element);
        }
    }
    /**
    * @see Collection.clone
    */
    clone() {
        return new PackSet_PackSet(this._elements.clone());
    }
    /**
    * @see Set.clear
    */
    clear() {
        this._elements.clear();
    }
    /**
    * @see Sequence.first
    */
    get first() {
        return this._elements.first;
    }
    /**
    * @see Sequence.firstIndex
    */
    get firstIndex() {
        return this._elements.firstIndex;
    }
    /**
    * @see Sequence.last
    */
    get last() {
        return this._elements.last;
    }
    /**
    * @see Sequence.lastIndex
    */
    get lastIndex() {
        return this._elements.lastIndex;
    }
    /**
    * @see Collection.view
    */
    view() {
        return SequenceView_SequenceView.wrap(this);
    }
    /**
    * @see Collection.iterator
    */
    iterator() {
        return this._elements.iterator();
    }
    /**
    * @see Set.iterator
    */
    *[Symbol.iterator]() {
        yield* this._elements;
    }
    /**
    * @see Collection.equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        if (other instanceof PackSet_PackSet) {
            if (other.size !== this._elements.size)
                return false;
            for (let index = 0, length = other.size; index < length; ++index) {
                if (!this.has(other.get(index)))
                    return false;
            }
            return true;
        }
        return false;
    }
}
(function (PackSet) {
    /**
    * Return a copy of a given pack set.
    *
    * @param toCopy - A pack set to copy.
    */
    function copy(toCopy) {
        return new PackSet(Pack_Pack.copy(toCopy.elements));
    }
    PackSet.copy = copy;
    /**
    * Instantiate a new set that wrap a pack of the given type of instance.
    *
    * @param capacity - Capacity of the set to allocate.
    *
    * @return A new set that wrap a pack of the given type of instance.
    */
    function any(capacity) {
        return new PackSet(Pack_Pack.any(capacity));
    }
    PackSet.any = any;
    /**
    * Instantiate a new set that wrap a unsigned byte pack of the given capacity.
    *
    * @param capacity - Capacity of the set to allocate.
    *
    * @return A new set that wrap a unsigned byte pack of the given capacity.
    */
    function uint8(capacity) {
        return new PackSet(Pack_Pack.uint8(capacity));
    }
    PackSet.uint8 = uint8;
    /**
    * Instantiate a new set that wrap a unsigned short pack of the given capacity.
    *
    * @param capacity - Capacity of the set to allocate.
    *
    * @return A new set that wrap a unsigned short pack of the given capacity.
    */
    function uint16(capacity) {
        return new PackSet(Pack_Pack.uint16(capacity));
    }
    PackSet.uint16 = uint16;
    /**
    * Instantiate a new set that wrap a unsigned integer pack of the given capacity.
    *
    * @param capacity - Capacity of the set to allocate.
    *
    * @return A new set that wrap a unsigned integer pack of the given capacity.
    */
    function uint32(capacity) {
        return new PackSet(Pack_Pack.uint32(capacity));
    }
    PackSet.uint32 = uint32;
    /**
    * Instantiate a new set that wrap a byte pack of the given capacity.
    *
    * @param capacity - Capacity of the set to allocate.
    *
    * @return A new set that wrap a byte pack of the given capacity.
    */
    function int8(capacity) {
        return new PackSet(Pack_Pack.int8(capacity));
    }
    PackSet.int8 = int8;
    /**
    * Instantiate a new set that wrap a short pack of the given capacity.
    *
    * @param capacity - Capacity of the set to allocate.
    *
    * @return A new set that wrap a short pack of the given capacity.
    */
    function int16(capacity) {
        return new PackSet(Pack_Pack.int16(capacity));
    }
    PackSet.int16 = int16;
    /**
    * Instantiate a new set that wrap a integer pack of the given capacity.
    *
    * @param capacity - Capacity of the set to allocate.
    *
    * @return A new set that wrap a integer pack of the given capacity.
    */
    function int32(capacity) {
        return new PackSet(Pack_Pack.int32(capacity));
    }
    PackSet.int32 = int32;
    /**
    * Instantiate a new set that wrap a float pack of the given capacity.
    *
    * @param capacity - Capacity of the set to allocate.
    *
    * @return A new set that wrap a float pack of the given capacity.
    */
    function float32(capacity) {
        return new PackSet(Pack_Pack.float32(capacity));
    }
    PackSet.float32 = float32;
    /**
    * Instantiate a new set that wrap a double pack of the given capacity.
    *
    * @param capacity - Capacity of the set to allocate.
    *
    * @return A new set that wrap a double pack of the given capacity.
    */
    function float64(capacity) {
        return new PackSet(Pack_Pack.float64(capacity));
    }
    PackSet.float64 = float64;
    /**
    * Instantiate a new set that wrap a unsigned integer pack that can store
    * values in range [0, maximum] and that is of the given capacity.
    *
    * @param maximum - Maximum value that can be stored.
    * @param capacity - Capacity of the set to allocate.
    *
    * @return A new set that wrap a unsigned integer pack that can store values
    *         in range [0, maximum] and that is of the given capacity.
    */
    function unsignedUpTo(maximum, capacity) {
        return new PackSet(Pack_Pack.unsignedUpTo(maximum, capacity));
    }
    PackSet.unsignedUpTo = unsignedUpTo;
    /**
    * Instantiate a new set that wrap a signed integer pack that can store
    * values in range [-maximum, maximum] and that is of the given capacity.
    *
    * @param maximum - Maximum value that can be stored.
    * @param capacity - Capacity of the set to allocate.
    *
    * @return A new set that wrap a signed integer pack that can store values
    *         in range [-maximum, maximum] and that is of the given capacity.
    */
    function signedUpTo(maximum, capacity) {
        return new PackSet(Pack_Pack.signedUpTo(maximum, capacity));
    }
    PackSet.signedUpTo = signedUpTo;
})(PackSet_PackSet || (PackSet_PackSet = {}));

// CONCATENATED MODULE: ./src/set/IdentifierSetIterator.ts
class IdentifierSetIterator {
    /**
    * Instantiate a new random access iterator instance.
    */
    constructor() {
        this.identifierSet = null;
        this.index = 0;
    }
    /**
    * @see Iterator#collection
    */
    collection() {
        return this.identifierSet;
    }
    /**
    * @see ForwardIterator.hasNext
    */
    hasNext() {
        return this.identifierSet && this.index < this.identifierSet.size - 1;
    }
    /**
    * @see BidirectionalIterator.go
    */
    go(index) {
        this.index = index;
    }
    /**
    * @see ForwardIterator.next
    */
    next() {
        this.index += 1;
    }
    /**
    * @see ForwardIterator.forward
    */
    forward(count) {
        this.index += count;
    }
    /**
    * @see ForwardIterator.end
    */
    end() {
        this.index = this.identifierSet ? this.identifierSet.lastIndex : 0;
    }
    /**
    * @see BackwardIterator.hasPrevious
    */
    hasPrevious() {
        return this.identifierSet && this.index > 0;
    }
    /**
    * @see BackwardIterator.previous
    */
    previous() {
        this.index -= 1;
    }
    /**
    * @see BackwardIterator.backward
    */
    backward(count) {
        this.index -= count;
    }
    /**
    * @see BackwardIterator.start
    */
    start() {
        this.index = 0;
    }
    /**
    * @see Iterator.get
    */
    get() {
        return this.identifierSet.get(this.index);
    }
    /**
    * @see Iterator.move
    */
    move(iterator) {
        if (iterator instanceof IdentifierSetIterator) {
            this.identifierSet = iterator.identifierSet;
            this.index = iterator.index;
        }
        else {
            throw new Error('Trying to move to a location described by an unsupported type of ' +
                'iterator');
        }
    }
    /**
    * Shallow-copy the given instance.
    *
    * @param toCopy - An instance to shallow copy.
    */
    copy(toCopy) {
        this.identifierSet = toCopy.identifierSet;
        this.index = toCopy.index;
    }
    /**
    * @see Iterator.clone
    */
    clone() {
        const copy = new IdentifierSetIterator();
        copy.copy(this);
        return copy;
    }
    /**
    * @see Iterator.equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        if (other instanceof IdentifierSetIterator) {
            return other.identifierSet === this.identifierSet &&
                other.index === this.index;
        }
        return false;
    }
}
(function (IdentifierSetIterator) {
    /**
    * Return a shallow copy of the given iterator.
    *
    * A shallow-copy *b* of an iterator *a* is an instance that follow both
    * properties :
    *  - b !== a
    *  - b.equals(a)
    *
    * @param toCopy - An iterator to copy.
    *
    * @return A shallow copy of the given iterator.
    */
    function copy(toCopy) {
        return toCopy.clone();
    }
    IdentifierSetIterator.copy = copy;
})(IdentifierSetIterator || (IdentifierSetIterator = {}));

// CONCATENATED MODULE: ./src/set/IdentifierSet.ts



class IdentifierSet_IdentifierSet {
    /**
    * Create a new empty identifier set.
    *
    * @param capacity - Number of identifier to allocate.
    */
    constructor(capacity) {
        this._sparse = UnsignedIntegerBuffer.upTo(capacity - 1, capacity);
        this._dense = UnsignedIntegerBuffer.upTo(capacity - 1, capacity);
        this._size = 0;
        for (let index = 0; index < capacity; ++index) {
            this._sparse[index] = index;
            this._dense[index] = index;
        }
    }
    /**
    * @see Collection.size
    */
    get size() {
        return this._size;
    }
    /**
    * @see StaticCollection.capacity
    */
    get capacity() {
        return this._dense.length;
    }
    /**
    * @see Collection.has
    */
    has(element) {
        return this._sparse[element] < this._size;
    }
    /**
    * @see Sequence.indexOf
    */
    indexOf(element) {
        const index = this._sparse[element];
        return index < this._size ? index : -1;
    }
    /**
    * @see Sequence.hasInSubsequence
    */
    hasInSubsequence(element, offset, size) {
        const index = this.indexOf(element);
        return index >= offset && index < offset + size;
    }
    /**
    * @see Sequence.indexOfInSubsequence
    */
    indexOfInSubsequence(element, offset, size) {
        const index = this.indexOf(element);
        return index >= offset && index < offset + size ? index : -1;
    }
    /**
    * @see MutableSet.add
    */
    add(element) {
        const index = this._sparse[element];
        if (index >= this._size) {
            const swap = this._dense[this._size];
            this._sparse[swap] = index;
            this._sparse[element] = this._size;
            this._dense[this._size] = element;
            this._dense[index] = swap;
            this._size += 1;
        }
    }
    next() {
        this._size += 1;
        return this._dense[this._size - 1];
    }
    /**
    * @see MutableSet.delete
    */
    delete(element) {
        const index = this._sparse[element];
        if (index < this._size) {
            this._size -= 1;
            const last = this._dense[this._size];
            this._dense[this._size] = element;
            this._dense[index] = last;
            this._sparse[element] = this._size;
            this._sparse[last] = index;
        }
    }
    /**
    * @see Sequence.get
    */
    get(index) {
        return this._dense[index];
    }
    /**
    * @see StaticCollection.reallocate
    */
    reallocate(capacity) {
        const oldDense = this._dense;
        const oldSize = this._size;
        this._dense = UnsignedIntegerBuffer.upTo(capacity - 1, capacity);
        this._sparse = UnsignedIntegerBuffer.upTo(capacity - 1, capacity);
        this._size = 0;
        for (let index = 0; index < capacity; ++index) {
            this._dense[index] = index;
            this._sparse[index] = index;
        }
        for (let index = 0; index < oldSize; ++index) {
            const element = oldDense[index];
            if (element < capacity) {
                const swap = this._dense[this._size];
                const swapIndex = this._sparse[element];
                this._sparse[swap] = swapIndex;
                this._sparse[element] = this._size;
                this._dense[this._size] = element;
                this._dense[swapIndex] = swap;
                this._size += 1;
            }
        }
    }
    /**
    * @see StaticCollection.fit
    */
    fit() {
        const max = this.max();
        this.reallocate(max);
    }
    /**
    * Return the maximum element of this set.
    *
    * @return The maximum element of this set.
    */
    max() {
        if (this._size <= 0)
            return undefined;
        let result = this._dense[0];
        for (let index = 1, length = this._size; index < length; ++index) {
            const cell = this._dense[index];
            result = cell > result ? cell : result;
        }
        return result;
    }
    /**
    * Return the minimum element of this set.
    *
    * @return The minimum element of this set.
    */
    min() {
        if (this._size <= 0)
            return undefined;
        let result = this._dense[0];
        for (let index = 1, length = this._size; index < length; ++index) {
            const cell = this._dense[index];
            result = cell < result ? cell : result;
        }
        return result;
    }
    /**
    * @see MutableSet.clear
    */
    clear() {
        this._size = 0;
    }
    /**
    * @see Sequence.first
    */
    get first() {
        return this._dense[0];
    }
    /**
    * @see Sequence.firstIndex
    */
    get firstIndex() {
        return 0;
    }
    /**
    * @see Sequence.last
    */
    get last() {
        return this._dense[this._size - 1];
    }
    /**
    * @see Sequence.lastIndex
    */
    get lastIndex() {
        return this._size - 1;
    }
    /**
    * @see Collection.iterator
    */
    iterator() {
        const iterator = new IdentifierSetIterator();
        iterator.identifierSet = this;
        iterator.index = 0;
        return iterator;
    }
    /**
    * @see Set.copy
    */
    copy(toCopy) {
        this.clear();
        for (const element of toCopy) {
            this.add(element);
        }
    }
    /**
    * @see Collection.view
    */
    view() {
        return SequenceView_SequenceView.wrap(this);
    }
    /**
    * @see Collection.clone
    */
    clone() {
        const result = IdentifierSet_IdentifierSet.allocate(this._dense.length);
        result.copy(this);
        return result;
    }
    /**
    * @see Collection.iterator
    */
    *[Symbol.iterator]() {
        for (let index = 0, length = this._size; index < length; ++index) {
            yield this._dense[index];
        }
    }
    /**
    * @see Collection.equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        if (other.isSet) {
            if (other.size !== this._size)
                return false;
            for (let index = 0, length = other.size; index < length; ++index) {
                if (!this.has(other.get(index)))
                    return false;
            }
            return true;
        }
        return false;
    }
}
(function (IdentifierSet) {
    function copy(toCopy) {
        return toCopy == null ? null : toCopy.clone();
    }
    IdentifierSet.copy = copy;
    function allocate(capacity) {
        return new IdentifierSet(capacity);
    }
    IdentifierSet.allocate = allocate;
})(IdentifierSet_IdentifierSet || (IdentifierSet_IdentifierSet = {}));

// CONCATENATED MODULE: ./src/set/NativeSet.ts

class NativeSet_NativeSet {
    /**
    * Create a new native set collection based upon the given set instance.
    *
    * @param elements - A set instance to wrap.
    */
    constructor(elements) {
        this._elements = elements;
    }
    /**
    * @return This set underlying native instance.
    */
    get elements() {
        return this._elements;
    }
    /**
    * Change the wrapped set instance.
    *
    * @param elements - The new set instance to wrap.
    */
    set elements(elements) {
        this._elements = elements;
    }
    /**
    * @see Collection.size
    */
    get size() {
        return this._elements.size;
    }
    /**
    * @see Collection.has
    */
    has(element) {
        return this._elements.has(element);
    }
    /**
    * @see Set.add
    */
    add(element) {
        this._elements.add(element);
    }
    /**
    * @see Set.delete
    */
    delete(element) {
        this._elements.delete(element);
    }
    /**
    * @see Collection.get
    */
    get(index) {
        if (index < 0) {
            return undefined;
        }
        let cursor = 0;
        for (const element of this._elements) {
            if (cursor === index) {
                return element;
            }
            else {
                cursor += 1;
            }
        }
        return undefined;
    }
    /**
    * @see Set.copy
    */
    copy(toCopy) {
        this._elements.clear();
        for (const element of toCopy) {
            this._elements.add(element);
        }
    }
    /**
    * @see Collection.clone
    */
    clone() {
        return new NativeSet_NativeSet(new Set(this._elements));
    }
    /**
    * @see Set.clear
    */
    clear() {
        this._elements.clear();
    }
    /**
    * @see Collection.view
    */
    view() {
        return View.wrap(this);
    }
    /**
    * @see Collection.iterator
    */
    iterator() {
        throw new Error('Native iterators are not supported yet.');
    }
    /**
    * @see Set.iterator
    */
    *[Symbol.iterator]() {
        yield* this._elements;
    }
    /**
    * @see Collection.equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        if (other instanceof NativeSet_NativeSet) {
            if (other.size !== this._elements.size)
                return false;
            for (let index = 0, length = other.size; index < length; ++index) {
                if (!this.has(other.get(index)))
                    return false;
            }
            return true;
        }
        return false;
    }
}
(function (NativeSet) {
    /**
    * Return a copy of a given native set.
    *
    * @param toCopy - A native set to copy.
    */
    function clone(toCopy) {
        return toCopy == null ? toCopy : toCopy.clone();
    }
    NativeSet.clone = clone;
    /**
    * Instantiate a new set that wrap a set of the given type of instance.
    *
    * @return A new set that wrap a set of the given type of instance.
    */
    function any() {
        return new NativeSet(new Set());
    }
    NativeSet.any = any;
    /**
    * Instantiate a new set that wrap a set of the given type of instance.
    *
    * @param set - The set to wrap.
    *
    * @return A new set that wrap a set of the given type of instance.
    */
    function wrap(set) {
        return new NativeSet(set);
    }
    NativeSet.wrap = wrap;
})(NativeSet_NativeSet || (NativeSet_NativeSet = {}));

// CONCATENATED MODULE: ./src/set/Set.ts




var Set_Set;
(function (Set) {
    /**
    * Return a shallow copy of the given set instance.
    *
    * @param toCopy - A set instance to shallow copy.
    *
    * @return A shallow copy of the given set instance.
    */
    function copy(toCopy) {
        return toCopy == null ? null : toCopy.clone();
    }
    Set.copy = copy;
    /**
    * Return a set that wrap an existing pack instance.
    *
    * @param pack - A pack instance to wrap into a set.
    *
    * @return A set that wrap the given pack instance.
    */
    function native() {
        return NativeSet_NativeSet.any();
    }
    Set.native = native;
    /**
    * Return a set that wrap an existing pack instance.
    *
    * @param pack - A pack instance to wrap into a set.
    *
    * @return A set that wrap the given pack instance.
    */
    function fromPack(pack) {
        return new PackSet_PackSet(pack);
    }
    Set.fromPack = fromPack;
    /**
    *
    */
    function identifier(capacity) {
        return new IdentifierSet_IdentifierSet(capacity);
    }
    Set.identifier = identifier;
    /**
    *
    */
    function bitset(capacity) {
        return new BitSet_BitSet(capacity);
    }
    Set.bitset = bitset;
})(Set_Set || (Set_Set = {}));

// CONCATENATED MODULE: ./src/set/PackSparseDenseSet.ts


class PackSparseDenseSet_PackSparseDenseSet {
    /**
    * Create a new empty sparse set based uppon the given pack.
    *
    * @param dense - An empty dense number pack.
    */
    constructor(dense) {
        this._sparse = dense.clone();
        this._dense = dense;
    }
    /**
    * @see Collection.size
    */
    get size() {
        return this._dense.size;
    }
    /**
    * @see StaticCollection.capacity
    */
    get capacity() {
        return this._dense.capacity;
    }
    /**
    * @see Collection.has
    */
    has(element) {
        const index = this._sparse.get(element);
        return index < this._dense.size && this._dense.get(index) === element;
    }
    /**
    * @see Sequence.indexOf
    */
    indexOf(element) {
        const index = this._sparse.get(element);
        if (index < this._dense.size && this._dense.get(index) === element) {
            return index;
        }
        return -1;
    }
    /**
    * @see Sequence.hasInSubsequence
    */
    hasInSubsequence(element, offset, size) {
        const index = this.indexOf(element);
        return index >= offset && index < offset + size;
    }
    /**
    * @see Sequence.indexOfInSubsequence
    */
    indexOfInSubsequence(element, offset, size) {
        const index = this.indexOf(element);
        return index >= offset && index < offset + size ? index : -1;
    }
    /**
    * @see MutableSet.add
    */
    add(element) {
        const index = this._sparse.get(element);
        if (index >= this._dense.size || this._dense.get(index) !== element) {
            this._sparse.set(element, this._dense.size);
            this._dense.push(element);
        }
    }
    /**
    * @see MutableSet.delete
    */
    delete(element) {
        const index = this._sparse.get(element);
        if (index < this._dense.size && this._dense.get(index) === element) {
            const last = this._dense.get(this._dense.size - 1);
            this._dense.warp(index);
            this._sparse.set(last, index);
        }
    }
    /**
    * @see Sequence.get
    */
    get(index) {
        return this._dense.get(index);
    }
    /**
    * @see MutableSet.copy
    */
    copy(toCopy) {
        let max = 0;
        for (let value of toCopy) {
            max = Math.max(value, max);
        }
        if (max > this.capacity) {
            this.reallocate(max + 1);
        }
        this.clear();
        for (let value of toCopy) {
            this.add(value);
        }
    }
    /**
    * @see Collection.clone
    */
    clone() {
        const copy = new PackSparseDenseSet_PackSparseDenseSet(this._dense.clone());
        copy._dense.copy(this._dense);
        copy._sparse.copy(this._sparse);
        return copy;
    }
    /**
    * @see ReallocableCollection.reallocate
    */
    reallocate(capacity) {
        const oldDense = this._dense;
        this._dense = this._dense.allocate(capacity);
        this._sparse = this._sparse.allocate(capacity);
        for (let index = 0, size = oldDense.size; index < size; ++index) {
            if (oldDense.get(index) < capacity) {
                this._sparse.set(oldDense.get(index), this._dense.size);
                this._dense.push(oldDense.get(index));
            }
        }
    }
    /**
    * @see ReallocableCollection.fit
    */
    fit() {
        const max = this.max();
        this._dense.reallocate(max + 1);
        this._sparse.reallocate(max + 1);
    }
    /**
    * Return the maximum element of this set.
    *
    * @return The maximum element of this set.
    */
    max() {
        if (this._dense.size <= 0)
            return undefined;
        let result = this._dense.get(0);
        for (let index = 1, length = this._dense.size; index < length; ++index) {
            const cell = this._dense.get(index);
            result = cell > result ? cell : result;
        }
        return result;
    }
    /**
    * Return the minimum element of this set.
    *
    * @return The minimum element of this set.
    */
    min() {
        if (this._dense.size <= 0)
            return undefined;
        let result = this._dense.get(0);
        for (let index = 1, length = this._dense.size; index < length; ++index) {
            const cell = this._dense.get(index);
            result = cell < result ? cell : result;
        }
        return result;
    }
    /**
    * @see MutableSet.clear
    */
    clear() {
        this._dense.clear();
    }
    /**
    * @see Sequence.first
    */
    get first() {
        return this._dense.first;
    }
    /**
    * @see Sequence.firstIndex
    */
    get firstIndex() {
        return this._dense.firstIndex;
    }
    /**
    * @see Sequence.last
    */
    get last() {
        return this._dense.last;
    }
    /**
    * @see Sequence.first
    */
    get lastIndex() {
        return this._dense.lastIndex;
    }
    /**
    * @see Collection.view
    */
    view() {
        return SequenceView_SequenceView.wrap(this);
    }
    /**
    * @see Collection.iterator
    */
    iterator() {
        return this._dense.iterator();
    }
    /**
    * @see Collection.iterator
    */
    *[Symbol.iterator]() {
        for (let index = 0, length = this._dense.size; index < length; ++index) {
            yield this._dense.get(index);
        }
    }
    /**
    * @see Collection.equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        if (other instanceof PackSparseDenseSet_PackSparseDenseSet) {
            if (other.size !== this._dense.size)
                return false;
            for (let index = 0, length = other.size; index < length; ++index) {
                if (!this.has(other.get(index)))
                    return false;
            }
            return true;
        }
        return false;
    }
}
(function (PackSparseDenseSet) {
    /**
    * Return a copy of a given sparse set.
    *
    * @param toCopy - A sparse set to copy.
    */
    function copy(toCopy) {
        return toCopy == null ? null : toCopy.clone();
    }
    PackSparseDenseSet.copy = copy;
    /**
    * Instantiate a uint32 sparse-dense set.
    *
    * @param capacity - Capacity of the sparse-dense set to instantiate.
    *
    * @return A new sparse-dense set of the given capacity.
    */
    function uint32(capacity) {
        return new PackSparseDenseSet(Pack_Pack.uint32(capacity));
    }
    PackSparseDenseSet.uint32 = uint32;
    /**
    * Instantiate a uint16 sparse-dense set.
    *
    * @param capacity - Capacity of the sparse-dense set to instantiate.
    *
    * @return A new sparse-dense set of the given capacity.
    */
    function uint16(capacity) {
        return new PackSparseDenseSet(Pack_Pack.uint16(capacity));
    }
    PackSparseDenseSet.uint16 = uint16;
    /**
    * Instantiate a uint8 sparse-dense set.
    *
    * @param capacity - Capacity of the sparse-dense set to instantiate.
    *
    * @return A new sparse-dense set of the given capacity.
    */
    function uint8(capacity) {
        return new PackSparseDenseSet(Pack_Pack.uint8(capacity));
    }
    PackSparseDenseSet.uint8 = uint8;
    /**
    * Instantiate an array sparse-dense set.
    *
    * @param capacity - Capacity of the sparse-dense set to instantiate.
    *
    * @return A new sparse-dense set of the given capacity.
    */
    function any(capacity) {
        return new PackSparseDenseSet(Pack_Pack.any(capacity));
    }
    PackSparseDenseSet.any = any;
    /**
    * Instantiate a sparse-dense set that can store numbers up to the given value.
    *
    * @param capacity - Maximum number to be able to store into the resulting sparse-dense set.
    *
    * @return A new sparse-dense set that can store numbers up to the given value.
    */
    function upTo(capacity) {
        if (capacity <= 0xff) {
            return new PackSparseDenseSet(Pack_Pack.uint8(capacity));
        }
        else if (capacity <= 0xffff) {
            return new PackSparseDenseSet(Pack_Pack.uint16(capacity));
        }
        else {
            return new PackSparseDenseSet(Pack_Pack.uint32(capacity));
        }
    }
    PackSparseDenseSet.upTo = upTo;
})(PackSparseDenseSet_PackSparseDenseSet || (PackSparseDenseSet_PackSparseDenseSet = {}));

// CONCATENATED MODULE: ./src/set/SparseDenseSet.ts

var SparseDenseSet_SparseDenseSet;
(function (SparseDenseSet) {
    /**
    * Copy an existing sparse-dense set instance.
    *
    * @param toCopy - An instance to copy.
    *
    * @return A copy of the given instance.
    */
    function copy(toCopy) {
        return toCopy == null ? null : toCopy.clone();
    }
    SparseDenseSet.copy = copy;
    /**
    * Instantiate a uint32 sparse-dense set.
    *
    * @param capacity - Capacity of the sparse-dense set to instantiate.
    *
    * @return A new sparse-dense set of the given capacity.
    */
    function uint32(capacity) {
        return PackSparseDenseSet_PackSparseDenseSet.uint32(capacity);
    }
    SparseDenseSet.uint32 = uint32;
    /**
    * Instantiate a uint16 sparse-dense set.
    *
    * @param capacity - Capacity of the sparse-dense set to instantiate.
    *
    * @return A new sparse-dense set of the given capacity.
    */
    function uint16(capacity) {
        return PackSparseDenseSet_PackSparseDenseSet.uint16(capacity);
    }
    SparseDenseSet.uint16 = uint16;
    /**
    * Instantiate a uint8 sparse-dense set.
    *
    * @param capacity - Capacity of the sparse-dense set to instantiate.
    *
    * @return A new sparse-dense set of the given capacity.
    */
    function uint8(capacity) {
        return PackSparseDenseSet_PackSparseDenseSet.uint8(capacity);
    }
    SparseDenseSet.uint8 = uint8;
    /**
    * Instantiate an array sparse-dense set.
    *
    * @param capacity - Capacity of the sparse-dense set to instantiate.
    *
    * @return A new sparse-dense set of the given capacity.
    */
    function any(capacity) {
        return PackSparseDenseSet_PackSparseDenseSet.any(capacity);
    }
    SparseDenseSet.any = any;
    /**
    * Instantiate a sparse-dense set that can store numbers up to the given value.
    *
    * @param capacity - Maximum number to be able to store into the resulting sparse-dense set.
    *
    * @return A new sparse-dense set that can store numbers up to the given value.
    */
    function upTo(capacity) {
        return PackSparseDenseSet_PackSparseDenseSet.upTo(capacity);
    }
    SparseDenseSet.upTo = upTo;
})(SparseDenseSet_SparseDenseSet || (SparseDenseSet_SparseDenseSet = {}));

// CONCATENATED MODULE: ./src/set/index.ts








// CONCATENATED MODULE: ./src/circular/CircularBufferIterator.ts
class CircularBufferIterator {
    /**
    * Instantiate a new random access iterator instance.
    */
    constructor() {
        this.buffer = null;
        this.index = 0;
    }
    /**
    * @see Iterator.collection
    */
    collection() {
        return this.buffer;
    }
    /**
    * @see ForwardIterator.hasNext
    */
    hasNext() {
        return this.buffer && this.index < this.buffer.size;
    }
    /**
    * @see ForwardIterator.next
    */
    next() {
        this.index += 1;
    }
    /**
    * @see ForwardIterator.forward
    */
    forward(count) {
        this.index += count;
    }
    /**
    * @see ForwardIterator.end
    */
    end() {
        this.index = this.buffer ? this.buffer.lastIndex : 0;
    }
    /**
    * @see BackwardIterator.hasPrevious
    */
    hasPrevious() {
        return this.buffer && this.index > 0;
    }
    /**
    * @see BackwardIterator.previous
    */
    previous() {
        this.index -= 1;
    }
    /**
    * @see BackwardIterator.backward
    */
    backward(count) {
        this.index -= count;
    }
    /**
    * @see BackwardIterator.start
    */
    start() {
        this.index = 0;
    }
    /**
    * @see Iterator.get
    */
    get() {
        return this.buffer.get(this.index);
    }
    /**
    * @see Iterator.move
    */
    move(iterator) {
        if (iterator instanceof CircularBufferIterator) {
            this.buffer = iterator.buffer;
            this.index = iterator.index;
        }
        else {
            throw new Error('Trying to move to a location described by an unsupported type of ' +
                'iterator');
        }
    }
    /**
    * @see BidirectionalIterator.go
    */
    go(index) {
        this.index = index;
    }
    /**
    * Shallow-copy the given instance.
    *
    * @param toCopy
    */
    copy(toCopy) {
        this.buffer = toCopy.buffer;
        this.index = toCopy.index;
    }
    /**
    * @see Iterator.clone
    */
    clone() {
        const copy = new CircularBufferIterator();
        copy.copy(this);
        return copy;
    }
    /**
    * @see Iterator.equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        if (other instanceof CircularBufferIterator) {
            return other.buffer === this.buffer &&
                other.index === this.index;
        }
        return false;
    }
}
(function (CircularBufferIterator) {
    /**
    * Return a shallow copy of the given iterator.
    *
    * A shallow-copy *b* of an iterator *a* is an instance that follow both
    * properties :
    *  - b !== a
    *  - b.equals(a)
    *
    * @param toCopy - An iterator to copy.
    *
    * @return A shallow copy of the given iterator.
    */
    function copy(toCopy) {
        return toCopy.clone();
    }
    CircularBufferIterator.copy = copy;
})(CircularBufferIterator || (CircularBufferIterator = {}));

// CONCATENATED MODULE: ./src/circular/PackCircularBuffer.ts




class PackCircularBuffer_PackCircularBuffer {
    /**
    * Create a new circular buffer uppon an existing pack implementation.
    *
    * @param elements - A pack to use for storing this circular buffer elements.
    * @param [offset = 0] - Number of element to skip from the start of the pack.
    * @param [size = elements.size - offset] - Number of element to keep.
    */
    constructor(elements, offset = 0, size = elements.size - offset) {
        this._elements = elements;
        this._elements.size = elements.capacity;
        this._start = offset;
        this._size = size;
    }
    /**
    * @see Collection.size
    */
    get size() {
        return this._size;
    }
    /**
    * @see Collection.size
    */
    set size(newSize) {
        if (this.capacity < newSize) {
            this.reallocate(newSize);
        }
        if (newSize > this._size) {
            const start = this._start;
            const capacity = this._elements.capacity;
            for (let index = this._size; index < newSize; ++index) {
                this._elements.empty((start + index) % capacity);
            }
        }
        this._size = newSize;
    }
    /**
    * @see StaticCollection.capacity
    */
    get capacity() {
        return this._elements.capacity;
    }
    /**
    * @see ReallocableCollection.reallocate
    */
    reallocate(capacity) {
        const next = Pack_Pack.copy(this._elements);
        next.reallocate(capacity);
        const nextSize = Math.min(capacity, this._size);
        for (let index = 0; index < capacity && index < this._size; ++index) {
            next.set(nextSize - index - 1, this.get(this._size - index - 1));
        }
        this._elements = next;
        this._size = nextSize;
        this._start = 0;
    }
    /**
    * @see ReallocableCollection.fit
    */
    fit() {
        this.reallocate(this._size);
    }
    /**
    * @see Sequence.first
    */
    get first() {
        return this._size > 0 ? this._elements.get(this._start) : undefined;
    }
    /**
    * @see Sequence.firstIndex
    */
    get firstIndex() {
        return 0;
    }
    /**
    * @see Sequence.last
    */
    get last() {
        return this._size > 0 ? this._elements.get((this._start + this._size) % this._elements.capacity) : undefined;
    }
    /**
    * @see Sequence.lastIndex
    */
    get lastIndex() {
        return Math.max(this._size - 1, 0);
    }
    /**
    * @see Collection.iterator
    */
    iterator() {
        const result = new CircularBufferIterator();
        result.buffer = this;
        result.index = 0;
        return result;
    }
    /**
    * @see Sequence.get
    */
    get(index) {
        return this._elements.get((this._start + index) % this._elements.capacity);
    }
    /**
    * @see MutableSequence.fill
    */
    fill(element) {
        for (let index = 0, size = this._size; index < size; ++index) {
            this.set(index, element);
        }
    }
    /**
    * @see MutableSequence.pop
    */
    pop() {
        const last = this._size - 1;
        const result = this.get(last);
        this.delete(last);
        return result;
    }
    /**
    * @see MutableSequence.shift
    */
    shift() {
        const result = this.get(0);
        this.delete(0);
        return result;
    }
    /**
    * @see MutableSequence.swap
    */
    swap(first, second) {
        const rfirst = (this._start + first) % this._elements.capacity;
        const rsecond = (this._start + second) % this._elements.capacity;
        this._elements.swap(rfirst, rsecond);
    }
    /**
    * @see MutableSequence.set
    */
    set(index, value) {
        if (index >= this._elements.capacity) {
            const offset = Math.min(index - this._elements.capacity + 1, this._size);
            this._start = (this._start + offset) % this._elements.capacity;
            this._size -= offset;
            index = this._elements.capacity - 1;
        }
        while (index >= this._size) {
            this.push(this._elements.constructor.DEFAULElement_VALUE);
        }
        this._elements.set((this._start + index) % this._elements.capacity, value);
    }
    /**
    * @see MutableSequence.insert
    */
    insert(index, value) {
        if (index >= this._size) {
            this.set(index, value);
        }
        else {
            if (this._size == this._elements.capacity) {
                this._start = (this._start + 1) % this._elements.capacity;
                --index;
            }
            else {
                this._size += 1;
            }
            for (let cursor = this._size - 1; cursor > index; --cursor) {
                this.set(cursor, this.get(cursor - 1));
            }
            this.set(index, value);
        }
    }
    /**
    * @see MutableSequence.push
    */
    push(value) {
        if (this._size < this._elements.capacity) {
            this._elements.set((this._start + this._size) % this._elements.capacity, value);
            this._size += 1;
        }
        else {
            this._elements.set(this._start, value);
            this._start = (this._start + 1) % this._elements.capacity;
        }
    }
    /**
    * @see MutableSequence.unshift
    */
    unshift(value) {
        this._start -= 1;
        if (this._start < 0) {
            this._start += this._elements.capacity;
        }
        this._elements.set(this._start, value);
        if (this._size < this._elements.capacity) {
            this._size += 1;
        }
    }
    /**
    * @see MutableSequence.delete
    */
    delete(index) {
        for (let toMove = index; toMove > 0; --toMove) {
            this.set(toMove, this.get(toMove - 1));
        }
        this._start = (this._start + 1) % this._elements.capacity;
        this._size -= 1;
    }
    /**
    * @see MutableSequence.deleteMany
    */
    deleteMany(from, size) {
        const end = from + size;
        for (let cursor = 0; cursor < from; ++cursor) {
            this.set(end - cursor - 1, this.get(from - cursor - 1));
        }
        this._start = (this._start + size) % this._elements.capacity;
        this._size -= size;
    }
    /**
    * @see MutableSequence.warp
    */
    warp(index) {
        this.set(index, this.get(0));
        this._start = (this._start + 1) % this._elements.capacity;
        this._size -= 1;
    }
    /**
    * @see Collection.has
    */
    has(element) {
        return this.indexOf(element) >= 0;
    }
    /**
    * @see Sequence.indexOf
    */
    indexOf(element) {
        for (let index = 0, length = this._size; index < length; ++index) {
            if (equals(this._elements.get((this._start + index) % this._elements.capacity), element)) {
                return index;
            }
        }
        return -1;
    }
    /**
    * @see Sequence.hasInSubsequence
    */
    hasInSubsequence(element, offset, size) {
        return this.indexOfInSubsequence(element, offset, size) >= 0;
    }
    /**
    * @see Sequence.indexOfInSubsequence
    */
    indexOfInSubsequence(element, offset, size) {
        for (let index = offset, length = offset + size; index < length; ++index) {
            if (equals(this._elements.get((this._start + index) % this._elements.capacity), element)) {
                return index;
            }
        }
        return -1;
    }
    /**
    * @see Sequence.concat
    */
    concat(toConcat) {
        const firstIndex = toConcat.firstIndex;
        const lastIndex = toConcat.lastIndex + 1;
        for (let index = firstIndex; index < lastIndex; ++index) {
            this.push(toConcat.get(index));
        }
    }
    /**
    * @see Sequence.copy
    */
    copy(toCopy) {
        if (toCopy.size > this.capacity) {
            this.reallocate(toCopy.size);
        }
        this.clear();
        for (let index = 0, length = toCopy.size; index < length; ++index) {
            this.push(toCopy.get(index));
        }
    }
    /**
    * @see CircularBuffer.clone
    */
    clone() {
        return new PackCircularBuffer_PackCircularBuffer(this._elements.clone(), this._start, this._size);
    }
    /**
    * @see Collection.view
    */
    view() {
        return SequenceView_SequenceView.wrap(this);
    }
    /**
    * @see CircularBuffer.clear
    */
    clear() {
        this._start = 0;
        this._size = 0;
    }
    /**
    * @see Collection.iterator
    */
    *[Symbol.iterator]() {
        for (let index = 0, length = this._size; index < length; ++index) {
            yield this._elements.get((this._start + index) % this._elements.capacity);
        }
    }
    /**
    * @see Collection.equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        if (other instanceof PackCircularBuffer_PackCircularBuffer) {
            if (other.size !== this._size)
                return false;
            for (let index = 0, size = this._size; index < size; ++index) {
                if (!equals(other.get(index), this.get(index)))
                    return false;
            }
            return true;
        }
        return false;
    }
}
(function (PackCircularBuffer) {
    /**
    * Shallow copy an existing pack circular buffer instance.
    *
    * @param toCopy - An instance to shallow copy.
    *
    * @return A shallow copy of the given instance.
    */
    function copy(toCopy) {
        return toCopy == null ? null : toCopy.clone();
    }
    PackCircularBuffer.copy = copy;
    /**
    * Instantiate a new circular buffer that wrap a pack of the given type of instance.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new buffer that wrap a pack of the given type of instance.
    */
    function any(capacity) {
        return new PackCircularBuffer(Pack_Pack.any(capacity));
    }
    PackCircularBuffer.any = any;
    /**
    * Instantiate a new circular buffer that wrap a unsigned byte pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a unsigned byte pack of the given capacity.
    */
    function uint8(capacity) {
        return new PackCircularBuffer(Pack_Pack.uint8(capacity));
    }
    PackCircularBuffer.uint8 = uint8;
    /**
    * Instantiate a new circular buffer that wrap a unsigned short pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a unsigned short pack of the given capacity.
    */
    function uint16(capacity) {
        return new PackCircularBuffer(Pack_Pack.uint16(capacity));
    }
    PackCircularBuffer.uint16 = uint16;
    /**
    * Instantiate a new circular buffer that wrap a unsigned integer pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a unsigned integer pack of the given capacity.
    */
    function uint32(capacity) {
        return new PackCircularBuffer(Pack_Pack.uint32(capacity));
    }
    PackCircularBuffer.uint32 = uint32;
    /**
    * Instantiate a new circular buffer that wrap a byte pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a byte pack of the given capacity.
    */
    function int8(capacity) {
        return new PackCircularBuffer(Pack_Pack.int8(capacity));
    }
    PackCircularBuffer.int8 = int8;
    /**
    * Instantiate a new circular buffer that wrap a short pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a short pack of the given capacity.
    */
    function int16(capacity) {
        return new PackCircularBuffer(Pack_Pack.int16(capacity));
    }
    PackCircularBuffer.int16 = int16;
    /**
    * Instantiate a new circular buffer that wrap a integer pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a integer pack of the given capacity.
    */
    function int32(capacity) {
        return new PackCircularBuffer(Pack_Pack.int32(capacity));
    }
    PackCircularBuffer.int32 = int32;
    /**
    * Instantiate a new circular buffer that wrap a float pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a float pack of the given capacity.
    */
    function float32(capacity) {
        return new PackCircularBuffer(Pack_Pack.float32(capacity));
    }
    PackCircularBuffer.float32 = float32;
    /**
    * Instantiate a new circular buffer that wrap a double pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a double pack of the given capacity.
    */
    function float64(capacity) {
        return new PackCircularBuffer(Pack_Pack.float64(capacity));
    }
    PackCircularBuffer.float64 = float64;
    /**
    * Instantiate a new pack that wrap a unsigned integer pack that can store
    * values in range [0, maximum] and that is of the given capacity.
    *
    * @param maximum - Maximum value that can be stored.
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new pack that wrap a unsigned integer pack that can store values
    *         in range [0, maximum] and that is of the given capacity.
    */
    function unsignedUpTo(maximum, capacity) {
        return new PackCircularBuffer(Pack_Pack.unsignedUpTo(maximum, capacity));
    }
    PackCircularBuffer.unsignedUpTo = unsignedUpTo;
    /**
    * Instantiate a new circular buffer that wrap a signed integer pack that can store
    * values in range [-maximum, maximum] and that is of the given capacity.
    *
    * @param maximum - Maximum value that can be stored.
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a signed integer pack that can store values
    *         in range [-maximum, maximum] and that is of the given capacity.
    */
    function signedUpTo(maximum, capacity) {
        return new PackCircularBuffer(Pack_Pack.signedUpTo(maximum, capacity));
    }
    PackCircularBuffer.signedUpTo = signedUpTo;
})(PackCircularBuffer_PackCircularBuffer || (PackCircularBuffer_PackCircularBuffer = {}));

// CONCATENATED MODULE: ./src/circular/CircularBuffer.ts


var CircularBuffer_CircularBuffer;
(function (CircularBuffer) {
    /**
    * Return a shallow copy the given circular buffer.
    *
    * @param buffer - An existing buffer instance to copy.
    *
    * @return A shallow copy the given circular buffer.
    */
    function copy(buffer) {
        return buffer == null ? null : buffer.clone();
    }
    CircularBuffer.copy = copy;
    /**
    * Return a circular buffer that wraps the given pack.
    *
    * @param pack - An existing pack instance to wrap.
    *
    * @return A circular buffer that wraps the given pack.
    */
    function fromPack(pack) {
        return new PackCircularBuffer_PackCircularBuffer(pack);
    }
    CircularBuffer.fromPack = fromPack;
    /**
    * Instantiate a new circular buffer that wrap a pack of the given type of instance.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new buffer that wrap a pack of the given type of instance.
    */
    function any(capacity) {
        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.any(capacity));
    }
    CircularBuffer.any = any;
    /**
    * Instantiate a new circular buffer that wrap a unsigned byte pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a unsigned byte pack of the given capacity.
    */
    function uint8(capacity) {
        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.uint8(capacity));
    }
    CircularBuffer.uint8 = uint8;
    /**
    * Instantiate a new circular buffer that wrap a unsigned short pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a unsigned short pack of the given capacity.
    */
    function uint16(capacity) {
        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.uint16(capacity));
    }
    CircularBuffer.uint16 = uint16;
    /**
    * Instantiate a new circular buffer that wrap a unsigned integer pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a unsigned integer pack of the given capacity.
    */
    function uint32(capacity) {
        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.uint32(capacity));
    }
    CircularBuffer.uint32 = uint32;
    /**
    * Instantiate a new circular buffer that wrap a byte pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a byte pack of the given capacity.
    */
    function int8(capacity) {
        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.int8(capacity));
    }
    CircularBuffer.int8 = int8;
    /**
    * Instantiate a new circular buffer that wrap a short pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a short pack of the given capacity.
    */
    function int16(capacity) {
        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.int16(capacity));
    }
    CircularBuffer.int16 = int16;
    /**
    * Instantiate a new circular buffer that wrap a integer pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a integer pack of the given capacity.
    */
    function int32(capacity) {
        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.int32(capacity));
    }
    CircularBuffer.int32 = int32;
    /**
    * Instantiate a new circular buffer that wrap a float pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a float pack of the given capacity.
    */
    function float32(capacity) {
        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.float32(capacity));
    }
    CircularBuffer.float32 = float32;
    /**
    * Instantiate a new circular buffer that wrap a double pack of the given capacity.
    *
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a double pack of the given capacity.
    */
    function float64(capacity) {
        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.float64(capacity));
    }
    CircularBuffer.float64 = float64;
    /**
    * Instantiate a new circular buffer that wrap an instance pack of the given capacity.
    *
    * @param allocator - Capacity of the pack to allocate.
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap an instance pack of the given capacity.
    */
    function instance(allocator, capacity) {
        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.instance(allocator, capacity));
    }
    CircularBuffer.instance = instance;
    /**
    * Instantiate a new pack that wrap a unsigned integer pack that can store
    * values in range [0, maximum] and that is of the given capacity.
    *
    * @param maximum - Maximum value that can be stored.
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new pack that wrap a unsigned integer pack that can store values
    *         in range [0, maximum] and that is of the given capacity.
    */
    function unsignedUpTo(maximum, capacity) {
        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.unsignedUpTo(maximum, capacity));
    }
    CircularBuffer.unsignedUpTo = unsignedUpTo;
    /**
    * Instantiate a new circular buffer that wrap a signed integer pack that can store
    * values in range [-maximum, maximum] and that is of the given capacity.
    *
    * @param maximum - Maximum value that can be stored.
    * @param capacity - Capacity of the pack to allocate.
    *
    * @return A new circular buffer that wrap a signed integer pack that can store values
    *         in range [-maximum, maximum] and that is of the given capacity.
    */
    function signedUpTo(maximum, capacity) {
        return new PackCircularBuffer_PackCircularBuffer(Pack_Pack.signedUpTo(maximum, capacity));
    }
    CircularBuffer.signedUpTo = signedUpTo;
})(CircularBuffer_CircularBuffer || (CircularBuffer_CircularBuffer = {}));

// CONCATENATED MODULE: ./src/circular/index.ts




// CONCATENATED MODULE: ./src/heap/PackHeap.ts


/**
* A heap based uppon a pack collection.
*/
class PackHeap_PackHeap {
    /**
    * Instantiate a new empty heap.
    *
    * @param elements - Pack to use for storing the heap.
    * @param comparator - A comparator to use for sorting the heap.
    */
    constructor(elements, comparator) {
        this._comparator = comparator;
        this._elements = elements;
    }
    /**
    * @see Heap#next
    */
    next() {
        const result = this._elements.get(0);
        this.delete(0);
        return result;
    }
    /**
    * @see Heap#add
    */
    push(value) {
        this._elements.push(value);
        this.upliftAsPossible(this._elements.size - 1);
    }
    /**
    * Moves the value at the given index up to the root of the tree while the
    * value violate the order of the heap.
    *
    * @param index - Index of the value to move up.
    *
    * @return The new index of the given value.
    */
    upliftAsPossible(index) {
        let cell = index;
        let parent = (cell - 1) >> 1;
        while (cell > 0 && this.compare(cell, parent) > 0) {
            this._elements.swap(cell, parent);
            cell = parent;
            parent = (cell - 1) >> 1;
        }
        return cell;
    }
    /**
    * Moves the value at the given index down to the leafs of the tree while the
    * value violate the order of the heap.
    *
    * @param index - Index of the value to move down.
    *
    * @return The new index of the given value.
    */
    diveAsPossible(index) {
        const size = this._elements.size;
        let cell = index;
        let next = (cell << 1) + 1;
        while (next < size) {
            if (next + 1 < size && this.compare(cell, next + 1) < 0) {
                if (this.compare(next, next + 1) < 0) {
                    this._elements.swap(cell, next + 1);
                    cell = next + 1;
                }
                else {
                    this._elements.swap(cell, next);
                    cell = next;
                }
            }
            else if (this.compare(cell, next) < 0) {
                this._elements.swap(cell, next);
                cell = next;
            }
            else {
                break;
            }
            next = (cell << 1) + 1;
        }
        return cell;
    }
    /**
    * @see Heap#delete
    */
    delete(index) {
        const size = this._elements.size;
        this._elements.warp(index);
        if (index < size) {
            this.diveAsPossible(this.upliftAsPossible(index));
        }
    }
    /**
    * @see Heap#compare
    */
    compare(left, right) {
        return this._comparator(this._elements.get(left), this._elements.get(right));
    }
    /**
    * @see Sequence#get
    */
    get(index) {
        return this._elements.get(index);
    }
    /**
    * @see Sequence#indexOf
    */
    indexOf(value) {
        return this._elements.indexOf(value);
    }
    /**
    * @see Sequence.hasInSubsequence
    */
    hasInSubsequence(element, offset, size) {
        return this._elements.hasInSubsequence(element, offset, size);
    }
    /**
    * @see Sequence.indexOfInSubsequence
    */
    indexOfInSubsequence(element, offset, size) {
        return this._elements.indexOfInSubsequence(element, offset, size);
    }
    /**
    * @see Collection#has
    */
    has(value) {
        return this._elements.has(value);
    }
    /**
    * @see Sequence.first
    */
    get first() {
        return this._elements.first;
    }
    /**
    * @see Sequence.firstIndex
    */
    get firstIndex() {
        return this._elements.firstIndex;
    }
    /**
    * @see Sequence.last
    */
    get last() {
        return this._elements.last;
    }
    /**
    * @see Sequence.lastIndex
    */
    get lastIndex() {
        return this._elements.lastIndex;
    }
    /**
    * @see Collection.iterator
    */
    iterator() {
        return this._elements.iterator();
    }
    /**
    * @see Collection#get size
    */
    get size() {
        return this._elements.size;
    }
    /**
    * @see Heap#get comparator
    */
    get comparator() {
        return this._comparator;
    }
    /**
    * @see StaticCollection#get capacity
    */
    get capacity() {
        return this._elements.capacity;
    }
    /**
    * @see ReallocableCollection#reallocate
    */
    reallocate(capacity) {
        this._elements.reallocate(capacity);
    }
    /**
    * @see ReallocableCollection#fit
    */
    fit() {
        this._elements.fit();
    }
    /**
    * @see Heap#clear
    */
    clear() {
        this._elements.clear();
    }
    /**
    * @see Collection#clone
    */
    clone() {
        return new PackHeap_PackHeap(Pack_Pack.copy(this._elements), this._comparator);
    }
    /**
    * @see Collection.view
    */
    view() {
        return SequenceView_SequenceView.wrap(this);
    }
    /**
    * @see Collection#equals
    */
    equals(other) {
        if (other == null)
            return false;
        if (other === this)
            return true;
        if (other instanceof PackHeap_PackHeap) {
            if (this.size !== other.size)
                return false;
            for (let index = 0, size = this.size; index < size; ++index) {
                if (this.get(index) !== other.get(index)) {
                    return false;
                }
            }
            return true;
        }
        return false;
    }
    /**
    * @see ReallocableCollection#iterator
    */
    *[Symbol.iterator]() {
        yield* this._elements;
    }
}
(function (PackHeap) {
    function defaultNumberComparator(a, b) {
        return a - b;
    }
    /**
    * Copy an existing heap instance.
    *
    * @param toCopy - An heap instance to copy.
    *
    * @return A copy of the given heap instance.
    */
    function copy(toCopy) {
        return toCopy == null ? null : toCopy.clone();
    }
    PackHeap.copy = copy;
    function any(capacity, comparator) {
        return new PackHeap(Pack_Pack.any(capacity), comparator);
    }
    PackHeap.any = any;
    function uint8(capacity, comparator = defaultNumberComparator) {
        return new PackHeap(Pack_Pack.uint8(capacity), comparator);
    }
    PackHeap.uint8 = uint8;
    function uint16(capacity, comparator = defaultNumberComparator) {
        return new PackHeap(Pack_Pack.uint16(capacity), comparator);
    }
    PackHeap.uint16 = uint16;
    function uint32(capacity, comparator = defaultNumberComparator) {
        return new PackHeap(Pack_Pack.uint32(capacity), comparator);
    }
    PackHeap.uint32 = uint32;
    function int8(capacity, comparator = defaultNumberComparator) {
        return new PackHeap(Pack_Pack.int8(capacity), comparator);
    }
    PackHeap.int8 = int8;
    function int16(capacity, comparator = defaultNumberComparator) {
        return new PackHeap(Pack_Pack.int16(capacity), comparator);
    }
    PackHeap.int16 = int16;
    function int32(capacity, comparator = defaultNumberComparator) {
        return new PackHeap(Pack_Pack.int32(capacity), comparator);
    }
    PackHeap.int32 = int32;
    function float32(capacity, comparator = defaultNumberComparator) {
        return new PackHeap(Pack_Pack.float32(capacity), comparator);
    }
    PackHeap.float32 = float32;
    function float64(capacity, comparator = defaultNumberComparator) {
        return new PackHeap(Pack_Pack.float64(capacity), comparator);
    }
    PackHeap.float64 = float64;
    function fromPack(pack, comparator) {
        return new PackHeap(pack, comparator);
    }
    PackHeap.fromPack = fromPack;
})(PackHeap_PackHeap || (PackHeap_PackHeap = {}));

// CONCATENATED MODULE: ./src/heap/Heap.ts


var Heap_Heap;
(function (Heap) {
    function defaultNumberComparator(a, b) {
        return a - b;
    }
    function copy(pack) {
        return pack == null ? null : pack.clone();
    }
    Heap.copy = copy;
    function any(capacity, comparator) {
        return new PackHeap_PackHeap(Pack_Pack.any(capacity), comparator);
    }
    Heap.any = any;
    function uint8(capacity, comparator = defaultNumberComparator) {
        return new PackHeap_PackHeap(Pack_Pack.uint8(capacity), comparator);
    }
    Heap.uint8 = uint8;
    function uint16(capacity, comparator = defaultNumberComparator) {
        return new PackHeap_PackHeap(Pack_Pack.uint16(capacity), comparator);
    }
    Heap.uint16 = uint16;
    function uint32(capacity, comparator = defaultNumberComparator) {
        return new PackHeap_PackHeap(Pack_Pack.uint32(capacity), comparator);
    }
    Heap.uint32 = uint32;
    function int8(capacity, comparator = defaultNumberComparator) {
        return new PackHeap_PackHeap(Pack_Pack.int8(capacity), comparator);
    }
    Heap.int8 = int8;
    function int16(capacity, comparator = defaultNumberComparator) {
        return new PackHeap_PackHeap(Pack_Pack.int16(capacity), comparator);
    }
    Heap.int16 = int16;
    function int32(capacity, comparator = defaultNumberComparator) {
        return new PackHeap_PackHeap(Pack_Pack.int32(capacity), comparator);
    }
    Heap.int32 = int32;
    function float32(capacity, comparator = defaultNumberComparator) {
        return new PackHeap_PackHeap(Pack_Pack.float32(capacity), comparator);
    }
    Heap.float32 = float32;
    function float64(capacity, comparator = defaultNumberComparator) {
        return new PackHeap_PackHeap(Pack_Pack.float64(capacity), comparator);
    }
    Heap.float64 = float64;
    function fromPack(pack, comparator) {
        return new PackHeap_PackHeap(pack, comparator);
    }
    Heap.fromPack = fromPack;
})(Heap_Heap || (Heap_Heap = {}));

// CONCATENATED MODULE: ./src/heap/index.ts



// CONCATENATED MODULE: ./src/native/index.ts





// CONCATENATED MODULE: ./src/view/index.ts



// CONCATENATED MODULE: ./src/index.ts
/* concated harmony reexport Collection */__webpack_require__.d(__webpack_exports__, "Collection", function() { return Collection; });
/* concated harmony reexport Sequence */__webpack_require__.d(__webpack_exports__, "Sequence", function() { return Sequence_Sequence; });
/* concated harmony reexport SequenceIterator */__webpack_require__.d(__webpack_exports__, "SequenceIterator", function() { return SequenceIterator; });
/* concated harmony reexport bissect */__webpack_require__.d(__webpack_exports__, "bissect", function() { return bissect; });
/* concated harmony reexport equals */__webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* concated harmony reexport quicksort */__webpack_require__.d(__webpack_exports__, "quicksort", function() { return quicksort; });
/* concated harmony reexport Allocator */__webpack_require__.d(__webpack_exports__, "Allocator", function() { return Allocator_Allocator; });
/* concated harmony reexport Duplicator */__webpack_require__.d(__webpack_exports__, "Duplicator", function() { return Duplicator_Duplicator; });
/* concated harmony reexport FactoryAllocator */__webpack_require__.d(__webpack_exports__, "FactoryAllocator", function() { return FactoryAllocator_FactoryAllocator; });
/* concated harmony reexport FactoryDuplicator */__webpack_require__.d(__webpack_exports__, "FactoryDuplicator", function() { return FactoryDuplicator_FactoryDuplicator; });
/* concated harmony reexport Pack */__webpack_require__.d(__webpack_exports__, "Pack", function() { return Pack_Pack; });
/* concated harmony reexport ArrayPack */__webpack_require__.d(__webpack_exports__, "ArrayPack", function() { return ArrayPack_ArrayPack; });
/* concated harmony reexport BufferPack */__webpack_require__.d(__webpack_exports__, "BufferPack", function() { return BufferPack_BufferPack; });
/* concated harmony reexport InstancePack */__webpack_require__.d(__webpack_exports__, "InstancePack", function() { return InstancePack_InstancePack; });
/* concated harmony reexport PackIterator */__webpack_require__.d(__webpack_exports__, "PackIterator", function() { return PackIterator; });
/* concated harmony reexport BitSet */__webpack_require__.d(__webpack_exports__, "BitSet", function() { return BitSet_BitSet; });
/* concated harmony reexport Set */__webpack_require__.d(__webpack_exports__, "Set", function() { return Set_Set; });
/* concated harmony reexport PackSet */__webpack_require__.d(__webpack_exports__, "PackSet", function() { return PackSet_PackSet; });
/* concated harmony reexport SparseDenseSet */__webpack_require__.d(__webpack_exports__, "SparseDenseSet", function() { return SparseDenseSet_SparseDenseSet; });
/* concated harmony reexport PackSparseDenseSet */__webpack_require__.d(__webpack_exports__, "PackSparseDenseSet", function() { return PackSparseDenseSet_PackSparseDenseSet; });
/* concated harmony reexport IdentifierSet */__webpack_require__.d(__webpack_exports__, "IdentifierSet", function() { return IdentifierSet_IdentifierSet; });
/* concated harmony reexport NativeSet */__webpack_require__.d(__webpack_exports__, "NativeSet", function() { return NativeSet_NativeSet; });
/* concated harmony reexport CircularBuffer */__webpack_require__.d(__webpack_exports__, "CircularBuffer", function() { return CircularBuffer_CircularBuffer; });
/* concated harmony reexport PackCircularBuffer */__webpack_require__.d(__webpack_exports__, "PackCircularBuffer", function() { return PackCircularBuffer_PackCircularBuffer; });
/* concated harmony reexport CircularBufferIterator */__webpack_require__.d(__webpack_exports__, "CircularBufferIterator", function() { return CircularBufferIterator; });
/* concated harmony reexport Heap */__webpack_require__.d(__webpack_exports__, "Heap", function() { return Heap_Heap; });
/* concated harmony reexport PackHeap */__webpack_require__.d(__webpack_exports__, "PackHeap", function() { return PackHeap_PackHeap; });
/* concated harmony reexport Buffer */__webpack_require__.d(__webpack_exports__, "Buffer", function() { return Buffer_Buffer; });
/* concated harmony reexport FloatBuffer */__webpack_require__.d(__webpack_exports__, "FloatBuffer", function() { return FloatBuffer; });
/* concated harmony reexport IntegerBuffer */__webpack_require__.d(__webpack_exports__, "IntegerBuffer", function() { return IntegerBuffer; });
/* concated harmony reexport UnsignedIntegerBuffer */__webpack_require__.d(__webpack_exports__, "UnsignedIntegerBuffer", function() { return UnsignedIntegerBuffer; });
/* concated harmony reexport View */__webpack_require__.d(__webpack_exports__, "View", function() { return View; });
/* concated harmony reexport SequenceView */__webpack_require__.d(__webpack_exports__, "SequenceView", function() { return SequenceView_SequenceView; });













/***/ })
/******/ ]);
});

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js")
var ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/ieee754/index.js")
var isArray = __webpack_require__(/*! isarray */ "./node_modules/isarray/index.js")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/classnames/index.js":
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),

/***/ "./node_modules/clipboard-copy/index.js":
/*!**********************************************!*\
  !*** ./node_modules/clipboard-copy/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*! clipboard-copy. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* global DOMException */

module.exports = clipboardCopy

function makeError () {
  return new DOMException('The request is not allowed', 'NotAllowedError')
}

async function copyClipboardApi (text) {
  // Use the Async Clipboard API when available. Requires a secure browsing
  // context (i.e. HTTPS)
  if (!navigator.clipboard) {
    throw makeError()
  }
  return navigator.clipboard.writeText(text)
}

async function copyExecCommand (text) {
  // Put the text to copy into a <span>
  const span = document.createElement('span')
  span.textContent = text

  // Preserve consecutive spaces and newlines
  span.style.whiteSpace = 'pre'
  span.style.webkitUserSelect = 'auto'
  span.style.userSelect = 'all'

  // Add the <span> to the page
  document.body.appendChild(span)

  // Make a selection object representing the range of text selected by the user
  const selection = window.getSelection()
  const range = window.document.createRange()
  selection.removeAllRanges()
  range.selectNode(span)
  selection.addRange(range)

  // Copy text to the clipboard
  let success = false
  try {
    success = window.document.execCommand('copy')
  } finally {
    // Cleanup
    selection.removeAllRanges()
    window.document.body.removeChild(span)
  }

  if (!success) throw makeError()
}

async function clipboardCopy (text) {
  try {
    await copyClipboardApi(text)
  } catch (err) {
    // ...Otherwise, use document.execCommand() fallback
    try {
      await copyExecCommand(text)
    } catch (err2) {
      throw (err2 || err || makeError())
    }
  }
}


/***/ }),

/***/ "./node_modules/dom-helpers/esm/addClass.js":
/*!**************************************************!*\
  !*** ./node_modules/dom-helpers/esm/addClass.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addClass; });
/* harmony import */ var _hasClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hasClass */ "./node_modules/dom-helpers/esm/hasClass.js");

/**
 * Adds a CSS class to a given element.
 * 
 * @param element the element
 * @param className the CSS class name
 */

function addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!Object(_hasClass__WEBPACK_IMPORTED_MODULE_0__["default"])(element, className)) if (typeof element.className === 'string') element.className = element.className + " " + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + " " + className);
}

/***/ }),

/***/ "./node_modules/dom-helpers/esm/hasClass.js":
/*!**************************************************!*\
  !*** ./node_modules/dom-helpers/esm/hasClass.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return hasClass; });
/**
 * Checks if a given element has a CSS class.
 * 
 * @param element the element
 * @param className the CSS class name
 */
function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}

/***/ }),

/***/ "./node_modules/dom-helpers/esm/removeClass.js":
/*!*****************************************************!*\
  !*** ./node_modules/dom-helpers/esm/removeClass.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return removeClass; });
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}
/**
 * Removes a CSS class from a given element.
 * 
 * @param element the element
 * @param className the CSS class name
 */


function removeClass(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === 'string') {
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
  }
}

/***/ }),

/***/ "./node_modules/hammerjs/hammer.js":
/*!*****************************************!*\
  !*** ./node_modules/hammerjs/hammer.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.7 - 2016-04-22
 * http://hammerjs.github.io/
 *
 * Copyright (c) 2016 Jorik Tangelder;
 * Licensed under the MIT license */
(function(window, document, exportName, undefined) {
  'use strict';

var VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];
var TEST_ELEMENT = document.createElement('div');

var TYPE_FUNCTION = 'function';

var round = Math.round;
var abs = Math.abs;
var now = Date.now;

/**
 * set a timeout with a given scope
 * @param {Function} fn
 * @param {Number} timeout
 * @param {Object} context
 * @returns {number}
 */
function setTimeoutContext(fn, timeout, context) {
    return setTimeout(bindFn(fn, context), timeout);
}

/**
 * if the argument is an array, we want to execute the fn on each entry
 * if it aint an array we don't want to do a thing.
 * this is used by all the methods that accept a single and array argument.
 * @param {*|Array} arg
 * @param {String} fn
 * @param {Object} [context]
 * @returns {Boolean}
 */
function invokeArrayArg(arg, fn, context) {
    if (Array.isArray(arg)) {
        each(arg, context[fn], context);
        return true;
    }
    return false;
}

/**
 * walk objects and arrays
 * @param {Object} obj
 * @param {Function} iterator
 * @param {Object} context
 */
function each(obj, iterator, context) {
    var i;

    if (!obj) {
        return;
    }

    if (obj.forEach) {
        obj.forEach(iterator, context);
    } else if (obj.length !== undefined) {
        i = 0;
        while (i < obj.length) {
            iterator.call(context, obj[i], i, obj);
            i++;
        }
    } else {
        for (i in obj) {
            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);
        }
    }
}

/**
 * wrap a method with a deprecation warning and stack trace
 * @param {Function} method
 * @param {String} name
 * @param {String} message
 * @returns {Function} A new function wrapping the supplied method.
 */
function deprecate(method, name, message) {
    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\n' + message + ' AT \n';
    return function() {
        var e = new Error('get-stack-trace');
        var stack = e && e.stack ? e.stack.replace(/^[^\(]+?[\n$]/gm, '')
            .replace(/^\s+at\s+/gm, '')
            .replace(/^Object.<anonymous>\s*\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';

        var log = window.console && (window.console.warn || window.console.log);
        if (log) {
            log.call(window.console, deprecationMessage, stack);
        }
        return method.apply(this, arguments);
    };
}

/**
 * extend object.
 * means that properties in dest will be overwritten by the ones in src.
 * @param {Object} target
 * @param {...Object} objects_to_assign
 * @returns {Object} target
 */
var assign;
if (typeof Object.assign !== 'function') {
    assign = function assign(target) {
        if (target === undefined || target === null) {
            throw new TypeError('Cannot convert undefined or null to object');
        }

        var output = Object(target);
        for (var index = 1; index < arguments.length; index++) {
            var source = arguments[index];
            if (source !== undefined && source !== null) {
                for (var nextKey in source) {
                    if (source.hasOwnProperty(nextKey)) {
                        output[nextKey] = source[nextKey];
                    }
                }
            }
        }
        return output;
    };
} else {
    assign = Object.assign;
}

/**
 * extend object.
 * means that properties in dest will be overwritten by the ones in src.
 * @param {Object} dest
 * @param {Object} src
 * @param {Boolean} [merge=false]
 * @returns {Object} dest
 */
var extend = deprecate(function extend(dest, src, merge) {
    var keys = Object.keys(src);
    var i = 0;
    while (i < keys.length) {
        if (!merge || (merge && dest[keys[i]] === undefined)) {
            dest[keys[i]] = src[keys[i]];
        }
        i++;
    }
    return dest;
}, 'extend', 'Use `assign`.');

/**
 * merge the values from src in the dest.
 * means that properties that exist in dest will not be overwritten by src
 * @param {Object} dest
 * @param {Object} src
 * @returns {Object} dest
 */
var merge = deprecate(function merge(dest, src) {
    return extend(dest, src, true);
}, 'merge', 'Use `assign`.');

/**
 * simple class inheritance
 * @param {Function} child
 * @param {Function} base
 * @param {Object} [properties]
 */
function inherit(child, base, properties) {
    var baseP = base.prototype,
        childP;

    childP = child.prototype = Object.create(baseP);
    childP.constructor = child;
    childP._super = baseP;

    if (properties) {
        assign(childP, properties);
    }
}

/**
 * simple function bind
 * @param {Function} fn
 * @param {Object} context
 * @returns {Function}
 */
function bindFn(fn, context) {
    return function boundFn() {
        return fn.apply(context, arguments);
    };
}

/**
 * let a boolean value also be a function that must return a boolean
 * this first item in args will be used as the context
 * @param {Boolean|Function} val
 * @param {Array} [args]
 * @returns {Boolean}
 */
function boolOrFn(val, args) {
    if (typeof val == TYPE_FUNCTION) {
        return val.apply(args ? args[0] || undefined : undefined, args);
    }
    return val;
}

/**
 * use the val2 when val1 is undefined
 * @param {*} val1
 * @param {*} val2
 * @returns {*}
 */
function ifUndefined(val1, val2) {
    return (val1 === undefined) ? val2 : val1;
}

/**
 * addEventListener with multiple events at once
 * @param {EventTarget} target
 * @param {String} types
 * @param {Function} handler
 */
function addEventListeners(target, types, handler) {
    each(splitStr(types), function(type) {
        target.addEventListener(type, handler, false);
    });
}

/**
 * removeEventListener with multiple events at once
 * @param {EventTarget} target
 * @param {String} types
 * @param {Function} handler
 */
function removeEventListeners(target, types, handler) {
    each(splitStr(types), function(type) {
        target.removeEventListener(type, handler, false);
    });
}

/**
 * find if a node is in the given parent
 * @method hasParent
 * @param {HTMLElement} node
 * @param {HTMLElement} parent
 * @return {Boolean} found
 */
function hasParent(node, parent) {
    while (node) {
        if (node == parent) {
            return true;
        }
        node = node.parentNode;
    }
    return false;
}

/**
 * small indexOf wrapper
 * @param {String} str
 * @param {String} find
 * @returns {Boolean} found
 */
function inStr(str, find) {
    return str.indexOf(find) > -1;
}

/**
 * split string on whitespace
 * @param {String} str
 * @returns {Array} words
 */
function splitStr(str) {
    return str.trim().split(/\s+/g);
}

/**
 * find if a array contains the object using indexOf or a simple polyFill
 * @param {Array} src
 * @param {String} find
 * @param {String} [findByKey]
 * @return {Boolean|Number} false when not found, or the index
 */
function inArray(src, find, findByKey) {
    if (src.indexOf && !findByKey) {
        return src.indexOf(find);
    } else {
        var i = 0;
        while (i < src.length) {
            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {
                return i;
            }
            i++;
        }
        return -1;
    }
}

/**
 * convert array-like objects to real arrays
 * @param {Object} obj
 * @returns {Array}
 */
function toArray(obj) {
    return Array.prototype.slice.call(obj, 0);
}

/**
 * unique array with objects based on a key (like 'id') or just by the array's value
 * @param {Array} src [{id:1},{id:2},{id:1}]
 * @param {String} [key]
 * @param {Boolean} [sort=False]
 * @returns {Array} [{id:1},{id:2}]
 */
function uniqueArray(src, key, sort) {
    var results = [];
    var values = [];
    var i = 0;

    while (i < src.length) {
        var val = key ? src[i][key] : src[i];
        if (inArray(values, val) < 0) {
            results.push(src[i]);
        }
        values[i] = val;
        i++;
    }

    if (sort) {
        if (!key) {
            results = results.sort();
        } else {
            results = results.sort(function sortUniqueArray(a, b) {
                return a[key] > b[key];
            });
        }
    }

    return results;
}

/**
 * get the prefixed property
 * @param {Object} obj
 * @param {String} property
 * @returns {String|Undefined} prefixed
 */
function prefixed(obj, property) {
    var prefix, prop;
    var camelProp = property[0].toUpperCase() + property.slice(1);

    var i = 0;
    while (i < VENDOR_PREFIXES.length) {
        prefix = VENDOR_PREFIXES[i];
        prop = (prefix) ? prefix + camelProp : property;

        if (prop in obj) {
            return prop;
        }
        i++;
    }
    return undefined;
}

/**
 * get a unique id
 * @returns {number} uniqueId
 */
var _uniqueId = 1;
function uniqueId() {
    return _uniqueId++;
}

/**
 * get the window object of an element
 * @param {HTMLElement} element
 * @returns {DocumentView|Window}
 */
function getWindowForElement(element) {
    var doc = element.ownerDocument || element;
    return (doc.defaultView || doc.parentWindow || window);
}

var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;

var SUPPORT_TOUCH = ('ontouchstart' in window);
var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;
var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);

var INPUT_TYPE_TOUCH = 'touch';
var INPUT_TYPE_PEN = 'pen';
var INPUT_TYPE_MOUSE = 'mouse';
var INPUT_TYPE_KINECT = 'kinect';

var COMPUTE_INTERVAL = 25;

var INPUT_START = 1;
var INPUT_MOVE = 2;
var INPUT_END = 4;
var INPUT_CANCEL = 8;

var DIRECTION_NONE = 1;
var DIRECTION_LEFT = 2;
var DIRECTION_RIGHT = 4;
var DIRECTION_UP = 8;
var DIRECTION_DOWN = 16;

var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;
var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;
var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;

var PROPS_XY = ['x', 'y'];
var PROPS_CLIENT_XY = ['clientX', 'clientY'];

/**
 * create new input type manager
 * @param {Manager} manager
 * @param {Function} callback
 * @returns {Input}
 * @constructor
 */
function Input(manager, callback) {
    var self = this;
    this.manager = manager;
    this.callback = callback;
    this.element = manager.element;
    this.target = manager.options.inputTarget;

    // smaller wrapper around the handler, for the scope and the enabled state of the manager,
    // so when disabled the input events are completely bypassed.
    this.domHandler = function(ev) {
        if (boolOrFn(manager.options.enable, [manager])) {
            self.handler(ev);
        }
    };

    this.init();

}

Input.prototype = {
    /**
     * should handle the inputEvent data and trigger the callback
     * @virtual
     */
    handler: function() { },

    /**
     * bind the events
     */
    init: function() {
        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);
        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);
        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
    },

    /**
     * unbind the events
     */
    destroy: function() {
        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);
        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);
        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
    }
};

/**
 * create new input type manager
 * called by the Manager constructor
 * @param {Hammer} manager
 * @returns {Input}
 */
function createInputInstance(manager) {
    var Type;
    var inputClass = manager.options.inputClass;

    if (inputClass) {
        Type = inputClass;
    } else if (SUPPORT_POINTER_EVENTS) {
        Type = PointerEventInput;
    } else if (SUPPORT_ONLY_TOUCH) {
        Type = TouchInput;
    } else if (!SUPPORT_TOUCH) {
        Type = MouseInput;
    } else {
        Type = TouchMouseInput;
    }
    return new (Type)(manager, inputHandler);
}

/**
 * handle input events
 * @param {Manager} manager
 * @param {String} eventType
 * @param {Object} input
 */
function inputHandler(manager, eventType, input) {
    var pointersLen = input.pointers.length;
    var changedPointersLen = input.changedPointers.length;
    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));
    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));

    input.isFirst = !!isFirst;
    input.isFinal = !!isFinal;

    if (isFirst) {
        manager.session = {};
    }

    // source event is the normalized value of the domEvents
    // like 'touchstart, mouseup, pointerdown'
    input.eventType = eventType;

    // compute scale, rotation etc
    computeInputData(manager, input);

    // emit secret event
    manager.emit('hammer.input', input);

    manager.recognize(input);
    manager.session.prevInput = input;
}

/**
 * extend the data with some usable properties like scale, rotate, velocity etc
 * @param {Object} manager
 * @param {Object} input
 */
function computeInputData(manager, input) {
    var session = manager.session;
    var pointers = input.pointers;
    var pointersLength = pointers.length;

    // store the first input to calculate the distance and direction
    if (!session.firstInput) {
        session.firstInput = simpleCloneInputData(input);
    }

    // to compute scale and rotation we need to store the multiple touches
    if (pointersLength > 1 && !session.firstMultiple) {
        session.firstMultiple = simpleCloneInputData(input);
    } else if (pointersLength === 1) {
        session.firstMultiple = false;
    }

    var firstInput = session.firstInput;
    var firstMultiple = session.firstMultiple;
    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;

    var center = input.center = getCenter(pointers);
    input.timeStamp = now();
    input.deltaTime = input.timeStamp - firstInput.timeStamp;

    input.angle = getAngle(offsetCenter, center);
    input.distance = getDistance(offsetCenter, center);

    computeDeltaXY(session, input);
    input.offsetDirection = getDirection(input.deltaX, input.deltaY);

    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);
    input.overallVelocityX = overallVelocity.x;
    input.overallVelocityY = overallVelocity.y;
    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;

    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;
    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;

    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >
        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);

    computeIntervalInputData(session, input);

    // find the correct target
    var target = manager.element;
    if (hasParent(input.srcEvent.target, target)) {
        target = input.srcEvent.target;
    }
    input.target = target;
}

function computeDeltaXY(session, input) {
    var center = input.center;
    var offset = session.offsetDelta || {};
    var prevDelta = session.prevDelta || {};
    var prevInput = session.prevInput || {};

    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {
        prevDelta = session.prevDelta = {
            x: prevInput.deltaX || 0,
            y: prevInput.deltaY || 0
        };

        offset = session.offsetDelta = {
            x: center.x,
            y: center.y
        };
    }

    input.deltaX = prevDelta.x + (center.x - offset.x);
    input.deltaY = prevDelta.y + (center.y - offset.y);
}

/**
 * velocity is calculated every x ms
 * @param {Object} session
 * @param {Object} input
 */
function computeIntervalInputData(session, input) {
    var last = session.lastInterval || input,
        deltaTime = input.timeStamp - last.timeStamp,
        velocity, velocityX, velocityY, direction;

    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {
        var deltaX = input.deltaX - last.deltaX;
        var deltaY = input.deltaY - last.deltaY;

        var v = getVelocity(deltaTime, deltaX, deltaY);
        velocityX = v.x;
        velocityY = v.y;
        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;
        direction = getDirection(deltaX, deltaY);

        session.lastInterval = input;
    } else {
        // use latest velocity info if it doesn't overtake a minimum period
        velocity = last.velocity;
        velocityX = last.velocityX;
        velocityY = last.velocityY;
        direction = last.direction;
    }

    input.velocity = velocity;
    input.velocityX = velocityX;
    input.velocityY = velocityY;
    input.direction = direction;
}

/**
 * create a simple clone from the input used for storage of firstInput and firstMultiple
 * @param {Object} input
 * @returns {Object} clonedInputData
 */
function simpleCloneInputData(input) {
    // make a simple copy of the pointers because we will get a reference if we don't
    // we only need clientXY for the calculations
    var pointers = [];
    var i = 0;
    while (i < input.pointers.length) {
        pointers[i] = {
            clientX: round(input.pointers[i].clientX),
            clientY: round(input.pointers[i].clientY)
        };
        i++;
    }

    return {
        timeStamp: now(),
        pointers: pointers,
        center: getCenter(pointers),
        deltaX: input.deltaX,
        deltaY: input.deltaY
    };
}

/**
 * get the center of all the pointers
 * @param {Array} pointers
 * @return {Object} center contains `x` and `y` properties
 */
function getCenter(pointers) {
    var pointersLength = pointers.length;

    // no need to loop when only one touch
    if (pointersLength === 1) {
        return {
            x: round(pointers[0].clientX),
            y: round(pointers[0].clientY)
        };
    }

    var x = 0, y = 0, i = 0;
    while (i < pointersLength) {
        x += pointers[i].clientX;
        y += pointers[i].clientY;
        i++;
    }

    return {
        x: round(x / pointersLength),
        y: round(y / pointersLength)
    };
}

/**
 * calculate the velocity between two points. unit is in px per ms.
 * @param {Number} deltaTime
 * @param {Number} x
 * @param {Number} y
 * @return {Object} velocity `x` and `y`
 */
function getVelocity(deltaTime, x, y) {
    return {
        x: x / deltaTime || 0,
        y: y / deltaTime || 0
    };
}

/**
 * get the direction between two points
 * @param {Number} x
 * @param {Number} y
 * @return {Number} direction
 */
function getDirection(x, y) {
    if (x === y) {
        return DIRECTION_NONE;
    }

    if (abs(x) >= abs(y)) {
        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
    }
    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;
}

/**
 * calculate the absolute distance between two points
 * @param {Object} p1 {x, y}
 * @param {Object} p2 {x, y}
 * @param {Array} [props] containing x and y keys
 * @return {Number} distance
 */
function getDistance(p1, p2, props) {
    if (!props) {
        props = PROPS_XY;
    }
    var x = p2[props[0]] - p1[props[0]],
        y = p2[props[1]] - p1[props[1]];

    return Math.sqrt((x * x) + (y * y));
}

/**
 * calculate the angle between two coordinates
 * @param {Object} p1
 * @param {Object} p2
 * @param {Array} [props] containing x and y keys
 * @return {Number} angle
 */
function getAngle(p1, p2, props) {
    if (!props) {
        props = PROPS_XY;
    }
    var x = p2[props[0]] - p1[props[0]],
        y = p2[props[1]] - p1[props[1]];
    return Math.atan2(y, x) * 180 / Math.PI;
}

/**
 * calculate the rotation degrees between two pointersets
 * @param {Array} start array of pointers
 * @param {Array} end array of pointers
 * @return {Number} rotation
 */
function getRotation(start, end) {
    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);
}

/**
 * calculate the scale factor between two pointersets
 * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out
 * @param {Array} start array of pointers
 * @param {Array} end array of pointers
 * @return {Number} scale
 */
function getScale(start, end) {
    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);
}

var MOUSE_INPUT_MAP = {
    mousedown: INPUT_START,
    mousemove: INPUT_MOVE,
    mouseup: INPUT_END
};

var MOUSE_ELEMENT_EVENTS = 'mousedown';
var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';

/**
 * Mouse events input
 * @constructor
 * @extends Input
 */
function MouseInput() {
    this.evEl = MOUSE_ELEMENT_EVENTS;
    this.evWin = MOUSE_WINDOW_EVENTS;

    this.pressed = false; // mousedown state

    Input.apply(this, arguments);
}

inherit(MouseInput, Input, {
    /**
     * handle mouse events
     * @param {Object} ev
     */
    handler: function MEhandler(ev) {
        var eventType = MOUSE_INPUT_MAP[ev.type];

        // on start we want to have the left mouse button down
        if (eventType & INPUT_START && ev.button === 0) {
            this.pressed = true;
        }

        if (eventType & INPUT_MOVE && ev.which !== 1) {
            eventType = INPUT_END;
        }

        // mouse must be down
        if (!this.pressed) {
            return;
        }

        if (eventType & INPUT_END) {
            this.pressed = false;
        }

        this.callback(this.manager, eventType, {
            pointers: [ev],
            changedPointers: [ev],
            pointerType: INPUT_TYPE_MOUSE,
            srcEvent: ev
        });
    }
});

var POINTER_INPUT_MAP = {
    pointerdown: INPUT_START,
    pointermove: INPUT_MOVE,
    pointerup: INPUT_END,
    pointercancel: INPUT_CANCEL,
    pointerout: INPUT_CANCEL
};

// in IE10 the pointer types is defined as an enum
var IE10_POINTER_TYPE_ENUM = {
    2: INPUT_TYPE_TOUCH,
    3: INPUT_TYPE_PEN,
    4: INPUT_TYPE_MOUSE,
    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816
};

var POINTER_ELEMENT_EVENTS = 'pointerdown';
var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';

// IE10 has prefixed support, and case-sensitive
if (window.MSPointerEvent && !window.PointerEvent) {
    POINTER_ELEMENT_EVENTS = 'MSPointerDown';
    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';
}

/**
 * Pointer events input
 * @constructor
 * @extends Input
 */
function PointerEventInput() {
    this.evEl = POINTER_ELEMENT_EVENTS;
    this.evWin = POINTER_WINDOW_EVENTS;

    Input.apply(this, arguments);

    this.store = (this.manager.session.pointerEvents = []);
}

inherit(PointerEventInput, Input, {
    /**
     * handle mouse events
     * @param {Object} ev
     */
    handler: function PEhandler(ev) {
        var store = this.store;
        var removePointer = false;

        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');
        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];
        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;

        var isTouch = (pointerType == INPUT_TYPE_TOUCH);

        // get index of the event in the store
        var storeIndex = inArray(store, ev.pointerId, 'pointerId');

        // start and mouse must be down
        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {
            if (storeIndex < 0) {
                store.push(ev);
                storeIndex = store.length - 1;
            }
        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
            removePointer = true;
        }

        // it not found, so the pointer hasn't been down (so it's probably a hover)
        if (storeIndex < 0) {
            return;
        }

        // update the event in the store
        store[storeIndex] = ev;

        this.callback(this.manager, eventType, {
            pointers: store,
            changedPointers: [ev],
            pointerType: pointerType,
            srcEvent: ev
        });

        if (removePointer) {
            // remove from the store
            store.splice(storeIndex, 1);
        }
    }
});

var SINGLE_TOUCH_INPUT_MAP = {
    touchstart: INPUT_START,
    touchmove: INPUT_MOVE,
    touchend: INPUT_END,
    touchcancel: INPUT_CANCEL
};

var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';
var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';

/**
 * Touch events input
 * @constructor
 * @extends Input
 */
function SingleTouchInput() {
    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;
    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;
    this.started = false;

    Input.apply(this, arguments);
}

inherit(SingleTouchInput, Input, {
    handler: function TEhandler(ev) {
        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];

        // should we handle the touch events?
        if (type === INPUT_START) {
            this.started = true;
        }

        if (!this.started) {
            return;
        }

        var touches = normalizeSingleTouches.call(this, ev, type);

        // when done, reset the started state
        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {
            this.started = false;
        }

        this.callback(this.manager, type, {
            pointers: touches[0],
            changedPointers: touches[1],
            pointerType: INPUT_TYPE_TOUCH,
            srcEvent: ev
        });
    }
});

/**
 * @this {TouchInput}
 * @param {Object} ev
 * @param {Number} type flag
 * @returns {undefined|Array} [all, changed]
 */
function normalizeSingleTouches(ev, type) {
    var all = toArray(ev.touches);
    var changed = toArray(ev.changedTouches);

    if (type & (INPUT_END | INPUT_CANCEL)) {
        all = uniqueArray(all.concat(changed), 'identifier', true);
    }

    return [all, changed];
}

var TOUCH_INPUT_MAP = {
    touchstart: INPUT_START,
    touchmove: INPUT_MOVE,
    touchend: INPUT_END,
    touchcancel: INPUT_CANCEL
};

var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';

/**
 * Multi-user touch events input
 * @constructor
 * @extends Input
 */
function TouchInput() {
    this.evTarget = TOUCH_TARGET_EVENTS;
    this.targetIds = {};

    Input.apply(this, arguments);
}

inherit(TouchInput, Input, {
    handler: function MTEhandler(ev) {
        var type = TOUCH_INPUT_MAP[ev.type];
        var touches = getTouches.call(this, ev, type);
        if (!touches) {
            return;
        }

        this.callback(this.manager, type, {
            pointers: touches[0],
            changedPointers: touches[1],
            pointerType: INPUT_TYPE_TOUCH,
            srcEvent: ev
        });
    }
});

/**
 * @this {TouchInput}
 * @param {Object} ev
 * @param {Number} type flag
 * @returns {undefined|Array} [all, changed]
 */
function getTouches(ev, type) {
    var allTouches = toArray(ev.touches);
    var targetIds = this.targetIds;

    // when there is only one touch, the process can be simplified
    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {
        targetIds[allTouches[0].identifier] = true;
        return [allTouches, allTouches];
    }

    var i,
        targetTouches,
        changedTouches = toArray(ev.changedTouches),
        changedTargetTouches = [],
        target = this.target;

    // get target touches from touches
    targetTouches = allTouches.filter(function(touch) {
        return hasParent(touch.target, target);
    });

    // collect touches
    if (type === INPUT_START) {
        i = 0;
        while (i < targetTouches.length) {
            targetIds[targetTouches[i].identifier] = true;
            i++;
        }
    }

    // filter changed touches to only contain touches that exist in the collected target ids
    i = 0;
    while (i < changedTouches.length) {
        if (targetIds[changedTouches[i].identifier]) {
            changedTargetTouches.push(changedTouches[i]);
        }

        // cleanup removed touches
        if (type & (INPUT_END | INPUT_CANCEL)) {
            delete targetIds[changedTouches[i].identifier];
        }
        i++;
    }

    if (!changedTargetTouches.length) {
        return;
    }

    return [
        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'
        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),
        changedTargetTouches
    ];
}

/**
 * Combined touch and mouse input
 *
 * Touch has a higher priority then mouse, and while touching no mouse events are allowed.
 * This because touch devices also emit mouse events while doing a touch.
 *
 * @constructor
 * @extends Input
 */

var DEDUP_TIMEOUT = 2500;
var DEDUP_DISTANCE = 25;

function TouchMouseInput() {
    Input.apply(this, arguments);

    var handler = bindFn(this.handler, this);
    this.touch = new TouchInput(this.manager, handler);
    this.mouse = new MouseInput(this.manager, handler);

    this.primaryTouch = null;
    this.lastTouches = [];
}

inherit(TouchMouseInput, Input, {
    /**
     * handle mouse and touch events
     * @param {Hammer} manager
     * @param {String} inputEvent
     * @param {Object} inputData
     */
    handler: function TMEhandler(manager, inputEvent, inputData) {
        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),
            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);

        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {
            return;
        }

        // when we're in a touch event, record touches to  de-dupe synthetic mouse event
        if (isTouch) {
            recordTouches.call(this, inputEvent, inputData);
        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {
            return;
        }

        this.callback(manager, inputEvent, inputData);
    },

    /**
     * remove the event listeners
     */
    destroy: function destroy() {
        this.touch.destroy();
        this.mouse.destroy();
    }
});

function recordTouches(eventType, eventData) {
    if (eventType & INPUT_START) {
        this.primaryTouch = eventData.changedPointers[0].identifier;
        setLastTouch.call(this, eventData);
    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
        setLastTouch.call(this, eventData);
    }
}

function setLastTouch(eventData) {
    var touch = eventData.changedPointers[0];

    if (touch.identifier === this.primaryTouch) {
        var lastTouch = {x: touch.clientX, y: touch.clientY};
        this.lastTouches.push(lastTouch);
        var lts = this.lastTouches;
        var removeLastTouch = function() {
            var i = lts.indexOf(lastTouch);
            if (i > -1) {
                lts.splice(i, 1);
            }
        };
        setTimeout(removeLastTouch, DEDUP_TIMEOUT);
    }
}

function isSyntheticEvent(eventData) {
    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;
    for (var i = 0; i < this.lastTouches.length; i++) {
        var t = this.lastTouches[i];
        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);
        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {
            return true;
        }
    }
    return false;
}

var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');
var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;

// magical touchAction value
var TOUCH_ACTION_COMPUTE = 'compute';
var TOUCH_ACTION_AUTO = 'auto';
var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented
var TOUCH_ACTION_NONE = 'none';
var TOUCH_ACTION_PAN_X = 'pan-x';
var TOUCH_ACTION_PAN_Y = 'pan-y';
var TOUCH_ACTION_MAP = getTouchActionProps();

/**
 * Touch Action
 * sets the touchAction property or uses the js alternative
 * @param {Manager} manager
 * @param {String} value
 * @constructor
 */
function TouchAction(manager, value) {
    this.manager = manager;
    this.set(value);
}

TouchAction.prototype = {
    /**
     * set the touchAction value on the element or enable the polyfill
     * @param {String} value
     */
    set: function(value) {
        // find out the touch-action by the event handlers
        if (value == TOUCH_ACTION_COMPUTE) {
            value = this.compute();
        }

        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {
            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;
        }
        this.actions = value.toLowerCase().trim();
    },

    /**
     * just re-set the touchAction value
     */
    update: function() {
        this.set(this.manager.options.touchAction);
    },

    /**
     * compute the value for the touchAction property based on the recognizer's settings
     * @returns {String} value
     */
    compute: function() {
        var actions = [];
        each(this.manager.recognizers, function(recognizer) {
            if (boolOrFn(recognizer.options.enable, [recognizer])) {
                actions = actions.concat(recognizer.getTouchAction());
            }
        });
        return cleanTouchActions(actions.join(' '));
    },

    /**
     * this method is called on each input cycle and provides the preventing of the browser behavior
     * @param {Object} input
     */
    preventDefaults: function(input) {
        var srcEvent = input.srcEvent;
        var direction = input.offsetDirection;

        // if the touch action did prevented once this session
        if (this.manager.session.prevented) {
            srcEvent.preventDefault();
            return;
        }

        var actions = this.actions;
        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];
        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];
        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];

        if (hasNone) {
            //do not prevent defaults if this is a tap gesture

            var isTapPointer = input.pointers.length === 1;
            var isTapMovement = input.distance < 2;
            var isTapTouchTime = input.deltaTime < 250;

            if (isTapPointer && isTapMovement && isTapTouchTime) {
                return;
            }
        }

        if (hasPanX && hasPanY) {
            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent
            return;
        }

        if (hasNone ||
            (hasPanY && direction & DIRECTION_HORIZONTAL) ||
            (hasPanX && direction & DIRECTION_VERTICAL)) {
            return this.preventSrc(srcEvent);
        }
    },

    /**
     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)
     * @param {Object} srcEvent
     */
    preventSrc: function(srcEvent) {
        this.manager.session.prevented = true;
        srcEvent.preventDefault();
    }
};

/**
 * when the touchActions are collected they are not a valid value, so we need to clean things up. *
 * @param {String} actions
 * @returns {*}
 */
function cleanTouchActions(actions) {
    // none
    if (inStr(actions, TOUCH_ACTION_NONE)) {
        return TOUCH_ACTION_NONE;
    }

    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);
    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);

    // if both pan-x and pan-y are set (different recognizers
    // for different directions, e.g. horizontal pan but vertical swipe?)
    // we need none (as otherwise with pan-x pan-y combined none of these
    // recognizers will work, since the browser would handle all panning
    if (hasPanX && hasPanY) {
        return TOUCH_ACTION_NONE;
    }

    // pan-x OR pan-y
    if (hasPanX || hasPanY) {
        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;
    }

    // manipulation
    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {
        return TOUCH_ACTION_MANIPULATION;
    }

    return TOUCH_ACTION_AUTO;
}

function getTouchActionProps() {
    if (!NATIVE_TOUCH_ACTION) {
        return false;
    }
    var touchMap = {};
    var cssSupports = window.CSS && window.CSS.supports;
    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {

        // If css.supports is not supported but there is native touch-action assume it supports
        // all values. This is the case for IE 10 and 11.
        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;
    });
    return touchMap;
}

/**
 * Recognizer flow explained; *
 * All recognizers have the initial state of POSSIBLE when a input session starts.
 * The definition of a input session is from the first input until the last input, with all it's movement in it. *
 * Example session for mouse-input: mousedown -> mousemove -> mouseup
 *
 * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed
 * which determines with state it should be.
 *
 * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to
 * POSSIBLE to give it another change on the next cycle.
 *
 *               Possible
 *                  |
 *            +-----+---------------+
 *            |                     |
 *      +-----+-----+               |
 *      |           |               |
 *   Failed      Cancelled          |
 *                          +-------+------+
 *                          |              |
 *                      Recognized       Began
 *                                         |
 *                                      Changed
 *                                         |
 *                                  Ended/Recognized
 */
var STATE_POSSIBLE = 1;
var STATE_BEGAN = 2;
var STATE_CHANGED = 4;
var STATE_ENDED = 8;
var STATE_RECOGNIZED = STATE_ENDED;
var STATE_CANCELLED = 16;
var STATE_FAILED = 32;

/**
 * Recognizer
 * Every recognizer needs to extend from this class.
 * @constructor
 * @param {Object} options
 */
function Recognizer(options) {
    this.options = assign({}, this.defaults, options || {});

    this.id = uniqueId();

    this.manager = null;

    // default is enable true
    this.options.enable = ifUndefined(this.options.enable, true);

    this.state = STATE_POSSIBLE;

    this.simultaneous = {};
    this.requireFail = [];
}

Recognizer.prototype = {
    /**
     * @virtual
     * @type {Object}
     */
    defaults: {},

    /**
     * set options
     * @param {Object} options
     * @return {Recognizer}
     */
    set: function(options) {
        assign(this.options, options);

        // also update the touchAction, in case something changed about the directions/enabled state
        this.manager && this.manager.touchAction.update();
        return this;
    },

    /**
     * recognize simultaneous with an other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    recognizeWith: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {
            return this;
        }

        var simultaneous = this.simultaneous;
        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        if (!simultaneous[otherRecognizer.id]) {
            simultaneous[otherRecognizer.id] = otherRecognizer;
            otherRecognizer.recognizeWith(this);
        }
        return this;
    },

    /**
     * drop the simultaneous link. it doesnt remove the link on the other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    dropRecognizeWith: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {
            return this;
        }

        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        delete this.simultaneous[otherRecognizer.id];
        return this;
    },

    /**
     * recognizer can only run when an other is failing
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    requireFailure: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {
            return this;
        }

        var requireFail = this.requireFail;
        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        if (inArray(requireFail, otherRecognizer) === -1) {
            requireFail.push(otherRecognizer);
            otherRecognizer.requireFailure(this);
        }
        return this;
    },

    /**
     * drop the requireFailure link. it does not remove the link on the other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    dropRequireFailure: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {
            return this;
        }

        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        var index = inArray(this.requireFail, otherRecognizer);
        if (index > -1) {
            this.requireFail.splice(index, 1);
        }
        return this;
    },

    /**
     * has require failures boolean
     * @returns {boolean}
     */
    hasRequireFailures: function() {
        return this.requireFail.length > 0;
    },

    /**
     * if the recognizer can recognize simultaneous with an other recognizer
     * @param {Recognizer} otherRecognizer
     * @returns {Boolean}
     */
    canRecognizeWith: function(otherRecognizer) {
        return !!this.simultaneous[otherRecognizer.id];
    },

    /**
     * You should use `tryEmit` instead of `emit` directly to check
     * that all the needed recognizers has failed before emitting.
     * @param {Object} input
     */
    emit: function(input) {
        var self = this;
        var state = this.state;

        function emit(event) {
            self.manager.emit(event, input);
        }

        // 'panstart' and 'panmove'
        if (state < STATE_ENDED) {
            emit(self.options.event + stateStr(state));
        }

        emit(self.options.event); // simple 'eventName' events

        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)
            emit(input.additionalEvent);
        }

        // panend and pancancel
        if (state >= STATE_ENDED) {
            emit(self.options.event + stateStr(state));
        }
    },

    /**
     * Check that all the require failure recognizers has failed,
     * if true, it emits a gesture event,
     * otherwise, setup the state to FAILED.
     * @param {Object} input
     */
    tryEmit: function(input) {
        if (this.canEmit()) {
            return this.emit(input);
        }
        // it's failing anyway
        this.state = STATE_FAILED;
    },

    /**
     * can we emit?
     * @returns {boolean}
     */
    canEmit: function() {
        var i = 0;
        while (i < this.requireFail.length) {
            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {
                return false;
            }
            i++;
        }
        return true;
    },

    /**
     * update the recognizer
     * @param {Object} inputData
     */
    recognize: function(inputData) {
        // make a new copy of the inputData
        // so we can change the inputData without messing up the other recognizers
        var inputDataClone = assign({}, inputData);

        // is is enabled and allow recognizing?
        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {
            this.reset();
            this.state = STATE_FAILED;
            return;
        }

        // reset when we've reached the end
        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {
            this.state = STATE_POSSIBLE;
        }

        this.state = this.process(inputDataClone);

        // the recognizer has recognized a gesture
        // so trigger an event
        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {
            this.tryEmit(inputDataClone);
        }
    },

    /**
     * return the state of the recognizer
     * the actual recognizing happens in this method
     * @virtual
     * @param {Object} inputData
     * @returns {Const} STATE
     */
    process: function(inputData) { }, // jshint ignore:line

    /**
     * return the preferred touch-action
     * @virtual
     * @returns {Array}
     */
    getTouchAction: function() { },

    /**
     * called when the gesture isn't allowed to recognize
     * like when another is being recognized or it is disabled
     * @virtual
     */
    reset: function() { }
};

/**
 * get a usable string, used as event postfix
 * @param {Const} state
 * @returns {String} state
 */
function stateStr(state) {
    if (state & STATE_CANCELLED) {
        return 'cancel';
    } else if (state & STATE_ENDED) {
        return 'end';
    } else if (state & STATE_CHANGED) {
        return 'move';
    } else if (state & STATE_BEGAN) {
        return 'start';
    }
    return '';
}

/**
 * direction cons to string
 * @param {Const} direction
 * @returns {String}
 */
function directionStr(direction) {
    if (direction == DIRECTION_DOWN) {
        return 'down';
    } else if (direction == DIRECTION_UP) {
        return 'up';
    } else if (direction == DIRECTION_LEFT) {
        return 'left';
    } else if (direction == DIRECTION_RIGHT) {
        return 'right';
    }
    return '';
}

/**
 * get a recognizer by name if it is bound to a manager
 * @param {Recognizer|String} otherRecognizer
 * @param {Recognizer} recognizer
 * @returns {Recognizer}
 */
function getRecognizerByNameIfManager(otherRecognizer, recognizer) {
    var manager = recognizer.manager;
    if (manager) {
        return manager.get(otherRecognizer);
    }
    return otherRecognizer;
}

/**
 * This recognizer is just used as a base for the simple attribute recognizers.
 * @constructor
 * @extends Recognizer
 */
function AttrRecognizer() {
    Recognizer.apply(this, arguments);
}

inherit(AttrRecognizer, Recognizer, {
    /**
     * @namespace
     * @memberof AttrRecognizer
     */
    defaults: {
        /**
         * @type {Number}
         * @default 1
         */
        pointers: 1
    },

    /**
     * Used to check if it the recognizer receives valid input, like input.distance > 10.
     * @memberof AttrRecognizer
     * @param {Object} input
     * @returns {Boolean} recognized
     */
    attrTest: function(input) {
        var optionPointers = this.options.pointers;
        return optionPointers === 0 || input.pointers.length === optionPointers;
    },

    /**
     * Process the input and return the state for the recognizer
     * @memberof AttrRecognizer
     * @param {Object} input
     * @returns {*} State
     */
    process: function(input) {
        var state = this.state;
        var eventType = input.eventType;

        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);
        var isValid = this.attrTest(input);

        // on cancel input and we've recognized before, return STATE_CANCELLED
        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {
            return state | STATE_CANCELLED;
        } else if (isRecognized || isValid) {
            if (eventType & INPUT_END) {
                return state | STATE_ENDED;
            } else if (!(state & STATE_BEGAN)) {
                return STATE_BEGAN;
            }
            return state | STATE_CHANGED;
        }
        return STATE_FAILED;
    }
});

/**
 * Pan
 * Recognized when the pointer is down and moved in the allowed direction.
 * @constructor
 * @extends AttrRecognizer
 */
function PanRecognizer() {
    AttrRecognizer.apply(this, arguments);

    this.pX = null;
    this.pY = null;
}

inherit(PanRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof PanRecognizer
     */
    defaults: {
        event: 'pan',
        threshold: 10,
        pointers: 1,
        direction: DIRECTION_ALL
    },

    getTouchAction: function() {
        var direction = this.options.direction;
        var actions = [];
        if (direction & DIRECTION_HORIZONTAL) {
            actions.push(TOUCH_ACTION_PAN_Y);
        }
        if (direction & DIRECTION_VERTICAL) {
            actions.push(TOUCH_ACTION_PAN_X);
        }
        return actions;
    },

    directionTest: function(input) {
        var options = this.options;
        var hasMoved = true;
        var distance = input.distance;
        var direction = input.direction;
        var x = input.deltaX;
        var y = input.deltaY;

        // lock to axis?
        if (!(direction & options.direction)) {
            if (options.direction & DIRECTION_HORIZONTAL) {
                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;
                hasMoved = x != this.pX;
                distance = Math.abs(input.deltaX);
            } else {
                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;
                hasMoved = y != this.pY;
                distance = Math.abs(input.deltaY);
            }
        }
        input.direction = direction;
        return hasMoved && distance > options.threshold && direction & options.direction;
    },

    attrTest: function(input) {
        return AttrRecognizer.prototype.attrTest.call(this, input) &&
            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));
    },

    emit: function(input) {

        this.pX = input.deltaX;
        this.pY = input.deltaY;

        var direction = directionStr(input.direction);

        if (direction) {
            input.additionalEvent = this.options.event + direction;
        }
        this._super.emit.call(this, input);
    }
});

/**
 * Pinch
 * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).
 * @constructor
 * @extends AttrRecognizer
 */
function PinchRecognizer() {
    AttrRecognizer.apply(this, arguments);
}

inherit(PinchRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof PinchRecognizer
     */
    defaults: {
        event: 'pinch',
        threshold: 0,
        pointers: 2
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_NONE];
    },

    attrTest: function(input) {
        return this._super.attrTest.call(this, input) &&
            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);
    },

    emit: function(input) {
        if (input.scale !== 1) {
            var inOut = input.scale < 1 ? 'in' : 'out';
            input.additionalEvent = this.options.event + inOut;
        }
        this._super.emit.call(this, input);
    }
});

/**
 * Press
 * Recognized when the pointer is down for x ms without any movement.
 * @constructor
 * @extends Recognizer
 */
function PressRecognizer() {
    Recognizer.apply(this, arguments);

    this._timer = null;
    this._input = null;
}

inherit(PressRecognizer, Recognizer, {
    /**
     * @namespace
     * @memberof PressRecognizer
     */
    defaults: {
        event: 'press',
        pointers: 1,
        time: 251, // minimal time of the pointer to be pressed
        threshold: 9 // a minimal movement is ok, but keep it low
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_AUTO];
    },

    process: function(input) {
        var options = this.options;
        var validPointers = input.pointers.length === options.pointers;
        var validMovement = input.distance < options.threshold;
        var validTime = input.deltaTime > options.time;

        this._input = input;

        // we only allow little movement
        // and we've reached an end event, so a tap is possible
        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {
            this.reset();
        } else if (input.eventType & INPUT_START) {
            this.reset();
            this._timer = setTimeoutContext(function() {
                this.state = STATE_RECOGNIZED;
                this.tryEmit();
            }, options.time, this);
        } else if (input.eventType & INPUT_END) {
            return STATE_RECOGNIZED;
        }
        return STATE_FAILED;
    },

    reset: function() {
        clearTimeout(this._timer);
    },

    emit: function(input) {
        if (this.state !== STATE_RECOGNIZED) {
            return;
        }

        if (input && (input.eventType & INPUT_END)) {
            this.manager.emit(this.options.event + 'up', input);
        } else {
            this._input.timeStamp = now();
            this.manager.emit(this.options.event, this._input);
        }
    }
});

/**
 * Rotate
 * Recognized when two or more pointer are moving in a circular motion.
 * @constructor
 * @extends AttrRecognizer
 */
function RotateRecognizer() {
    AttrRecognizer.apply(this, arguments);
}

inherit(RotateRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof RotateRecognizer
     */
    defaults: {
        event: 'rotate',
        threshold: 0,
        pointers: 2
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_NONE];
    },

    attrTest: function(input) {
        return this._super.attrTest.call(this, input) &&
            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);
    }
});

/**
 * Swipe
 * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.
 * @constructor
 * @extends AttrRecognizer
 */
function SwipeRecognizer() {
    AttrRecognizer.apply(this, arguments);
}

inherit(SwipeRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof SwipeRecognizer
     */
    defaults: {
        event: 'swipe',
        threshold: 10,
        velocity: 0.3,
        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,
        pointers: 1
    },

    getTouchAction: function() {
        return PanRecognizer.prototype.getTouchAction.call(this);
    },

    attrTest: function(input) {
        var direction = this.options.direction;
        var velocity;

        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {
            velocity = input.overallVelocity;
        } else if (direction & DIRECTION_HORIZONTAL) {
            velocity = input.overallVelocityX;
        } else if (direction & DIRECTION_VERTICAL) {
            velocity = input.overallVelocityY;
        }

        return this._super.attrTest.call(this, input) &&
            direction & input.offsetDirection &&
            input.distance > this.options.threshold &&
            input.maxPointers == this.options.pointers &&
            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;
    },

    emit: function(input) {
        var direction = directionStr(input.offsetDirection);
        if (direction) {
            this.manager.emit(this.options.event + direction, input);
        }

        this.manager.emit(this.options.event, input);
    }
});

/**
 * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur
 * between the given interval and position. The delay option can be used to recognize multi-taps without firing
 * a single tap.
 *
 * The eventData from the emitted event contains the property `tapCount`, which contains the amount of
 * multi-taps being recognized.
 * @constructor
 * @extends Recognizer
 */
function TapRecognizer() {
    Recognizer.apply(this, arguments);

    // previous time and center,
    // used for tap counting
    this.pTime = false;
    this.pCenter = false;

    this._timer = null;
    this._input = null;
    this.count = 0;
}

inherit(TapRecognizer, Recognizer, {
    /**
     * @namespace
     * @memberof PinchRecognizer
     */
    defaults: {
        event: 'tap',
        pointers: 1,
        taps: 1,
        interval: 300, // max time between the multi-tap taps
        time: 250, // max time of the pointer to be down (like finger on the screen)
        threshold: 9, // a minimal movement is ok, but keep it low
        posThreshold: 10 // a multi-tap can be a bit off the initial position
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_MANIPULATION];
    },

    process: function(input) {
        var options = this.options;

        var validPointers = input.pointers.length === options.pointers;
        var validMovement = input.distance < options.threshold;
        var validTouchTime = input.deltaTime < options.time;

        this.reset();

        if ((input.eventType & INPUT_START) && (this.count === 0)) {
            return this.failTimeout();
        }

        // we only allow little movement
        // and we've reached an end event, so a tap is possible
        if (validMovement && validTouchTime && validPointers) {
            if (input.eventType != INPUT_END) {
                return this.failTimeout();
            }

            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;
            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;

            this.pTime = input.timeStamp;
            this.pCenter = input.center;

            if (!validMultiTap || !validInterval) {
                this.count = 1;
            } else {
                this.count += 1;
            }

            this._input = input;

            // if tap count matches we have recognized it,
            // else it has began recognizing...
            var tapCount = this.count % options.taps;
            if (tapCount === 0) {
                // no failing requirements, immediately trigger the tap event
                // or wait as long as the multitap interval to trigger
                if (!this.hasRequireFailures()) {
                    return STATE_RECOGNIZED;
                } else {
                    this._timer = setTimeoutContext(function() {
                        this.state = STATE_RECOGNIZED;
                        this.tryEmit();
                    }, options.interval, this);
                    return STATE_BEGAN;
                }
            }
        }
        return STATE_FAILED;
    },

    failTimeout: function() {
        this._timer = setTimeoutContext(function() {
            this.state = STATE_FAILED;
        }, this.options.interval, this);
        return STATE_FAILED;
    },

    reset: function() {
        clearTimeout(this._timer);
    },

    emit: function() {
        if (this.state == STATE_RECOGNIZED) {
            this._input.tapCount = this.count;
            this.manager.emit(this.options.event, this._input);
        }
    }
});

/**
 * Simple way to create a manager with a default set of recognizers.
 * @param {HTMLElement} element
 * @param {Object} [options]
 * @constructor
 */
function Hammer(element, options) {
    options = options || {};
    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);
    return new Manager(element, options);
}

/**
 * @const {string}
 */
Hammer.VERSION = '2.0.7';

/**
 * default settings
 * @namespace
 */
Hammer.defaults = {
    /**
     * set if DOM events are being triggered.
     * But this is slower and unused by simple implementations, so disabled by default.
     * @type {Boolean}
     * @default false
     */
    domEvents: false,

    /**
     * The value for the touchAction property/fallback.
     * When set to `compute` it will magically set the correct value based on the added recognizers.
     * @type {String}
     * @default compute
     */
    touchAction: TOUCH_ACTION_COMPUTE,

    /**
     * @type {Boolean}
     * @default true
     */
    enable: true,

    /**
     * EXPERIMENTAL FEATURE -- can be removed/changed
     * Change the parent input target element.
     * If Null, then it is being set the to main element.
     * @type {Null|EventTarget}
     * @default null
     */
    inputTarget: null,

    /**
     * force an input class
     * @type {Null|Function}
     * @default null
     */
    inputClass: null,

    /**
     * Default recognizer setup when calling `Hammer()`
     * When creating a new Manager these will be skipped.
     * @type {Array}
     */
    preset: [
        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]
        [RotateRecognizer, {enable: false}],
        [PinchRecognizer, {enable: false}, ['rotate']],
        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],
        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],
        [TapRecognizer],
        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],
        [PressRecognizer]
    ],

    /**
     * Some CSS properties can be used to improve the working of Hammer.
     * Add them to this method and they will be set when creating a new Manager.
     * @namespace
     */
    cssProps: {
        /**
         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.
         * @type {String}
         * @default 'none'
         */
        userSelect: 'none',

        /**
         * Disable the Windows Phone grippers when pressing an element.
         * @type {String}
         * @default 'none'
         */
        touchSelect: 'none',

        /**
         * Disables the default callout shown when you touch and hold a touch target.
         * On iOS, when you touch and hold a touch target such as a link, Safari displays
         * a callout containing information about the link. This property allows you to disable that callout.
         * @type {String}
         * @default 'none'
         */
        touchCallout: 'none',

        /**
         * Specifies whether zooming is enabled. Used by IE10>
         * @type {String}
         * @default 'none'
         */
        contentZooming: 'none',

        /**
         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.
         * @type {String}
         * @default 'none'
         */
        userDrag: 'none',

        /**
         * Overrides the highlight color shown when the user taps a link or a JavaScript
         * clickable element in iOS. This property obeys the alpha value, if specified.
         * @type {String}
         * @default 'rgba(0,0,0,0)'
         */
        tapHighlightColor: 'rgba(0,0,0,0)'
    }
};

var STOP = 1;
var FORCED_STOP = 2;

/**
 * Manager
 * @param {HTMLElement} element
 * @param {Object} [options]
 * @constructor
 */
function Manager(element, options) {
    this.options = assign({}, Hammer.defaults, options || {});

    this.options.inputTarget = this.options.inputTarget || element;

    this.handlers = {};
    this.session = {};
    this.recognizers = [];
    this.oldCssProps = {};

    this.element = element;
    this.input = createInputInstance(this);
    this.touchAction = new TouchAction(this, this.options.touchAction);

    toggleCssProps(this, true);

    each(this.options.recognizers, function(item) {
        var recognizer = this.add(new (item[0])(item[1]));
        item[2] && recognizer.recognizeWith(item[2]);
        item[3] && recognizer.requireFailure(item[3]);
    }, this);
}

Manager.prototype = {
    /**
     * set options
     * @param {Object} options
     * @returns {Manager}
     */
    set: function(options) {
        assign(this.options, options);

        // Options that need a little more setup
        if (options.touchAction) {
            this.touchAction.update();
        }
        if (options.inputTarget) {
            // Clean up existing event listeners and reinitialize
            this.input.destroy();
            this.input.target = options.inputTarget;
            this.input.init();
        }
        return this;
    },

    /**
     * stop recognizing for this session.
     * This session will be discarded, when a new [input]start event is fired.
     * When forced, the recognizer cycle is stopped immediately.
     * @param {Boolean} [force]
     */
    stop: function(force) {
        this.session.stopped = force ? FORCED_STOP : STOP;
    },

    /**
     * run the recognizers!
     * called by the inputHandler function on every movement of the pointers (touches)
     * it walks through all the recognizers and tries to detect the gesture that is being made
     * @param {Object} inputData
     */
    recognize: function(inputData) {
        var session = this.session;
        if (session.stopped) {
            return;
        }

        // run the touch-action polyfill
        this.touchAction.preventDefaults(inputData);

        var recognizer;
        var recognizers = this.recognizers;

        // this holds the recognizer that is being recognized.
        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED
        // if no recognizer is detecting a thing, it is set to `null`
        var curRecognizer = session.curRecognizer;

        // reset when the last recognizer is recognized
        // or when we're in a new session
        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {
            curRecognizer = session.curRecognizer = null;
        }

        var i = 0;
        while (i < recognizers.length) {
            recognizer = recognizers[i];

            // find out if we are allowed try to recognize the input for this one.
            // 1.   allow if the session is NOT forced stopped (see the .stop() method)
            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one
            //      that is being recognized.
            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.
            //      this can be setup with the `recognizeWith()` method on the recognizer.
            if (session.stopped !== FORCED_STOP && ( // 1
                    !curRecognizer || recognizer == curRecognizer || // 2
                    recognizer.canRecognizeWith(curRecognizer))) { // 3
                recognizer.recognize(inputData);
            } else {
                recognizer.reset();
            }

            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the
            // current active recognizer. but only if we don't already have an active recognizer
            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {
                curRecognizer = session.curRecognizer = recognizer;
            }
            i++;
        }
    },

    /**
     * get a recognizer by its event name.
     * @param {Recognizer|String} recognizer
     * @returns {Recognizer|Null}
     */
    get: function(recognizer) {
        if (recognizer instanceof Recognizer) {
            return recognizer;
        }

        var recognizers = this.recognizers;
        for (var i = 0; i < recognizers.length; i++) {
            if (recognizers[i].options.event == recognizer) {
                return recognizers[i];
            }
        }
        return null;
    },

    /**
     * add a recognizer to the manager
     * existing recognizers with the same event name will be removed
     * @param {Recognizer} recognizer
     * @returns {Recognizer|Manager}
     */
    add: function(recognizer) {
        if (invokeArrayArg(recognizer, 'add', this)) {
            return this;
        }

        // remove existing
        var existing = this.get(recognizer.options.event);
        if (existing) {
            this.remove(existing);
        }

        this.recognizers.push(recognizer);
        recognizer.manager = this;

        this.touchAction.update();
        return recognizer;
    },

    /**
     * remove a recognizer by name or instance
     * @param {Recognizer|String} recognizer
     * @returns {Manager}
     */
    remove: function(recognizer) {
        if (invokeArrayArg(recognizer, 'remove', this)) {
            return this;
        }

        recognizer = this.get(recognizer);

        // let's make sure this recognizer exists
        if (recognizer) {
            var recognizers = this.recognizers;
            var index = inArray(recognizers, recognizer);

            if (index !== -1) {
                recognizers.splice(index, 1);
                this.touchAction.update();
            }
        }

        return this;
    },

    /**
     * bind event
     * @param {String} events
     * @param {Function} handler
     * @returns {EventEmitter} this
     */
    on: function(events, handler) {
        if (events === undefined) {
            return;
        }
        if (handler === undefined) {
            return;
        }

        var handlers = this.handlers;
        each(splitStr(events), function(event) {
            handlers[event] = handlers[event] || [];
            handlers[event].push(handler);
        });
        return this;
    },

    /**
     * unbind event, leave emit blank to remove all handlers
     * @param {String} events
     * @param {Function} [handler]
     * @returns {EventEmitter} this
     */
    off: function(events, handler) {
        if (events === undefined) {
            return;
        }

        var handlers = this.handlers;
        each(splitStr(events), function(event) {
            if (!handler) {
                delete handlers[event];
            } else {
                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);
            }
        });
        return this;
    },

    /**
     * emit event to the listeners
     * @param {String} event
     * @param {Object} data
     */
    emit: function(event, data) {
        // we also want to trigger dom events
        if (this.options.domEvents) {
            triggerDomEvent(event, data);
        }

        // no handlers, so skip it all
        var handlers = this.handlers[event] && this.handlers[event].slice();
        if (!handlers || !handlers.length) {
            return;
        }

        data.type = event;
        data.preventDefault = function() {
            data.srcEvent.preventDefault();
        };

        var i = 0;
        while (i < handlers.length) {
            handlers[i](data);
            i++;
        }
    },

    /**
     * destroy the manager and unbinds all events
     * it doesn't unbind dom events, that is the user own responsibility
     */
    destroy: function() {
        this.element && toggleCssProps(this, false);

        this.handlers = {};
        this.session = {};
        this.input.destroy();
        this.element = null;
    }
};

/**
 * add/remove the css properties as defined in manager.options.cssProps
 * @param {Manager} manager
 * @param {Boolean} add
 */
function toggleCssProps(manager, add) {
    var element = manager.element;
    if (!element.style) {
        return;
    }
    var prop;
    each(manager.options.cssProps, function(value, name) {
        prop = prefixed(element.style, name);
        if (add) {
            manager.oldCssProps[prop] = element.style[prop];
            element.style[prop] = value;
        } else {
            element.style[prop] = manager.oldCssProps[prop] || '';
        }
    });
    if (!add) {
        manager.oldCssProps = {};
    }
}

/**
 * trigger dom event
 * @param {String} event
 * @param {Object} data
 */
function triggerDomEvent(event, data) {
    var gestureEvent = document.createEvent('Event');
    gestureEvent.initEvent(event, true, true);
    gestureEvent.gesture = data;
    data.target.dispatchEvent(gestureEvent);
}

assign(Hammer, {
    INPUT_START: INPUT_START,
    INPUT_MOVE: INPUT_MOVE,
    INPUT_END: INPUT_END,
    INPUT_CANCEL: INPUT_CANCEL,

    STATE_POSSIBLE: STATE_POSSIBLE,
    STATE_BEGAN: STATE_BEGAN,
    STATE_CHANGED: STATE_CHANGED,
    STATE_ENDED: STATE_ENDED,
    STATE_RECOGNIZED: STATE_RECOGNIZED,
    STATE_CANCELLED: STATE_CANCELLED,
    STATE_FAILED: STATE_FAILED,

    DIRECTION_NONE: DIRECTION_NONE,
    DIRECTION_LEFT: DIRECTION_LEFT,
    DIRECTION_RIGHT: DIRECTION_RIGHT,
    DIRECTION_UP: DIRECTION_UP,
    DIRECTION_DOWN: DIRECTION_DOWN,
    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,
    DIRECTION_VERTICAL: DIRECTION_VERTICAL,
    DIRECTION_ALL: DIRECTION_ALL,

    Manager: Manager,
    Input: Input,
    TouchAction: TouchAction,

    TouchInput: TouchInput,
    MouseInput: MouseInput,
    PointerEventInput: PointerEventInput,
    TouchMouseInput: TouchMouseInput,
    SingleTouchInput: SingleTouchInput,

    Recognizer: Recognizer,
    AttrRecognizer: AttrRecognizer,
    Tap: TapRecognizer,
    Pan: PanRecognizer,
    Swipe: SwipeRecognizer,
    Pinch: PinchRecognizer,
    Rotate: RotateRecognizer,
    Press: PressRecognizer,

    on: addEventListeners,
    off: removeEventListeners,
    each: each,
    merge: merge,
    extend: extend,
    assign: assign,
    inherit: inherit,
    bindFn: bindFn,
    prefixed: prefixed
});

// this prevents errors when Hammer is loaded in the presence of an AMD
//  style loader but by script tag, not by the loader.
var freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line
freeGlobal.Hammer = Hammer;

if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
        return Hammer;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {}

})(window, document, 'Hammer');


/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/immutable/dist/immutable.es.js":
/*!*****************************************************!*\
  !*** ./node_modules/immutable/dist/immutable.es.js ***!
  \*****************************************************/
/*! exports provided: default, version, Collection, Iterable, Seq, Map, OrderedMap, List, Stack, Set, OrderedSet, Record, Range, Repeat, is, fromJS, hash, isImmutable, isCollection, isKeyed, isIndexed, isAssociative, isOrdered, isValueObject, get, getIn, has, hasIn, merge, mergeDeep, mergeWith, mergeDeepWith, remove, removeIn, set, setIn, update, updateIn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Collection", function() { return Collection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Iterable", function() { return Iterable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Seq", function() { return Seq; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Map", function() { return Map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrderedMap", function() { return OrderedMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "List", function() { return List; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Stack", function() { return Stack; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Set", function() { return Set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrderedSet", function() { return OrderedSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Record", function() { return Record; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Range", function() { return Range; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Repeat", function() { return Repeat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "is", function() { return is; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromJS", function() { return fromJS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hash", function() { return hash; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isImmutable", function() { return isImmutable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCollection", function() { return isCollection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isKeyed", function() { return isKeyed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIndexed", function() { return isIndexed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAssociative", function() { return isAssociative; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isOrdered", function() { return isOrdered; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValueObject", function() { return isValueObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get", function() { return get; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getIn", function() { return getIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has", function() { return has; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasIn", function() { return hasIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return merge$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeDeep", function() { return mergeDeep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeWith", function() { return mergeWith$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeDeepWith", function() { return mergeDeepWith; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return remove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeIn", function() { return removeIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setIn", function() { return setIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "update", function() { return update; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateIn", function() { return updateIn; });
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// Used for setting prototype methods that IE8 chokes on.
var DELETE = 'delete';

// Constants describing the size of trie nodes.
var SHIFT = 5; // Resulted in best performance after ______?
var SIZE = 1 << SHIFT;
var MASK = SIZE - 1;

// A consistent shared value representing "not set" which equals nothing other
// than itself, and nothing that could be provided externally.
var NOT_SET = {};

// Boolean references, Rough equivalent of `bool &`.
function MakeRef() {
  return { value: false };
}

function SetRef(ref) {
  if (ref) {
    ref.value = true;
  }
}

// A function which returns a value representing an "owner" for transient writes
// to tries. The return value will only ever equal itself, and will not equal
// the return of any subsequent call of this function.
function OwnerID() {}

function ensureSize(iter) {
  if (iter.size === undefined) {
    iter.size = iter.__iterate(returnTrue);
  }
  return iter.size;
}

function wrapIndex(iter, index) {
  // This implements "is array index" which the ECMAString spec defines as:
  //
  //     A String property name P is an array index if and only if
  //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal
  //     to 2^32−1.
  //
  // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects
  if (typeof index !== 'number') {
    var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32
    if ('' + uint32Index !== index || uint32Index === 4294967295) {
      return NaN;
    }
    index = uint32Index;
  }
  return index < 0 ? ensureSize(iter) + index : index;
}

function returnTrue() {
  return true;
}

function wholeSlice(begin, end, size) {
  return (
    ((begin === 0 && !isNeg(begin)) ||
      (size !== undefined && begin <= -size)) &&
    (end === undefined || (size !== undefined && end >= size))
  );
}

function resolveBegin(begin, size) {
  return resolveIndex(begin, size, 0);
}

function resolveEnd(end, size) {
  return resolveIndex(end, size, size);
}

function resolveIndex(index, size, defaultIndex) {
  // Sanitize indices using this shorthand for ToInt32(argument)
  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
  return index === undefined
    ? defaultIndex
    : isNeg(index)
      ? size === Infinity
        ? size
        : Math.max(0, size + index) | 0
      : size === undefined || size === index
        ? index
        : Math.min(size, index) | 0;
}

function isNeg(value) {
  // Account for -0 which is negative, but not less than 0.
  return value < 0 || (value === 0 && 1 / value === -Infinity);
}

// Note: value is unchanged to not break immutable-devtools.
var IS_COLLECTION_SYMBOL = '@@__IMMUTABLE_ITERABLE__@@';

function isCollection(maybeCollection) {
  return Boolean(maybeCollection && maybeCollection[IS_COLLECTION_SYMBOL]);
}

var IS_KEYED_SYMBOL = '@@__IMMUTABLE_KEYED__@@';

function isKeyed(maybeKeyed) {
  return Boolean(maybeKeyed && maybeKeyed[IS_KEYED_SYMBOL]);
}

var IS_INDEXED_SYMBOL = '@@__IMMUTABLE_INDEXED__@@';

function isIndexed(maybeIndexed) {
  return Boolean(maybeIndexed && maybeIndexed[IS_INDEXED_SYMBOL]);
}

function isAssociative(maybeAssociative) {
  return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
}

var Collection = function Collection(value) {
  return isCollection(value) ? value : Seq(value);
};

var KeyedCollection = /*@__PURE__*/(function (Collection) {
  function KeyedCollection(value) {
    return isKeyed(value) ? value : KeyedSeq(value);
  }

  if ( Collection ) KeyedCollection.__proto__ = Collection;
  KeyedCollection.prototype = Object.create( Collection && Collection.prototype );
  KeyedCollection.prototype.constructor = KeyedCollection;

  return KeyedCollection;
}(Collection));

var IndexedCollection = /*@__PURE__*/(function (Collection) {
  function IndexedCollection(value) {
    return isIndexed(value) ? value : IndexedSeq(value);
  }

  if ( Collection ) IndexedCollection.__proto__ = Collection;
  IndexedCollection.prototype = Object.create( Collection && Collection.prototype );
  IndexedCollection.prototype.constructor = IndexedCollection;

  return IndexedCollection;
}(Collection));

var SetCollection = /*@__PURE__*/(function (Collection) {
  function SetCollection(value) {
    return isCollection(value) && !isAssociative(value) ? value : SetSeq(value);
  }

  if ( Collection ) SetCollection.__proto__ = Collection;
  SetCollection.prototype = Object.create( Collection && Collection.prototype );
  SetCollection.prototype.constructor = SetCollection;

  return SetCollection;
}(Collection));

Collection.Keyed = KeyedCollection;
Collection.Indexed = IndexedCollection;
Collection.Set = SetCollection;

var IS_SEQ_SYMBOL = '@@__IMMUTABLE_SEQ__@@';

function isSeq(maybeSeq) {
  return Boolean(maybeSeq && maybeSeq[IS_SEQ_SYMBOL]);
}

var IS_RECORD_SYMBOL = '@@__IMMUTABLE_RECORD__@@';

function isRecord(maybeRecord) {
  return Boolean(maybeRecord && maybeRecord[IS_RECORD_SYMBOL]);
}

function isImmutable(maybeImmutable) {
  return isCollection(maybeImmutable) || isRecord(maybeImmutable);
}

var IS_ORDERED_SYMBOL = '@@__IMMUTABLE_ORDERED__@@';

function isOrdered(maybeOrdered) {
  return Boolean(maybeOrdered && maybeOrdered[IS_ORDERED_SYMBOL]);
}

var ITERATE_KEYS = 0;
var ITERATE_VALUES = 1;
var ITERATE_ENTRIES = 2;

var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';

var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;

var Iterator = function Iterator(next) {
  this.next = next;
};

Iterator.prototype.toString = function toString () {
  return '[Iterator]';
};

Iterator.KEYS = ITERATE_KEYS;
Iterator.VALUES = ITERATE_VALUES;
Iterator.ENTRIES = ITERATE_ENTRIES;

Iterator.prototype.inspect = Iterator.prototype.toSource = function() {
  return this.toString();
};
Iterator.prototype[ITERATOR_SYMBOL] = function() {
  return this;
};

function iteratorValue(type, k, v, iteratorResult) {
  var value = type === 0 ? k : type === 1 ? v : [k, v];
  iteratorResult
    ? (iteratorResult.value = value)
    : (iteratorResult = {
        value: value,
        done: false,
      });
  return iteratorResult;
}

function iteratorDone() {
  return { value: undefined, done: true };
}

function hasIterator(maybeIterable) {
  return !!getIteratorFn(maybeIterable);
}

function isIterator(maybeIterator) {
  return maybeIterator && typeof maybeIterator.next === 'function';
}

function getIterator(iterable) {
  var iteratorFn = getIteratorFn(iterable);
  return iteratorFn && iteratorFn.call(iterable);
}

function getIteratorFn(iterable) {
  var iteratorFn =
    iterable &&
    ((REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||
      iterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

var hasOwnProperty = Object.prototype.hasOwnProperty;

function isArrayLike(value) {
  if (Array.isArray(value) || typeof value === 'string') {
    return true;
  }

  return (
    value &&
    typeof value === 'object' &&
    Number.isInteger(value.length) &&
    value.length >= 0 &&
    (value.length === 0
      ? // Only {length: 0} is considered Array-like.
        Object.keys(value).length === 1
      : // An object is only Array-like if it has a property where the last value
        // in the array-like may be found (which could be undefined).
        value.hasOwnProperty(value.length - 1))
  );
}

var Seq = /*@__PURE__*/(function (Collection$$1) {
  function Seq(value) {
    return value === null || value === undefined
      ? emptySequence()
      : isImmutable(value)
        ? value.toSeq()
        : seqFromValue(value);
  }

  if ( Collection$$1 ) Seq.__proto__ = Collection$$1;
  Seq.prototype = Object.create( Collection$$1 && Collection$$1.prototype );
  Seq.prototype.constructor = Seq;

  Seq.prototype.toSeq = function toSeq () {
    return this;
  };

  Seq.prototype.toString = function toString () {
    return this.__toString('Seq {', '}');
  };

  Seq.prototype.cacheResult = function cacheResult () {
    if (!this._cache && this.__iterateUncached) {
      this._cache = this.entrySeq().toArray();
      this.size = this._cache.length;
    }
    return this;
  };

  // abstract __iterateUncached(fn, reverse)

  Seq.prototype.__iterate = function __iterate (fn, reverse) {
    var cache = this._cache;
    if (cache) {
      var size = cache.length;
      var i = 0;
      while (i !== size) {
        var entry = cache[reverse ? size - ++i : i++];
        if (fn(entry[1], entry[0], this) === false) {
          break;
        }
      }
      return i;
    }
    return this.__iterateUncached(fn, reverse);
  };

  // abstract __iteratorUncached(type, reverse)

  Seq.prototype.__iterator = function __iterator (type, reverse) {
    var cache = this._cache;
    if (cache) {
      var size = cache.length;
      var i = 0;
      return new Iterator(function () {
        if (i === size) {
          return iteratorDone();
        }
        var entry = cache[reverse ? size - ++i : i++];
        return iteratorValue(type, entry[0], entry[1]);
      });
    }
    return this.__iteratorUncached(type, reverse);
  };

  return Seq;
}(Collection));

var KeyedSeq = /*@__PURE__*/(function (Seq) {
  function KeyedSeq(value) {
    return value === null || value === undefined
      ? emptySequence().toKeyedSeq()
      : isCollection(value)
        ? isKeyed(value)
          ? value.toSeq()
          : value.fromEntrySeq()
        : isRecord(value)
          ? value.toSeq()
          : keyedSeqFromValue(value);
  }

  if ( Seq ) KeyedSeq.__proto__ = Seq;
  KeyedSeq.prototype = Object.create( Seq && Seq.prototype );
  KeyedSeq.prototype.constructor = KeyedSeq;

  KeyedSeq.prototype.toKeyedSeq = function toKeyedSeq () {
    return this;
  };

  return KeyedSeq;
}(Seq));

var IndexedSeq = /*@__PURE__*/(function (Seq) {
  function IndexedSeq(value) {
    return value === null || value === undefined
      ? emptySequence()
      : isCollection(value)
        ? isKeyed(value)
          ? value.entrySeq()
          : value.toIndexedSeq()
        : isRecord(value)
          ? value.toSeq().entrySeq()
          : indexedSeqFromValue(value);
  }

  if ( Seq ) IndexedSeq.__proto__ = Seq;
  IndexedSeq.prototype = Object.create( Seq && Seq.prototype );
  IndexedSeq.prototype.constructor = IndexedSeq;

  IndexedSeq.of = function of (/*...values*/) {
    return IndexedSeq(arguments);
  };

  IndexedSeq.prototype.toIndexedSeq = function toIndexedSeq () {
    return this;
  };

  IndexedSeq.prototype.toString = function toString () {
    return this.__toString('Seq [', ']');
  };

  return IndexedSeq;
}(Seq));

var SetSeq = /*@__PURE__*/(function (Seq) {
  function SetSeq(value) {
    return (isCollection(value) && !isAssociative(value)
      ? value
      : IndexedSeq(value)
    ).toSetSeq();
  }

  if ( Seq ) SetSeq.__proto__ = Seq;
  SetSeq.prototype = Object.create( Seq && Seq.prototype );
  SetSeq.prototype.constructor = SetSeq;

  SetSeq.of = function of (/*...values*/) {
    return SetSeq(arguments);
  };

  SetSeq.prototype.toSetSeq = function toSetSeq () {
    return this;
  };

  return SetSeq;
}(Seq));

Seq.isSeq = isSeq;
Seq.Keyed = KeyedSeq;
Seq.Set = SetSeq;
Seq.Indexed = IndexedSeq;

Seq.prototype[IS_SEQ_SYMBOL] = true;

// #pragma Root Sequences

var ArraySeq = /*@__PURE__*/(function (IndexedSeq) {
  function ArraySeq(array) {
    this._array = array;
    this.size = array.length;
  }

  if ( IndexedSeq ) ArraySeq.__proto__ = IndexedSeq;
  ArraySeq.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );
  ArraySeq.prototype.constructor = ArraySeq;

  ArraySeq.prototype.get = function get (index, notSetValue) {
    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
  };

  ArraySeq.prototype.__iterate = function __iterate (fn, reverse) {
    var array = this._array;
    var size = array.length;
    var i = 0;
    while (i !== size) {
      var ii = reverse ? size - ++i : i++;
      if (fn(array[ii], ii, this) === false) {
        break;
      }
    }
    return i;
  };

  ArraySeq.prototype.__iterator = function __iterator (type, reverse) {
    var array = this._array;
    var size = array.length;
    var i = 0;
    return new Iterator(function () {
      if (i === size) {
        return iteratorDone();
      }
      var ii = reverse ? size - ++i : i++;
      return iteratorValue(type, ii, array[ii]);
    });
  };

  return ArraySeq;
}(IndexedSeq));

var ObjectSeq = /*@__PURE__*/(function (KeyedSeq) {
  function ObjectSeq(object) {
    var keys = Object.keys(object);
    this._object = object;
    this._keys = keys;
    this.size = keys.length;
  }

  if ( KeyedSeq ) ObjectSeq.__proto__ = KeyedSeq;
  ObjectSeq.prototype = Object.create( KeyedSeq && KeyedSeq.prototype );
  ObjectSeq.prototype.constructor = ObjectSeq;

  ObjectSeq.prototype.get = function get (key, notSetValue) {
    if (notSetValue !== undefined && !this.has(key)) {
      return notSetValue;
    }
    return this._object[key];
  };

  ObjectSeq.prototype.has = function has (key) {
    return hasOwnProperty.call(this._object, key);
  };

  ObjectSeq.prototype.__iterate = function __iterate (fn, reverse) {
    var object = this._object;
    var keys = this._keys;
    var size = keys.length;
    var i = 0;
    while (i !== size) {
      var key = keys[reverse ? size - ++i : i++];
      if (fn(object[key], key, this) === false) {
        break;
      }
    }
    return i;
  };

  ObjectSeq.prototype.__iterator = function __iterator (type, reverse) {
    var object = this._object;
    var keys = this._keys;
    var size = keys.length;
    var i = 0;
    return new Iterator(function () {
      if (i === size) {
        return iteratorDone();
      }
      var key = keys[reverse ? size - ++i : i++];
      return iteratorValue(type, key, object[key]);
    });
  };

  return ObjectSeq;
}(KeyedSeq));
ObjectSeq.prototype[IS_ORDERED_SYMBOL] = true;

var CollectionSeq = /*@__PURE__*/(function (IndexedSeq) {
  function CollectionSeq(collection) {
    this._collection = collection;
    this.size = collection.length || collection.size;
  }

  if ( IndexedSeq ) CollectionSeq.__proto__ = IndexedSeq;
  CollectionSeq.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );
  CollectionSeq.prototype.constructor = CollectionSeq;

  CollectionSeq.prototype.__iterateUncached = function __iterateUncached (fn, reverse) {
    if (reverse) {
      return this.cacheResult().__iterate(fn, reverse);
    }
    var collection = this._collection;
    var iterator = getIterator(collection);
    var iterations = 0;
    if (isIterator(iterator)) {
      var step;
      while (!(step = iterator.next()).done) {
        if (fn(step.value, iterations++, this) === false) {
          break;
        }
      }
    }
    return iterations;
  };

  CollectionSeq.prototype.__iteratorUncached = function __iteratorUncached (type, reverse) {
    if (reverse) {
      return this.cacheResult().__iterator(type, reverse);
    }
    var collection = this._collection;
    var iterator = getIterator(collection);
    if (!isIterator(iterator)) {
      return new Iterator(iteratorDone);
    }
    var iterations = 0;
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, iterations++, step.value);
    });
  };

  return CollectionSeq;
}(IndexedSeq));

// # pragma Helper functions

var EMPTY_SEQ;

function emptySequence() {
  return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
}

function keyedSeqFromValue(value) {
  var seq = Array.isArray(value)
    ? new ArraySeq(value)
    : hasIterator(value)
      ? new CollectionSeq(value)
      : undefined;
  if (seq) {
    return seq.fromEntrySeq();
  }
  if (typeof value === 'object') {
    return new ObjectSeq(value);
  }
  throw new TypeError(
    'Expected Array or collection object of [k, v] entries, or keyed object: ' +
      value
  );
}

function indexedSeqFromValue(value) {
  var seq = maybeIndexedSeqFromValue(value);
  if (seq) {
    return seq;
  }
  throw new TypeError(
    'Expected Array or collection object of values: ' + value
  );
}

function seqFromValue(value) {
  var seq = maybeIndexedSeqFromValue(value);
  if (seq) {
    return seq;
  }
  if (typeof value === 'object') {
    return new ObjectSeq(value);
  }
  throw new TypeError(
    'Expected Array or collection object of values, or keyed object: ' + value
  );
}

function maybeIndexedSeqFromValue(value) {
  return isArrayLike(value)
    ? new ArraySeq(value)
    : hasIterator(value)
      ? new CollectionSeq(value)
      : undefined;
}

var IS_MAP_SYMBOL = '@@__IMMUTABLE_MAP__@@';

function isMap(maybeMap) {
  return Boolean(maybeMap && maybeMap[IS_MAP_SYMBOL]);
}

function isOrderedMap(maybeOrderedMap) {
  return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
}

function isValueObject(maybeValue) {
  return Boolean(
    maybeValue &&
      typeof maybeValue.equals === 'function' &&
      typeof maybeValue.hashCode === 'function'
  );
}

/**
 * An extension of the "same-value" algorithm as [described for use by ES6 Map
 * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)
 *
 * NaN is considered the same as NaN, however -0 and 0 are considered the same
 * value, which is different from the algorithm described by
 * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).
 *
 * This is extended further to allow Objects to describe the values they
 * represent, by way of `valueOf` or `equals` (and `hashCode`).
 *
 * Note: because of this extension, the key equality of Immutable.Map and the
 * value equality of Immutable.Set will differ from ES6 Map and Set.
 *
 * ### Defining custom values
 *
 * The easiest way to describe the value an object represents is by implementing
 * `valueOf`. For example, `Date` represents a value by returning a unix
 * timestamp for `valueOf`:
 *
 *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...
 *     var date2 = new Date(1234567890000);
 *     date1.valueOf(); // 1234567890000
 *     assert( date1 !== date2 );
 *     assert( Immutable.is( date1, date2 ) );
 *
 * Note: overriding `valueOf` may have other implications if you use this object
 * where JavaScript expects a primitive, such as implicit string coercion.
 *
 * For more complex types, especially collections, implementing `valueOf` may
 * not be performant. An alternative is to implement `equals` and `hashCode`.
 *
 * `equals` takes another object, presumably of similar type, and returns true
 * if it is equal. Equality is symmetrical, so the same result should be
 * returned if this and the argument are flipped.
 *
 *     assert( a.equals(b) === b.equals(a) );
 *
 * `hashCode` returns a 32bit integer number representing the object which will
 * be used to determine how to store the value object in a Map or Set. You must
 * provide both or neither methods, one must not exist without the other.
 *
 * Also, an important relationship between these methods must be upheld: if two
 * values are equal, they *must* return the same hashCode. If the values are not
 * equal, they might have the same hashCode; this is called a hash collision,
 * and while undesirable for performance reasons, it is acceptable.
 *
 *     if (a.equals(b)) {
 *       assert( a.hashCode() === b.hashCode() );
 *     }
 *
 * All Immutable collections are Value Objects: they implement `equals()`
 * and `hashCode()`.
 */
function is(valueA, valueB) {
  if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
    return true;
  }
  if (!valueA || !valueB) {
    return false;
  }
  if (
    typeof valueA.valueOf === 'function' &&
    typeof valueB.valueOf === 'function'
  ) {
    valueA = valueA.valueOf();
    valueB = valueB.valueOf();
    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
      return true;
    }
    if (!valueA || !valueB) {
      return false;
    }
  }
  return !!(
    isValueObject(valueA) &&
    isValueObject(valueB) &&
    valueA.equals(valueB)
  );
}

var imul =
  typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2
    ? Math.imul
    : function imul(a, b) {
        a |= 0; // int
        b |= 0; // int
        var c = a & 0xffff;
        var d = b & 0xffff;
        // Shift by 0 fixes the sign on the high part.
        return (c * d + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0)) | 0; // int
      };

// v8 has an optimization for storing 31-bit signed numbers.
// Values which have either 00 or 11 as the high order bits qualify.
// This function drops the highest order bit in a signed number, maintaining
// the sign bit.
function smi(i32) {
  return ((i32 >>> 1) & 0x40000000) | (i32 & 0xbfffffff);
}

var defaultValueOf = Object.prototype.valueOf;

function hash(o) {
  switch (typeof o) {
    case 'boolean':
      // The hash values for built-in constants are a 1 value for each 5-byte
      // shift region expect for the first, which encodes the value. This
      // reduces the odds of a hash collision for these common values.
      return o ? 0x42108421 : 0x42108420;
    case 'number':
      return hashNumber(o);
    case 'string':
      return o.length > STRING_HASH_CACHE_MIN_STRLEN
        ? cachedHashString(o)
        : hashString(o);
    case 'object':
    case 'function':
      if (o === null) {
        return 0x42108422;
      }
      if (typeof o.hashCode === 'function') {
        // Drop any high bits from accidentally long hash codes.
        return smi(o.hashCode(o));
      }
      if (o.valueOf !== defaultValueOf && typeof o.valueOf === 'function') {
        o = o.valueOf(o);
      }
      return hashJSObj(o);
    case 'undefined':
      return 0x42108423;
    default:
      if (typeof o.toString === 'function') {
        return hashString(o.toString());
      }
      throw new Error('Value type ' + typeof o + ' cannot be hashed.');
  }
}

// Compress arbitrarily large numbers into smi hashes.
function hashNumber(n) {
  if (n !== n || n === Infinity) {
    return 0;
  }
  var hash = n | 0;
  if (hash !== n) {
    hash ^= n * 0xffffffff;
  }
  while (n > 0xffffffff) {
    n /= 0xffffffff;
    hash ^= n;
  }
  return smi(hash);
}

function cachedHashString(string) {
  var hashed = stringHashCache[string];
  if (hashed === undefined) {
    hashed = hashString(string);
    if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
      STRING_HASH_CACHE_SIZE = 0;
      stringHashCache = {};
    }
    STRING_HASH_CACHE_SIZE++;
    stringHashCache[string] = hashed;
  }
  return hashed;
}

// http://jsperf.com/hashing-strings
function hashString(string) {
  // This is the hash from JVM
  // The hash code for a string is computed as
  // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],
  // where s[i] is the ith character of the string and n is the length of
  // the string. We "mod" the result to make it between 0 (inclusive) and 2^31
  // (exclusive) by dropping high bits.
  var hashed = 0;
  for (var ii = 0; ii < string.length; ii++) {
    hashed = (31 * hashed + string.charCodeAt(ii)) | 0;
  }
  return smi(hashed);
}

function hashJSObj(obj) {
  var hashed;
  if (usingWeakMap) {
    hashed = weakMap.get(obj);
    if (hashed !== undefined) {
      return hashed;
    }
  }

  hashed = obj[UID_HASH_KEY];
  if (hashed !== undefined) {
    return hashed;
  }

  if (!canDefineProperty) {
    hashed = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
    if (hashed !== undefined) {
      return hashed;
    }

    hashed = getIENodeHash(obj);
    if (hashed !== undefined) {
      return hashed;
    }
  }

  hashed = ++objHashUID;
  if (objHashUID & 0x40000000) {
    objHashUID = 0;
  }

  if (usingWeakMap) {
    weakMap.set(obj, hashed);
  } else if (isExtensible !== undefined && isExtensible(obj) === false) {
    throw new Error('Non-extensible objects are not allowed as keys.');
  } else if (canDefineProperty) {
    Object.defineProperty(obj, UID_HASH_KEY, {
      enumerable: false,
      configurable: false,
      writable: false,
      value: hashed,
    });
  } else if (
    obj.propertyIsEnumerable !== undefined &&
    obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable
  ) {
    // Since we can't define a non-enumerable property on the object
    // we'll hijack one of the less-used non-enumerable properties to
    // save our hash on it. Since this is a function it will not show up in
    // `JSON.stringify` which is what we want.
    obj.propertyIsEnumerable = function() {
      return this.constructor.prototype.propertyIsEnumerable.apply(
        this,
        arguments
      );
    };
    obj.propertyIsEnumerable[UID_HASH_KEY] = hashed;
  } else if (obj.nodeType !== undefined) {
    // At this point we couldn't get the IE `uniqueID` to use as a hash
    // and we couldn't use a non-enumerable property to exploit the
    // dontEnum bug so we simply add the `UID_HASH_KEY` on the node
    // itself.
    obj[UID_HASH_KEY] = hashed;
  } else {
    throw new Error('Unable to set a non-enumerable property on object.');
  }

  return hashed;
}

// Get references to ES5 object methods.
var isExtensible = Object.isExtensible;

// True if Object.defineProperty works as expected. IE8 fails this test.
var canDefineProperty = (function() {
  try {
    Object.defineProperty({}, '@', {});
    return true;
  } catch (e) {
    return false;
  }
})();

// IE has a `uniqueID` property on DOM nodes. We can construct the hash from it
// and avoid memory leaks from the IE cloneNode bug.
function getIENodeHash(node) {
  if (node && node.nodeType > 0) {
    switch (node.nodeType) {
      case 1: // Element
        return node.uniqueID;
      case 9: // Document
        return node.documentElement && node.documentElement.uniqueID;
    }
  }
}

// If possible, use a WeakMap.
var usingWeakMap = typeof WeakMap === 'function';
var weakMap;
if (usingWeakMap) {
  weakMap = new WeakMap();
}

var objHashUID = 0;

var UID_HASH_KEY = '__immutablehash__';
if (typeof Symbol === 'function') {
  UID_HASH_KEY = Symbol(UID_HASH_KEY);
}

var STRING_HASH_CACHE_MIN_STRLEN = 16;
var STRING_HASH_CACHE_MAX_SIZE = 255;
var STRING_HASH_CACHE_SIZE = 0;
var stringHashCache = {};

var ToKeyedSequence = /*@__PURE__*/(function (KeyedSeq$$1) {
  function ToKeyedSequence(indexed, useKeys) {
    this._iter = indexed;
    this._useKeys = useKeys;
    this.size = indexed.size;
  }

  if ( KeyedSeq$$1 ) ToKeyedSequence.__proto__ = KeyedSeq$$1;
  ToKeyedSequence.prototype = Object.create( KeyedSeq$$1 && KeyedSeq$$1.prototype );
  ToKeyedSequence.prototype.constructor = ToKeyedSequence;

  ToKeyedSequence.prototype.get = function get (key, notSetValue) {
    return this._iter.get(key, notSetValue);
  };

  ToKeyedSequence.prototype.has = function has (key) {
    return this._iter.has(key);
  };

  ToKeyedSequence.prototype.valueSeq = function valueSeq () {
    return this._iter.valueSeq();
  };

  ToKeyedSequence.prototype.reverse = function reverse () {
    var this$1 = this;

    var reversedSequence = reverseFactory(this, true);
    if (!this._useKeys) {
      reversedSequence.valueSeq = function () { return this$1._iter.toSeq().reverse(); };
    }
    return reversedSequence;
  };

  ToKeyedSequence.prototype.map = function map (mapper, context) {
    var this$1 = this;

    var mappedSequence = mapFactory(this, mapper, context);
    if (!this._useKeys) {
      mappedSequence.valueSeq = function () { return this$1._iter.toSeq().map(mapper, context); };
    }
    return mappedSequence;
  };

  ToKeyedSequence.prototype.__iterate = function __iterate (fn, reverse) {
    var this$1 = this;

    return this._iter.__iterate(function (v, k) { return fn(v, k, this$1); }, reverse);
  };

  ToKeyedSequence.prototype.__iterator = function __iterator (type, reverse) {
    return this._iter.__iterator(type, reverse);
  };

  return ToKeyedSequence;
}(KeyedSeq));
ToKeyedSequence.prototype[IS_ORDERED_SYMBOL] = true;

var ToIndexedSequence = /*@__PURE__*/(function (IndexedSeq$$1) {
  function ToIndexedSequence(iter) {
    this._iter = iter;
    this.size = iter.size;
  }

  if ( IndexedSeq$$1 ) ToIndexedSequence.__proto__ = IndexedSeq$$1;
  ToIndexedSequence.prototype = Object.create( IndexedSeq$$1 && IndexedSeq$$1.prototype );
  ToIndexedSequence.prototype.constructor = ToIndexedSequence;

  ToIndexedSequence.prototype.includes = function includes (value) {
    return this._iter.includes(value);
  };

  ToIndexedSequence.prototype.__iterate = function __iterate (fn, reverse) {
    var this$1 = this;

    var i = 0;
    reverse && ensureSize(this);
    return this._iter.__iterate(
      function (v) { return fn(v, reverse ? this$1.size - ++i : i++, this$1); },
      reverse
    );
  };

  ToIndexedSequence.prototype.__iterator = function __iterator (type, reverse) {
    var this$1 = this;

    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    var i = 0;
    reverse && ensureSize(this);
    return new Iterator(function () {
      var step = iterator.next();
      return step.done
        ? step
        : iteratorValue(
            type,
            reverse ? this$1.size - ++i : i++,
            step.value,
            step
          );
    });
  };

  return ToIndexedSequence;
}(IndexedSeq));

var ToSetSequence = /*@__PURE__*/(function (SetSeq$$1) {
  function ToSetSequence(iter) {
    this._iter = iter;
    this.size = iter.size;
  }

  if ( SetSeq$$1 ) ToSetSequence.__proto__ = SetSeq$$1;
  ToSetSequence.prototype = Object.create( SetSeq$$1 && SetSeq$$1.prototype );
  ToSetSequence.prototype.constructor = ToSetSequence;

  ToSetSequence.prototype.has = function has (key) {
    return this._iter.includes(key);
  };

  ToSetSequence.prototype.__iterate = function __iterate (fn, reverse) {
    var this$1 = this;

    return this._iter.__iterate(function (v) { return fn(v, v, this$1); }, reverse);
  };

  ToSetSequence.prototype.__iterator = function __iterator (type, reverse) {
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    return new Iterator(function () {
      var step = iterator.next();
      return step.done
        ? step
        : iteratorValue(type, step.value, step.value, step);
    });
  };

  return ToSetSequence;
}(SetSeq));

var FromEntriesSequence = /*@__PURE__*/(function (KeyedSeq$$1) {
  function FromEntriesSequence(entries) {
    this._iter = entries;
    this.size = entries.size;
  }

  if ( KeyedSeq$$1 ) FromEntriesSequence.__proto__ = KeyedSeq$$1;
  FromEntriesSequence.prototype = Object.create( KeyedSeq$$1 && KeyedSeq$$1.prototype );
  FromEntriesSequence.prototype.constructor = FromEntriesSequence;

  FromEntriesSequence.prototype.entrySeq = function entrySeq () {
    return this._iter.toSeq();
  };

  FromEntriesSequence.prototype.__iterate = function __iterate (fn, reverse) {
    var this$1 = this;

    return this._iter.__iterate(function (entry) {
      // Check if entry exists first so array access doesn't throw for holes
      // in the parent iteration.
      if (entry) {
        validateEntry(entry);
        var indexedCollection = isCollection(entry);
        return fn(
          indexedCollection ? entry.get(1) : entry[1],
          indexedCollection ? entry.get(0) : entry[0],
          this$1
        );
      }
    }, reverse);
  };

  FromEntriesSequence.prototype.__iterator = function __iterator (type, reverse) {
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    return new Iterator(function () {
      while (true) {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        // Check if entry exists first so array access doesn't throw for holes
        // in the parent iteration.
        if (entry) {
          validateEntry(entry);
          var indexedCollection = isCollection(entry);
          return iteratorValue(
            type,
            indexedCollection ? entry.get(0) : entry[0],
            indexedCollection ? entry.get(1) : entry[1],
            step
          );
        }
      }
    });
  };

  return FromEntriesSequence;
}(KeyedSeq));

ToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;

function flipFactory(collection) {
  var flipSequence = makeSequence(collection);
  flipSequence._iter = collection;
  flipSequence.size = collection.size;
  flipSequence.flip = function () { return collection; };
  flipSequence.reverse = function() {
    var reversedSequence = collection.reverse.apply(this); // super.reverse()
    reversedSequence.flip = function () { return collection.reverse(); };
    return reversedSequence;
  };
  flipSequence.has = function (key) { return collection.includes(key); };
  flipSequence.includes = function (key) { return collection.has(key); };
  flipSequence.cacheResult = cacheResultThrough;
  flipSequence.__iterateUncached = function(fn, reverse) {
    var this$1 = this;

    return collection.__iterate(function (v, k) { return fn(k, v, this$1) !== false; }, reverse);
  };
  flipSequence.__iteratorUncached = function(type, reverse) {
    if (type === ITERATE_ENTRIES) {
      var iterator = collection.__iterator(type, reverse);
      return new Iterator(function () {
        var step = iterator.next();
        if (!step.done) {
          var k = step.value[0];
          step.value[0] = step.value[1];
          step.value[1] = k;
        }
        return step;
      });
    }
    return collection.__iterator(
      type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,
      reverse
    );
  };
  return flipSequence;
}

function mapFactory(collection, mapper, context) {
  var mappedSequence = makeSequence(collection);
  mappedSequence.size = collection.size;
  mappedSequence.has = function (key) { return collection.has(key); };
  mappedSequence.get = function (key, notSetValue) {
    var v = collection.get(key, NOT_SET);
    return v === NOT_SET
      ? notSetValue
      : mapper.call(context, v, key, collection);
  };
  mappedSequence.__iterateUncached = function(fn, reverse) {
    var this$1 = this;

    return collection.__iterate(
      function (v, k, c) { return fn(mapper.call(context, v, k, c), k, this$1) !== false; },
      reverse
    );
  };
  mappedSequence.__iteratorUncached = function(type, reverse) {
    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);
    return new Iterator(function () {
      var step = iterator.next();
      if (step.done) {
        return step;
      }
      var entry = step.value;
      var key = entry[0];
      return iteratorValue(
        type,
        key,
        mapper.call(context, entry[1], key, collection),
        step
      );
    });
  };
  return mappedSequence;
}

function reverseFactory(collection, useKeys) {
  var this$1 = this;

  var reversedSequence = makeSequence(collection);
  reversedSequence._iter = collection;
  reversedSequence.size = collection.size;
  reversedSequence.reverse = function () { return collection; };
  if (collection.flip) {
    reversedSequence.flip = function() {
      var flipSequence = flipFactory(collection);
      flipSequence.reverse = function () { return collection.flip(); };
      return flipSequence;
    };
  }
  reversedSequence.get = function (key, notSetValue) { return collection.get(useKeys ? key : -1 - key, notSetValue); };
  reversedSequence.has = function (key) { return collection.has(useKeys ? key : -1 - key); };
  reversedSequence.includes = function (value) { return collection.includes(value); };
  reversedSequence.cacheResult = cacheResultThrough;
  reversedSequence.__iterate = function(fn, reverse) {
    var this$1 = this;

    var i = 0;
    reverse && ensureSize(collection);
    return collection.__iterate(
      function (v, k) { return fn(v, useKeys ? k : reverse ? this$1.size - ++i : i++, this$1); },
      !reverse
    );
  };
  reversedSequence.__iterator = function (type, reverse) {
    var i = 0;
    reverse && ensureSize(collection);
    var iterator = collection.__iterator(ITERATE_ENTRIES, !reverse);
    return new Iterator(function () {
      var step = iterator.next();
      if (step.done) {
        return step;
      }
      var entry = step.value;
      return iteratorValue(
        type,
        useKeys ? entry[0] : reverse ? this$1.size - ++i : i++,
        entry[1],
        step
      );
    });
  };
  return reversedSequence;
}

function filterFactory(collection, predicate, context, useKeys) {
  var filterSequence = makeSequence(collection);
  if (useKeys) {
    filterSequence.has = function (key) {
      var v = collection.get(key, NOT_SET);
      return v !== NOT_SET && !!predicate.call(context, v, key, collection);
    };
    filterSequence.get = function (key, notSetValue) {
      var v = collection.get(key, NOT_SET);
      return v !== NOT_SET && predicate.call(context, v, key, collection)
        ? v
        : notSetValue;
    };
  }
  filterSequence.__iterateUncached = function(fn, reverse) {
    var this$1 = this;

    var iterations = 0;
    collection.__iterate(function (v, k, c) {
      if (predicate.call(context, v, k, c)) {
        iterations++;
        return fn(v, useKeys ? k : iterations - 1, this$1);
      }
    }, reverse);
    return iterations;
  };
  filterSequence.__iteratorUncached = function(type, reverse) {
    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);
    var iterations = 0;
    return new Iterator(function () {
      while (true) {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        var key = entry[0];
        var value = entry[1];
        if (predicate.call(context, value, key, collection)) {
          return iteratorValue(type, useKeys ? key : iterations++, value, step);
        }
      }
    });
  };
  return filterSequence;
}

function countByFactory(collection, grouper, context) {
  var groups = Map().asMutable();
  collection.__iterate(function (v, k) {
    groups.update(grouper.call(context, v, k, collection), 0, function (a) { return a + 1; });
  });
  return groups.asImmutable();
}

function groupByFactory(collection, grouper, context) {
  var isKeyedIter = isKeyed(collection);
  var groups = (isOrdered(collection) ? OrderedMap() : Map()).asMutable();
  collection.__iterate(function (v, k) {
    groups.update(
      grouper.call(context, v, k, collection),
      function (a) { return ((a = a || []), a.push(isKeyedIter ? [k, v] : v), a); }
    );
  });
  var coerce = collectionClass(collection);
  return groups.map(function (arr) { return reify(collection, coerce(arr)); }).asImmutable();
}

function sliceFactory(collection, begin, end, useKeys) {
  var originalSize = collection.size;

  if (wholeSlice(begin, end, originalSize)) {
    return collection;
  }

  var resolvedBegin = resolveBegin(begin, originalSize);
  var resolvedEnd = resolveEnd(end, originalSize);

  // begin or end will be NaN if they were provided as negative numbers and
  // this collection's size is unknown. In that case, cache first so there is
  // a known size and these do not resolve to NaN.
  if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
    return sliceFactory(collection.toSeq().cacheResult(), begin, end, useKeys);
  }

  // Note: resolvedEnd is undefined when the original sequence's length is
  // unknown and this slice did not supply an end and should contain all
  // elements after resolvedBegin.
  // In that case, resolvedSize will be NaN and sliceSize will remain undefined.
  var resolvedSize = resolvedEnd - resolvedBegin;
  var sliceSize;
  if (resolvedSize === resolvedSize) {
    sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
  }

  var sliceSeq = makeSequence(collection);

  // If collection.size is undefined, the size of the realized sliceSeq is
  // unknown at this point unless the number of items to slice is 0
  sliceSeq.size =
    sliceSize === 0 ? sliceSize : (collection.size && sliceSize) || undefined;

  if (!useKeys && isSeq(collection) && sliceSize >= 0) {
    sliceSeq.get = function(index, notSetValue) {
      index = wrapIndex(this, index);
      return index >= 0 && index < sliceSize
        ? collection.get(index + resolvedBegin, notSetValue)
        : notSetValue;
    };
  }

  sliceSeq.__iterateUncached = function(fn, reverse) {
    var this$1 = this;

    if (sliceSize === 0) {
      return 0;
    }
    if (reverse) {
      return this.cacheResult().__iterate(fn, reverse);
    }
    var skipped = 0;
    var isSkipping = true;
    var iterations = 0;
    collection.__iterate(function (v, k) {
      if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
        iterations++;
        return (
          fn(v, useKeys ? k : iterations - 1, this$1) !== false &&
          iterations !== sliceSize
        );
      }
    });
    return iterations;
  };

  sliceSeq.__iteratorUncached = function(type, reverse) {
    if (sliceSize !== 0 && reverse) {
      return this.cacheResult().__iterator(type, reverse);
    }
    // Don't bother instantiating parent iterator if taking 0.
    if (sliceSize === 0) {
      return new Iterator(iteratorDone);
    }
    var iterator = collection.__iterator(type, reverse);
    var skipped = 0;
    var iterations = 0;
    return new Iterator(function () {
      while (skipped++ < resolvedBegin) {
        iterator.next();
      }
      if (++iterations > sliceSize) {
        return iteratorDone();
      }
      var step = iterator.next();
      if (useKeys || type === ITERATE_VALUES || step.done) {
        return step;
      }
      if (type === ITERATE_KEYS) {
        return iteratorValue(type, iterations - 1, undefined, step);
      }
      return iteratorValue(type, iterations - 1, step.value[1], step);
    });
  };

  return sliceSeq;
}

function takeWhileFactory(collection, predicate, context) {
  var takeSequence = makeSequence(collection);
  takeSequence.__iterateUncached = function(fn, reverse) {
    var this$1 = this;

    if (reverse) {
      return this.cacheResult().__iterate(fn, reverse);
    }
    var iterations = 0;
    collection.__iterate(
      function (v, k, c) { return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$1); }
    );
    return iterations;
  };
  takeSequence.__iteratorUncached = function(type, reverse) {
    var this$1 = this;

    if (reverse) {
      return this.cacheResult().__iterator(type, reverse);
    }
    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);
    var iterating = true;
    return new Iterator(function () {
      if (!iterating) {
        return iteratorDone();
      }
      var step = iterator.next();
      if (step.done) {
        return step;
      }
      var entry = step.value;
      var k = entry[0];
      var v = entry[1];
      if (!predicate.call(context, v, k, this$1)) {
        iterating = false;
        return iteratorDone();
      }
      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
    });
  };
  return takeSequence;
}

function skipWhileFactory(collection, predicate, context, useKeys) {
  var skipSequence = makeSequence(collection);
  skipSequence.__iterateUncached = function(fn, reverse) {
    var this$1 = this;

    if (reverse) {
      return this.cacheResult().__iterate(fn, reverse);
    }
    var isSkipping = true;
    var iterations = 0;
    collection.__iterate(function (v, k, c) {
      if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
        iterations++;
        return fn(v, useKeys ? k : iterations - 1, this$1);
      }
    });
    return iterations;
  };
  skipSequence.__iteratorUncached = function(type, reverse) {
    var this$1 = this;

    if (reverse) {
      return this.cacheResult().__iterator(type, reverse);
    }
    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);
    var skipping = true;
    var iterations = 0;
    return new Iterator(function () {
      var step;
      var k;
      var v;
      do {
        step = iterator.next();
        if (step.done) {
          if (useKeys || type === ITERATE_VALUES) {
            return step;
          }
          if (type === ITERATE_KEYS) {
            return iteratorValue(type, iterations++, undefined, step);
          }
          return iteratorValue(type, iterations++, step.value[1], step);
        }
        var entry = step.value;
        k = entry[0];
        v = entry[1];
        skipping && (skipping = predicate.call(context, v, k, this$1));
      } while (skipping);
      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
    });
  };
  return skipSequence;
}

function concatFactory(collection, values) {
  var isKeyedCollection = isKeyed(collection);
  var iters = [collection]
    .concat(values)
    .map(function (v) {
      if (!isCollection(v)) {
        v = isKeyedCollection
          ? keyedSeqFromValue(v)
          : indexedSeqFromValue(Array.isArray(v) ? v : [v]);
      } else if (isKeyedCollection) {
        v = KeyedCollection(v);
      }
      return v;
    })
    .filter(function (v) { return v.size !== 0; });

  if (iters.length === 0) {
    return collection;
  }

  if (iters.length === 1) {
    var singleton = iters[0];
    if (
      singleton === collection ||
      (isKeyedCollection && isKeyed(singleton)) ||
      (isIndexed(collection) && isIndexed(singleton))
    ) {
      return singleton;
    }
  }

  var concatSeq = new ArraySeq(iters);
  if (isKeyedCollection) {
    concatSeq = concatSeq.toKeyedSeq();
  } else if (!isIndexed(collection)) {
    concatSeq = concatSeq.toSetSeq();
  }
  concatSeq = concatSeq.flatten(true);
  concatSeq.size = iters.reduce(function (sum, seq) {
    if (sum !== undefined) {
      var size = seq.size;
      if (size !== undefined) {
        return sum + size;
      }
    }
  }, 0);
  return concatSeq;
}

function flattenFactory(collection, depth, useKeys) {
  var flatSequence = makeSequence(collection);
  flatSequence.__iterateUncached = function(fn, reverse) {
    if (reverse) {
      return this.cacheResult().__iterate(fn, reverse);
    }
    var iterations = 0;
    var stopped = false;
    function flatDeep(iter, currentDepth) {
      iter.__iterate(function (v, k) {
        if ((!depth || currentDepth < depth) && isCollection(v)) {
          flatDeep(v, currentDepth + 1);
        } else {
          iterations++;
          if (fn(v, useKeys ? k : iterations - 1, flatSequence) === false) {
            stopped = true;
          }
        }
        return !stopped;
      }, reverse);
    }
    flatDeep(collection, 0);
    return iterations;
  };
  flatSequence.__iteratorUncached = function(type, reverse) {
    if (reverse) {
      return this.cacheResult().__iterator(type, reverse);
    }
    var iterator = collection.__iterator(type, reverse);
    var stack = [];
    var iterations = 0;
    return new Iterator(function () {
      while (iterator) {
        var step = iterator.next();
        if (step.done !== false) {
          iterator = stack.pop();
          continue;
        }
        var v = step.value;
        if (type === ITERATE_ENTRIES) {
          v = v[1];
        }
        if ((!depth || stack.length < depth) && isCollection(v)) {
          stack.push(iterator);
          iterator = v.__iterator(type, reverse);
        } else {
          return useKeys ? step : iteratorValue(type, iterations++, v, step);
        }
      }
      return iteratorDone();
    });
  };
  return flatSequence;
}

function flatMapFactory(collection, mapper, context) {
  var coerce = collectionClass(collection);
  return collection
    .toSeq()
    .map(function (v, k) { return coerce(mapper.call(context, v, k, collection)); })
    .flatten(true);
}

function interposeFactory(collection, separator) {
  var interposedSequence = makeSequence(collection);
  interposedSequence.size = collection.size && collection.size * 2 - 1;
  interposedSequence.__iterateUncached = function(fn, reverse) {
    var this$1 = this;

    var iterations = 0;
    collection.__iterate(
      function (v) { return (!iterations || fn(separator, iterations++, this$1) !== false) &&
        fn(v, iterations++, this$1) !== false; },
      reverse
    );
    return iterations;
  };
  interposedSequence.__iteratorUncached = function(type, reverse) {
    var iterator = collection.__iterator(ITERATE_VALUES, reverse);
    var iterations = 0;
    var step;
    return new Iterator(function () {
      if (!step || iterations % 2) {
        step = iterator.next();
        if (step.done) {
          return step;
        }
      }
      return iterations % 2
        ? iteratorValue(type, iterations++, separator)
        : iteratorValue(type, iterations++, step.value, step);
    });
  };
  return interposedSequence;
}

function sortFactory(collection, comparator, mapper) {
  if (!comparator) {
    comparator = defaultComparator;
  }
  var isKeyedCollection = isKeyed(collection);
  var index = 0;
  var entries = collection
    .toSeq()
    .map(function (v, k) { return [k, v, index++, mapper ? mapper(v, k, collection) : v]; })
    .valueSeq()
    .toArray();
  entries.sort(function (a, b) { return comparator(a[3], b[3]) || a[2] - b[2]; }).forEach(
    isKeyedCollection
      ? function (v, i) {
          entries[i].length = 2;
        }
      : function (v, i) {
          entries[i] = v[1];
        }
  );
  return isKeyedCollection
    ? KeyedSeq(entries)
    : isIndexed(collection)
      ? IndexedSeq(entries)
      : SetSeq(entries);
}

function maxFactory(collection, comparator, mapper) {
  if (!comparator) {
    comparator = defaultComparator;
  }
  if (mapper) {
    var entry = collection
      .toSeq()
      .map(function (v, k) { return [v, mapper(v, k, collection)]; })
      .reduce(function (a, b) { return (maxCompare(comparator, a[1], b[1]) ? b : a); });
    return entry && entry[0];
  }
  return collection.reduce(function (a, b) { return (maxCompare(comparator, a, b) ? b : a); });
}

function maxCompare(comparator, a, b) {
  var comp = comparator(b, a);
  // b is considered the new max if the comparator declares them equal, but
  // they are not equal and b is in fact a nullish value.
  return (
    (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) ||
    comp > 0
  );
}

function zipWithFactory(keyIter, zipper, iters, zipAll) {
  var zipSequence = makeSequence(keyIter);
  var sizes = new ArraySeq(iters).map(function (i) { return i.size; });
  zipSequence.size = zipAll ? sizes.max() : sizes.min();
  // Note: this a generic base implementation of __iterate in terms of
  // __iterator which may be more generically useful in the future.
  zipSequence.__iterate = function(fn, reverse) {
    /* generic:
    var iterator = this.__iterator(ITERATE_ENTRIES, reverse);
    var step;
    var iterations = 0;
    while (!(step = iterator.next()).done) {
      iterations++;
      if (fn(step.value[1], step.value[0], this) === false) {
        break;
      }
    }
    return iterations;
    */
    // indexed:
    var iterator = this.__iterator(ITERATE_VALUES, reverse);
    var step;
    var iterations = 0;
    while (!(step = iterator.next()).done) {
      if (fn(step.value, iterations++, this) === false) {
        break;
      }
    }
    return iterations;
  };
  zipSequence.__iteratorUncached = function(type, reverse) {
    var iterators = iters.map(
      function (i) { return ((i = Collection(i)), getIterator(reverse ? i.reverse() : i)); }
    );
    var iterations = 0;
    var isDone = false;
    return new Iterator(function () {
      var steps;
      if (!isDone) {
        steps = iterators.map(function (i) { return i.next(); });
        isDone = zipAll ? steps.every(function (s) { return s.done; }) : steps.some(function (s) { return s.done; });
      }
      if (isDone) {
        return iteratorDone();
      }
      return iteratorValue(
        type,
        iterations++,
        zipper.apply(null, steps.map(function (s) { return s.value; }))
      );
    });
  };
  return zipSequence;
}

// #pragma Helper Functions

function reify(iter, seq) {
  return iter === seq ? iter : isSeq(iter) ? seq : iter.constructor(seq);
}

function validateEntry(entry) {
  if (entry !== Object(entry)) {
    throw new TypeError('Expected [K, V] tuple: ' + entry);
  }
}

function collectionClass(collection) {
  return isKeyed(collection)
    ? KeyedCollection
    : isIndexed(collection)
      ? IndexedCollection
      : SetCollection;
}

function makeSequence(collection) {
  return Object.create(
    (isKeyed(collection)
      ? KeyedSeq
      : isIndexed(collection)
        ? IndexedSeq
        : SetSeq
    ).prototype
  );
}

function cacheResultThrough() {
  if (this._iter.cacheResult) {
    this._iter.cacheResult();
    this.size = this._iter.size;
    return this;
  }
  return Seq.prototype.cacheResult.call(this);
}

function defaultComparator(a, b) {
  if (a === undefined && b === undefined) {
    return 0;
  }

  if (a === undefined) {
    return 1;
  }

  if (b === undefined) {
    return -1;
  }

  return a > b ? 1 : a < b ? -1 : 0;
}

// http://jsperf.com/copy-array-inline
function arrCopy(arr, offset) {
  offset = offset || 0;
  var len = Math.max(0, arr.length - offset);
  var newArr = new Array(len);
  for (var ii = 0; ii < len; ii++) {
    newArr[ii] = arr[ii + offset];
  }
  return newArr;
}

function invariant(condition, error) {
  if (!condition) { throw new Error(error); }
}

function assertNotInfinite(size) {
  invariant(
    size !== Infinity,
    'Cannot perform this action with an infinite size.'
  );
}

function coerceKeyPath(keyPath) {
  if (isArrayLike(keyPath) && typeof keyPath !== 'string') {
    return keyPath;
  }
  if (isOrdered(keyPath)) {
    return keyPath.toArray();
  }
  throw new TypeError(
    'Invalid keyPath: expected Ordered Collection or Array: ' + keyPath
  );
}

function isPlainObj(value) {
  return (
    value &&
    (typeof value.constructor !== 'function' ||
      value.constructor.name === 'Object')
  );
}

/**
 * Returns true if the value is a potentially-persistent data structure, either
 * provided by Immutable.js or a plain Array or Object.
 */
function isDataStructure(value) {
  return (
    typeof value === 'object' &&
    (isImmutable(value) || Array.isArray(value) || isPlainObj(value))
  );
}

/**
 * Converts a value to a string, adding quotes if a string was provided.
 */
function quoteString(value) {
  try {
    return typeof value === 'string' ? JSON.stringify(value) : String(value);
  } catch (_ignoreError) {
    return JSON.stringify(value);
  }
}

function has(collection, key) {
  return isImmutable(collection)
    ? collection.has(key)
    : isDataStructure(collection) && hasOwnProperty.call(collection, key);
}

function get(collection, key, notSetValue) {
  return isImmutable(collection)
    ? collection.get(key, notSetValue)
    : !has(collection, key)
      ? notSetValue
      : typeof collection.get === 'function'
        ? collection.get(key)
        : collection[key];
}

function shallowCopy(from) {
  if (Array.isArray(from)) {
    return arrCopy(from);
  }
  var to = {};
  for (var key in from) {
    if (hasOwnProperty.call(from, key)) {
      to[key] = from[key];
    }
  }
  return to;
}

function remove(collection, key) {
  if (!isDataStructure(collection)) {
    throw new TypeError(
      'Cannot update non-data-structure value: ' + collection
    );
  }
  if (isImmutable(collection)) {
    if (!collection.remove) {
      throw new TypeError(
        'Cannot update immutable value without .remove() method: ' + collection
      );
    }
    return collection.remove(key);
  }
  if (!hasOwnProperty.call(collection, key)) {
    return collection;
  }
  var collectionCopy = shallowCopy(collection);
  if (Array.isArray(collectionCopy)) {
    collectionCopy.splice(key, 1);
  } else {
    delete collectionCopy[key];
  }
  return collectionCopy;
}

function set(collection, key, value) {
  if (!isDataStructure(collection)) {
    throw new TypeError(
      'Cannot update non-data-structure value: ' + collection
    );
  }
  if (isImmutable(collection)) {
    if (!collection.set) {
      throw new TypeError(
        'Cannot update immutable value without .set() method: ' + collection
      );
    }
    return collection.set(key, value);
  }
  if (hasOwnProperty.call(collection, key) && value === collection[key]) {
    return collection;
  }
  var collectionCopy = shallowCopy(collection);
  collectionCopy[key] = value;
  return collectionCopy;
}

function updateIn(collection, keyPath, notSetValue, updater) {
  if (!updater) {
    updater = notSetValue;
    notSetValue = undefined;
  }
  var updatedValue = updateInDeeply(
    isImmutable(collection),
    collection,
    coerceKeyPath(keyPath),
    0,
    notSetValue,
    updater
  );
  return updatedValue === NOT_SET ? notSetValue : updatedValue;
}

function updateInDeeply(
  inImmutable,
  existing,
  keyPath,
  i,
  notSetValue,
  updater
) {
  var wasNotSet = existing === NOT_SET;
  if (i === keyPath.length) {
    var existingValue = wasNotSet ? notSetValue : existing;
    var newValue = updater(existingValue);
    return newValue === existingValue ? existing : newValue;
  }
  if (!wasNotSet && !isDataStructure(existing)) {
    throw new TypeError(
      'Cannot update within non-data-structure value in path [' +
        keyPath.slice(0, i).map(quoteString) +
        ']: ' +
        existing
    );
  }
  var key = keyPath[i];
  var nextExisting = wasNotSet ? NOT_SET : get(existing, key, NOT_SET);
  var nextUpdated = updateInDeeply(
    nextExisting === NOT_SET ? inImmutable : isImmutable(nextExisting),
    nextExisting,
    keyPath,
    i + 1,
    notSetValue,
    updater
  );
  return nextUpdated === nextExisting
    ? existing
    : nextUpdated === NOT_SET
      ? remove(existing, key)
      : set(
          wasNotSet ? (inImmutable ? emptyMap() : {}) : existing,
          key,
          nextUpdated
        );
}

function setIn(collection, keyPath, value) {
  return updateIn(collection, keyPath, NOT_SET, function () { return value; });
}

function setIn$1(keyPath, v) {
  return setIn(this, keyPath, v);
}

function removeIn(collection, keyPath) {
  return updateIn(collection, keyPath, function () { return NOT_SET; });
}

function deleteIn(keyPath) {
  return removeIn(this, keyPath);
}

function update(collection, key, notSetValue, updater) {
  return updateIn(collection, [key], notSetValue, updater);
}

function update$1(key, notSetValue, updater) {
  return arguments.length === 1
    ? key(this)
    : update(this, key, notSetValue, updater);
}

function updateIn$1(keyPath, notSetValue, updater) {
  return updateIn(this, keyPath, notSetValue, updater);
}

function merge() {
  var iters = [], len = arguments.length;
  while ( len-- ) iters[ len ] = arguments[ len ];

  return mergeIntoKeyedWith(this, iters);
}

function mergeWith(merger) {
  var iters = [], len = arguments.length - 1;
  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];

  if (typeof merger !== 'function') {
    throw new TypeError('Invalid merger function: ' + merger);
  }
  return mergeIntoKeyedWith(this, iters, merger);
}

function mergeIntoKeyedWith(collection, collections, merger) {
  var iters = [];
  for (var ii = 0; ii < collections.length; ii++) {
    var collection$1 = KeyedCollection(collections[ii]);
    if (collection$1.size !== 0) {
      iters.push(collection$1);
    }
  }
  if (iters.length === 0) {
    return collection;
  }
  if (
    collection.toSeq().size === 0 &&
    !collection.__ownerID &&
    iters.length === 1
  ) {
    return collection.constructor(iters[0]);
  }
  return collection.withMutations(function (collection) {
    var mergeIntoCollection = merger
      ? function (value, key) {
          update(
            collection,
            key,
            NOT_SET,
            function (oldVal) { return (oldVal === NOT_SET ? value : merger(oldVal, value, key)); }
          );
        }
      : function (value, key) {
          collection.set(key, value);
        };
    for (var ii = 0; ii < iters.length; ii++) {
      iters[ii].forEach(mergeIntoCollection);
    }
  });
}

function merge$1(collection) {
  var sources = [], len = arguments.length - 1;
  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];

  return mergeWithSources(collection, sources);
}

function mergeWith$1(merger, collection) {
  var sources = [], len = arguments.length - 2;
  while ( len-- > 0 ) sources[ len ] = arguments[ len + 2 ];

  return mergeWithSources(collection, sources, merger);
}

function mergeDeep(collection) {
  var sources = [], len = arguments.length - 1;
  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];

  return mergeDeepWithSources(collection, sources);
}

function mergeDeepWith(merger, collection) {
  var sources = [], len = arguments.length - 2;
  while ( len-- > 0 ) sources[ len ] = arguments[ len + 2 ];

  return mergeDeepWithSources(collection, sources, merger);
}

function mergeDeepWithSources(collection, sources, merger) {
  return mergeWithSources(collection, sources, deepMergerWith(merger));
}

function mergeWithSources(collection, sources, merger) {
  if (!isDataStructure(collection)) {
    throw new TypeError(
      'Cannot merge into non-data-structure value: ' + collection
    );
  }
  if (isImmutable(collection)) {
    return typeof merger === 'function' && collection.mergeWith
      ? collection.mergeWith.apply(collection, [ merger ].concat( sources ))
      : collection.merge
        ? collection.merge.apply(collection, sources)
        : collection.concat.apply(collection, sources);
  }
  var isArray = Array.isArray(collection);
  var merged = collection;
  var Collection$$1 = isArray ? IndexedCollection : KeyedCollection;
  var mergeItem = isArray
    ? function (value) {
        // Copy on write
        if (merged === collection) {
          merged = shallowCopy(merged);
        }
        merged.push(value);
      }
    : function (value, key) {
        var hasVal = hasOwnProperty.call(merged, key);
        var nextVal =
          hasVal && merger ? merger(merged[key], value, key) : value;
        if (!hasVal || nextVal !== merged[key]) {
          // Copy on write
          if (merged === collection) {
            merged = shallowCopy(merged);
          }
          merged[key] = nextVal;
        }
      };
  for (var i = 0; i < sources.length; i++) {
    Collection$$1(sources[i]).forEach(mergeItem);
  }
  return merged;
}

function deepMergerWith(merger) {
  function deepMerger(oldValue, newValue, key) {
    return isDataStructure(oldValue) && isDataStructure(newValue)
      ? mergeWithSources(oldValue, [newValue], deepMerger)
      : merger
        ? merger(oldValue, newValue, key)
        : newValue;
  }
  return deepMerger;
}

function mergeDeep$1() {
  var iters = [], len = arguments.length;
  while ( len-- ) iters[ len ] = arguments[ len ];

  return mergeDeepWithSources(this, iters);
}

function mergeDeepWith$1(merger) {
  var iters = [], len = arguments.length - 1;
  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];

  return mergeDeepWithSources(this, iters, merger);
}

function mergeIn(keyPath) {
  var iters = [], len = arguments.length - 1;
  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];

  return updateIn(this, keyPath, emptyMap(), function (m) { return mergeWithSources(m, iters); });
}

function mergeDeepIn(keyPath) {
  var iters = [], len = arguments.length - 1;
  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];

  return updateIn(this, keyPath, emptyMap(), function (m) { return mergeDeepWithSources(m, iters); }
  );
}

function withMutations(fn) {
  var mutable = this.asMutable();
  fn(mutable);
  return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
}

function asMutable() {
  return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
}

function asImmutable() {
  return this.__ensureOwner();
}

function wasAltered() {
  return this.__altered;
}

var Map = /*@__PURE__*/(function (KeyedCollection$$1) {
  function Map(value) {
    return value === null || value === undefined
      ? emptyMap()
      : isMap(value) && !isOrdered(value)
        ? value
        : emptyMap().withMutations(function (map) {
            var iter = KeyedCollection$$1(value);
            assertNotInfinite(iter.size);
            iter.forEach(function (v, k) { return map.set(k, v); });
          });
  }

  if ( KeyedCollection$$1 ) Map.__proto__ = KeyedCollection$$1;
  Map.prototype = Object.create( KeyedCollection$$1 && KeyedCollection$$1.prototype );
  Map.prototype.constructor = Map;

  Map.of = function of () {
    var keyValues = [], len = arguments.length;
    while ( len-- ) keyValues[ len ] = arguments[ len ];

    return emptyMap().withMutations(function (map) {
      for (var i = 0; i < keyValues.length; i += 2) {
        if (i + 1 >= keyValues.length) {
          throw new Error('Missing value for key: ' + keyValues[i]);
        }
        map.set(keyValues[i], keyValues[i + 1]);
      }
    });
  };

  Map.prototype.toString = function toString () {
    return this.__toString('Map {', '}');
  };

  // @pragma Access

  Map.prototype.get = function get (k, notSetValue) {
    return this._root
      ? this._root.get(0, undefined, k, notSetValue)
      : notSetValue;
  };

  // @pragma Modification

  Map.prototype.set = function set (k, v) {
    return updateMap(this, k, v);
  };

  Map.prototype.remove = function remove (k) {
    return updateMap(this, k, NOT_SET);
  };

  Map.prototype.deleteAll = function deleteAll (keys) {
    var collection = Collection(keys);

    if (collection.size === 0) {
      return this;
    }

    return this.withMutations(function (map) {
      collection.forEach(function (key) { return map.remove(key); });
    });
  };

  Map.prototype.clear = function clear () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = 0;
      this._root = null;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return emptyMap();
  };

  // @pragma Composition

  Map.prototype.sort = function sort (comparator) {
    // Late binding
    return OrderedMap(sortFactory(this, comparator));
  };

  Map.prototype.sortBy = function sortBy (mapper, comparator) {
    // Late binding
    return OrderedMap(sortFactory(this, comparator, mapper));
  };

  Map.prototype.map = function map (mapper, context) {
    return this.withMutations(function (map) {
      map.forEach(function (value, key) {
        map.set(key, mapper.call(context, value, key, map));
      });
    });
  };

  // @pragma Mutability

  Map.prototype.__iterator = function __iterator (type, reverse) {
    return new MapIterator(this, type, reverse);
  };

  Map.prototype.__iterate = function __iterate (fn, reverse) {
    var this$1 = this;

    var iterations = 0;
    this._root &&
      this._root.iterate(function (entry) {
        iterations++;
        return fn(entry[1], entry[0], this$1);
      }, reverse);
    return iterations;
  };

  Map.prototype.__ensureOwner = function __ensureOwner (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    if (!ownerID) {
      if (this.size === 0) {
        return emptyMap();
      }
      this.__ownerID = ownerID;
      this.__altered = false;
      return this;
    }
    return makeMap(this.size, this._root, ownerID, this.__hash);
  };

  return Map;
}(KeyedCollection));

Map.isMap = isMap;

var MapPrototype = Map.prototype;
MapPrototype[IS_MAP_SYMBOL] = true;
MapPrototype[DELETE] = MapPrototype.remove;
MapPrototype.removeAll = MapPrototype.deleteAll;
MapPrototype.setIn = setIn$1;
MapPrototype.removeIn = MapPrototype.deleteIn = deleteIn;
MapPrototype.update = update$1;
MapPrototype.updateIn = updateIn$1;
MapPrototype.merge = MapPrototype.concat = merge;
MapPrototype.mergeWith = mergeWith;
MapPrototype.mergeDeep = mergeDeep$1;
MapPrototype.mergeDeepWith = mergeDeepWith$1;
MapPrototype.mergeIn = mergeIn;
MapPrototype.mergeDeepIn = mergeDeepIn;
MapPrototype.withMutations = withMutations;
MapPrototype.wasAltered = wasAltered;
MapPrototype.asImmutable = asImmutable;
MapPrototype['@@transducer/init'] = MapPrototype.asMutable = asMutable;
MapPrototype['@@transducer/step'] = function(result, arr) {
  return result.set(arr[0], arr[1]);
};
MapPrototype['@@transducer/result'] = function(obj) {
  return obj.asImmutable();
};

// #pragma Trie Nodes

var ArrayMapNode = function ArrayMapNode(ownerID, entries) {
  this.ownerID = ownerID;
  this.entries = entries;
};

ArrayMapNode.prototype.get = function get (shift, keyHash, key, notSetValue) {
  var entries = this.entries;
  for (var ii = 0, len = entries.length; ii < len; ii++) {
    if (is(key, entries[ii][0])) {
      return entries[ii][1];
    }
  }
  return notSetValue;
};

ArrayMapNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
  var removed = value === NOT_SET;

  var entries = this.entries;
  var idx = 0;
  var len = entries.length;
  for (; idx < len; idx++) {
    if (is(key, entries[idx][0])) {
      break;
    }
  }
  var exists = idx < len;

  if (exists ? entries[idx][1] === value : removed) {
    return this;
  }

  SetRef(didAlter);
  (removed || !exists) && SetRef(didChangeSize);

  if (removed && entries.length === 1) {
    return; // undefined
  }

  if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
    return createNodes(ownerID, entries, key, value);
  }

  var isEditable = ownerID && ownerID === this.ownerID;
  var newEntries = isEditable ? entries : arrCopy(entries);

  if (exists) {
    if (removed) {
      idx === len - 1
        ? newEntries.pop()
        : (newEntries[idx] = newEntries.pop());
    } else {
      newEntries[idx] = [key, value];
    }
  } else {
    newEntries.push([key, value]);
  }

  if (isEditable) {
    this.entries = newEntries;
    return this;
  }

  return new ArrayMapNode(ownerID, newEntries);
};

var BitmapIndexedNode = function BitmapIndexedNode(ownerID, bitmap, nodes) {
  this.ownerID = ownerID;
  this.bitmap = bitmap;
  this.nodes = nodes;
};

BitmapIndexedNode.prototype.get = function get (shift, keyHash, key, notSetValue) {
  if (keyHash === undefined) {
    keyHash = hash(key);
  }
  var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);
  var bitmap = this.bitmap;
  return (bitmap & bit) === 0
    ? notSetValue
    : this.nodes[popCount(bitmap & (bit - 1))].get(
        shift + SHIFT,
        keyHash,
        key,
        notSetValue
      );
};

BitmapIndexedNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
  if (keyHash === undefined) {
    keyHash = hash(key);
  }
  var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
  var bit = 1 << keyHashFrag;
  var bitmap = this.bitmap;
  var exists = (bitmap & bit) !== 0;

  if (!exists && value === NOT_SET) {
    return this;
  }

  var idx = popCount(bitmap & (bit - 1));
  var nodes = this.nodes;
  var node = exists ? nodes[idx] : undefined;
  var newNode = updateNode(
    node,
    ownerID,
    shift + SHIFT,
    keyHash,
    key,
    value,
    didChangeSize,
    didAlter
  );

  if (newNode === node) {
    return this;
  }

  if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
    return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
  }

  if (
    exists &&
    !newNode &&
    nodes.length === 2 &&
    isLeafNode(nodes[idx ^ 1])
  ) {
    return nodes[idx ^ 1];
  }

  if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
    return newNode;
  }

  var isEditable = ownerID && ownerID === this.ownerID;
  var newBitmap = exists ? (newNode ? bitmap : bitmap ^ bit) : bitmap | bit;
  var newNodes = exists
    ? newNode
      ? setAt(nodes, idx, newNode, isEditable)
      : spliceOut(nodes, idx, isEditable)
    : spliceIn(nodes, idx, newNode, isEditable);

  if (isEditable) {
    this.bitmap = newBitmap;
    this.nodes = newNodes;
    return this;
  }

  return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
};

var HashArrayMapNode = function HashArrayMapNode(ownerID, count, nodes) {
  this.ownerID = ownerID;
  this.count = count;
  this.nodes = nodes;
};

HashArrayMapNode.prototype.get = function get (shift, keyHash, key, notSetValue) {
  if (keyHash === undefined) {
    keyHash = hash(key);
  }
  var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
  var node = this.nodes[idx];
  return node
    ? node.get(shift + SHIFT, keyHash, key, notSetValue)
    : notSetValue;
};

HashArrayMapNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
  if (keyHash === undefined) {
    keyHash = hash(key);
  }
  var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
  var removed = value === NOT_SET;
  var nodes = this.nodes;
  var node = nodes[idx];

  if (removed && !node) {
    return this;
  }

  var newNode = updateNode(
    node,
    ownerID,
    shift + SHIFT,
    keyHash,
    key,
    value,
    didChangeSize,
    didAlter
  );
  if (newNode === node) {
    return this;
  }

  var newCount = this.count;
  if (!node) {
    newCount++;
  } else if (!newNode) {
    newCount--;
    if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
      return packNodes(ownerID, nodes, newCount, idx);
    }
  }

  var isEditable = ownerID && ownerID === this.ownerID;
  var newNodes = setAt(nodes, idx, newNode, isEditable);

  if (isEditable) {
    this.count = newCount;
    this.nodes = newNodes;
    return this;
  }

  return new HashArrayMapNode(ownerID, newCount, newNodes);
};

var HashCollisionNode = function HashCollisionNode(ownerID, keyHash, entries) {
  this.ownerID = ownerID;
  this.keyHash = keyHash;
  this.entries = entries;
};

HashCollisionNode.prototype.get = function get (shift, keyHash, key, notSetValue) {
  var entries = this.entries;
  for (var ii = 0, len = entries.length; ii < len; ii++) {
    if (is(key, entries[ii][0])) {
      return entries[ii][1];
    }
  }
  return notSetValue;
};

HashCollisionNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
  if (keyHash === undefined) {
    keyHash = hash(key);
  }

  var removed = value === NOT_SET;

  if (keyHash !== this.keyHash) {
    if (removed) {
      return this;
    }
    SetRef(didAlter);
    SetRef(didChangeSize);
    return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
  }

  var entries = this.entries;
  var idx = 0;
  var len = entries.length;
  for (; idx < len; idx++) {
    if (is(key, entries[idx][0])) {
      break;
    }
  }
  var exists = idx < len;

  if (exists ? entries[idx][1] === value : removed) {
    return this;
  }

  SetRef(didAlter);
  (removed || !exists) && SetRef(didChangeSize);

  if (removed && len === 2) {
    return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
  }

  var isEditable = ownerID && ownerID === this.ownerID;
  var newEntries = isEditable ? entries : arrCopy(entries);

  if (exists) {
    if (removed) {
      idx === len - 1
        ? newEntries.pop()
        : (newEntries[idx] = newEntries.pop());
    } else {
      newEntries[idx] = [key, value];
    }
  } else {
    newEntries.push([key, value]);
  }

  if (isEditable) {
    this.entries = newEntries;
    return this;
  }

  return new HashCollisionNode(ownerID, this.keyHash, newEntries);
};

var ValueNode = function ValueNode(ownerID, keyHash, entry) {
  this.ownerID = ownerID;
  this.keyHash = keyHash;
  this.entry = entry;
};

ValueNode.prototype.get = function get (shift, keyHash, key, notSetValue) {
  return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
};

ValueNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
  var removed = value === NOT_SET;
  var keyMatch = is(key, this.entry[0]);
  if (keyMatch ? value === this.entry[1] : removed) {
    return this;
  }

  SetRef(didAlter);

  if (removed) {
    SetRef(didChangeSize);
    return; // undefined
  }

  if (keyMatch) {
    if (ownerID && ownerID === this.ownerID) {
      this.entry[1] = value;
      return this;
    }
    return new ValueNode(ownerID, this.keyHash, [key, value]);
  }

  SetRef(didChangeSize);
  return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
};

// #pragma Iterators

ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function(
  fn,
  reverse
) {
  var entries = this.entries;
  for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
    if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
      return false;
    }
  }
};

BitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function(
  fn,
  reverse
) {
  var nodes = this.nodes;
  for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
    var node = nodes[reverse ? maxIndex - ii : ii];
    if (node && node.iterate(fn, reverse) === false) {
      return false;
    }
  }
};

// eslint-disable-next-line no-unused-vars
ValueNode.prototype.iterate = function(fn, reverse) {
  return fn(this.entry);
};

var MapIterator = /*@__PURE__*/(function (Iterator$$1) {
  function MapIterator(map, type, reverse) {
    this._type = type;
    this._reverse = reverse;
    this._stack = map._root && mapIteratorFrame(map._root);
  }

  if ( Iterator$$1 ) MapIterator.__proto__ = Iterator$$1;
  MapIterator.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );
  MapIterator.prototype.constructor = MapIterator;

  MapIterator.prototype.next = function next () {
    var type = this._type;
    var stack = this._stack;
    while (stack) {
      var node = stack.node;
      var index = stack.index++;
      var maxIndex = (void 0);
      if (node.entry) {
        if (index === 0) {
          return mapIteratorValue(type, node.entry);
        }
      } else if (node.entries) {
        maxIndex = node.entries.length - 1;
        if (index <= maxIndex) {
          return mapIteratorValue(
            type,
            node.entries[this._reverse ? maxIndex - index : index]
          );
        }
      } else {
        maxIndex = node.nodes.length - 1;
        if (index <= maxIndex) {
          var subNode = node.nodes[this._reverse ? maxIndex - index : index];
          if (subNode) {
            if (subNode.entry) {
              return mapIteratorValue(type, subNode.entry);
            }
            stack = this._stack = mapIteratorFrame(subNode, stack);
          }
          continue;
        }
      }
      stack = this._stack = this._stack.__prev;
    }
    return iteratorDone();
  };

  return MapIterator;
}(Iterator));

function mapIteratorValue(type, entry) {
  return iteratorValue(type, entry[0], entry[1]);
}

function mapIteratorFrame(node, prev) {
  return {
    node: node,
    index: 0,
    __prev: prev,
  };
}

function makeMap(size, root, ownerID, hash$$1) {
  var map = Object.create(MapPrototype);
  map.size = size;
  map._root = root;
  map.__ownerID = ownerID;
  map.__hash = hash$$1;
  map.__altered = false;
  return map;
}

var EMPTY_MAP;
function emptyMap() {
  return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
}

function updateMap(map, k, v) {
  var newRoot;
  var newSize;
  if (!map._root) {
    if (v === NOT_SET) {
      return map;
    }
    newSize = 1;
    newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
  } else {
    var didChangeSize = MakeRef();
    var didAlter = MakeRef();
    newRoot = updateNode(
      map._root,
      map.__ownerID,
      0,
      undefined,
      k,
      v,
      didChangeSize,
      didAlter
    );
    if (!didAlter.value) {
      return map;
    }
    newSize = map.size + (didChangeSize.value ? (v === NOT_SET ? -1 : 1) : 0);
  }
  if (map.__ownerID) {
    map.size = newSize;
    map._root = newRoot;
    map.__hash = undefined;
    map.__altered = true;
    return map;
  }
  return newRoot ? makeMap(newSize, newRoot) : emptyMap();
}

function updateNode(
  node,
  ownerID,
  shift,
  keyHash,
  key,
  value,
  didChangeSize,
  didAlter
) {
  if (!node) {
    if (value === NOT_SET) {
      return node;
    }
    SetRef(didAlter);
    SetRef(didChangeSize);
    return new ValueNode(ownerID, keyHash, [key, value]);
  }
  return node.update(
    ownerID,
    shift,
    keyHash,
    key,
    value,
    didChangeSize,
    didAlter
  );
}

function isLeafNode(node) {
  return (
    node.constructor === ValueNode || node.constructor === HashCollisionNode
  );
}

function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
  if (node.keyHash === keyHash) {
    return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
  }

  var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
  var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

  var newNode;
  var nodes =
    idx1 === idx2
      ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)]
      : ((newNode = new ValueNode(ownerID, keyHash, entry)),
        idx1 < idx2 ? [node, newNode] : [newNode, node]);

  return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);
}

function createNodes(ownerID, entries, key, value) {
  if (!ownerID) {
    ownerID = new OwnerID();
  }
  var node = new ValueNode(ownerID, hash(key), [key, value]);
  for (var ii = 0; ii < entries.length; ii++) {
    var entry = entries[ii];
    node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
  }
  return node;
}

function packNodes(ownerID, nodes, count, excluding) {
  var bitmap = 0;
  var packedII = 0;
  var packedNodes = new Array(count);
  for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
    var node = nodes[ii];
    if (node !== undefined && ii !== excluding) {
      bitmap |= bit;
      packedNodes[packedII++] = node;
    }
  }
  return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
}

function expandNodes(ownerID, nodes, bitmap, including, node) {
  var count = 0;
  var expandedNodes = new Array(SIZE);
  for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
    expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
  }
  expandedNodes[including] = node;
  return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
}

function popCount(x) {
  x -= (x >> 1) & 0x55555555;
  x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
  x = (x + (x >> 4)) & 0x0f0f0f0f;
  x += x >> 8;
  x += x >> 16;
  return x & 0x7f;
}

function setAt(array, idx, val, canEdit) {
  var newArray = canEdit ? array : arrCopy(array);
  newArray[idx] = val;
  return newArray;
}

function spliceIn(array, idx, val, canEdit) {
  var newLen = array.length + 1;
  if (canEdit && idx + 1 === newLen) {
    array[idx] = val;
    return array;
  }
  var newArray = new Array(newLen);
  var after = 0;
  for (var ii = 0; ii < newLen; ii++) {
    if (ii === idx) {
      newArray[ii] = val;
      after = -1;
    } else {
      newArray[ii] = array[ii + after];
    }
  }
  return newArray;
}

function spliceOut(array, idx, canEdit) {
  var newLen = array.length - 1;
  if (canEdit && idx === newLen) {
    array.pop();
    return array;
  }
  var newArray = new Array(newLen);
  var after = 0;
  for (var ii = 0; ii < newLen; ii++) {
    if (ii === idx) {
      after = 1;
    }
    newArray[ii] = array[ii + after];
  }
  return newArray;
}

var MAX_ARRAY_MAP_SIZE = SIZE / 4;
var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

var IS_LIST_SYMBOL = '@@__IMMUTABLE_LIST__@@';

function isList(maybeList) {
  return Boolean(maybeList && maybeList[IS_LIST_SYMBOL]);
}

var List = /*@__PURE__*/(function (IndexedCollection$$1) {
  function List(value) {
    var empty = emptyList();
    if (value === null || value === undefined) {
      return empty;
    }
    if (isList(value)) {
      return value;
    }
    var iter = IndexedCollection$$1(value);
    var size = iter.size;
    if (size === 0) {
      return empty;
    }
    assertNotInfinite(size);
    if (size > 0 && size < SIZE) {
      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
    }
    return empty.withMutations(function (list) {
      list.setSize(size);
      iter.forEach(function (v, i) { return list.set(i, v); });
    });
  }

  if ( IndexedCollection$$1 ) List.__proto__ = IndexedCollection$$1;
  List.prototype = Object.create( IndexedCollection$$1 && IndexedCollection$$1.prototype );
  List.prototype.constructor = List;

  List.of = function of (/*...values*/) {
    return this(arguments);
  };

  List.prototype.toString = function toString () {
    return this.__toString('List [', ']');
  };

  // @pragma Access

  List.prototype.get = function get (index, notSetValue) {
    index = wrapIndex(this, index);
    if (index >= 0 && index < this.size) {
      index += this._origin;
      var node = listNodeFor(this, index);
      return node && node.array[index & MASK];
    }
    return notSetValue;
  };

  // @pragma Modification

  List.prototype.set = function set (index, value) {
    return updateList(this, index, value);
  };

  List.prototype.remove = function remove (index) {
    return !this.has(index)
      ? this
      : index === 0
        ? this.shift()
        : index === this.size - 1
          ? this.pop()
          : this.splice(index, 1);
  };

  List.prototype.insert = function insert (index, value) {
    return this.splice(index, 0, value);
  };

  List.prototype.clear = function clear () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = this._origin = this._capacity = 0;
      this._level = SHIFT;
      this._root = this._tail = null;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return emptyList();
  };

  List.prototype.push = function push (/*...values*/) {
    var values = arguments;
    var oldSize = this.size;
    return this.withMutations(function (list) {
      setListBounds(list, 0, oldSize + values.length);
      for (var ii = 0; ii < values.length; ii++) {
        list.set(oldSize + ii, values[ii]);
      }
    });
  };

  List.prototype.pop = function pop () {
    return setListBounds(this, 0, -1);
  };

  List.prototype.unshift = function unshift (/*...values*/) {
    var values = arguments;
    return this.withMutations(function (list) {
      setListBounds(list, -values.length);
      for (var ii = 0; ii < values.length; ii++) {
        list.set(ii, values[ii]);
      }
    });
  };

  List.prototype.shift = function shift () {
    return setListBounds(this, 1);
  };

  // @pragma Composition

  List.prototype.concat = function concat (/*...collections*/) {
    var arguments$1 = arguments;

    var seqs = [];
    for (var i = 0; i < arguments.length; i++) {
      var argument = arguments$1[i];
      var seq = IndexedCollection$$1(
        typeof argument !== 'string' && hasIterator(argument)
          ? argument
          : [argument]
      );
      if (seq.size !== 0) {
        seqs.push(seq);
      }
    }
    if (seqs.length === 0) {
      return this;
    }
    if (this.size === 0 && !this.__ownerID && seqs.length === 1) {
      return this.constructor(seqs[0]);
    }
    return this.withMutations(function (list) {
      seqs.forEach(function (seq) { return seq.forEach(function (value) { return list.push(value); }); });
    });
  };

  List.prototype.setSize = function setSize (size) {
    return setListBounds(this, 0, size);
  };

  List.prototype.map = function map (mapper, context) {
    var this$1 = this;

    return this.withMutations(function (list) {
      for (var i = 0; i < this$1.size; i++) {
        list.set(i, mapper.call(context, list.get(i), i, list));
      }
    });
  };

  // @pragma Iteration

  List.prototype.slice = function slice (begin, end) {
    var size = this.size;
    if (wholeSlice(begin, end, size)) {
      return this;
    }
    return setListBounds(
      this,
      resolveBegin(begin, size),
      resolveEnd(end, size)
    );
  };

  List.prototype.__iterator = function __iterator (type, reverse) {
    var index = reverse ? this.size : 0;
    var values = iterateList(this, reverse);
    return new Iterator(function () {
      var value = values();
      return value === DONE
        ? iteratorDone()
        : iteratorValue(type, reverse ? --index : index++, value);
    });
  };

  List.prototype.__iterate = function __iterate (fn, reverse) {
    var index = reverse ? this.size : 0;
    var values = iterateList(this, reverse);
    var value;
    while ((value = values()) !== DONE) {
      if (fn(value, reverse ? --index : index++, this) === false) {
        break;
      }
    }
    return index;
  };

  List.prototype.__ensureOwner = function __ensureOwner (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    if (!ownerID) {
      if (this.size === 0) {
        return emptyList();
      }
      this.__ownerID = ownerID;
      this.__altered = false;
      return this;
    }
    return makeList(
      this._origin,
      this._capacity,
      this._level,
      this._root,
      this._tail,
      ownerID,
      this.__hash
    );
  };

  return List;
}(IndexedCollection));

List.isList = isList;

var ListPrototype = List.prototype;
ListPrototype[IS_LIST_SYMBOL] = true;
ListPrototype[DELETE] = ListPrototype.remove;
ListPrototype.merge = ListPrototype.concat;
ListPrototype.setIn = setIn$1;
ListPrototype.deleteIn = ListPrototype.removeIn = deleteIn;
ListPrototype.update = update$1;
ListPrototype.updateIn = updateIn$1;
ListPrototype.mergeIn = mergeIn;
ListPrototype.mergeDeepIn = mergeDeepIn;
ListPrototype.withMutations = withMutations;
ListPrototype.wasAltered = wasAltered;
ListPrototype.asImmutable = asImmutable;
ListPrototype['@@transducer/init'] = ListPrototype.asMutable = asMutable;
ListPrototype['@@transducer/step'] = function(result, arr) {
  return result.push(arr);
};
ListPrototype['@@transducer/result'] = function(obj) {
  return obj.asImmutable();
};

var VNode = function VNode(array, ownerID) {
  this.array = array;
  this.ownerID = ownerID;
};

// TODO: seems like these methods are very similar

VNode.prototype.removeBefore = function removeBefore (ownerID, level, index) {
  if (index === level ? 1 << level : this.array.length === 0) {
    return this;
  }
  var originIndex = (index >>> level) & MASK;
  if (originIndex >= this.array.length) {
    return new VNode([], ownerID);
  }
  var removingFirst = originIndex === 0;
  var newChild;
  if (level > 0) {
    var oldChild = this.array[originIndex];
    newChild =
      oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
    if (newChild === oldChild && removingFirst) {
      return this;
    }
  }
  if (removingFirst && !newChild) {
    return this;
  }
  var editable = editableVNode(this, ownerID);
  if (!removingFirst) {
    for (var ii = 0; ii < originIndex; ii++) {
      editable.array[ii] = undefined;
    }
  }
  if (newChild) {
    editable.array[originIndex] = newChild;
  }
  return editable;
};

VNode.prototype.removeAfter = function removeAfter (ownerID, level, index) {
  if (index === (level ? 1 << level : 0) || this.array.length === 0) {
    return this;
  }
  var sizeIndex = ((index - 1) >>> level) & MASK;
  if (sizeIndex >= this.array.length) {
    return this;
  }

  var newChild;
  if (level > 0) {
    var oldChild = this.array[sizeIndex];
    newChild =
      oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
    if (newChild === oldChild && sizeIndex === this.array.length - 1) {
      return this;
    }
  }

  var editable = editableVNode(this, ownerID);
  editable.array.splice(sizeIndex + 1);
  if (newChild) {
    editable.array[sizeIndex] = newChild;
  }
  return editable;
};

var DONE = {};

function iterateList(list, reverse) {
  var left = list._origin;
  var right = list._capacity;
  var tailPos = getTailOffset(right);
  var tail = list._tail;

  return iterateNodeOrLeaf(list._root, list._level, 0);

  function iterateNodeOrLeaf(node, level, offset) {
    return level === 0
      ? iterateLeaf(node, offset)
      : iterateNode(node, level, offset);
  }

  function iterateLeaf(node, offset) {
    var array = offset === tailPos ? tail && tail.array : node && node.array;
    var from = offset > left ? 0 : left - offset;
    var to = right - offset;
    if (to > SIZE) {
      to = SIZE;
    }
    return function () {
      if (from === to) {
        return DONE;
      }
      var idx = reverse ? --to : from++;
      return array && array[idx];
    };
  }

  function iterateNode(node, level, offset) {
    var values;
    var array = node && node.array;
    var from = offset > left ? 0 : (left - offset) >> level;
    var to = ((right - offset) >> level) + 1;
    if (to > SIZE) {
      to = SIZE;
    }
    return function () {
      while (true) {
        if (values) {
          var value = values();
          if (value !== DONE) {
            return value;
          }
          values = null;
        }
        if (from === to) {
          return DONE;
        }
        var idx = reverse ? --to : from++;
        values = iterateNodeOrLeaf(
          array && array[idx],
          level - SHIFT,
          offset + (idx << level)
        );
      }
    };
  }
}

function makeList(origin, capacity, level, root, tail, ownerID, hash) {
  var list = Object.create(ListPrototype);
  list.size = capacity - origin;
  list._origin = origin;
  list._capacity = capacity;
  list._level = level;
  list._root = root;
  list._tail = tail;
  list.__ownerID = ownerID;
  list.__hash = hash;
  list.__altered = false;
  return list;
}

var EMPTY_LIST;
function emptyList() {
  return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
}

function updateList(list, index, value) {
  index = wrapIndex(list, index);

  if (index !== index) {
    return list;
  }

  if (index >= list.size || index < 0) {
    return list.withMutations(function (list) {
      index < 0
        ? setListBounds(list, index).set(0, value)
        : setListBounds(list, 0, index + 1).set(index, value);
    });
  }

  index += list._origin;

  var newTail = list._tail;
  var newRoot = list._root;
  var didAlter = MakeRef();
  if (index >= getTailOffset(list._capacity)) {
    newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
  } else {
    newRoot = updateVNode(
      newRoot,
      list.__ownerID,
      list._level,
      index,
      value,
      didAlter
    );
  }

  if (!didAlter.value) {
    return list;
  }

  if (list.__ownerID) {
    list._root = newRoot;
    list._tail = newTail;
    list.__hash = undefined;
    list.__altered = true;
    return list;
  }
  return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
}

function updateVNode(node, ownerID, level, index, value, didAlter) {
  var idx = (index >>> level) & MASK;
  var nodeHas = node && idx < node.array.length;
  if (!nodeHas && value === undefined) {
    return node;
  }

  var newNode;

  if (level > 0) {
    var lowerNode = node && node.array[idx];
    var newLowerNode = updateVNode(
      lowerNode,
      ownerID,
      level - SHIFT,
      index,
      value,
      didAlter
    );
    if (newLowerNode === lowerNode) {
      return node;
    }
    newNode = editableVNode(node, ownerID);
    newNode.array[idx] = newLowerNode;
    return newNode;
  }

  if (nodeHas && node.array[idx] === value) {
    return node;
  }

  if (didAlter) {
    SetRef(didAlter);
  }

  newNode = editableVNode(node, ownerID);
  if (value === undefined && idx === newNode.array.length - 1) {
    newNode.array.pop();
  } else {
    newNode.array[idx] = value;
  }
  return newNode;
}

function editableVNode(node, ownerID) {
  if (ownerID && node && ownerID === node.ownerID) {
    return node;
  }
  return new VNode(node ? node.array.slice() : [], ownerID);
}

function listNodeFor(list, rawIndex) {
  if (rawIndex >= getTailOffset(list._capacity)) {
    return list._tail;
  }
  if (rawIndex < 1 << (list._level + SHIFT)) {
    var node = list._root;
    var level = list._level;
    while (node && level > 0) {
      node = node.array[(rawIndex >>> level) & MASK];
      level -= SHIFT;
    }
    return node;
  }
}

function setListBounds(list, begin, end) {
  // Sanitize begin & end using this shorthand for ToInt32(argument)
  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
  if (begin !== undefined) {
    begin |= 0;
  }
  if (end !== undefined) {
    end |= 0;
  }
  var owner = list.__ownerID || new OwnerID();
  var oldOrigin = list._origin;
  var oldCapacity = list._capacity;
  var newOrigin = oldOrigin + begin;
  var newCapacity =
    end === undefined
      ? oldCapacity
      : end < 0
        ? oldCapacity + end
        : oldOrigin + end;
  if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
    return list;
  }

  // If it's going to end after it starts, it's empty.
  if (newOrigin >= newCapacity) {
    return list.clear();
  }

  var newLevel = list._level;
  var newRoot = list._root;

  // New origin might need creating a higher root.
  var offsetShift = 0;
  while (newOrigin + offsetShift < 0) {
    newRoot = new VNode(
      newRoot && newRoot.array.length ? [undefined, newRoot] : [],
      owner
    );
    newLevel += SHIFT;
    offsetShift += 1 << newLevel;
  }
  if (offsetShift) {
    newOrigin += offsetShift;
    oldOrigin += offsetShift;
    newCapacity += offsetShift;
    oldCapacity += offsetShift;
  }

  var oldTailOffset = getTailOffset(oldCapacity);
  var newTailOffset = getTailOffset(newCapacity);

  // New size might need creating a higher root.
  while (newTailOffset >= 1 << (newLevel + SHIFT)) {
    newRoot = new VNode(
      newRoot && newRoot.array.length ? [newRoot] : [],
      owner
    );
    newLevel += SHIFT;
  }

  // Locate or create the new tail.
  var oldTail = list._tail;
  var newTail =
    newTailOffset < oldTailOffset
      ? listNodeFor(list, newCapacity - 1)
      : newTailOffset > oldTailOffset
        ? new VNode([], owner)
        : oldTail;

  // Merge Tail into tree.
  if (
    oldTail &&
    newTailOffset > oldTailOffset &&
    newOrigin < oldCapacity &&
    oldTail.array.length
  ) {
    newRoot = editableVNode(newRoot, owner);
    var node = newRoot;
    for (var level = newLevel; level > SHIFT; level -= SHIFT) {
      var idx = (oldTailOffset >>> level) & MASK;
      node = node.array[idx] = editableVNode(node.array[idx], owner);
    }
    node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;
  }

  // If the size has been reduced, there's a chance the tail needs to be trimmed.
  if (newCapacity < oldCapacity) {
    newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
  }

  // If the new origin is within the tail, then we do not need a root.
  if (newOrigin >= newTailOffset) {
    newOrigin -= newTailOffset;
    newCapacity -= newTailOffset;
    newLevel = SHIFT;
    newRoot = null;
    newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);

    // Otherwise, if the root has been trimmed, garbage collect.
  } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
    offsetShift = 0;

    // Identify the new top root node of the subtree of the old root.
    while (newRoot) {
      var beginIndex = (newOrigin >>> newLevel) & MASK;
      if ((beginIndex !== newTailOffset >>> newLevel) & MASK) {
        break;
      }
      if (beginIndex) {
        offsetShift += (1 << newLevel) * beginIndex;
      }
      newLevel -= SHIFT;
      newRoot = newRoot.array[beginIndex];
    }

    // Trim the new sides of the new root.
    if (newRoot && newOrigin > oldOrigin) {
      newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
    }
    if (newRoot && newTailOffset < oldTailOffset) {
      newRoot = newRoot.removeAfter(
        owner,
        newLevel,
        newTailOffset - offsetShift
      );
    }
    if (offsetShift) {
      newOrigin -= offsetShift;
      newCapacity -= offsetShift;
    }
  }

  if (list.__ownerID) {
    list.size = newCapacity - newOrigin;
    list._origin = newOrigin;
    list._capacity = newCapacity;
    list._level = newLevel;
    list._root = newRoot;
    list._tail = newTail;
    list.__hash = undefined;
    list.__altered = true;
    return list;
  }
  return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
}

function getTailOffset(size) {
  return size < SIZE ? 0 : ((size - 1) >>> SHIFT) << SHIFT;
}

var OrderedMap = /*@__PURE__*/(function (Map$$1) {
  function OrderedMap(value) {
    return value === null || value === undefined
      ? emptyOrderedMap()
      : isOrderedMap(value)
        ? value
        : emptyOrderedMap().withMutations(function (map) {
            var iter = KeyedCollection(value);
            assertNotInfinite(iter.size);
            iter.forEach(function (v, k) { return map.set(k, v); });
          });
  }

  if ( Map$$1 ) OrderedMap.__proto__ = Map$$1;
  OrderedMap.prototype = Object.create( Map$$1 && Map$$1.prototype );
  OrderedMap.prototype.constructor = OrderedMap;

  OrderedMap.of = function of (/*...values*/) {
    return this(arguments);
  };

  OrderedMap.prototype.toString = function toString () {
    return this.__toString('OrderedMap {', '}');
  };

  // @pragma Access

  OrderedMap.prototype.get = function get (k, notSetValue) {
    var index = this._map.get(k);
    return index !== undefined ? this._list.get(index)[1] : notSetValue;
  };

  // @pragma Modification

  OrderedMap.prototype.clear = function clear () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = 0;
      this._map.clear();
      this._list.clear();
      return this;
    }
    return emptyOrderedMap();
  };

  OrderedMap.prototype.set = function set (k, v) {
    return updateOrderedMap(this, k, v);
  };

  OrderedMap.prototype.remove = function remove (k) {
    return updateOrderedMap(this, k, NOT_SET);
  };

  OrderedMap.prototype.wasAltered = function wasAltered () {
    return this._map.wasAltered() || this._list.wasAltered();
  };

  OrderedMap.prototype.__iterate = function __iterate (fn, reverse) {
    var this$1 = this;

    return this._list.__iterate(
      function (entry) { return entry && fn(entry[1], entry[0], this$1); },
      reverse
    );
  };

  OrderedMap.prototype.__iterator = function __iterator (type, reverse) {
    return this._list.fromEntrySeq().__iterator(type, reverse);
  };

  OrderedMap.prototype.__ensureOwner = function __ensureOwner (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    var newMap = this._map.__ensureOwner(ownerID);
    var newList = this._list.__ensureOwner(ownerID);
    if (!ownerID) {
      if (this.size === 0) {
        return emptyOrderedMap();
      }
      this.__ownerID = ownerID;
      this._map = newMap;
      this._list = newList;
      return this;
    }
    return makeOrderedMap(newMap, newList, ownerID, this.__hash);
  };

  return OrderedMap;
}(Map));

OrderedMap.isOrderedMap = isOrderedMap;

OrderedMap.prototype[IS_ORDERED_SYMBOL] = true;
OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;

function makeOrderedMap(map, list, ownerID, hash) {
  var omap = Object.create(OrderedMap.prototype);
  omap.size = map ? map.size : 0;
  omap._map = map;
  omap._list = list;
  omap.__ownerID = ownerID;
  omap.__hash = hash;
  return omap;
}

var EMPTY_ORDERED_MAP;
function emptyOrderedMap() {
  return (
    EMPTY_ORDERED_MAP ||
    (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()))
  );
}

function updateOrderedMap(omap, k, v) {
  var map = omap._map;
  var list = omap._list;
  var i = map.get(k);
  var has = i !== undefined;
  var newMap;
  var newList;
  if (v === NOT_SET) {
    // removed
    if (!has) {
      return omap;
    }
    if (list.size >= SIZE && list.size >= map.size * 2) {
      newList = list.filter(function (entry, idx) { return entry !== undefined && i !== idx; });
      newMap = newList
        .toKeyedSeq()
        .map(function (entry) { return entry[0]; })
        .flip()
        .toMap();
      if (omap.__ownerID) {
        newMap.__ownerID = newList.__ownerID = omap.__ownerID;
      }
    } else {
      newMap = map.remove(k);
      newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
    }
  } else if (has) {
    if (v === list.get(i)[1]) {
      return omap;
    }
    newMap = map;
    newList = list.set(i, [k, v]);
  } else {
    newMap = map.set(k, list.size);
    newList = list.set(list.size, [k, v]);
  }
  if (omap.__ownerID) {
    omap.size = newMap.size;
    omap._map = newMap;
    omap._list = newList;
    omap.__hash = undefined;
    return omap;
  }
  return makeOrderedMap(newMap, newList);
}

var IS_STACK_SYMBOL = '@@__IMMUTABLE_STACK__@@';

function isStack(maybeStack) {
  return Boolean(maybeStack && maybeStack[IS_STACK_SYMBOL]);
}

var Stack = /*@__PURE__*/(function (IndexedCollection$$1) {
  function Stack(value) {
    return value === null || value === undefined
      ? emptyStack()
      : isStack(value)
        ? value
        : emptyStack().pushAll(value);
  }

  if ( IndexedCollection$$1 ) Stack.__proto__ = IndexedCollection$$1;
  Stack.prototype = Object.create( IndexedCollection$$1 && IndexedCollection$$1.prototype );
  Stack.prototype.constructor = Stack;

  Stack.of = function of (/*...values*/) {
    return this(arguments);
  };

  Stack.prototype.toString = function toString () {
    return this.__toString('Stack [', ']');
  };

  // @pragma Access

  Stack.prototype.get = function get (index, notSetValue) {
    var head = this._head;
    index = wrapIndex(this, index);
    while (head && index--) {
      head = head.next;
    }
    return head ? head.value : notSetValue;
  };

  Stack.prototype.peek = function peek () {
    return this._head && this._head.value;
  };

  // @pragma Modification

  Stack.prototype.push = function push (/*...values*/) {
    var arguments$1 = arguments;

    if (arguments.length === 0) {
      return this;
    }
    var newSize = this.size + arguments.length;
    var head = this._head;
    for (var ii = arguments.length - 1; ii >= 0; ii--) {
      head = {
        value: arguments$1[ii],
        next: head,
      };
    }
    if (this.__ownerID) {
      this.size = newSize;
      this._head = head;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return makeStack(newSize, head);
  };

  Stack.prototype.pushAll = function pushAll (iter) {
    iter = IndexedCollection$$1(iter);
    if (iter.size === 0) {
      return this;
    }
    if (this.size === 0 && isStack(iter)) {
      return iter;
    }
    assertNotInfinite(iter.size);
    var newSize = this.size;
    var head = this._head;
    iter.__iterate(function (value) {
      newSize++;
      head = {
        value: value,
        next: head,
      };
    }, /* reverse */ true);
    if (this.__ownerID) {
      this.size = newSize;
      this._head = head;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return makeStack(newSize, head);
  };

  Stack.prototype.pop = function pop () {
    return this.slice(1);
  };

  Stack.prototype.clear = function clear () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = 0;
      this._head = undefined;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return emptyStack();
  };

  Stack.prototype.slice = function slice (begin, end) {
    if (wholeSlice(begin, end, this.size)) {
      return this;
    }
    var resolvedBegin = resolveBegin(begin, this.size);
    var resolvedEnd = resolveEnd(end, this.size);
    if (resolvedEnd !== this.size) {
      // super.slice(begin, end);
      return IndexedCollection$$1.prototype.slice.call(this, begin, end);
    }
    var newSize = this.size - resolvedBegin;
    var head = this._head;
    while (resolvedBegin--) {
      head = head.next;
    }
    if (this.__ownerID) {
      this.size = newSize;
      this._head = head;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return makeStack(newSize, head);
  };

  // @pragma Mutability

  Stack.prototype.__ensureOwner = function __ensureOwner (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    if (!ownerID) {
      if (this.size === 0) {
        return emptyStack();
      }
      this.__ownerID = ownerID;
      this.__altered = false;
      return this;
    }
    return makeStack(this.size, this._head, ownerID, this.__hash);
  };

  // @pragma Iteration

  Stack.prototype.__iterate = function __iterate (fn, reverse) {
    var this$1 = this;

    if (reverse) {
      return new ArraySeq(this.toArray()).__iterate(
        function (v, k) { return fn(v, k, this$1); },
        reverse
      );
    }
    var iterations = 0;
    var node = this._head;
    while (node) {
      if (fn(node.value, iterations++, this) === false) {
        break;
      }
      node = node.next;
    }
    return iterations;
  };

  Stack.prototype.__iterator = function __iterator (type, reverse) {
    if (reverse) {
      return new ArraySeq(this.toArray()).__iterator(type, reverse);
    }
    var iterations = 0;
    var node = this._head;
    return new Iterator(function () {
      if (node) {
        var value = node.value;
        node = node.next;
        return iteratorValue(type, iterations++, value);
      }
      return iteratorDone();
    });
  };

  return Stack;
}(IndexedCollection));

Stack.isStack = isStack;

var StackPrototype = Stack.prototype;
StackPrototype[IS_STACK_SYMBOL] = true;
StackPrototype.shift = StackPrototype.pop;
StackPrototype.unshift = StackPrototype.push;
StackPrototype.unshiftAll = StackPrototype.pushAll;
StackPrototype.withMutations = withMutations;
StackPrototype.wasAltered = wasAltered;
StackPrototype.asImmutable = asImmutable;
StackPrototype['@@transducer/init'] = StackPrototype.asMutable = asMutable;
StackPrototype['@@transducer/step'] = function(result, arr) {
  return result.unshift(arr);
};
StackPrototype['@@transducer/result'] = function(obj) {
  return obj.asImmutable();
};

function makeStack(size, head, ownerID, hash) {
  var map = Object.create(StackPrototype);
  map.size = size;
  map._head = head;
  map.__ownerID = ownerID;
  map.__hash = hash;
  map.__altered = false;
  return map;
}

var EMPTY_STACK;
function emptyStack() {
  return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
}

var IS_SET_SYMBOL = '@@__IMMUTABLE_SET__@@';

function isSet(maybeSet) {
  return Boolean(maybeSet && maybeSet[IS_SET_SYMBOL]);
}

function isOrderedSet(maybeOrderedSet) {
  return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
}

function deepEqual(a, b) {
  if (a === b) {
    return true;
  }

  if (
    !isCollection(b) ||
    (a.size !== undefined && b.size !== undefined && a.size !== b.size) ||
    (a.__hash !== undefined &&
      b.__hash !== undefined &&
      a.__hash !== b.__hash) ||
    isKeyed(a) !== isKeyed(b) ||
    isIndexed(a) !== isIndexed(b) ||
    isOrdered(a) !== isOrdered(b)
  ) {
    return false;
  }

  if (a.size === 0 && b.size === 0) {
    return true;
  }

  var notAssociative = !isAssociative(a);

  if (isOrdered(a)) {
    var entries = a.entries();
    return (
      b.every(function (v, k) {
        var entry = entries.next().value;
        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
      }) && entries.next().done
    );
  }

  var flipped = false;

  if (a.size === undefined) {
    if (b.size === undefined) {
      if (typeof a.cacheResult === 'function') {
        a.cacheResult();
      }
    } else {
      flipped = true;
      var _ = a;
      a = b;
      b = _;
    }
  }

  var allEqual = true;
  var bSize = b.__iterate(function (v, k) {
    if (
      notAssociative
        ? !a.has(v)
        : flipped
          ? !is(v, a.get(k, NOT_SET))
          : !is(a.get(k, NOT_SET), v)
    ) {
      allEqual = false;
      return false;
    }
  });

  return allEqual && a.size === bSize;
}

/**
 * Contributes additional methods to a constructor
 */
function mixin(ctor, methods) {
  var keyCopier = function (key) {
    ctor.prototype[key] = methods[key];
  };
  Object.keys(methods).forEach(keyCopier);
  Object.getOwnPropertySymbols &&
    Object.getOwnPropertySymbols(methods).forEach(keyCopier);
  return ctor;
}

function toJS(value) {
  if (!value || typeof value !== 'object') {
    return value;
  }
  if (!isCollection(value)) {
    if (!isDataStructure(value)) {
      return value;
    }
    value = Seq(value);
  }
  if (isKeyed(value)) {
    var result$1 = {};
    value.__iterate(function (v, k) {
      result$1[k] = toJS(v);
    });
    return result$1;
  }
  var result = [];
  value.__iterate(function (v) {
    result.push(toJS(v));
  });
  return result;
}

var Set = /*@__PURE__*/(function (SetCollection$$1) {
  function Set(value) {
    return value === null || value === undefined
      ? emptySet()
      : isSet(value) && !isOrdered(value)
        ? value
        : emptySet().withMutations(function (set) {
            var iter = SetCollection$$1(value);
            assertNotInfinite(iter.size);
            iter.forEach(function (v) { return set.add(v); });
          });
  }

  if ( SetCollection$$1 ) Set.__proto__ = SetCollection$$1;
  Set.prototype = Object.create( SetCollection$$1 && SetCollection$$1.prototype );
  Set.prototype.constructor = Set;

  Set.of = function of (/*...values*/) {
    return this(arguments);
  };

  Set.fromKeys = function fromKeys (value) {
    return this(KeyedCollection(value).keySeq());
  };

  Set.intersect = function intersect (sets) {
    sets = Collection(sets).toArray();
    return sets.length
      ? SetPrototype.intersect.apply(Set(sets.pop()), sets)
      : emptySet();
  };

  Set.union = function union (sets) {
    sets = Collection(sets).toArray();
    return sets.length
      ? SetPrototype.union.apply(Set(sets.pop()), sets)
      : emptySet();
  };

  Set.prototype.toString = function toString () {
    return this.__toString('Set {', '}');
  };

  // @pragma Access

  Set.prototype.has = function has (value) {
    return this._map.has(value);
  };

  // @pragma Modification

  Set.prototype.add = function add (value) {
    return updateSet(this, this._map.set(value, value));
  };

  Set.prototype.remove = function remove (value) {
    return updateSet(this, this._map.remove(value));
  };

  Set.prototype.clear = function clear () {
    return updateSet(this, this._map.clear());
  };

  // @pragma Composition

  Set.prototype.map = function map (mapper, context) {
    var this$1 = this;

    var removes = [];
    var adds = [];
    this.forEach(function (value) {
      var mapped = mapper.call(context, value, value, this$1);
      if (mapped !== value) {
        removes.push(value);
        adds.push(mapped);
      }
    });
    return this.withMutations(function (set) {
      removes.forEach(function (value) { return set.remove(value); });
      adds.forEach(function (value) { return set.add(value); });
    });
  };

  Set.prototype.union = function union () {
    var iters = [], len = arguments.length;
    while ( len-- ) iters[ len ] = arguments[ len ];

    iters = iters.filter(function (x) { return x.size !== 0; });
    if (iters.length === 0) {
      return this;
    }
    if (this.size === 0 && !this.__ownerID && iters.length === 1) {
      return this.constructor(iters[0]);
    }
    return this.withMutations(function (set) {
      for (var ii = 0; ii < iters.length; ii++) {
        SetCollection$$1(iters[ii]).forEach(function (value) { return set.add(value); });
      }
    });
  };

  Set.prototype.intersect = function intersect () {
    var iters = [], len = arguments.length;
    while ( len-- ) iters[ len ] = arguments[ len ];

    if (iters.length === 0) {
      return this;
    }
    iters = iters.map(function (iter) { return SetCollection$$1(iter); });
    var toRemove = [];
    this.forEach(function (value) {
      if (!iters.every(function (iter) { return iter.includes(value); })) {
        toRemove.push(value);
      }
    });
    return this.withMutations(function (set) {
      toRemove.forEach(function (value) {
        set.remove(value);
      });
    });
  };

  Set.prototype.subtract = function subtract () {
    var iters = [], len = arguments.length;
    while ( len-- ) iters[ len ] = arguments[ len ];

    if (iters.length === 0) {
      return this;
    }
    iters = iters.map(function (iter) { return SetCollection$$1(iter); });
    var toRemove = [];
    this.forEach(function (value) {
      if (iters.some(function (iter) { return iter.includes(value); })) {
        toRemove.push(value);
      }
    });
    return this.withMutations(function (set) {
      toRemove.forEach(function (value) {
        set.remove(value);
      });
    });
  };

  Set.prototype.sort = function sort (comparator) {
    // Late binding
    return OrderedSet(sortFactory(this, comparator));
  };

  Set.prototype.sortBy = function sortBy (mapper, comparator) {
    // Late binding
    return OrderedSet(sortFactory(this, comparator, mapper));
  };

  Set.prototype.wasAltered = function wasAltered () {
    return this._map.wasAltered();
  };

  Set.prototype.__iterate = function __iterate (fn, reverse) {
    var this$1 = this;

    return this._map.__iterate(function (k) { return fn(k, k, this$1); }, reverse);
  };

  Set.prototype.__iterator = function __iterator (type, reverse) {
    return this._map.__iterator(type, reverse);
  };

  Set.prototype.__ensureOwner = function __ensureOwner (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    var newMap = this._map.__ensureOwner(ownerID);
    if (!ownerID) {
      if (this.size === 0) {
        return this.__empty();
      }
      this.__ownerID = ownerID;
      this._map = newMap;
      return this;
    }
    return this.__make(newMap, ownerID);
  };

  return Set;
}(SetCollection));

Set.isSet = isSet;

var SetPrototype = Set.prototype;
SetPrototype[IS_SET_SYMBOL] = true;
SetPrototype[DELETE] = SetPrototype.remove;
SetPrototype.merge = SetPrototype.concat = SetPrototype.union;
SetPrototype.withMutations = withMutations;
SetPrototype.asImmutable = asImmutable;
SetPrototype['@@transducer/init'] = SetPrototype.asMutable = asMutable;
SetPrototype['@@transducer/step'] = function(result, arr) {
  return result.add(arr);
};
SetPrototype['@@transducer/result'] = function(obj) {
  return obj.asImmutable();
};

SetPrototype.__empty = emptySet;
SetPrototype.__make = makeSet;

function updateSet(set, newMap) {
  if (set.__ownerID) {
    set.size = newMap.size;
    set._map = newMap;
    return set;
  }
  return newMap === set._map
    ? set
    : newMap.size === 0
      ? set.__empty()
      : set.__make(newMap);
}

function makeSet(map, ownerID) {
  var set = Object.create(SetPrototype);
  set.size = map ? map.size : 0;
  set._map = map;
  set.__ownerID = ownerID;
  return set;
}

var EMPTY_SET;
function emptySet() {
  return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
}

/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1, and end to
 * infinity. When start is equal to end, returns empty list.
 */
var Range = /*@__PURE__*/(function (IndexedSeq$$1) {
  function Range(start, end, step) {
    if (!(this instanceof Range)) {
      return new Range(start, end, step);
    }
    invariant(step !== 0, 'Cannot step a Range by 0');
    start = start || 0;
    if (end === undefined) {
      end = Infinity;
    }
    step = step === undefined ? 1 : Math.abs(step);
    if (end < start) {
      step = -step;
    }
    this._start = start;
    this._end = end;
    this._step = step;
    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
    if (this.size === 0) {
      if (EMPTY_RANGE) {
        return EMPTY_RANGE;
      }
      EMPTY_RANGE = this;
    }
  }

  if ( IndexedSeq$$1 ) Range.__proto__ = IndexedSeq$$1;
  Range.prototype = Object.create( IndexedSeq$$1 && IndexedSeq$$1.prototype );
  Range.prototype.constructor = Range;

  Range.prototype.toString = function toString () {
    if (this.size === 0) {
      return 'Range []';
    }
    return (
      'Range [ ' +
      this._start +
      '...' +
      this._end +
      (this._step !== 1 ? ' by ' + this._step : '') +
      ' ]'
    );
  };

  Range.prototype.get = function get (index, notSetValue) {
    return this.has(index)
      ? this._start + wrapIndex(this, index) * this._step
      : notSetValue;
  };

  Range.prototype.includes = function includes (searchValue) {
    var possibleIndex = (searchValue - this._start) / this._step;
    return (
      possibleIndex >= 0 &&
      possibleIndex < this.size &&
      possibleIndex === Math.floor(possibleIndex)
    );
  };

  Range.prototype.slice = function slice (begin, end) {
    if (wholeSlice(begin, end, this.size)) {
      return this;
    }
    begin = resolveBegin(begin, this.size);
    end = resolveEnd(end, this.size);
    if (end <= begin) {
      return new Range(0, 0);
    }
    return new Range(
      this.get(begin, this._end),
      this.get(end, this._end),
      this._step
    );
  };

  Range.prototype.indexOf = function indexOf (searchValue) {
    var offsetValue = searchValue - this._start;
    if (offsetValue % this._step === 0) {
      var index = offsetValue / this._step;
      if (index >= 0 && index < this.size) {
        return index;
      }
    }
    return -1;
  };

  Range.prototype.lastIndexOf = function lastIndexOf (searchValue) {
    return this.indexOf(searchValue);
  };

  Range.prototype.__iterate = function __iterate (fn, reverse) {
    var size = this.size;
    var step = this._step;
    var value = reverse ? this._start + (size - 1) * step : this._start;
    var i = 0;
    while (i !== size) {
      if (fn(value, reverse ? size - ++i : i++, this) === false) {
        break;
      }
      value += reverse ? -step : step;
    }
    return i;
  };

  Range.prototype.__iterator = function __iterator (type, reverse) {
    var size = this.size;
    var step = this._step;
    var value = reverse ? this._start + (size - 1) * step : this._start;
    var i = 0;
    return new Iterator(function () {
      if (i === size) {
        return iteratorDone();
      }
      var v = value;
      value += reverse ? -step : step;
      return iteratorValue(type, reverse ? size - ++i : i++, v);
    });
  };

  Range.prototype.equals = function equals (other) {
    return other instanceof Range
      ? this._start === other._start &&
          this._end === other._end &&
          this._step === other._step
      : deepEqual(this, other);
  };

  return Range;
}(IndexedSeq));

var EMPTY_RANGE;

function getIn(collection, searchKeyPath, notSetValue) {
  var keyPath = coerceKeyPath(searchKeyPath);
  var i = 0;
  while (i !== keyPath.length) {
    collection = get(collection, keyPath[i++], NOT_SET);
    if (collection === NOT_SET) {
      return notSetValue;
    }
  }
  return collection;
}

function getIn$1(searchKeyPath, notSetValue) {
  return getIn(this, searchKeyPath, notSetValue);
}

function hasIn(collection, keyPath) {
  return getIn(collection, keyPath, NOT_SET) !== NOT_SET;
}

function hasIn$1(searchKeyPath) {
  return hasIn(this, searchKeyPath);
}

function toObject() {
  assertNotInfinite(this.size);
  var object = {};
  this.__iterate(function (v, k) {
    object[k] = v;
  });
  return object;
}

// Note: all of these methods are deprecated.
Collection.isIterable = isCollection;
Collection.isKeyed = isKeyed;
Collection.isIndexed = isIndexed;
Collection.isAssociative = isAssociative;
Collection.isOrdered = isOrdered;

Collection.Iterator = Iterator;

mixin(Collection, {
  // ### Conversion to other types

  toArray: function toArray() {
    assertNotInfinite(this.size);
    var array = new Array(this.size || 0);
    var useTuples = isKeyed(this);
    var i = 0;
    this.__iterate(function (v, k) {
      // Keyed collections produce an array of tuples.
      array[i++] = useTuples ? [k, v] : v;
    });
    return array;
  },

  toIndexedSeq: function toIndexedSeq() {
    return new ToIndexedSequence(this);
  },

  toJS: function toJS$1() {
    return toJS(this);
  },

  toKeyedSeq: function toKeyedSeq() {
    return new ToKeyedSequence(this, true);
  },

  toMap: function toMap() {
    // Use Late Binding here to solve the circular dependency.
    return Map(this.toKeyedSeq());
  },

  toObject: toObject,

  toOrderedMap: function toOrderedMap() {
    // Use Late Binding here to solve the circular dependency.
    return OrderedMap(this.toKeyedSeq());
  },

  toOrderedSet: function toOrderedSet() {
    // Use Late Binding here to solve the circular dependency.
    return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
  },

  toSet: function toSet() {
    // Use Late Binding here to solve the circular dependency.
    return Set(isKeyed(this) ? this.valueSeq() : this);
  },

  toSetSeq: function toSetSeq() {
    return new ToSetSequence(this);
  },

  toSeq: function toSeq() {
    return isIndexed(this)
      ? this.toIndexedSeq()
      : isKeyed(this)
        ? this.toKeyedSeq()
        : this.toSetSeq();
  },

  toStack: function toStack() {
    // Use Late Binding here to solve the circular dependency.
    return Stack(isKeyed(this) ? this.valueSeq() : this);
  },

  toList: function toList() {
    // Use Late Binding here to solve the circular dependency.
    return List(isKeyed(this) ? this.valueSeq() : this);
  },

  // ### Common JavaScript methods and properties

  toString: function toString() {
    return '[Collection]';
  },

  __toString: function __toString(head, tail) {
    if (this.size === 0) {
      return head + tail;
    }
    return (
      head +
      ' ' +
      this.toSeq()
        .map(this.__toStringMapper)
        .join(', ') +
      ' ' +
      tail
    );
  },

  // ### ES6 Collection methods (ES6 Array and Map)

  concat: function concat() {
    var values = [], len = arguments.length;
    while ( len-- ) values[ len ] = arguments[ len ];

    return reify(this, concatFactory(this, values));
  },

  includes: function includes(searchValue) {
    return this.some(function (value) { return is(value, searchValue); });
  },

  entries: function entries() {
    return this.__iterator(ITERATE_ENTRIES);
  },

  every: function every(predicate, context) {
    assertNotInfinite(this.size);
    var returnValue = true;
    this.__iterate(function (v, k, c) {
      if (!predicate.call(context, v, k, c)) {
        returnValue = false;
        return false;
      }
    });
    return returnValue;
  },

  filter: function filter(predicate, context) {
    return reify(this, filterFactory(this, predicate, context, true));
  },

  find: function find(predicate, context, notSetValue) {
    var entry = this.findEntry(predicate, context);
    return entry ? entry[1] : notSetValue;
  },

  forEach: function forEach(sideEffect, context) {
    assertNotInfinite(this.size);
    return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
  },

  join: function join(separator) {
    assertNotInfinite(this.size);
    separator = separator !== undefined ? '' + separator : ',';
    var joined = '';
    var isFirst = true;
    this.__iterate(function (v) {
      isFirst ? (isFirst = false) : (joined += separator);
      joined += v !== null && v !== undefined ? v.toString() : '';
    });
    return joined;
  },

  keys: function keys() {
    return this.__iterator(ITERATE_KEYS);
  },

  map: function map(mapper, context) {
    return reify(this, mapFactory(this, mapper, context));
  },

  reduce: function reduce$1(reducer, initialReduction, context) {
    return reduce(
      this,
      reducer,
      initialReduction,
      context,
      arguments.length < 2,
      false
    );
  },

  reduceRight: function reduceRight(reducer, initialReduction, context) {
    return reduce(
      this,
      reducer,
      initialReduction,
      context,
      arguments.length < 2,
      true
    );
  },

  reverse: function reverse() {
    return reify(this, reverseFactory(this, true));
  },

  slice: function slice(begin, end) {
    return reify(this, sliceFactory(this, begin, end, true));
  },

  some: function some(predicate, context) {
    return !this.every(not(predicate), context);
  },

  sort: function sort(comparator) {
    return reify(this, sortFactory(this, comparator));
  },

  values: function values() {
    return this.__iterator(ITERATE_VALUES);
  },

  // ### More sequential methods

  butLast: function butLast() {
    return this.slice(0, -1);
  },

  isEmpty: function isEmpty() {
    return this.size !== undefined ? this.size === 0 : !this.some(function () { return true; });
  },

  count: function count(predicate, context) {
    return ensureSize(
      predicate ? this.toSeq().filter(predicate, context) : this
    );
  },

  countBy: function countBy(grouper, context) {
    return countByFactory(this, grouper, context);
  },

  equals: function equals(other) {
    return deepEqual(this, other);
  },

  entrySeq: function entrySeq() {
    var collection = this;
    if (collection._cache) {
      // We cache as an entries array, so we can just return the cache!
      return new ArraySeq(collection._cache);
    }
    var entriesSequence = collection
      .toSeq()
      .map(entryMapper)
      .toIndexedSeq();
    entriesSequence.fromEntrySeq = function () { return collection.toSeq(); };
    return entriesSequence;
  },

  filterNot: function filterNot(predicate, context) {
    return this.filter(not(predicate), context);
  },

  findEntry: function findEntry(predicate, context, notSetValue) {
    var found = notSetValue;
    this.__iterate(function (v, k, c) {
      if (predicate.call(context, v, k, c)) {
        found = [k, v];
        return false;
      }
    });
    return found;
  },

  findKey: function findKey(predicate, context) {
    var entry = this.findEntry(predicate, context);
    return entry && entry[0];
  },

  findLast: function findLast(predicate, context, notSetValue) {
    return this.toKeyedSeq()
      .reverse()
      .find(predicate, context, notSetValue);
  },

  findLastEntry: function findLastEntry(predicate, context, notSetValue) {
    return this.toKeyedSeq()
      .reverse()
      .findEntry(predicate, context, notSetValue);
  },

  findLastKey: function findLastKey(predicate, context) {
    return this.toKeyedSeq()
      .reverse()
      .findKey(predicate, context);
  },

  first: function first(notSetValue) {
    return this.find(returnTrue, null, notSetValue);
  },

  flatMap: function flatMap(mapper, context) {
    return reify(this, flatMapFactory(this, mapper, context));
  },

  flatten: function flatten(depth) {
    return reify(this, flattenFactory(this, depth, true));
  },

  fromEntrySeq: function fromEntrySeq() {
    return new FromEntriesSequence(this);
  },

  get: function get(searchKey, notSetValue) {
    return this.find(function (_, key) { return is(key, searchKey); }, undefined, notSetValue);
  },

  getIn: getIn$1,

  groupBy: function groupBy(grouper, context) {
    return groupByFactory(this, grouper, context);
  },

  has: function has(searchKey) {
    return this.get(searchKey, NOT_SET) !== NOT_SET;
  },

  hasIn: hasIn$1,

  isSubset: function isSubset(iter) {
    iter = typeof iter.includes === 'function' ? iter : Collection(iter);
    return this.every(function (value) { return iter.includes(value); });
  },

  isSuperset: function isSuperset(iter) {
    iter = typeof iter.isSubset === 'function' ? iter : Collection(iter);
    return iter.isSubset(this);
  },

  keyOf: function keyOf(searchValue) {
    return this.findKey(function (value) { return is(value, searchValue); });
  },

  keySeq: function keySeq() {
    return this.toSeq()
      .map(keyMapper)
      .toIndexedSeq();
  },

  last: function last(notSetValue) {
    return this.toSeq()
      .reverse()
      .first(notSetValue);
  },

  lastKeyOf: function lastKeyOf(searchValue) {
    return this.toKeyedSeq()
      .reverse()
      .keyOf(searchValue);
  },

  max: function max(comparator) {
    return maxFactory(this, comparator);
  },

  maxBy: function maxBy(mapper, comparator) {
    return maxFactory(this, comparator, mapper);
  },

  min: function min(comparator) {
    return maxFactory(
      this,
      comparator ? neg(comparator) : defaultNegComparator
    );
  },

  minBy: function minBy(mapper, comparator) {
    return maxFactory(
      this,
      comparator ? neg(comparator) : defaultNegComparator,
      mapper
    );
  },

  rest: function rest() {
    return this.slice(1);
  },

  skip: function skip(amount) {
    return amount === 0 ? this : this.slice(Math.max(0, amount));
  },

  skipLast: function skipLast(amount) {
    return amount === 0 ? this : this.slice(0, -Math.max(0, amount));
  },

  skipWhile: function skipWhile(predicate, context) {
    return reify(this, skipWhileFactory(this, predicate, context, true));
  },

  skipUntil: function skipUntil(predicate, context) {
    return this.skipWhile(not(predicate), context);
  },

  sortBy: function sortBy(mapper, comparator) {
    return reify(this, sortFactory(this, comparator, mapper));
  },

  take: function take(amount) {
    return this.slice(0, Math.max(0, amount));
  },

  takeLast: function takeLast(amount) {
    return this.slice(-Math.max(0, amount));
  },

  takeWhile: function takeWhile(predicate, context) {
    return reify(this, takeWhileFactory(this, predicate, context));
  },

  takeUntil: function takeUntil(predicate, context) {
    return this.takeWhile(not(predicate), context);
  },

  update: function update(fn) {
    return fn(this);
  },

  valueSeq: function valueSeq() {
    return this.toIndexedSeq();
  },

  // ### Hashable Object

  hashCode: function hashCode() {
    return this.__hash || (this.__hash = hashCollection(this));
  },

  // ### Internal

  // abstract __iterate(fn, reverse)

  // abstract __iterator(type, reverse)
});

var CollectionPrototype = Collection.prototype;
CollectionPrototype[IS_COLLECTION_SYMBOL] = true;
CollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.values;
CollectionPrototype.toJSON = CollectionPrototype.toArray;
CollectionPrototype.__toStringMapper = quoteString;
CollectionPrototype.inspect = CollectionPrototype.toSource = function() {
  return this.toString();
};
CollectionPrototype.chain = CollectionPrototype.flatMap;
CollectionPrototype.contains = CollectionPrototype.includes;

mixin(KeyedCollection, {
  // ### More sequential methods

  flip: function flip() {
    return reify(this, flipFactory(this));
  },

  mapEntries: function mapEntries(mapper, context) {
    var this$1 = this;

    var iterations = 0;
    return reify(
      this,
      this.toSeq()
        .map(function (v, k) { return mapper.call(context, [k, v], iterations++, this$1); })
        .fromEntrySeq()
    );
  },

  mapKeys: function mapKeys(mapper, context) {
    var this$1 = this;

    return reify(
      this,
      this.toSeq()
        .flip()
        .map(function (k, v) { return mapper.call(context, k, v, this$1); })
        .flip()
    );
  },
});

var KeyedCollectionPrototype = KeyedCollection.prototype;
KeyedCollectionPrototype[IS_KEYED_SYMBOL] = true;
KeyedCollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.entries;
KeyedCollectionPrototype.toJSON = toObject;
KeyedCollectionPrototype.__toStringMapper = function (v, k) { return quoteString(k) + ': ' + quoteString(v); };

mixin(IndexedCollection, {
  // ### Conversion to other types

  toKeyedSeq: function toKeyedSeq() {
    return new ToKeyedSequence(this, false);
  },

  // ### ES6 Collection methods (ES6 Array and Map)

  filter: function filter(predicate, context) {
    return reify(this, filterFactory(this, predicate, context, false));
  },

  findIndex: function findIndex(predicate, context) {
    var entry = this.findEntry(predicate, context);
    return entry ? entry[0] : -1;
  },

  indexOf: function indexOf(searchValue) {
    var key = this.keyOf(searchValue);
    return key === undefined ? -1 : key;
  },

  lastIndexOf: function lastIndexOf(searchValue) {
    var key = this.lastKeyOf(searchValue);
    return key === undefined ? -1 : key;
  },

  reverse: function reverse() {
    return reify(this, reverseFactory(this, false));
  },

  slice: function slice(begin, end) {
    return reify(this, sliceFactory(this, begin, end, false));
  },

  splice: function splice(index, removeNum /*, ...values*/) {
    var numArgs = arguments.length;
    removeNum = Math.max(removeNum || 0, 0);
    if (numArgs === 0 || (numArgs === 2 && !removeNum)) {
      return this;
    }
    // If index is negative, it should resolve relative to the size of the
    // collection. However size may be expensive to compute if not cached, so
    // only call count() if the number is in fact negative.
    index = resolveBegin(index, index < 0 ? this.count() : this.size);
    var spliced = this.slice(0, index);
    return reify(
      this,
      numArgs === 1
        ? spliced
        : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))
    );
  },

  // ### More collection methods

  findLastIndex: function findLastIndex(predicate, context) {
    var entry = this.findLastEntry(predicate, context);
    return entry ? entry[0] : -1;
  },

  first: function first(notSetValue) {
    return this.get(0, notSetValue);
  },

  flatten: function flatten(depth) {
    return reify(this, flattenFactory(this, depth, false));
  },

  get: function get(index, notSetValue) {
    index = wrapIndex(this, index);
    return index < 0 ||
      (this.size === Infinity || (this.size !== undefined && index > this.size))
      ? notSetValue
      : this.find(function (_, key) { return key === index; }, undefined, notSetValue);
  },

  has: function has(index) {
    index = wrapIndex(this, index);
    return (
      index >= 0 &&
      (this.size !== undefined
        ? this.size === Infinity || index < this.size
        : this.indexOf(index) !== -1)
    );
  },

  interpose: function interpose(separator) {
    return reify(this, interposeFactory(this, separator));
  },

  interleave: function interleave(/*...collections*/) {
    var collections = [this].concat(arrCopy(arguments));
    var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, collections);
    var interleaved = zipped.flatten(true);
    if (zipped.size) {
      interleaved.size = zipped.size * collections.length;
    }
    return reify(this, interleaved);
  },

  keySeq: function keySeq() {
    return Range(0, this.size);
  },

  last: function last(notSetValue) {
    return this.get(-1, notSetValue);
  },

  skipWhile: function skipWhile(predicate, context) {
    return reify(this, skipWhileFactory(this, predicate, context, false));
  },

  zip: function zip(/*, ...collections */) {
    var collections = [this].concat(arrCopy(arguments));
    return reify(this, zipWithFactory(this, defaultZipper, collections));
  },

  zipAll: function zipAll(/*, ...collections */) {
    var collections = [this].concat(arrCopy(arguments));
    return reify(this, zipWithFactory(this, defaultZipper, collections, true));
  },

  zipWith: function zipWith(zipper /*, ...collections */) {
    var collections = arrCopy(arguments);
    collections[0] = this;
    return reify(this, zipWithFactory(this, zipper, collections));
  },
});

var IndexedCollectionPrototype = IndexedCollection.prototype;
IndexedCollectionPrototype[IS_INDEXED_SYMBOL] = true;
IndexedCollectionPrototype[IS_ORDERED_SYMBOL] = true;

mixin(SetCollection, {
  // ### ES6 Collection methods (ES6 Array and Map)

  get: function get(value, notSetValue) {
    return this.has(value) ? value : notSetValue;
  },

  includes: function includes(value) {
    return this.has(value);
  },

  // ### More sequential methods

  keySeq: function keySeq() {
    return this.valueSeq();
  },
});

SetCollection.prototype.has = CollectionPrototype.includes;
SetCollection.prototype.contains = SetCollection.prototype.includes;

// Mixin subclasses

mixin(KeyedSeq, KeyedCollection.prototype);
mixin(IndexedSeq, IndexedCollection.prototype);
mixin(SetSeq, SetCollection.prototype);

// #pragma Helper functions

function reduce(collection, reducer, reduction, context, useFirst, reverse) {
  assertNotInfinite(collection.size);
  collection.__iterate(function (v, k, c) {
    if (useFirst) {
      useFirst = false;
      reduction = v;
    } else {
      reduction = reducer.call(context, reduction, v, k, c);
    }
  }, reverse);
  return reduction;
}

function keyMapper(v, k) {
  return k;
}

function entryMapper(v, k) {
  return [k, v];
}

function not(predicate) {
  return function() {
    return !predicate.apply(this, arguments);
  };
}

function neg(predicate) {
  return function() {
    return -predicate.apply(this, arguments);
  };
}

function defaultZipper() {
  return arrCopy(arguments);
}

function defaultNegComparator(a, b) {
  return a < b ? 1 : a > b ? -1 : 0;
}

function hashCollection(collection) {
  if (collection.size === Infinity) {
    return 0;
  }
  var ordered = isOrdered(collection);
  var keyed = isKeyed(collection);
  var h = ordered ? 1 : 0;
  var size = collection.__iterate(
    keyed
      ? ordered
        ? function (v, k) {
            h = (31 * h + hashMerge(hash(v), hash(k))) | 0;
          }
        : function (v, k) {
            h = (h + hashMerge(hash(v), hash(k))) | 0;
          }
      : ordered
        ? function (v) {
            h = (31 * h + hash(v)) | 0;
          }
        : function (v) {
            h = (h + hash(v)) | 0;
          }
  );
  return murmurHashOfSize(size, h);
}

function murmurHashOfSize(size, h) {
  h = imul(h, 0xcc9e2d51);
  h = imul((h << 15) | (h >>> -15), 0x1b873593);
  h = imul((h << 13) | (h >>> -13), 5);
  h = ((h + 0xe6546b64) | 0) ^ size;
  h = imul(h ^ (h >>> 16), 0x85ebca6b);
  h = imul(h ^ (h >>> 13), 0xc2b2ae35);
  h = smi(h ^ (h >>> 16));
  return h;
}

function hashMerge(a, b) {
  return (a ^ (b + 0x9e3779b9 + (a << 6) + (a >> 2))) | 0; // int
}

var OrderedSet = /*@__PURE__*/(function (Set$$1) {
  function OrderedSet(value) {
    return value === null || value === undefined
      ? emptyOrderedSet()
      : isOrderedSet(value)
        ? value
        : emptyOrderedSet().withMutations(function (set) {
            var iter = SetCollection(value);
            assertNotInfinite(iter.size);
            iter.forEach(function (v) { return set.add(v); });
          });
  }

  if ( Set$$1 ) OrderedSet.__proto__ = Set$$1;
  OrderedSet.prototype = Object.create( Set$$1 && Set$$1.prototype );
  OrderedSet.prototype.constructor = OrderedSet;

  OrderedSet.of = function of (/*...values*/) {
    return this(arguments);
  };

  OrderedSet.fromKeys = function fromKeys (value) {
    return this(KeyedCollection(value).keySeq());
  };

  OrderedSet.prototype.toString = function toString () {
    return this.__toString('OrderedSet {', '}');
  };

  return OrderedSet;
}(Set));

OrderedSet.isOrderedSet = isOrderedSet;

var OrderedSetPrototype = OrderedSet.prototype;
OrderedSetPrototype[IS_ORDERED_SYMBOL] = true;
OrderedSetPrototype.zip = IndexedCollectionPrototype.zip;
OrderedSetPrototype.zipWith = IndexedCollectionPrototype.zipWith;

OrderedSetPrototype.__empty = emptyOrderedSet;
OrderedSetPrototype.__make = makeOrderedSet;

function makeOrderedSet(map, ownerID) {
  var set = Object.create(OrderedSetPrototype);
  set.size = map ? map.size : 0;
  set._map = map;
  set.__ownerID = ownerID;
  return set;
}

var EMPTY_ORDERED_SET;
function emptyOrderedSet() {
  return (
    EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()))
  );
}

var Record = function Record(defaultValues, name) {
  var hasInitialized;

  var RecordType = function Record(values) {
    var this$1 = this;

    if (values instanceof RecordType) {
      return values;
    }
    if (!(this instanceof RecordType)) {
      return new RecordType(values);
    }
    if (!hasInitialized) {
      hasInitialized = true;
      var keys = Object.keys(defaultValues);
      var indices = (RecordTypePrototype._indices = {});
      // Deprecated: left to attempt not to break any external code which
      // relies on a ._name property existing on record instances.
      // Use Record.getDescriptiveName() instead
      RecordTypePrototype._name = name;
      RecordTypePrototype._keys = keys;
      RecordTypePrototype._defaultValues = defaultValues;
      for (var i = 0; i < keys.length; i++) {
        var propName = keys[i];
        indices[propName] = i;
        if (RecordTypePrototype[propName]) {
          /* eslint-disable no-console */
          typeof console === 'object' &&
            console.warn &&
            console.warn(
              'Cannot define ' +
                recordName(this) +
                ' with property "' +
                propName +
                '" since that property name is part of the Record API.'
            );
          /* eslint-enable no-console */
        } else {
          setProp(RecordTypePrototype, propName);
        }
      }
    }
    this.__ownerID = undefined;
    this._values = List().withMutations(function (l) {
      l.setSize(this$1._keys.length);
      KeyedCollection(values).forEach(function (v, k) {
        l.set(this$1._indices[k], v === this$1._defaultValues[k] ? undefined : v);
      });
    });
  };

  var RecordTypePrototype = (RecordType.prototype = Object.create(
    RecordPrototype
  ));
  RecordTypePrototype.constructor = RecordType;

  if (name) {
    RecordType.displayName = name;
  }

  return RecordType;
};

Record.prototype.toString = function toString () {
  var str = recordName(this) + ' { ';
  var keys = this._keys;
  var k;
  for (var i = 0, l = keys.length; i !== l; i++) {
    k = keys[i];
    str += (i ? ', ' : '') + k + ': ' + quoteString(this.get(k));
  }
  return str + ' }';
};

Record.prototype.equals = function equals (other) {
  return (
    this === other ||
    (other &&
      this._keys === other._keys &&
      recordSeq(this).equals(recordSeq(other)))
  );
};

Record.prototype.hashCode = function hashCode () {
  return recordSeq(this).hashCode();
};

// @pragma Access

Record.prototype.has = function has (k) {
  return this._indices.hasOwnProperty(k);
};

Record.prototype.get = function get (k, notSetValue) {
  if (!this.has(k)) {
    return notSetValue;
  }
  var index = this._indices[k];
  var value = this._values.get(index);
  return value === undefined ? this._defaultValues[k] : value;
};

// @pragma Modification

Record.prototype.set = function set (k, v) {
  if (this.has(k)) {
    var newValues = this._values.set(
      this._indices[k],
      v === this._defaultValues[k] ? undefined : v
    );
    if (newValues !== this._values && !this.__ownerID) {
      return makeRecord(this, newValues);
    }
  }
  return this;
};

Record.prototype.remove = function remove (k) {
  return this.set(k);
};

Record.prototype.clear = function clear () {
  var newValues = this._values.clear().setSize(this._keys.length);
  return this.__ownerID ? this : makeRecord(this, newValues);
};

Record.prototype.wasAltered = function wasAltered () {
  return this._values.wasAltered();
};

Record.prototype.toSeq = function toSeq () {
  return recordSeq(this);
};

Record.prototype.toJS = function toJS$1 () {
  return toJS(this);
};

Record.prototype.entries = function entries () {
  return this.__iterator(ITERATE_ENTRIES);
};

Record.prototype.__iterator = function __iterator (type, reverse) {
  return recordSeq(this).__iterator(type, reverse);
};

Record.prototype.__iterate = function __iterate (fn, reverse) {
  return recordSeq(this).__iterate(fn, reverse);
};

Record.prototype.__ensureOwner = function __ensureOwner (ownerID) {
  if (ownerID === this.__ownerID) {
    return this;
  }
  var newValues = this._values.__ensureOwner(ownerID);
  if (!ownerID) {
    this.__ownerID = ownerID;
    this._values = newValues;
    return this;
  }
  return makeRecord(this, newValues, ownerID);
};

Record.isRecord = isRecord;
Record.getDescriptiveName = recordName;
var RecordPrototype = Record.prototype;
RecordPrototype[IS_RECORD_SYMBOL] = true;
RecordPrototype[DELETE] = RecordPrototype.remove;
RecordPrototype.deleteIn = RecordPrototype.removeIn = deleteIn;
RecordPrototype.getIn = getIn$1;
RecordPrototype.hasIn = CollectionPrototype.hasIn;
RecordPrototype.merge = merge;
RecordPrototype.mergeWith = mergeWith;
RecordPrototype.mergeIn = mergeIn;
RecordPrototype.mergeDeep = mergeDeep$1;
RecordPrototype.mergeDeepWith = mergeDeepWith$1;
RecordPrototype.mergeDeepIn = mergeDeepIn;
RecordPrototype.setIn = setIn$1;
RecordPrototype.update = update$1;
RecordPrototype.updateIn = updateIn$1;
RecordPrototype.withMutations = withMutations;
RecordPrototype.asMutable = asMutable;
RecordPrototype.asImmutable = asImmutable;
RecordPrototype[ITERATOR_SYMBOL] = RecordPrototype.entries;
RecordPrototype.toJSON = RecordPrototype.toObject =
  CollectionPrototype.toObject;
RecordPrototype.inspect = RecordPrototype.toSource = function() {
  return this.toString();
};

function makeRecord(likeRecord, values, ownerID) {
  var record = Object.create(Object.getPrototypeOf(likeRecord));
  record._values = values;
  record.__ownerID = ownerID;
  return record;
}

function recordName(record) {
  return record.constructor.displayName || record.constructor.name || 'Record';
}

function recordSeq(record) {
  return keyedSeqFromValue(record._keys.map(function (k) { return [k, record.get(k)]; }));
}

function setProp(prototype, name) {
  try {
    Object.defineProperty(prototype, name, {
      get: function() {
        return this.get(name);
      },
      set: function(value) {
        invariant(this.__ownerID, 'Cannot set on an immutable record.');
        this.set(name, value);
      },
    });
  } catch (error) {
    // Object.defineProperty failed. Probably IE8.
  }
}

/**
 * Returns a lazy Seq of `value` repeated `times` times. When `times` is
 * undefined, returns an infinite sequence of `value`.
 */
var Repeat = /*@__PURE__*/(function (IndexedSeq$$1) {
  function Repeat(value, times) {
    if (!(this instanceof Repeat)) {
      return new Repeat(value, times);
    }
    this._value = value;
    this.size = times === undefined ? Infinity : Math.max(0, times);
    if (this.size === 0) {
      if (EMPTY_REPEAT) {
        return EMPTY_REPEAT;
      }
      EMPTY_REPEAT = this;
    }
  }

  if ( IndexedSeq$$1 ) Repeat.__proto__ = IndexedSeq$$1;
  Repeat.prototype = Object.create( IndexedSeq$$1 && IndexedSeq$$1.prototype );
  Repeat.prototype.constructor = Repeat;

  Repeat.prototype.toString = function toString () {
    if (this.size === 0) {
      return 'Repeat []';
    }
    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
  };

  Repeat.prototype.get = function get (index, notSetValue) {
    return this.has(index) ? this._value : notSetValue;
  };

  Repeat.prototype.includes = function includes (searchValue) {
    return is(this._value, searchValue);
  };

  Repeat.prototype.slice = function slice (begin, end) {
    var size = this.size;
    return wholeSlice(begin, end, size)
      ? this
      : new Repeat(
          this._value,
          resolveEnd(end, size) - resolveBegin(begin, size)
        );
  };

  Repeat.prototype.reverse = function reverse () {
    return this;
  };

  Repeat.prototype.indexOf = function indexOf (searchValue) {
    if (is(this._value, searchValue)) {
      return 0;
    }
    return -1;
  };

  Repeat.prototype.lastIndexOf = function lastIndexOf (searchValue) {
    if (is(this._value, searchValue)) {
      return this.size;
    }
    return -1;
  };

  Repeat.prototype.__iterate = function __iterate (fn, reverse) {
    var size = this.size;
    var i = 0;
    while (i !== size) {
      if (fn(this._value, reverse ? size - ++i : i++, this) === false) {
        break;
      }
    }
    return i;
  };

  Repeat.prototype.__iterator = function __iterator (type, reverse) {
    var this$1 = this;

    var size = this.size;
    var i = 0;
    return new Iterator(
      function () { return i === size
          ? iteratorDone()
          : iteratorValue(type, reverse ? size - ++i : i++, this$1._value); }
    );
  };

  Repeat.prototype.equals = function equals (other) {
    return other instanceof Repeat
      ? is(this._value, other._value)
      : deepEqual(other);
  };

  return Repeat;
}(IndexedSeq));

var EMPTY_REPEAT;

function fromJS(value, converter) {
  return fromJSWith(
    [],
    converter || defaultConverter,
    value,
    '',
    converter && converter.length > 2 ? [] : undefined,
    { '': value }
  );
}

function fromJSWith(stack, converter, value, key, keyPath, parentValue) {
  var toSeq = Array.isArray(value)
    ? IndexedSeq
    : isPlainObj(value)
      ? KeyedSeq
      : null;
  if (toSeq) {
    if (~stack.indexOf(value)) {
      throw new TypeError('Cannot convert circular structure to Immutable');
    }
    stack.push(value);
    keyPath && key !== '' && keyPath.push(key);
    var converted = converter.call(
      parentValue,
      key,
      toSeq(value).map(function (v, k) { return fromJSWith(stack, converter, v, k, keyPath, value); }
      ),
      keyPath && keyPath.slice()
    );
    stack.pop();
    keyPath && keyPath.pop();
    return converted;
  }
  return value;
}

function defaultConverter(k, v) {
  return isKeyed(v) ? v.toMap() : v.toList();
}

var version = "4.0.0-rc.11";

var Immutable = {
  version: version,

  Collection: Collection,
  // Note: Iterable is deprecated
  Iterable: Collection,

  Seq: Seq,
  Map: Map,
  OrderedMap: OrderedMap,
  List: List,
  Stack: Stack,
  Set: Set,
  OrderedSet: OrderedSet,

  Record: Record,
  Range: Range,
  Repeat: Repeat,

  is: is,
  fromJS: fromJS,
  hash: hash,

  isImmutable: isImmutable,
  isCollection: isCollection,
  isKeyed: isKeyed,
  isIndexed: isIndexed,
  isAssociative: isAssociative,
  isOrdered: isOrdered,
  isValueObject: isValueObject,
  isSeq: isSeq,
  isList: isList,
  isMap: isMap,
  isOrderedMap: isOrderedMap,
  isStack: isStack,
  isSet: isSet,
  isOrderedSet: isOrderedSet,
  isRecord: isRecord,

  get: get,
  getIn: getIn,
  has: has,
  hasIn: hasIn,
  merge: merge$1,
  mergeDeep: mergeDeep,
  mergeWith: mergeWith$1,
  mergeDeepWith: mergeDeepWith,
  remove: remove,
  removeIn: removeIn,
  set: set,
  setIn: setIn,
  update: update,
  updateIn: updateIn,
};

// Note: Iterable is deprecated
var Iterable = Collection;

/* harmony default export */ __webpack_exports__["default"] = (Immutable);



/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/object-assign.js":
/*!***********************************************************************************************************************!*\
  !*** delegated ./node_modules/next/dist/build/polyfills/object-assign.js from dll-reference dll_2adc2403d89adc16ead0 ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ "dll-reference dll_2adc2403d89adc16ead0"))("./node_modules/next/dist/build/polyfills/object-assign.js");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=D%3A%5Cdevelopment%5Crpg%5Cshubgath%5Cpages%5Cindex.tsx!./":
/*!********************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=D%3A%5Cdevelopment%5Crpg%5Cshubgath%5Cpages%5Cindex.tsx ***!
  \********************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


    (window.__NEXT_P=window.__NEXT_P||[]).push(["/", function() {
      var mod = __webpack_require__(/*! ./pages/index.tsx */ "./pages/index.tsx")
      if(true) {
        module.hot.accept(/*! ./pages/index.tsx */ "./pages/index.tsx", function() {
          if(!next.router.components["/"]) return
          var updatedPage = __webpack_require__(/*! ./pages/index.tsx */ "./pages/index.tsx")
          next.router.update("/", updatedPage)
        })
      }
      return mod
    }]);
  

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/amp-context.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/amp-context.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  }
  result["default"] = mod;
  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __importStar(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

exports.AmpStateContext = React.createContext({});

if (true) {
  exports.AmpStateContext.displayName = 'AmpStateContext';
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/amp.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/amp.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var react_1 = __importDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var amp_context_1 = __webpack_require__(/*! ./amp-context */ "./node_modules/next/dist/next-server/lib/amp-context.js");

function isInAmpMode() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$ampFirst = _ref.ampFirst,
      ampFirst = _ref$ampFirst === void 0 ? false : _ref$ampFirst,
      _ref$hybrid = _ref.hybrid,
      hybrid = _ref$hybrid === void 0 ? false : _ref$hybrid,
      _ref$hasQuery = _ref.hasQuery,
      hasQuery = _ref$hasQuery === void 0 ? false : _ref$hasQuery;

  return ampFirst || hybrid && hasQuery;
}

exports.isInAmpMode = isInAmpMode;

function useAmp() {
  // Don't assign the context value to a variable to save bytes
  return isInAmpMode(react_1["default"].useContext(amp_context_1.AmpStateContext));
}

exports.useAmp = useAmp;

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/head-manager-context.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/head-manager-context.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  }
  result["default"] = mod;
  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __importStar(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

exports.HeadManagerContext = React.createContext(null);

if (true) {
  exports.HeadManagerContext.displayName = 'HeadManagerContext';
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/head.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/head.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var react_1 = __importDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var side_effect_1 = __importDefault(__webpack_require__(/*! ./side-effect */ "./node_modules/next/dist/next-server/lib/side-effect.js"));

var amp_context_1 = __webpack_require__(/*! ./amp-context */ "./node_modules/next/dist/next-server/lib/amp-context.js");

var head_manager_context_1 = __webpack_require__(/*! ./head-manager-context */ "./node_modules/next/dist/next-server/lib/head-manager-context.js");

var amp_1 = __webpack_require__(/*! ./amp */ "./node_modules/next/dist/next-server/lib/amp.js");

function defaultHead() {
  var inAmpMode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  var head = [react_1["default"].createElement("meta", {
    charSet: "utf-8"
  })];

  if (!inAmpMode) {
    head.push(react_1["default"].createElement("meta", {
      name: "viewport",
      content: "width=device-width"
    }));
  }

  return head;
}

exports.defaultHead = defaultHead;

function onlyReactElement(list, child) {
  // React children can be "string" or "number" in this case we ignore them for backwards compat
  if (typeof child === 'string' || typeof child === 'number') {
    return list;
  } // Adds support for React.Fragment


  if (child.type === react_1["default"].Fragment) {
    return list.concat(react_1["default"].Children.toArray(child.props.children).reduce(function (fragmentList, fragmentChild) {
      if (typeof fragmentChild === 'string' || typeof fragmentChild === 'number') {
        return fragmentList;
      }

      return fragmentList.concat(fragmentChild);
    }, []));
  }

  return list.concat(child);
}

var METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp'];
/*
 returns a function for filtering head child elements
 which shouldn't be duplicated, like <title/>
 Also adds support for deduplicated `key` properties
*/

function unique() {
  var keys = new Set();
  var tags = new Set();
  var metaTypes = new Set();
  var metaCategories = {};
  return function (h) {
    var unique = true;

    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {
      var key = h.key.slice(h.key.indexOf('$') + 1);

      if (keys.has(key)) {
        unique = false;
      } else {
        keys.add(key);
      }
    } // eslint-disable-next-line default-case


    switch (h.type) {
      case 'title':
      case 'base':
        if (tags.has(h.type)) {
          unique = false;
        } else {
          tags.add(h.type);
        }

        break;

      case 'meta':
        for (var i = 0, len = METATYPES.length; i < len; i++) {
          var metatype = METATYPES[i];
          if (!h.props.hasOwnProperty(metatype)) continue;

          if (metatype === 'charSet') {
            if (metaTypes.has(metatype)) {
              unique = false;
            } else {
              metaTypes.add(metatype);
            }
          } else {
            var category = h.props[metatype];
            var categories = metaCategories[metatype] || new Set();

            if (categories.has(category)) {
              unique = false;
            } else {
              categories.add(category);
              metaCategories[metatype] = categories;
            }
          }
        }

        break;
    }

    return unique;
  };
}
/**
 *
 * @param headElements List of multiple <Head> instances
 */


function reduceComponents(headElements, props) {
  return headElements.reduce(function (list, headElement) {
    var headElementChildren = react_1["default"].Children.toArray(headElement.props.children);
    return list.concat(headElementChildren);
  }, []).reduce(onlyReactElement, []).reverse().concat(defaultHead(props.inAmpMode)).filter(unique()).reverse().map(function (c, i) {
    var key = c.key || i;
    return react_1["default"].cloneElement(c, {
      key: key
    });
  });
}

var Effect = side_effect_1["default"]();
/**
 * This component injects elements to `<head>` of your page.
 * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.
 */

function Head(_ref) {
  var children = _ref.children;
  return react_1["default"].createElement(amp_context_1.AmpStateContext.Consumer, null, function (ampState) {
    return react_1["default"].createElement(head_manager_context_1.HeadManagerContext.Consumer, null, function (updateHead) {
      return react_1["default"].createElement(Effect, {
        reduceComponentsToState: reduceComponents,
        handleStateChange: updateHead,
        inAmpMode: amp_1.isInAmpMode(ampState)
      }, children);
    });
  });
}

Head.rewind = Effect.rewind;
exports["default"] = Head;

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/side-effect.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/side-effect.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js");

var _assertThisInitialized = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/next/node_modules/@babel/runtime/helpers/assertThisInitialized.js");

var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/next/node_modules/@babel/runtime/helpers/createClass.js");

var _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/next/node_modules/@babel/runtime/helpers/inherits.js");

var _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/next/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");

var _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/next/node_modules/@babel/runtime/helpers/getPrototypeOf.js");

var _toConsumableArray = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray.js");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var react_1 = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var isServer = false;

exports["default"] = function () {
  var mountedInstances = new Set();
  var state;

  function emitChange(component) {
    state = component.props.reduceComponentsToState(_toConsumableArray(mountedInstances), component.props);

    if (component.props.handleStateChange) {
      component.props.handleStateChange(state);
    }
  }

  return /*#__PURE__*/function (_react_1$Component) {
    _inherits(_class, _react_1$Component);

    var _super = _createSuper(_class);

    _createClass(_class, null, [{
      key: "rewind",
      // Used when server rendering
      value: function rewind() {
        var recordedState = state;
        state = undefined;
        mountedInstances.clear();
        return recordedState;
      }
    }]);

    function _class(props) {
      var _this;

      _classCallCheck(this, _class);

      _this = _super.call(this, props);

      if (isServer) {
        mountedInstances.add(_assertThisInitialized(_this));
        emitChange(_assertThisInitialized(_this));
      }

      return _this;
    }

    _createClass(_class, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        mountedInstances.add(this);
        emitChange(this);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        emitChange(this);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        mountedInstances["delete"](this);
        emitChange(this);
      }
    }, {
      key: "render",
      value: function render() {
        return null;
      }
    }]);

    return _class;
  }(react_1.Component);
};

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

module.exports = _arrayWithoutHoles;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/assertThisInitialized.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/createClass.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/createClass.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/getPrototypeOf.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/inherits.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/inherits.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "./node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

module.exports = _iterableToArray;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableSpread.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

module.exports = _nonIterableSpread;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js");

var assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized */ "./node_modules/next/node_modules/@babel/runtime/helpers/assertThisInitialized.js");

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles */ "./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js");

var iterableToArray = __webpack_require__(/*! ./iterableToArray */ "./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js");

var nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread */ "./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableSpread.js");

function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!*********************************************************************************************************!*\
  !*** delegated ./node_modules/prop-types/checkPropTypes.js from dll-reference dll_2adc2403d89adc16ead0 ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ "dll-reference dll_2adc2403d89adc16ead0"))("./node_modules/prop-types/checkPropTypes.js");

/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");
var assign = __webpack_require__(/*! object-assign */ "./node_modules/next/dist/build/polyfills/object-assign.js");

var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
var checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function() {};

if (true) {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if ( true && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (true) {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : undefined;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (true) {
  var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ "./node_modules/prop-types/factoryWithTypeCheckers.js")(ReactIs.isElement, throwOnDirectAccess);
} else {}


/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*******************************************************************************************************************!*\
  !*** delegated ./node_modules/prop-types/lib/ReactPropTypesSecret.js from dll-reference dll_2adc2403d89adc16ead0 ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ "dll-reference dll_2adc2403d89adc16ead0"))("./node_modules/prop-types/lib/ReactPropTypesSecret.js");

/***/ }),

/***/ "./node_modules/react-dom/index.js":
/*!***********************************************************************************************!*\
  !*** delegated ./node_modules/react-dom/index.js from dll-reference dll_2adc2403d89adc16ead0 ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ "dll-reference dll_2adc2403d89adc16ead0"))("./node_modules/react-dom/index.js");

/***/ }),

/***/ "./node_modules/react-hammerjs/dist/react-hammerjs.es.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-hammerjs/dist/react-hammerjs.es.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);



var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require('hammerjs') when in a browser. This is safe because Hammer is only
// invoked in componentDidMount, which is not executed on the server.
var Hammer = typeof window !== 'undefined' ? __webpack_require__(/*! hammerjs */ "./node_modules/hammerjs/hammer.js") : undefined;

var privateProps = {
	children: true,
	direction: true,
	options: true,
	recognizeWith: true,
	vertical: true
};

/**
 * Hammer Component
 * ================
 */

var handlerToEvent = {
	action: 'tap press',
	onDoubleTap: 'doubletap',
	onPan: 'pan',
	onPanCancel: 'pancancel',
	onPanEnd: 'panend',
	onPanStart: 'panstart',
	onPinch: 'pinch',
	onPinchCancel: 'pinchcancel',
	onPinchEnd: 'pinchend',
	onPinchIn: 'pinchin',
	onPinchOut: 'pinchout',
	onPinchStart: 'pinchstart',
	onPress: 'press',
	onPressUp: 'pressup',
	onRotate: 'rotate',
	onRotateCancel: 'rotatecancel',
	onRotateEnd: 'rotateend',
	onRotateMove: 'rotatemove',
	onRotateStart: 'rotatestart',
	onSwipe: 'swipe',
	onSwipeRight: 'swiperight',
	onSwipeLeft: 'swipeleft',
	onSwipeUp: 'swipeup',
	onSwipeDown: 'swipedown',
	onTap: 'tap'
};

Object.keys(handlerToEvent).forEach(function (i) {
	privateProps[i] = true;
});

function updateHammer(hammer, props) {
	if (props.hasOwnProperty('vertical')) {
		console.warn('vertical is deprecated, please use `direction` instead');
	}

	var directionProp = props.direction;
	if (directionProp || props.hasOwnProperty('vertical')) {
		var direction = directionProp ? directionProp : props.vertical ? 'DIRECTION_ALL' : 'DIRECTION_HORIZONTAL';
		hammer.get('pan').set({ direction: Hammer[direction] });
		hammer.get('swipe').set({ direction: Hammer[direction] });
	}

	if (props.options) {
		Object.keys(props.options).forEach(function (option) {
			if (option === 'recognizers') {
				Object.keys(props.options.recognizers).forEach(function (gesture) {
					var recognizer = hammer.get(gesture);
					recognizer.set(props.options.recognizers[gesture]);
					if (props.options.recognizers[gesture].requireFailure) {
						recognizer.requireFailure(props.options.recognizers[gesture].requireFailure);
					}
				}, this);
			} else {
				var key = option;
				var optionObj = {};
				optionObj[key] = props.options[option];
				hammer.set(optionObj);
			}
		}, this);
	}

	if (props.recognizeWith) {
		Object.keys(props.recognizeWith).forEach(function (gesture) {
			var recognizer = hammer.get(gesture);
			recognizer.recognizeWith(props.recognizeWith[gesture]);
		}, this);
	}

	Object.keys(props).forEach(function (p) {
		var e = handlerToEvent[p];
		if (e) {
			hammer.off(e);
			hammer.on(e, props[p]);
		}
	});
}

var HammerComponent = function (_React$Component) {
	_inherits(HammerComponent, _React$Component);

	function HammerComponent() {
		_classCallCheck(this, HammerComponent);

		return _possibleConstructorReturn(this, (HammerComponent.__proto__ || Object.getPrototypeOf(HammerComponent)).apply(this, arguments));
	}

	_createClass(HammerComponent, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			this.hammer = new Hammer(this.domElement);
			updateHammer(this.hammer, this.props);
		}
	}, {
		key: 'componentDidUpdate',
		value: function componentDidUpdate() {
			if (this.hammer) {
				updateHammer(this.hammer, this.props);
			}
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			if (this.hammer) {
				this.hammer.stop();
				this.hammer.destroy();
			}
			this.hammer = null;
		}
	}, {
		key: 'render',
		value: function render() {
			var props = {};

			Object.keys(this.props).forEach(function (i) {
				if (!privateProps[i]) {
					props[i] = this.props[i];
				}
			}, this);

			var self = this;
			props.ref = function (domElement) {
				if (self.props.ref) {
					self.props.ref(domElement);
				}
				self.domElement = domElement;
			};

			// Reuse the child provided
			// This makes it flexible to use whatever element is wanted (div, ul, etc)
			return react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(react__WEBPACK_IMPORTED_MODULE_1___default.a.Children.only(this.props.children), props);
		}
	}]);

	return HammerComponent;
}(react__WEBPACK_IMPORTED_MODULE_1___default.a.Component);

HammerComponent.displayName = 'Hammer';
HammerComponent.propTypes = {
	className: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string
};

/* harmony default export */ __webpack_exports__["default"] = (HammerComponent);


/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}


/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "./node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "./node_modules/react-toggle/dist/component/check.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-toggle/dist/component/check.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  return _react2.default.createElement(
    'svg',
    { width: '14', height: '11', viewBox: '0 0 14 11' },
    _react2.default.createElement('path', { d: 'M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0', fill: '#fff', fillRule: 'evenodd' })
  );
};

/***/ }),

/***/ "./node_modules/react-toggle/dist/component/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-toggle/dist/component/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(/*! classnames */ "./node_modules/react-toggle/node_modules/classnames/index.js");

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _check = __webpack_require__(/*! ./check */ "./node_modules/react-toggle/dist/component/check.js");

var _check2 = _interopRequireDefault(_check);

var _x = __webpack_require__(/*! ./x */ "./node_modules/react-toggle/dist/component/x.js");

var _x2 = _interopRequireDefault(_x);

var _util = __webpack_require__(/*! ./util */ "./node_modules/react-toggle/dist/component/util.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Toggle = function (_PureComponent) {
  _inherits(Toggle, _PureComponent);

  function Toggle(props) {
    _classCallCheck(this, Toggle);

    var _this = _possibleConstructorReturn(this, (Toggle.__proto__ || Object.getPrototypeOf(Toggle)).call(this, props));

    _this.handleClick = _this.handleClick.bind(_this);
    _this.handleTouchStart = _this.handleTouchStart.bind(_this);
    _this.handleTouchMove = _this.handleTouchMove.bind(_this);
    _this.handleTouchEnd = _this.handleTouchEnd.bind(_this);
    _this.handleFocus = _this.handleFocus.bind(_this);
    _this.handleBlur = _this.handleBlur.bind(_this);
    _this.previouslyChecked = !!(props.checked || props.defaultChecked);
    _this.state = {
      checked: !!(props.checked || props.defaultChecked),
      hasFocus: false
    };
    return _this;
  }

  _createClass(Toggle, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      if (prevProps.checked !== this.props.checked) {
        // Disable linting rule here since this usage of setState inside
        // componentDidUpdate is OK; see
        // https://reactjs.org/docs/react-component.html#componentdidupdate
        // eslint-disable-next-line react/no-did-update-set-state
        this.setState({ checked: !!this.props.checked });
      }
    }
  }, {
    key: 'handleClick',
    value: function handleClick(event) {
      if (this.props.disabled) {
        return;
      }
      var checkbox = this.input;
      if (event.target !== checkbox && !this.moved) {
        this.previouslyChecked = checkbox.checked;
        event.preventDefault();
        checkbox.focus();
        checkbox.click();
        return;
      }

      var checked = this.props.hasOwnProperty('checked') ? this.props.checked : checkbox.checked;

      this.setState({ checked: checked });
    }
  }, {
    key: 'handleTouchStart',
    value: function handleTouchStart(event) {
      if (this.props.disabled) {
        return;
      }
      this.startX = (0, _util.pointerCoord)(event).x;
      this.activated = true;
    }
  }, {
    key: 'handleTouchMove',
    value: function handleTouchMove(event) {
      if (!this.activated) return;
      this.moved = true;

      if (this.startX) {
        var currentX = (0, _util.pointerCoord)(event).x;
        if (this.state.checked && currentX + 15 < this.startX) {
          this.setState({ checked: false });
          this.startX = currentX;
          this.activated = true;
        } else if (currentX - 15 > this.startX) {
          this.setState({ checked: true });
          this.startX = currentX;
          this.activated = currentX < this.startX + 5;
        }
      }
    }
  }, {
    key: 'handleTouchEnd',
    value: function handleTouchEnd(event) {
      if (!this.moved) return;
      var checkbox = this.input;
      event.preventDefault();

      if (this.startX) {
        var endX = (0, _util.pointerCoord)(event).x;
        if (this.previouslyChecked === true && this.startX + 4 > endX) {
          if (this.previouslyChecked !== this.state.checked) {
            this.setState({ checked: false });
            this.previouslyChecked = this.state.checked;
            checkbox.click();
          }
        } else if (this.startX - 4 < endX) {
          if (this.previouslyChecked !== this.state.checked) {
            this.setState({ checked: true });
            this.previouslyChecked = this.state.checked;
            checkbox.click();
          }
        }

        this.activated = false;
        this.startX = null;
        this.moved = false;
      }
    }
  }, {
    key: 'handleFocus',
    value: function handleFocus(event) {
      var onFocus = this.props.onFocus;


      if (onFocus) {
        onFocus(event);
      }

      this.setState({ hasFocus: true });
    }
  }, {
    key: 'handleBlur',
    value: function handleBlur(event) {
      var onBlur = this.props.onBlur;


      if (onBlur) {
        onBlur(event);
      }

      this.setState({ hasFocus: false });
    }
  }, {
    key: 'getIcon',
    value: function getIcon(type) {
      var icons = this.props.icons;

      if (!icons) {
        return null;
      }
      return icons[type] === undefined ? Toggle.defaultProps.icons[type] : icons[type];
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          className = _props.className,
          _icons = _props.icons,
          inputProps = _objectWithoutProperties(_props, ['className', 'icons']);

      var classes = (0, _classnames2.default)('react-toggle', {
        'react-toggle--checked': this.state.checked,
        'react-toggle--focus': this.state.hasFocus,
        'react-toggle--disabled': this.props.disabled
      }, className);

      return _react2.default.createElement(
        'div',
        { className: classes,
          onClick: this.handleClick,
          onTouchStart: this.handleTouchStart,
          onTouchMove: this.handleTouchMove,
          onTouchEnd: this.handleTouchEnd },
        _react2.default.createElement(
          'div',
          { className: 'react-toggle-track' },
          _react2.default.createElement(
            'div',
            { className: 'react-toggle-track-check' },
            this.getIcon('checked')
          ),
          _react2.default.createElement(
            'div',
            { className: 'react-toggle-track-x' },
            this.getIcon('unchecked')
          )
        ),
        _react2.default.createElement('div', { className: 'react-toggle-thumb' }),
        _react2.default.createElement('input', _extends({}, inputProps, {
          ref: function ref(_ref) {
            _this2.input = _ref;
          },
          onFocus: this.handleFocus,
          onBlur: this.handleBlur,
          className: 'react-toggle-screenreader-only',
          type: 'checkbox' }))
      );
    }
  }]);

  return Toggle;
}(_react.PureComponent);

exports.default = Toggle;


Toggle.displayName = 'Toggle';

Toggle.defaultProps = {
  icons: {
    checked: _react2.default.createElement(_check2.default, null),
    unchecked: _react2.default.createElement(_x2.default, null)
  }
};

Toggle.propTypes = {
  checked: _propTypes2.default.bool,
  disabled: _propTypes2.default.bool,
  defaultChecked: _propTypes2.default.bool,
  onChange: _propTypes2.default.func,
  onFocus: _propTypes2.default.func,
  onBlur: _propTypes2.default.func,
  className: _propTypes2.default.string,
  name: _propTypes2.default.string,
  value: _propTypes2.default.string,
  id: _propTypes2.default.string,
  'aria-labelledby': _propTypes2.default.string,
  'aria-label': _propTypes2.default.string,
  icons: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.shape({
    checked: _propTypes2.default.node,
    unchecked: _propTypes2.default.node
  })])
};

/***/ }),

/***/ "./node_modules/react-toggle/dist/component/util.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-toggle/dist/component/util.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pointerCoord = pointerCoord;
// Copyright 2015-present Drifty Co.
// http://drifty.com/
// from: https://github.com/driftyco/ionic/blob/master/src/util/dom.ts

function pointerCoord(event) {
  // get coordinates for either a mouse click
  // or a touch depending on the given event
  if (event) {
    var changedTouches = event.changedTouches;
    if (changedTouches && changedTouches.length > 0) {
      var touch = changedTouches[0];
      return { x: touch.clientX, y: touch.clientY };
    }
    var pageX = event.pageX;
    if (pageX !== undefined) {
      return { x: pageX, y: event.pageY };
    }
  }
  return { x: 0, y: 0 };
}

/***/ }),

/***/ "./node_modules/react-toggle/dist/component/x.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-toggle/dist/component/x.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  return _react2.default.createElement(
    'svg',
    { width: '10', height: '10', viewBox: '0 0 10 10' },
    _react2.default.createElement('path', { d: 'M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12', fill: '#fff', fillRule: 'evenodd' })
  );
};

/***/ }),

/***/ "./node_modules/react-toggle/node_modules/classnames/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/react-toggle/node_modules/classnames/index.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),

/***/ "./node_modules/react-transition-group/esm/CSSTransition.js":
/*!******************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/CSSTransition.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var dom_helpers_addClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dom-helpers/addClass */ "./node_modules/dom-helpers/esm/addClass.js");
/* harmony import */ var dom_helpers_removeClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! dom-helpers/removeClass */ "./node_modules/dom-helpers/esm/removeClass.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _Transition__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Transition */ "./node_modules/react-transition-group/esm/Transition.js");
/* harmony import */ var _utils_PropTypes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/PropTypes */ "./node_modules/react-transition-group/esm/utils/PropTypes.js");










var _addClass = function addClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return Object(dom_helpers_addClass__WEBPACK_IMPORTED_MODULE_4__["default"])(node, c);
  });
};

var removeClass = function removeClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return Object(dom_helpers_removeClass__WEBPACK_IMPORTED_MODULE_5__["default"])(node, c);
  });
};
/**
 * A transition component inspired by the excellent
 * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should
 * use it if you're using CSS transitions or animations. It's built upon the
 * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
 * component, so it inherits all of its props.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` states of the transition. The first class is applied and then a
 * second `*-active` class in order to activate the CSS transition. After the
 * transition, matching `*-done` class names are applied to persist the
 * transition state.
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
 *         <div>
 *           {"I'll receive my-node-* classes"}
 *         </div>
 *       </CSSTransition>
 *       <button type="button" onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the `in` prop is set to `true`, the child component will first receive
 * the class `example-enter`, then the `example-enter-active` will be added in
 * the next tick. `CSSTransition` [forces a
 * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * between before adding the `example-enter-active`. This is an important trick
 * because it allows us to transition between `example-enter` and
 * `example-enter-active` even though they were added immediately one after
 * another. Most notably, this is what makes it possible for us to animate
 * _appearance_.
 *
 * ```css
 * .my-node-enter {
 *   opacity: 0;
 * }
 * .my-node-enter-active {
 *   opacity: 1;
 *   transition: opacity 200ms;
 * }
 * .my-node-exit {
 *   opacity: 1;
 * }
 * .my-node-exit-active {
 *   opacity: 0;
 *   transition: opacity 200ms;
 * }
 * ```
 *
 * `*-active` classes represent which styles you want to animate **to**, so it's
 * important to add `transition` declaration only to them, otherwise transitions
 * might not behave as intended! This might not be obvious when the transitions
 * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in
 * the example above (minus `transition`), but it becomes apparent in more
 * complex transitions.
 *
 * **Note**: If you're using the
 * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)
 * prop, make sure to define styles for `.appear-*` classes as well.
 */


var CSSTransition = /*#__PURE__*/function (_React$Component) {
  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__["default"])(CSSTransition, _React$Component);

  function CSSTransition() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };

    _this.onEnter = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),
          node = _this$resolveArgument[0],
          appearing = _this$resolveArgument[1];

      _this.removeClasses(node, 'exit');

      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');

      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };

    _this.onEntering = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),
          node = _this$resolveArgument2[0],
          appearing = _this$resolveArgument2[1];

      var type = appearing ? 'appear' : 'enter';

      _this.addClass(node, type, 'active');

      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };

    _this.onEntered = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),
          node = _this$resolveArgument3[0],
          appearing = _this$resolveArgument3[1];

      var type = appearing ? 'appear' : 'enter';

      _this.removeClasses(node, type);

      _this.addClass(node, type, 'done');

      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };

    _this.onExit = function (maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),
          node = _this$resolveArgument4[0];

      _this.removeClasses(node, 'appear');

      _this.removeClasses(node, 'enter');

      _this.addClass(node, 'exit', 'base');

      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };

    _this.onExiting = function (maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),
          node = _this$resolveArgument5[0];

      _this.addClass(node, 'exit', 'active');

      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };

    _this.onExited = function (maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),
          node = _this$resolveArgument6[0];

      _this.removeClasses(node, 'exit');

      _this.addClass(node, 'exit', 'done');

      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };

    _this.resolveArguments = function (maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`
      : [maybeNode, maybeAppearing];
    };

    _this.getClassNames = function (type) {
      var classNames = _this.props.classNames;
      var isStringClassNames = typeof classNames === 'string';
      var prefix = isStringClassNames && classNames ? classNames + "-" : '';
      var baseClassName = isStringClassNames ? "" + prefix + type : classNames[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type + "Done"];
      return {
        baseClassName: baseClassName,
        activeClassName: activeClassName,
        doneClassName: doneClassName
      };
    };

    return _this;
  }

  var _proto = CSSTransition.prototype;

  _proto.addClass = function addClass(node, type, phase) {
    var className = this.getClassNames(type)[phase + "ClassName"];

    var _this$getClassNames = this.getClassNames('enter'),
        doneClassName = _this$getClassNames.doneClassName;

    if (type === 'appear' && phase === 'done' && doneClassName) {
      className += " " + doneClassName;
    } // This is to force a repaint,
    // which is necessary in order to transition styles when adding a class name.


    if (phase === 'active') {
      /* eslint-disable no-unused-expressions */
      node && node.scrollTop;
    }

    if (className) {
      this.appliedClasses[type][phase] = className;

      _addClass(node, className);
    }
  };

  _proto.removeClasses = function removeClasses(node, type) {
    var _this$appliedClasses$ = this.appliedClasses[type],
        baseClassName = _this$appliedClasses$.base,
        activeClassName = _this$appliedClasses$.active,
        doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};

    if (baseClassName) {
      removeClass(node, baseClassName);
    }

    if (activeClassName) {
      removeClass(node, activeClassName);
    }

    if (doneClassName) {
      removeClass(node, doneClassName);
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        _ = _this$props.classNames,
        props = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$props, ["classNames"]);

    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_Transition__WEBPACK_IMPORTED_MODULE_7__["default"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };

  return CSSTransition;
}(react__WEBPACK_IMPORTED_MODULE_6___default.a.Component);

CSSTransition.defaultProps = {
  classNames: ''
};
CSSTransition.propTypes =  true ? Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, _Transition__WEBPACK_IMPORTED_MODULE_7__["default"].propTypes, {
  /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided, which
   * will be suffixed for each stage, e.g. `classNames="fade"` applies:
   *
   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
   *
   * A few details to note about how these classes are applied:
   *
   * 1. They are _joined_ with the ones that are already defined on the child
   *    component, so if you want to add some base styles, you can use
   *    `className` without worrying that it will be overridden.
   *
   * 2. If the transition component mounts with `in={false}`, no classes are
   *    applied yet. You might be expecting `*-exit-done`, but if you think
   *    about it, a component cannot finish exiting if it hasn't entered yet.
   *
   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
   *    allows you to define different behavior for when appearing is done and
   *    when regular entering is done, using selectors like
   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
   *    an epic entrance animation when element first appears in the DOM using
   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   *    simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: _utils_PropTypes__WEBPACK_IMPORTED_MODULE_8__["classNamesShape"],

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExit: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExited: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func
}) : undefined;
/* harmony default export */ __webpack_exports__["default"] = (CSSTransition);

/***/ }),

/***/ "./node_modules/react-transition-group/esm/ReplaceTransition.js":
/*!**********************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/ReplaceTransition.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _TransitionGroup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TransitionGroup */ "./node_modules/react-transition-group/esm/TransitionGroup.js");






/**
 * The `<ReplaceTransition>` component is a specialized `Transition` component
 * that animates between two children.
 *
 * ```jsx
 * <ReplaceTransition in>
 *   <Fade><div>I appear first</div></Fade>
 *   <Fade><div>I replace the above</div></Fade>
 * </ReplaceTransition>
 * ```
 */

var ReplaceTransition = /*#__PURE__*/function (_React$Component) {
  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(ReplaceTransition, _React$Component);

  function ReplaceTransition() {
    var _this;

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;

    _this.handleEnter = function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _this.handleLifecycle('onEnter', 0, args);
    };

    _this.handleEntering = function () {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      return _this.handleLifecycle('onEntering', 0, args);
    };

    _this.handleEntered = function () {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return _this.handleLifecycle('onEntered', 0, args);
    };

    _this.handleExit = function () {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      return _this.handleLifecycle('onExit', 1, args);
    };

    _this.handleExiting = function () {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      return _this.handleLifecycle('onExiting', 1, args);
    };

    _this.handleExited = function () {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      return _this.handleLifecycle('onExited', 1, args);
    };

    return _this;
  }

  var _proto = ReplaceTransition.prototype;

  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;

    var children = this.props.children;
    var child = react__WEBPACK_IMPORTED_MODULE_3___default.a.Children.toArray(children)[idx];
    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);

    if (this.props[handler]) {
      var maybeNode = child.props.nodeRef ? undefined : react_dom__WEBPACK_IMPORTED_MODULE_4___default.a.findDOMNode(this);
      this.props[handler](maybeNode);
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        inProp = _this$props.in,
        props = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, ["children", "in"]);

    var _React$Children$toArr = react__WEBPACK_IMPORTED_MODULE_3___default.a.Children.toArray(children),
        first = _React$Children$toArr[0],
        second = _React$Children$toArr[1];

    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_TransitionGroup__WEBPACK_IMPORTED_MODULE_5__["default"], props, inProp ? react__WEBPACK_IMPORTED_MODULE_3___default.a.cloneElement(first, {
      key: 'first',
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : react__WEBPACK_IMPORTED_MODULE_3___default.a.cloneElement(second, {
      key: 'second',
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };

  return ReplaceTransition;
}(react__WEBPACK_IMPORTED_MODULE_3___default.a.Component);

ReplaceTransition.propTypes =  true ? {
  in: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool.isRequired,
  children: function children(props, propName) {
    if (react__WEBPACK_IMPORTED_MODULE_3___default.a.Children.count(props[propName]) !== 2) return new Error("\"" + propName + "\" must be exactly two transition components.");
    return null;
  }
} : undefined;
/* harmony default export */ __webpack_exports__["default"] = (ReplaceTransition);

/***/ }),

/***/ "./node_modules/react-transition-group/esm/SwitchTransition.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/SwitchTransition.js ***!
  \*********************************************************************/
/*! exports provided: modes, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modes", function() { return modes; });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Transition__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Transition */ "./node_modules/react-transition-group/esm/Transition.js");
/* harmony import */ var _TransitionGroupContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TransitionGroupContext */ "./node_modules/react-transition-group/esm/TransitionGroupContext.js");


var _leaveRenders, _enterRenders;






function areChildrenDifferent(oldChildren, newChildren) {
  if (oldChildren === newChildren) return false;

  if (react__WEBPACK_IMPORTED_MODULE_1___default.a.isValidElement(oldChildren) && react__WEBPACK_IMPORTED_MODULE_1___default.a.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {
    return false;
  }

  return true;
}
/**
 * Enum of modes for SwitchTransition component
 * @enum { string }
 */


var modes = {
  out: 'out-in',
  in: 'in-out'
};

var callHook = function callHook(element, name, cb) {
  return function () {
    var _element$props;

    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);
    cb();
  };
};

var leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {
  var current = _ref.current,
      changeState = _ref.changeState;
  return react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(current, {
    in: false,
    onExited: callHook(current, 'onExited', function () {
      changeState(_Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERING"], null);
    })
  });
}, _leaveRenders[modes.in] = function (_ref2) {
  var current = _ref2.current,
      changeState = _ref2.changeState,
      children = _ref2.children;
  return [current, react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(children, {
    in: true,
    onEntered: callHook(children, 'onEntered', function () {
      changeState(_Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERING"]);
    })
  })];
}, _leaveRenders);
var enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {
  var children = _ref3.children,
      changeState = _ref3.changeState;
  return react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(children, {
    in: true,
    onEntered: callHook(children, 'onEntered', function () {
      changeState(_Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERED"], react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(children, {
        in: true
      }));
    })
  });
}, _enterRenders[modes.in] = function (_ref4) {
  var current = _ref4.current,
      children = _ref4.children,
      changeState = _ref4.changeState;
  return [react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(current, {
    in: false,
    onExited: callHook(current, 'onExited', function () {
      changeState(_Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERED"], react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(children, {
        in: true
      }));
    })
  }), react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(children, {
    in: true
  })];
}, _enterRenders);
/**
 * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).
 * You can use it when you want to control the render between state transitions.
 * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.
 *
 * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.
 * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.
 *
 * **Note**: If you want the animation to happen simultaneously
 * (that is, to have the old child removed and a new child inserted **at the same time**),
 * you should use
 * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)
 * instead.
 *
 * ```jsx
 * function App() {
 *  const [state, setState] = useState(false);
 *  return (
 *    <SwitchTransition>
 *      <CSSTransition
 *        key={state ? "Goodbye, world!" : "Hello, world!"}
 *        addEndListener={(node, done) => node.addEventListener("transitionend", done, false)}
 *        classNames='fade'
 *      >
 *        <button onClick={() => setState(state => !state)}>
 *          {state ? "Goodbye, world!" : "Hello, world!"}
 *        </button>
 *      </CSSTransition>
 *    </SwitchTransition>
 *  );
 * }
 * ```
 *
 * ```css
 * .fade-enter{
 *    opacity: 0;
 * }
 * .fade-exit{
 *    opacity: 1;
 * }
 * .fade-enter-active{
 *    opacity: 1;
 * }
 * .fade-exit-active{
 *    opacity: 0;
 * }
 * .fade-enter-active,
 * .fade-exit-active{
 *    transition: opacity 500ms;
 * }
 * ```
 */

var SwitchTransition = /*#__PURE__*/function (_React$Component) {
  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(SwitchTransition, _React$Component);

  function SwitchTransition() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      status: _Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERED"],
      current: null
    };
    _this.appeared = false;

    _this.changeState = function (status, current) {
      if (current === void 0) {
        current = _this.state.current;
      }

      _this.setState({
        status: status,
        current: current
      });
    };

    return _this;
  }

  var _proto = SwitchTransition.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
  };

  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (props.children == null) {
      return {
        current: null
      };
    }

    if (state.status === _Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERING"] && props.mode === modes.in) {
      return {
        status: _Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERING"]
      };
    }

    if (state.current && areChildrenDifferent(state.current, props.children)) {
      return {
        status: _Transition__WEBPACK_IMPORTED_MODULE_3__["EXITING"]
      };
    }

    return {
      current: react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(props.children, {
        in: true
      })
    };
  };

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        mode = _this$props.mode,
        _this$state = this.state,
        status = _this$state.status,
        current = _this$state.current;
    var data = {
      children: children,
      current: current,
      changeState: this.changeState,
      status: status
    };
    var component;

    switch (status) {
      case _Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERING"]:
        component = enterRenders[mode](data);
        break;

      case _Transition__WEBPACK_IMPORTED_MODULE_3__["EXITING"]:
        component = leaveRenders[mode](data);
        break;

      case _Transition__WEBPACK_IMPORTED_MODULE_3__["ENTERED"]:
        component = current;
    }

    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_TransitionGroupContext__WEBPACK_IMPORTED_MODULE_4__["default"].Provider, {
      value: {
        isMounting: !this.appeared
      }
    }, component);
  };

  return SwitchTransition;
}(react__WEBPACK_IMPORTED_MODULE_1___default.a.Component);

SwitchTransition.propTypes =  true ? {
  /**
   * Transition modes.
   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.
   * `in-out`: New element transitions in first, then when complete, the current element transitions out.
   *
   * @type {'out-in'|'in-out'}
   */
  mode: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOf([modes.in, modes.out]),

  /**
   * Any `Transition` or `CSSTransition` component.
   */
  children: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.element.isRequired])
} : undefined;
SwitchTransition.defaultProps = {
  mode: modes.out
};
/* harmony default export */ __webpack_exports__["default"] = (SwitchTransition);

/***/ }),

/***/ "./node_modules/react-transition-group/esm/Transition.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/Transition.js ***!
  \***************************************************************/
/*! exports provided: UNMOUNTED, EXITED, ENTERING, ENTERED, EXITING, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UNMOUNTED", function() { return UNMOUNTED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EXITED", function() { return EXITED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ENTERING", function() { return ENTERING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ENTERED", function() { return ENTERED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EXITING", function() { return EXITING; });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./config */ "./node_modules/react-transition-group/esm/config.js");
/* harmony import */ var _utils_PropTypes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/PropTypes */ "./node_modules/react-transition-group/esm/utils/PropTypes.js");
/* harmony import */ var _TransitionGroupContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./TransitionGroupContext */ "./node_modules/react-transition-group/esm/TransitionGroupContext.js");








var UNMOUNTED = 'unmounted';
var EXITED = 'exited';
var ENTERING = 'entering';
var ENTERED = 'entered';
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

var Transition = /*#__PURE__*/function (_React$Component) {
  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(Transition, _React$Component);

  function Transition(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }

  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;

    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }

    return null;
  } // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }
  ;

  var _proto = Transition.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;

    if (prevProps !== this.props) {
      var status = this.state.status;

      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }

    this.updateStatus(false, nextStatus);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter; // TODO: remove fallback for next major

      appear = timeout.appear !== undefined ? timeout.appear : enter;
    }

    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };

  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }

    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();

      if (nextStatus === ENTERING) {
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };

  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;

    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;

    var _ref2 = this.props.nodeRef ? [appearing] : [react_dom__WEBPACK_IMPORTED_MODULE_4___default.a.findDOMNode(this), appearing],
        maybeNode = _ref2[0],
        maybeAppearing = _ref2[1];

    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter || _config__WEBPACK_IMPORTED_MODULE_5__["default"].disabled) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }

    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(maybeNode, maybeAppearing);

      _this2.onTransitionEnd(enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };

  _proto.performExit = function performExit() {
    var _this3 = this;

    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? undefined : react_dom__WEBPACK_IMPORTED_MODULE_4___default.a.findDOMNode(this); // no exit animation skip right to EXITED

    if (!exit || _config__WEBPACK_IMPORTED_MODULE_5__["default"].disabled) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(maybeNode);
      });
      return;
    }

    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(maybeNode);

      _this3.onTransitionEnd(timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };

  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };

  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
    this.setNextCallback(handler);
    var node = this.props.nodeRef ? this.props.nodeRef.current : react_dom__WEBPACK_IMPORTED_MODULE_4___default.a.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;

    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }

    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],
          maybeNode = _ref3[0],
          maybeNextCallback = _ref3[1];

      this.props.addEndListener(maybeNode, maybeNextCallback);
    }

    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };

  _proto.render = function render() {
    var status = this.state.status;

    if (status === UNMOUNTED) {
      return null;
    }

    var _this$props = this.props,
        children = _this$props.children,
        _in = _this$props.in,
        _mountOnEnter = _this$props.mountOnEnter,
        _unmountOnExit = _this$props.unmountOnExit,
        _appear = _this$props.appear,
        _enter = _this$props.enter,
        _exit = _this$props.exit,
        _timeout = _this$props.timeout,
        _addEndListener = _this$props.addEndListener,
        _onEnter = _this$props.onEnter,
        _onEntering = _this$props.onEntering,
        _onEntered = _this$props.onEntered,
        _onExit = _this$props.onExit,
        _onExiting = _this$props.onExiting,
        _onExited = _this$props.onExited,
        _nodeRef = _this$props.nodeRef,
        childProps = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);

    return (
      /*#__PURE__*/
      // allows for nested Transitions
      react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_TransitionGroupContext__WEBPACK_IMPORTED_MODULE_7__["default"].Provider, {
        value: null
      }, typeof children === 'function' ? children(status, childProps) : react__WEBPACK_IMPORTED_MODULE_3___default.a.cloneElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Children.only(children), childProps))
    );
  };

  return Transition;
}(react__WEBPACK_IMPORTED_MODULE_3___default.a.Component);

Transition.contextType = _TransitionGroupContext__WEBPACK_IMPORTED_MODULE_7__["default"];
Transition.propTypes =  true ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.shape({
    current: typeof Element === 'undefined' ? prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.any : function (propValue, key, componentName, location, propFullName, secret) {
      var value = propValue[key];
      return prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
    }
  }),

  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func.isRequired, prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.element.isRequired]).isRequired,

  /**
   * Show the component; triggers the enter or exit states
   */
  in: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,

  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,

  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,

  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,

  /**
   * Enable or disable enter transitions.
   */
  enter: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,

  /**
   * Enable or disable exit transitions.
   */
  exit: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,

  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = _utils_PropTypes__WEBPACK_IMPORTED_MODULE_6__["timeoutsShape"];
    if (!props.addEndListener) pt = pt.isRequired;

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return pt.apply(void 0, [props].concat(args));
  },

  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,

  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,

  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,

  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,

  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,

  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,

  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func
} : undefined; // Name the function so it is clearer in the documentation

function noop() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
/* harmony default export */ __webpack_exports__["default"] = (Transition);

/***/ }),

/***/ "./node_modules/react-transition-group/esm/TransitionGroup.js":
/*!********************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/TransitionGroup.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _TransitionGroupContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TransitionGroupContext */ "./node_modules/react-transition-group/esm/TransitionGroupContext.js");
/* harmony import */ var _utils_ChildMapping__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/ChildMapping */ "./node_modules/react-transition-group/esm/utils/ChildMapping.js");









var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};

var defaultProps = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
};
/**
 * The `<TransitionGroup>` component manages a set of transition components
 * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
 * components, `<TransitionGroup>` is a state machine for managing the mounting
 * and unmounting of components over time.
 *
 * Consider the example below. As items are removed or added to the TodoList the
 * `in` prop is toggled automatically by the `<TransitionGroup>`.
 *
 * Note that `<TransitionGroup>`  does not define any animation behavior!
 * Exactly _how_ a list item animates is up to the individual transition
 * component. This means you can mix and match animations across different list
 * items.
 */

var TransitionGroup = /*#__PURE__*/function (_React$Component) {
  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__["default"])(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;

    var handleExited = _this.handleExited.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this)); // Initial children should all be entering, dependent on appear


    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited: handleExited,
      firstRender: true
    };
    return _this;
  }

  var _proto = TransitionGroup.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };

  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children,
        handleExited = _ref.handleExited,
        firstRender = _ref.firstRender;
    return {
      children: firstRender ? Object(_utils_ChildMapping__WEBPACK_IMPORTED_MODULE_7__["getInitialChildMapping"])(nextProps, handleExited) : Object(_utils_ChildMapping__WEBPACK_IMPORTED_MODULE_7__["getNextChildMapping"])(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  } // node is `undefined` when user provided `nodeRef` prop
  ;

  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = Object(_utils_ChildMapping__WEBPACK_IMPORTED_MODULE_7__["getChildMapping"])(this.props.children);
    if (child.key in currentChildMapping) return;

    if (child.props.onExited) {
      child.props.onExited(node);
    }

    if (this.mounted) {
      this.setState(function (state) {
        var children = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, state.children);

        delete children[child.key];
        return {
          children: children
        };
      });
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        Component = _this$props.component,
        childFactory = _this$props.childFactory,
        props = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, ["component", "childFactory"]);

    var contextValue = this.state.contextValue;
    var children = values(this.state.children).map(childFactory);
    delete props.appear;
    delete props.enter;
    delete props.exit;

    if (Component === null) {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_TransitionGroupContext__WEBPACK_IMPORTED_MODULE_6__["default"].Provider, {
        value: contextValue
      }, children);
    }

    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_TransitionGroupContext__WEBPACK_IMPORTED_MODULE_6__["default"].Provider, {
      value: contextValue
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(Component, props, children));
  };

  return TransitionGroup;
}(react__WEBPACK_IMPORTED_MODULE_5___default.a.Component);

TransitionGroup.propTypes =  true ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.any,

  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.node,

  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.bool,

  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.bool,

  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.bool,

  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.func
} : undefined;
TransitionGroup.defaultProps = defaultProps;
/* harmony default export */ __webpack_exports__["default"] = (TransitionGroup);

/***/ }),

/***/ "./node_modules/react-transition-group/esm/TransitionGroupContext.js":
/*!***************************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/TransitionGroupContext.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ __webpack_exports__["default"] = (react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext(null));

/***/ }),

/***/ "./node_modules/react-transition-group/esm/config.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-transition-group/esm/config.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  disabled: false
});

/***/ }),

/***/ "./node_modules/react-transition-group/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-transition-group/esm/index.js ***!
  \**********************************************************/
/*! exports provided: CSSTransition, ReplaceTransition, SwitchTransition, TransitionGroup, Transition, config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _CSSTransition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CSSTransition */ "./node_modules/react-transition-group/esm/CSSTransition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CSSTransition", function() { return _CSSTransition__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _ReplaceTransition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ReplaceTransition */ "./node_modules/react-transition-group/esm/ReplaceTransition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReplaceTransition", function() { return _ReplaceTransition__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _SwitchTransition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SwitchTransition */ "./node_modules/react-transition-group/esm/SwitchTransition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SwitchTransition", function() { return _SwitchTransition__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _TransitionGroup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TransitionGroup */ "./node_modules/react-transition-group/esm/TransitionGroup.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TransitionGroup", function() { return _TransitionGroup__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _Transition__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Transition */ "./node_modules/react-transition-group/esm/Transition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Transition", function() { return _Transition__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./config */ "./node_modules/react-transition-group/esm/config.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "config", function() { return _config__WEBPACK_IMPORTED_MODULE_5__["default"]; });








/***/ }),

/***/ "./node_modules/react-transition-group/esm/utils/ChildMapping.js":
/*!***********************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/utils/ChildMapping.js ***!
  \***********************************************************************/
/*! exports provided: getChildMapping, mergeChildMappings, getInitialChildMapping, getNextChildMapping */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getChildMapping", function() { return getChildMapping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeChildMappings", function() { return mergeChildMappings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getInitialChildMapping", function() { return getInitialChildMapping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNextChildMapping", function() { return getNextChildMapping; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */

function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && Object(react__WEBPACK_IMPORTED_MODULE_0__["isValidElement"])(child) ? mapFn(child) : child;
  };

  var result = Object.create(null);
  if (children) react__WEBPACK_IMPORTED_MODULE_0__["Children"].map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */

function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  } // For each key of `next`, the list of keys to insert before that key in
  // the combined list


  var nextKeysPending = Object.create(null);
  var pendingKeys = [];

  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i;
  var childMapping = {};

  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }

    childMapping[nextKey] = getValueForKey(nextKey);
  } // Finally, add the keys which didn't appear before any key in `next`


  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}

function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}

function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function (child) {
    return Object(react__WEBPACK_IMPORTED_MODULE_0__["cloneElement"])(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, 'appear', props),
      enter: getProp(child, 'enter', props),
      exit: getProp(child, 'exit', props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function (key) {
    var child = children[key];
    if (!Object(react__WEBPACK_IMPORTED_MODULE_0__["isValidElement"])(child)) return;
    var hasPrev = (key in prevChildMapping);
    var hasNext = (key in nextChildMapping);
    var prevChild = prevChildMapping[key];
    var isLeaving = Object(react__WEBPACK_IMPORTED_MODULE_0__["isValidElement"])(prevChild) && !prevChild.props.in; // item is new (entering)

    if (hasNext && (!hasPrev || isLeaving)) {
      // console.log('entering', key)
      children[key] = Object(react__WEBPACK_IMPORTED_MODULE_0__["cloneElement"])(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      // item is old (exiting)
      // console.log('leaving', key)
      children[key] = Object(react__WEBPACK_IMPORTED_MODULE_0__["cloneElement"])(child, {
        in: false
      });
    } else if (hasNext && hasPrev && Object(react__WEBPACK_IMPORTED_MODULE_0__["isValidElement"])(prevChild)) {
      // item hasn't changed transition states
      // copy over the last transition props;
      // console.log('unchanged', key)
      children[key] = Object(react__WEBPACK_IMPORTED_MODULE_0__["cloneElement"])(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    }
  });
  return children;
}

/***/ }),

/***/ "./node_modules/react-transition-group/esm/utils/PropTypes.js":
/*!********************************************************************!*\
  !*** ./node_modules/react-transition-group/esm/utils/PropTypes.js ***!
  \********************************************************************/
/*! exports provided: timeoutsShape, classNamesShape */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeoutsShape", function() { return timeoutsShape; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "classNamesShape", function() { return classNamesShape; });
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);

var timeoutsShape =  true ? prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.shape({
  enter: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.number,
  exit: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.number,
  appear: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.number
}).isRequired]) : undefined;
var classNamesShape =  true ? prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.shape({
  enter: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  exit: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  active: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string
}), prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.shape({
  enter: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  enterDone: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  enterActive: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  exit: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  exitDone: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  exitActive: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string
})]) : undefined;

/***/ }),

/***/ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js ***!
  \**************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _assertThisInitialized; });
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

/***/ }),

/***/ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _extends; });
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),

/***/ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js ***!
  \******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _inheritsLoose; });
/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPrototypeOf.js */ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js");

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  Object(_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(subClass, superClass);
}

/***/ }),

/***/ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \*********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _objectWithoutPropertiesLoose; });
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/***/ }),

/***/ "./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \*******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _setPrototypeOf; });
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*******************************************************************************************!*\
  !*** delegated ./node_modules/react/index.js from dll-reference dll_2adc2403d89adc16ead0 ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ "dll-reference dll_2adc2403d89adc16ead0"))("./node_modules/react/index.js");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : undefined
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}


/***/ }),

/***/ "./node_modules/rxjs/_esm5/index.js":
/*!******************************************!*\
  !*** ./node_modules/rxjs/_esm5/index.js ***!
  \******************************************/
/*! exports provided: Observable, ConnectableObservable, GroupedObservable, observable, Subject, BehaviorSubject, ReplaySubject, AsyncSubject, asap, asapScheduler, async, asyncScheduler, queue, queueScheduler, animationFrame, animationFrameScheduler, VirtualTimeScheduler, VirtualAction, Scheduler, Subscription, Subscriber, Notification, NotificationKind, pipe, noop, identity, isObservable, ArgumentOutOfRangeError, EmptyError, ObjectUnsubscribedError, UnsubscriptionError, TimeoutError, bindCallback, bindNodeCallback, combineLatest, concat, defer, empty, forkJoin, from, fromEvent, fromEventPattern, generate, iif, interval, merge, never, of, onErrorResumeNext, pairs, partition, race, range, throwError, timer, using, zip, scheduled, EMPTY, NEVER, config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Observable", function() { return _internal_Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"]; });

/* harmony import */ var _internal_observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/observable/ConnectableObservable */ "./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectableObservable", function() { return _internal_observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_1__["ConnectableObservable"]; });

/* harmony import */ var _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/operators/groupBy */ "./node_modules/rxjs/_esm5/internal/operators/groupBy.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GroupedObservable", function() { return _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_2__["GroupedObservable"]; });

/* harmony import */ var _internal_symbol_observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "observable", function() { return _internal_symbol_observable__WEBPACK_IMPORTED_MODULE_3__["observable"]; });

/* harmony import */ var _internal_Subject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subject", function() { return _internal_Subject__WEBPACK_IMPORTED_MODULE_4__["Subject"]; });

/* harmony import */ var _internal_BehaviorSubject__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./internal/BehaviorSubject */ "./node_modules/rxjs/_esm5/internal/BehaviorSubject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BehaviorSubject", function() { return _internal_BehaviorSubject__WEBPACK_IMPORTED_MODULE_5__["BehaviorSubject"]; });

/* harmony import */ var _internal_ReplaySubject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./internal/ReplaySubject */ "./node_modules/rxjs/_esm5/internal/ReplaySubject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReplaySubject", function() { return _internal_ReplaySubject__WEBPACK_IMPORTED_MODULE_6__["ReplaySubject"]; });

/* harmony import */ var _internal_AsyncSubject__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./internal/AsyncSubject */ "./node_modules/rxjs/_esm5/internal/AsyncSubject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AsyncSubject", function() { return _internal_AsyncSubject__WEBPACK_IMPORTED_MODULE_7__["AsyncSubject"]; });

/* harmony import */ var _internal_scheduler_asap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./internal/scheduler/asap */ "./node_modules/rxjs/_esm5/internal/scheduler/asap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asap", function() { return _internal_scheduler_asap__WEBPACK_IMPORTED_MODULE_8__["asap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asapScheduler", function() { return _internal_scheduler_asap__WEBPACK_IMPORTED_MODULE_8__["asapScheduler"]; });

/* harmony import */ var _internal_scheduler_async__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./internal/scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "async", function() { return _internal_scheduler_async__WEBPACK_IMPORTED_MODULE_9__["async"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asyncScheduler", function() { return _internal_scheduler_async__WEBPACK_IMPORTED_MODULE_9__["asyncScheduler"]; });

/* harmony import */ var _internal_scheduler_queue__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./internal/scheduler/queue */ "./node_modules/rxjs/_esm5/internal/scheduler/queue.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "queue", function() { return _internal_scheduler_queue__WEBPACK_IMPORTED_MODULE_10__["queue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "queueScheduler", function() { return _internal_scheduler_queue__WEBPACK_IMPORTED_MODULE_10__["queueScheduler"]; });

/* harmony import */ var _internal_scheduler_animationFrame__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./internal/scheduler/animationFrame */ "./node_modules/rxjs/_esm5/internal/scheduler/animationFrame.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "animationFrame", function() { return _internal_scheduler_animationFrame__WEBPACK_IMPORTED_MODULE_11__["animationFrame"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "animationFrameScheduler", function() { return _internal_scheduler_animationFrame__WEBPACK_IMPORTED_MODULE_11__["animationFrameScheduler"]; });

/* harmony import */ var _internal_scheduler_VirtualTimeScheduler__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./internal/scheduler/VirtualTimeScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/VirtualTimeScheduler.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VirtualTimeScheduler", function() { return _internal_scheduler_VirtualTimeScheduler__WEBPACK_IMPORTED_MODULE_12__["VirtualTimeScheduler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VirtualAction", function() { return _internal_scheduler_VirtualTimeScheduler__WEBPACK_IMPORTED_MODULE_12__["VirtualAction"]; });

/* harmony import */ var _internal_Scheduler__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./internal/Scheduler */ "./node_modules/rxjs/_esm5/internal/Scheduler.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Scheduler", function() { return _internal_Scheduler__WEBPACK_IMPORTED_MODULE_13__["Scheduler"]; });

/* harmony import */ var _internal_Subscription__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./internal/Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subscription", function() { return _internal_Subscription__WEBPACK_IMPORTED_MODULE_14__["Subscription"]; });

/* harmony import */ var _internal_Subscriber__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./internal/Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subscriber", function() { return _internal_Subscriber__WEBPACK_IMPORTED_MODULE_15__["Subscriber"]; });

/* harmony import */ var _internal_Notification__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./internal/Notification */ "./node_modules/rxjs/_esm5/internal/Notification.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Notification", function() { return _internal_Notification__WEBPACK_IMPORTED_MODULE_16__["Notification"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NotificationKind", function() { return _internal_Notification__WEBPACK_IMPORTED_MODULE_16__["NotificationKind"]; });

/* harmony import */ var _internal_util_pipe__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./internal/util/pipe */ "./node_modules/rxjs/_esm5/internal/util/pipe.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pipe", function() { return _internal_util_pipe__WEBPACK_IMPORTED_MODULE_17__["pipe"]; });

/* harmony import */ var _internal_util_noop__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./internal/util/noop */ "./node_modules/rxjs/_esm5/internal/util/noop.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return _internal_util_noop__WEBPACK_IMPORTED_MODULE_18__["noop"]; });

/* harmony import */ var _internal_util_identity__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./internal/util/identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return _internal_util_identity__WEBPACK_IMPORTED_MODULE_19__["identity"]; });

/* harmony import */ var _internal_util_isObservable__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./internal/util/isObservable */ "./node_modules/rxjs/_esm5/internal/util/isObservable.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObservable", function() { return _internal_util_isObservable__WEBPACK_IMPORTED_MODULE_20__["isObservable"]; });

/* harmony import */ var _internal_util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./internal/util/ArgumentOutOfRangeError */ "./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArgumentOutOfRangeError", function() { return _internal_util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_21__["ArgumentOutOfRangeError"]; });

/* harmony import */ var _internal_util_EmptyError__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./internal/util/EmptyError */ "./node_modules/rxjs/_esm5/internal/util/EmptyError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmptyError", function() { return _internal_util_EmptyError__WEBPACK_IMPORTED_MODULE_22__["EmptyError"]; });

/* harmony import */ var _internal_util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./internal/util/ObjectUnsubscribedError */ "./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectUnsubscribedError", function() { return _internal_util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_23__["ObjectUnsubscribedError"]; });

/* harmony import */ var _internal_util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./internal/util/UnsubscriptionError */ "./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UnsubscriptionError", function() { return _internal_util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_24__["UnsubscriptionError"]; });

/* harmony import */ var _internal_util_TimeoutError__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./internal/util/TimeoutError */ "./node_modules/rxjs/_esm5/internal/util/TimeoutError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TimeoutError", function() { return _internal_util_TimeoutError__WEBPACK_IMPORTED_MODULE_25__["TimeoutError"]; });

/* harmony import */ var _internal_observable_bindCallback__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./internal/observable/bindCallback */ "./node_modules/rxjs/_esm5/internal/observable/bindCallback.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bindCallback", function() { return _internal_observable_bindCallback__WEBPACK_IMPORTED_MODULE_26__["bindCallback"]; });

/* harmony import */ var _internal_observable_bindNodeCallback__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./internal/observable/bindNodeCallback */ "./node_modules/rxjs/_esm5/internal/observable/bindNodeCallback.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bindNodeCallback", function() { return _internal_observable_bindNodeCallback__WEBPACK_IMPORTED_MODULE_27__["bindNodeCallback"]; });

/* harmony import */ var _internal_observable_combineLatest__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./internal/observable/combineLatest */ "./node_modules/rxjs/_esm5/internal/observable/combineLatest.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return _internal_observable_combineLatest__WEBPACK_IMPORTED_MODULE_28__["combineLatest"]; });

/* harmony import */ var _internal_observable_concat__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./internal/observable/concat */ "./node_modules/rxjs/_esm5/internal/observable/concat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return _internal_observable_concat__WEBPACK_IMPORTED_MODULE_29__["concat"]; });

/* harmony import */ var _internal_observable_defer__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./internal/observable/defer */ "./node_modules/rxjs/_esm5/internal/observable/defer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return _internal_observable_defer__WEBPACK_IMPORTED_MODULE_30__["defer"]; });

/* harmony import */ var _internal_observable_empty__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./internal/observable/empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return _internal_observable_empty__WEBPACK_IMPORTED_MODULE_31__["empty"]; });

/* harmony import */ var _internal_observable_forkJoin__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./internal/observable/forkJoin */ "./node_modules/rxjs/_esm5/internal/observable/forkJoin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forkJoin", function() { return _internal_observable_forkJoin__WEBPACK_IMPORTED_MODULE_32__["forkJoin"]; });

/* harmony import */ var _internal_observable_from__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./internal/observable/from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "from", function() { return _internal_observable_from__WEBPACK_IMPORTED_MODULE_33__["from"]; });

/* harmony import */ var _internal_observable_fromEvent__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./internal/observable/fromEvent */ "./node_modules/rxjs/_esm5/internal/observable/fromEvent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromEvent", function() { return _internal_observable_fromEvent__WEBPACK_IMPORTED_MODULE_34__["fromEvent"]; });

/* harmony import */ var _internal_observable_fromEventPattern__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./internal/observable/fromEventPattern */ "./node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromEventPattern", function() { return _internal_observable_fromEventPattern__WEBPACK_IMPORTED_MODULE_35__["fromEventPattern"]; });

/* harmony import */ var _internal_observable_generate__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./internal/observable/generate */ "./node_modules/rxjs/_esm5/internal/observable/generate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "generate", function() { return _internal_observable_generate__WEBPACK_IMPORTED_MODULE_36__["generate"]; });

/* harmony import */ var _internal_observable_iif__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./internal/observable/iif */ "./node_modules/rxjs/_esm5/internal/observable/iif.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "iif", function() { return _internal_observable_iif__WEBPACK_IMPORTED_MODULE_37__["iif"]; });

/* harmony import */ var _internal_observable_interval__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./internal/observable/interval */ "./node_modules/rxjs/_esm5/internal/observable/interval.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interval", function() { return _internal_observable_interval__WEBPACK_IMPORTED_MODULE_38__["interval"]; });

/* harmony import */ var _internal_observable_merge__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./internal/observable/merge */ "./node_modules/rxjs/_esm5/internal/observable/merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _internal_observable_merge__WEBPACK_IMPORTED_MODULE_39__["merge"]; });

/* harmony import */ var _internal_observable_never__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./internal/observable/never */ "./node_modules/rxjs/_esm5/internal/observable/never.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "never", function() { return _internal_observable_never__WEBPACK_IMPORTED_MODULE_40__["never"]; });

/* harmony import */ var _internal_observable_of__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./internal/observable/of */ "./node_modules/rxjs/_esm5/internal/observable/of.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "of", function() { return _internal_observable_of__WEBPACK_IMPORTED_MODULE_41__["of"]; });

/* harmony import */ var _internal_observable_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./internal/observable/onErrorResumeNext */ "./node_modules/rxjs/_esm5/internal/observable/onErrorResumeNext.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return _internal_observable_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_42__["onErrorResumeNext"]; });

/* harmony import */ var _internal_observable_pairs__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./internal/observable/pairs */ "./node_modules/rxjs/_esm5/internal/observable/pairs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return _internal_observable_pairs__WEBPACK_IMPORTED_MODULE_43__["pairs"]; });

/* harmony import */ var _internal_observable_partition__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./internal/observable/partition */ "./node_modules/rxjs/_esm5/internal/observable/partition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return _internal_observable_partition__WEBPACK_IMPORTED_MODULE_44__["partition"]; });

/* harmony import */ var _internal_observable_race__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./internal/observable/race */ "./node_modules/rxjs/_esm5/internal/observable/race.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "race", function() { return _internal_observable_race__WEBPACK_IMPORTED_MODULE_45__["race"]; });

/* harmony import */ var _internal_observable_range__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./internal/observable/range */ "./node_modules/rxjs/_esm5/internal/observable/range.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _internal_observable_range__WEBPACK_IMPORTED_MODULE_46__["range"]; });

/* harmony import */ var _internal_observable_throwError__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./internal/observable/throwError */ "./node_modules/rxjs/_esm5/internal/observable/throwError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return _internal_observable_throwError__WEBPACK_IMPORTED_MODULE_47__["throwError"]; });

/* harmony import */ var _internal_observable_timer__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./internal/observable/timer */ "./node_modules/rxjs/_esm5/internal/observable/timer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return _internal_observable_timer__WEBPACK_IMPORTED_MODULE_48__["timer"]; });

/* harmony import */ var _internal_observable_using__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./internal/observable/using */ "./node_modules/rxjs/_esm5/internal/observable/using.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "using", function() { return _internal_observable_using__WEBPACK_IMPORTED_MODULE_49__["using"]; });

/* harmony import */ var _internal_observable_zip__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./internal/observable/zip */ "./node_modules/rxjs/_esm5/internal/observable/zip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _internal_observable_zip__WEBPACK_IMPORTED_MODULE_50__["zip"]; });

/* harmony import */ var _internal_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./internal/scheduled/scheduled */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scheduled", function() { return _internal_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_51__["scheduled"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EMPTY", function() { return _internal_observable_empty__WEBPACK_IMPORTED_MODULE_31__["EMPTY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NEVER", function() { return _internal_observable_never__WEBPACK_IMPORTED_MODULE_40__["NEVER"]; });

/* harmony import */ var _internal_config__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./internal/config */ "./node_modules/rxjs/_esm5/internal/config.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "config", function() { return _internal_config__WEBPACK_IMPORTED_MODULE_52__["config"]; });

/** PURE_IMPORTS_START  PURE_IMPORTS_END */























































//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/AsyncSubject.js":
/*!**********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/AsyncSubject.js ***!
  \**********************************************************/
/*! exports provided: AsyncSubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncSubject", function() { return AsyncSubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */



var AsyncSubject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsyncSubject, _super);
    function AsyncSubject() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.value = null;
        _this.hasNext = false;
        _this.hasCompleted = false;
        return _this;
    }
    AsyncSubject.prototype._subscribe = function (subscriber) {
        if (this.hasError) {
            subscriber.error(this.thrownError);
            return _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"].EMPTY;
        }
        else if (this.hasCompleted && this.hasNext) {
            subscriber.next(this.value);
            subscriber.complete();
            return _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"].EMPTY;
        }
        return _super.prototype._subscribe.call(this, subscriber);
    };
    AsyncSubject.prototype.next = function (value) {
        if (!this.hasCompleted) {
            this.value = value;
            this.hasNext = true;
        }
    };
    AsyncSubject.prototype.error = function (error) {
        if (!this.hasCompleted) {
            _super.prototype.error.call(this, error);
        }
    };
    AsyncSubject.prototype.complete = function () {
        this.hasCompleted = true;
        if (this.hasNext) {
            _super.prototype.next.call(this, this.value);
        }
        _super.prototype.complete.call(this);
    };
    return AsyncSubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]));

//# sourceMappingURL=AsyncSubject.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/BehaviorSubject.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/BehaviorSubject.js ***!
  \*************************************************************/
/*! exports provided: BehaviorSubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BehaviorSubject", function() { return BehaviorSubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ "./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js");
/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */



var BehaviorSubject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BehaviorSubject, _super);
    function BehaviorSubject(_value) {
        var _this = _super.call(this) || this;
        _this._value = _value;
        return _this;
    }
    Object.defineProperty(BehaviorSubject.prototype, "value", {
        get: function () {
            return this.getValue();
        },
        enumerable: true,
        configurable: true
    });
    BehaviorSubject.prototype._subscribe = function (subscriber) {
        var subscription = _super.prototype._subscribe.call(this, subscriber);
        if (subscription && !subscription.closed) {
            subscriber.next(this._value);
        }
        return subscription;
    };
    BehaviorSubject.prototype.getValue = function () {
        if (this.hasError) {
            throw this.thrownError;
        }
        else if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_2__["ObjectUnsubscribedError"]();
        }
        else {
            return this._value;
        }
    };
    BehaviorSubject.prototype.next = function (value) {
        _super.prototype.next.call(this, this._value = value);
    };
    return BehaviorSubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]));

//# sourceMappingURL=BehaviorSubject.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/InnerSubscriber.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/InnerSubscriber.js ***!
  \*************************************************************/
/*! exports provided: InnerSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InnerSubscriber", function() { return InnerSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


var InnerSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](InnerSubscriber, _super);
    function InnerSubscriber(parent, outerValue, outerIndex) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        _this.outerValue = outerValue;
        _this.outerIndex = outerIndex;
        _this.index = 0;
        return _this;
    }
    InnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
    };
    InnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error, this);
        this.unsubscribe();
    };
    InnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete(this);
        this.unsubscribe();
    };
    return InnerSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

//# sourceMappingURL=InnerSubscriber.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Notification.js":
/*!**********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Notification.js ***!
  \**********************************************************/
/*! exports provided: NotificationKind, Notification */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationKind", function() { return NotificationKind; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Notification", function() { return Notification; });
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./observable/empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/* harmony import */ var _observable_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./observable/of */ "./node_modules/rxjs/_esm5/internal/observable/of.js");
/* harmony import */ var _observable_throwError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./observable/throwError */ "./node_modules/rxjs/_esm5/internal/observable/throwError.js");
/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */



var NotificationKind;
/*@__PURE__*/ (function (NotificationKind) {
    NotificationKind["NEXT"] = "N";
    NotificationKind["ERROR"] = "E";
    NotificationKind["COMPLETE"] = "C";
})(NotificationKind || (NotificationKind = {}));
var Notification = /*@__PURE__*/ (function () {
    function Notification(kind, value, error) {
        this.kind = kind;
        this.value = value;
        this.error = error;
        this.hasValue = kind === 'N';
    }
    Notification.prototype.observe = function (observer) {
        switch (this.kind) {
            case 'N':
                return observer.next && observer.next(this.value);
            case 'E':
                return observer.error && observer.error(this.error);
            case 'C':
                return observer.complete && observer.complete();
        }
    };
    Notification.prototype.do = function (next, error, complete) {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return next && next(this.value);
            case 'E':
                return error && error(this.error);
            case 'C':
                return complete && complete();
        }
    };
    Notification.prototype.accept = function (nextOrObserver, error, complete) {
        if (nextOrObserver && typeof nextOrObserver.next === 'function') {
            return this.observe(nextOrObserver);
        }
        else {
            return this.do(nextOrObserver, error, complete);
        }
    };
    Notification.prototype.toObservable = function () {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return Object(_observable_of__WEBPACK_IMPORTED_MODULE_1__["of"])(this.value);
            case 'E':
                return Object(_observable_throwError__WEBPACK_IMPORTED_MODULE_2__["throwError"])(this.error);
            case 'C':
                return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_0__["empty"])();
        }
        throw new Error('unexpected notification kind value');
    };
    Notification.createNext = function (value) {
        if (typeof value !== 'undefined') {
            return new Notification('N', value);
        }
        return Notification.undefinedValueNotification;
    };
    Notification.createError = function (err) {
        return new Notification('E', undefined, err);
    };
    Notification.createComplete = function () {
        return Notification.completeNotification;
    };
    Notification.completeNotification = new Notification('C');
    Notification.undefinedValueNotification = new Notification('N', undefined);
    return Notification;
}());

//# sourceMappingURL=Notification.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Observable.js":
/*!********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Observable.js ***!
  \********************************************************/
/*! exports provided: Observable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Observable", function() { return Observable; });
/* harmony import */ var _util_canReportError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/canReportError */ "./node_modules/rxjs/_esm5/internal/util/canReportError.js");
/* harmony import */ var _util_toSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/toSubscriber */ "./node_modules/rxjs/_esm5/internal/util/toSubscriber.js");
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/* harmony import */ var _util_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/pipe */ "./node_modules/rxjs/_esm5/internal/util/pipe.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config */ "./node_modules/rxjs/_esm5/internal/config.js");
/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */





var Observable = /*@__PURE__*/ (function () {
    function Observable(subscribe) {
        this._isScalar = false;
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    Observable.prototype.lift = function (operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
    };
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var operator = this.operator;
        var sink = Object(_util_toSubscriber__WEBPACK_IMPORTED_MODULE_1__["toSubscriber"])(observerOrNext, error, complete);
        if (operator) {
            sink.add(operator.call(sink, this.source));
        }
        else {
            sink.add(this.source || (_config__WEBPACK_IMPORTED_MODULE_4__["config"].useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?
                this._subscribe(sink) :
                this._trySubscribe(sink));
        }
        if (_config__WEBPACK_IMPORTED_MODULE_4__["config"].useDeprecatedSynchronousErrorHandling) {
            if (sink.syncErrorThrowable) {
                sink.syncErrorThrowable = false;
                if (sink.syncErrorThrown) {
                    throw sink.syncErrorValue;
                }
            }
        }
        return sink;
    };
    Observable.prototype._trySubscribe = function (sink) {
        try {
            return this._subscribe(sink);
        }
        catch (err) {
            if (_config__WEBPACK_IMPORTED_MODULE_4__["config"].useDeprecatedSynchronousErrorHandling) {
                sink.syncErrorThrown = true;
                sink.syncErrorValue = err;
            }
            if (Object(_util_canReportError__WEBPACK_IMPORTED_MODULE_0__["canReportError"])(sink)) {
                sink.error(err);
            }
            else {
                console.warn(err);
            }
        }
    };
    Observable.prototype.forEach = function (next, promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var subscription;
            subscription = _this.subscribe(function (value) {
                try {
                    next(value);
                }
                catch (err) {
                    reject(err);
                    if (subscription) {
                        subscription.unsubscribe();
                    }
                }
            }, reject, resolve);
        });
    };
    Observable.prototype._subscribe = function (subscriber) {
        var source = this.source;
        return source && source.subscribe(subscriber);
    };
    Observable.prototype[_symbol_observable__WEBPACK_IMPORTED_MODULE_2__["observable"]] = function () {
        return this;
    };
    Observable.prototype.pipe = function () {
        var operations = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            operations[_i] = arguments[_i];
        }
        if (operations.length === 0) {
            return this;
        }
        return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_3__["pipeFromArray"])(operations)(this);
    };
    Observable.prototype.toPromise = function (promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var value;
            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });
        });
    };
    Observable.create = function (subscribe) {
        return new Observable(subscribe);
    };
    return Observable;
}());

function getPromiseCtor(promiseCtor) {
    if (!promiseCtor) {
        promiseCtor = _config__WEBPACK_IMPORTED_MODULE_4__["config"].Promise || Promise;
    }
    if (!promiseCtor) {
        throw new Error('no Promise impl found');
    }
    return promiseCtor;
}
//# sourceMappingURL=Observable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Observer.js":
/*!******************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Observer.js ***!
  \******************************************************/
/*! exports provided: empty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return empty; });
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ "./node_modules/rxjs/_esm5/internal/config.js");
/* harmony import */ var _util_hostReportError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/hostReportError */ "./node_modules/rxjs/_esm5/internal/util/hostReportError.js");
/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */


var empty = {
    closed: true,
    next: function (value) { },
    error: function (err) {
        if (_config__WEBPACK_IMPORTED_MODULE_0__["config"].useDeprecatedSynchronousErrorHandling) {
            throw err;
        }
        else {
            Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_1__["hostReportError"])(err);
        }
    },
    complete: function () { }
};
//# sourceMappingURL=Observer.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/OuterSubscriber.js ***!
  \*************************************************************/
/*! exports provided: OuterSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OuterSubscriber", function() { return OuterSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


var OuterSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](OuterSubscriber, _super);
    function OuterSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    OuterSubscriber.prototype.notifyError = function (error, innerSub) {
        this.destination.error(error);
    };
    OuterSubscriber.prototype.notifyComplete = function (innerSub) {
        this.destination.complete();
    };
    return OuterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

//# sourceMappingURL=OuterSubscriber.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/ReplaySubject.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/ReplaySubject.js ***!
  \***********************************************************/
/*! exports provided: ReplaySubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReplaySubject", function() { return ReplaySubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _scheduler_queue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scheduler/queue */ "./node_modules/rxjs/_esm5/internal/scheduler/queue.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _operators_observeOn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operators/observeOn */ "./node_modules/rxjs/_esm5/internal/operators/observeOn.js");
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ "./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js");
/* harmony import */ var _SubjectSubscription__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SubjectSubscription */ "./node_modules/rxjs/_esm5/internal/SubjectSubscription.js");
/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */







var ReplaySubject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ReplaySubject, _super);
    function ReplaySubject(bufferSize, windowTime, scheduler) {
        if (bufferSize === void 0) {
            bufferSize = Number.POSITIVE_INFINITY;
        }
        if (windowTime === void 0) {
            windowTime = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this) || this;
        _this.scheduler = scheduler;
        _this._events = [];
        _this._infiniteTimeWindow = false;
        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
        _this._windowTime = windowTime < 1 ? 1 : windowTime;
        if (windowTime === Number.POSITIVE_INFINITY) {
            _this._infiniteTimeWindow = true;
            _this.next = _this.nextInfiniteTimeWindow;
        }
        else {
            _this.next = _this.nextTimeWindow;
        }
        return _this;
    }
    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {
        if (!this.isStopped) {
            var _events = this._events;
            _events.push(value);
            if (_events.length > this._bufferSize) {
                _events.shift();
            }
        }
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype.nextTimeWindow = function (value) {
        if (!this.isStopped) {
            this._events.push(new ReplayEvent(this._getNow(), value));
            this._trimBufferThenGetEvents();
        }
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype._subscribe = function (subscriber) {
        var _infiniteTimeWindow = this._infiniteTimeWindow;
        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();
        var scheduler = this.scheduler;
        var len = _events.length;
        var subscription;
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_5__["ObjectUnsubscribedError"]();
        }
        else if (this.isStopped || this.hasError) {
            subscription = _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
        }
        else {
            this.observers.push(subscriber);
            subscription = new _SubjectSubscription__WEBPACK_IMPORTED_MODULE_6__["SubjectSubscription"](this, subscriber);
        }
        if (scheduler) {
            subscriber.add(subscriber = new _operators_observeOn__WEBPACK_IMPORTED_MODULE_4__["ObserveOnSubscriber"](subscriber, scheduler));
        }
        if (_infiniteTimeWindow) {
            for (var i = 0; i < len && !subscriber.closed; i++) {
                subscriber.next(_events[i]);
            }
        }
        else {
            for (var i = 0; i < len && !subscriber.closed; i++) {
                subscriber.next(_events[i].value);
            }
        }
        if (this.hasError) {
            subscriber.error(this.thrownError);
        }
        else if (this.isStopped) {
            subscriber.complete();
        }
        return subscription;
    };
    ReplaySubject.prototype._getNow = function () {
        return (this.scheduler || _scheduler_queue__WEBPACK_IMPORTED_MODULE_2__["queue"]).now();
    };
    ReplaySubject.prototype._trimBufferThenGetEvents = function () {
        var now = this._getNow();
        var _bufferSize = this._bufferSize;
        var _windowTime = this._windowTime;
        var _events = this._events;
        var eventsCount = _events.length;
        var spliceCount = 0;
        while (spliceCount < eventsCount) {
            if ((now - _events[spliceCount].time) < _windowTime) {
                break;
            }
            spliceCount++;
        }
        if (eventsCount > _bufferSize) {
            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
        }
        if (spliceCount > 0) {
            _events.splice(0, spliceCount);
        }
        return _events;
    };
    return ReplaySubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]));

var ReplayEvent = /*@__PURE__*/ (function () {
    function ReplayEvent(time, value) {
        this.time = time;
        this.value = value;
    }
    return ReplayEvent;
}());
//# sourceMappingURL=ReplaySubject.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Scheduler.js":
/*!*******************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Scheduler.js ***!
  \*******************************************************/
/*! exports provided: Scheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scheduler", function() { return Scheduler; });
var Scheduler = /*@__PURE__*/ (function () {
    function Scheduler(SchedulerAction, now) {
        if (now === void 0) {
            now = Scheduler.now;
        }
        this.SchedulerAction = SchedulerAction;
        this.now = now;
    }
    Scheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) {
            delay = 0;
        }
        return new this.SchedulerAction(this, work).schedule(state, delay);
    };
    Scheduler.now = function () { return Date.now(); };
    return Scheduler;
}());

//# sourceMappingURL=Scheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Subject.js":
/*!*****************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Subject.js ***!
  \*****************************************************/
/*! exports provided: SubjectSubscriber, Subject, AnonymousSubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubjectSubscriber", function() { return SubjectSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subject", function() { return Subject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnonymousSubject", function() { return AnonymousSubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ "./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js");
/* harmony import */ var _SubjectSubscription__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SubjectSubscription */ "./node_modules/rxjs/_esm5/internal/SubjectSubscription.js");
/* harmony import */ var _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/symbol/rxSubscriber */ "./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js");
/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */







var SubjectSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubjectSubscriber, _super);
    function SubjectSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        return _this;
    }
    return SubjectSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_2__["Subscriber"]));

var Subject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Subject, _super);
    function Subject() {
        var _this = _super.call(this) || this;
        _this.observers = [];
        _this.closed = false;
        _this.isStopped = false;
        _this.hasError = false;
        _this.thrownError = null;
        return _this;
    }
    Subject.prototype[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_6__["rxSubscriber"]] = function () {
        return new SubjectSubscriber(this);
    };
    Subject.prototype.lift = function (operator) {
        var subject = new AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
    };
    Subject.prototype.next = function (value) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
        }
        if (!this.isStopped) {
            var observers = this.observers;
            var len = observers.length;
            var copy = observers.slice();
            for (var i = 0; i < len; i++) {
                copy[i].next(value);
            }
        }
    };
    Subject.prototype.error = function (err) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
        }
        this.hasError = true;
        this.thrownError = err;
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].error(err);
        }
        this.observers.length = 0;
    };
    Subject.prototype.complete = function () {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
        }
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].complete();
        }
        this.observers.length = 0;
    };
    Subject.prototype.unsubscribe = function () {
        this.isStopped = true;
        this.closed = true;
        this.observers = null;
    };
    Subject.prototype._trySubscribe = function (subscriber) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
        }
        else {
            return _super.prototype._trySubscribe.call(this, subscriber);
        }
    };
    Subject.prototype._subscribe = function (subscriber) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
        }
        else if (this.hasError) {
            subscriber.error(this.thrownError);
            return _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
        }
        else if (this.isStopped) {
            subscriber.complete();
            return _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
        }
        else {
            this.observers.push(subscriber);
            return new _SubjectSubscription__WEBPACK_IMPORTED_MODULE_5__["SubjectSubscription"](this, subscriber);
        }
    };
    Subject.prototype.asObservable = function () {
        var observable = new _Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"]();
        observable.source = this;
        return observable;
    };
    Subject.create = function (destination, source) {
        return new AnonymousSubject(destination, source);
    };
    return Subject;
}(_Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"]));

var AnonymousSubject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AnonymousSubject, _super);
    function AnonymousSubject(destination, source) {
        var _this = _super.call(this) || this;
        _this.destination = destination;
        _this.source = source;
        return _this;
    }
    AnonymousSubject.prototype.next = function (value) {
        var destination = this.destination;
        if (destination && destination.next) {
            destination.next(value);
        }
    };
    AnonymousSubject.prototype.error = function (err) {
        var destination = this.destination;
        if (destination && destination.error) {
            this.destination.error(err);
        }
    };
    AnonymousSubject.prototype.complete = function () {
        var destination = this.destination;
        if (destination && destination.complete) {
            this.destination.complete();
        }
    };
    AnonymousSubject.prototype._subscribe = function (subscriber) {
        var source = this.source;
        if (source) {
            return this.source.subscribe(subscriber);
        }
        else {
            return _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
        }
    };
    return AnonymousSubject;
}(Subject));

//# sourceMappingURL=Subject.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/SubjectSubscription.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/SubjectSubscription.js ***!
  \*****************************************************************/
/*! exports provided: SubjectSubscription */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubjectSubscription", function() { return SubjectSubscription; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */


var SubjectSubscription = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubjectSubscription, _super);
    function SubjectSubscription(subject, subscriber) {
        var _this = _super.call(this) || this;
        _this.subject = subject;
        _this.subscriber = subscriber;
        _this.closed = false;
        return _this;
    }
    SubjectSubscription.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.closed = true;
        var subject = this.subject;
        var observers = subject.observers;
        this.subject = null;
        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
            return;
        }
        var subscriberIndex = observers.indexOf(this.subscriber);
        if (subscriberIndex !== -1) {
            observers.splice(subscriberIndex, 1);
        }
    };
    return SubjectSubscription;
}(_Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]));

//# sourceMappingURL=SubjectSubscription.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Subscriber.js":
/*!********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Subscriber.js ***!
  \********************************************************/
/*! exports provided: Subscriber, SafeSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subscriber", function() { return Subscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SafeSubscriber", function() { return SafeSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/isFunction */ "./node_modules/rxjs/_esm5/internal/util/isFunction.js");
/* harmony import */ var _Observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Observer */ "./node_modules/rxjs/_esm5/internal/Observer.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/symbol/rxSubscriber */ "./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./config */ "./node_modules/rxjs/_esm5/internal/config.js");
/* harmony import */ var _util_hostReportError__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util/hostReportError */ "./node_modules/rxjs/_esm5/internal/util/hostReportError.js");
/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */







var Subscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Subscriber, _super);
    function Subscriber(destinationOrNext, error, complete) {
        var _this = _super.call(this) || this;
        _this.syncErrorValue = null;
        _this.syncErrorThrown = false;
        _this.syncErrorThrowable = false;
        _this.isStopped = false;
        switch (arguments.length) {
            case 0:
                _this.destination = _Observer__WEBPACK_IMPORTED_MODULE_2__["empty"];
                break;
            case 1:
                if (!destinationOrNext) {
                    _this.destination = _Observer__WEBPACK_IMPORTED_MODULE_2__["empty"];
                    break;
                }
                if (typeof destinationOrNext === 'object') {
                    if (destinationOrNext instanceof Subscriber) {
                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;
                        _this.destination = destinationOrNext;
                        destinationOrNext.add(_this);
                    }
                    else {
                        _this.syncErrorThrowable = true;
                        _this.destination = new SafeSubscriber(_this, destinationOrNext);
                    }
                    break;
                }
            default:
                _this.syncErrorThrowable = true;
                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);
                break;
        }
        return _this;
    }
    Subscriber.prototype[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__["rxSubscriber"]] = function () { return this; };
    Subscriber.create = function (next, error, complete) {
        var subscriber = new Subscriber(next, error, complete);
        subscriber.syncErrorThrowable = false;
        return subscriber;
    };
    Subscriber.prototype.next = function (value) {
        if (!this.isStopped) {
            this._next(value);
        }
    };
    Subscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            this.isStopped = true;
            this._error(err);
        }
    };
    Subscriber.prototype.complete = function () {
        if (!this.isStopped) {
            this.isStopped = true;
            this._complete();
        }
    };
    Subscriber.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.isStopped = true;
        _super.prototype.unsubscribe.call(this);
    };
    Subscriber.prototype._next = function (value) {
        this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
        this.destination.error(err);
        this.unsubscribe();
    };
    Subscriber.prototype._complete = function () {
        this.destination.complete();
        this.unsubscribe();
    };
    Subscriber.prototype._unsubscribeAndRecycle = function () {
        var _parentOrParents = this._parentOrParents;
        this._parentOrParents = null;
        this.unsubscribe();
        this.closed = false;
        this.isStopped = false;
        this._parentOrParents = _parentOrParents;
        return this;
    };
    return Subscriber;
}(_Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"]));

var SafeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SafeSubscriber, _super);
    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
        var _this = _super.call(this) || this;
        _this._parentSubscriber = _parentSubscriber;
        var next;
        var context = _this;
        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(observerOrNext)) {
            next = observerOrNext;
        }
        else if (observerOrNext) {
            next = observerOrNext.next;
            error = observerOrNext.error;
            complete = observerOrNext.complete;
            if (observerOrNext !== _Observer__WEBPACK_IMPORTED_MODULE_2__["empty"]) {
                context = Object.create(observerOrNext);
                if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(context.unsubscribe)) {
                    _this.add(context.unsubscribe.bind(context));
                }
                context.unsubscribe = _this.unsubscribe.bind(_this);
            }
        }
        _this._context = context;
        _this._next = next;
        _this._error = error;
        _this._complete = complete;
        return _this;
    }
    SafeSubscriber.prototype.next = function (value) {
        if (!this.isStopped && this._next) {
            var _parentSubscriber = this._parentSubscriber;
            if (!_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                this.__tryOrUnsub(this._next, value);
            }
            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            var useDeprecatedSynchronousErrorHandling = _config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling;
            if (this._error) {
                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(this._error, err);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, this._error, err);
                    this.unsubscribe();
                }
            }
            else if (!_parentSubscriber.syncErrorThrowable) {
                this.unsubscribe();
                if (useDeprecatedSynchronousErrorHandling) {
                    throw err;
                }
                Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
            }
            else {
                if (useDeprecatedSynchronousErrorHandling) {
                    _parentSubscriber.syncErrorValue = err;
                    _parentSubscriber.syncErrorThrown = true;
                }
                else {
                    Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
                }
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.complete = function () {
        var _this = this;
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            if (this._complete) {
                var wrappedComplete = function () { return _this._complete.call(_this._context); };
                if (!_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(wrappedComplete);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);
                    this.unsubscribe();
                }
            }
            else {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            this.unsubscribe();
            if (_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling) {
                throw err;
            }
            else {
                Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
            }
        }
    };
    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
        if (!_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling) {
            throw new Error('bad call');
        }
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            if (_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling) {
                parent.syncErrorValue = err;
                parent.syncErrorThrown = true;
                return true;
            }
            else {
                Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
                return true;
            }
        }
        return false;
    };
    SafeSubscriber.prototype._unsubscribe = function () {
        var _parentSubscriber = this._parentSubscriber;
        this._context = null;
        this._parentSubscriber = null;
        _parentSubscriber.unsubscribe();
    };
    return SafeSubscriber;
}(Subscriber));

//# sourceMappingURL=Subscriber.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Subscription.js":
/*!**********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Subscription.js ***!
  \**********************************************************/
/*! exports provided: Subscription */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subscription", function() { return Subscription; });
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _util_isObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/isObject */ "./node_modules/rxjs/_esm5/internal/util/isObject.js");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/isFunction */ "./node_modules/rxjs/_esm5/internal/util/isFunction.js");
/* harmony import */ var _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/UnsubscriptionError */ "./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js");
/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */




var Subscription = /*@__PURE__*/ (function () {
    function Subscription(unsubscribe) {
        this.closed = false;
        this._parentOrParents = null;
        this._subscriptions = null;
        if (unsubscribe) {
            this._ctorUnsubscribe = true;
            this._unsubscribe = unsubscribe;
        }
    }
    Subscription.prototype.unsubscribe = function () {
        var errors;
        if (this.closed) {
            return;
        }
        var _a = this, _parentOrParents = _a._parentOrParents, _ctorUnsubscribe = _a._ctorUnsubscribe, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
        this.closed = true;
        this._parentOrParents = null;
        this._subscriptions = null;
        if (_parentOrParents instanceof Subscription) {
            _parentOrParents.remove(this);
        }
        else if (_parentOrParents !== null) {
            for (var index = 0; index < _parentOrParents.length; ++index) {
                var parent_1 = _parentOrParents[index];
                parent_1.remove(this);
            }
        }
        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(_unsubscribe)) {
            if (_ctorUnsubscribe) {
                this._unsubscribe = undefined;
            }
            try {
                _unsubscribe.call(this);
            }
            catch (e) {
                errors = e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__["UnsubscriptionError"] ? flattenUnsubscriptionErrors(e.errors) : [e];
            }
        }
        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_0__["isArray"])(_subscriptions)) {
            var index = -1;
            var len = _subscriptions.length;
            while (++index < len) {
                var sub = _subscriptions[index];
                if (Object(_util_isObject__WEBPACK_IMPORTED_MODULE_1__["isObject"])(sub)) {
                    try {
                        sub.unsubscribe();
                    }
                    catch (e) {
                        errors = errors || [];
                        if (e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__["UnsubscriptionError"]) {
                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));
                        }
                        else {
                            errors.push(e);
                        }
                    }
                }
            }
        }
        if (errors) {
            throw new _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__["UnsubscriptionError"](errors);
        }
    };
    Subscription.prototype.add = function (teardown) {
        var subscription = teardown;
        if (!teardown) {
            return Subscription.EMPTY;
        }
        switch (typeof teardown) {
            case 'function':
                subscription = new Subscription(teardown);
            case 'object':
                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {
                    return subscription;
                }
                else if (this.closed) {
                    subscription.unsubscribe();
                    return subscription;
                }
                else if (!(subscription instanceof Subscription)) {
                    var tmp = subscription;
                    subscription = new Subscription();
                    subscription._subscriptions = [tmp];
                }
                break;
            default: {
                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
            }
        }
        var _parentOrParents = subscription._parentOrParents;
        if (_parentOrParents === null) {
            subscription._parentOrParents = this;
        }
        else if (_parentOrParents instanceof Subscription) {
            if (_parentOrParents === this) {
                return subscription;
            }
            subscription._parentOrParents = [_parentOrParents, this];
        }
        else if (_parentOrParents.indexOf(this) === -1) {
            _parentOrParents.push(this);
        }
        else {
            return subscription;
        }
        var subscriptions = this._subscriptions;
        if (subscriptions === null) {
            this._subscriptions = [subscription];
        }
        else {
            subscriptions.push(subscription);
        }
        return subscription;
    };
    Subscription.prototype.remove = function (subscription) {
        var subscriptions = this._subscriptions;
        if (subscriptions) {
            var subscriptionIndex = subscriptions.indexOf(subscription);
            if (subscriptionIndex !== -1) {
                subscriptions.splice(subscriptionIndex, 1);
            }
        }
    };
    Subscription.EMPTY = (function (empty) {
        empty.closed = true;
        return empty;
    }(new Subscription()));
    return Subscription;
}());

function flattenUnsubscriptionErrors(errors) {
    return errors.reduce(function (errs, err) { return errs.concat((err instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__["UnsubscriptionError"]) ? err.errors : err); }, []);
}
//# sourceMappingURL=Subscription.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/config.js":
/*!****************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/config.js ***!
  \****************************************************/
/*! exports provided: config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "config", function() { return config; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var _enable_super_gross_mode_that_will_cause_bad_things = false;
var config = {
    Promise: undefined,
    set useDeprecatedSynchronousErrorHandling(value) {
        if (value) {
            var error = /*@__PURE__*/ new Error();
            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + error.stack);
        }
        else if (_enable_super_gross_mode_that_will_cause_bad_things) {
            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');
        }
        _enable_super_gross_mode_that_will_cause_bad_things = value;
    },
    get useDeprecatedSynchronousErrorHandling() {
        return _enable_super_gross_mode_that_will_cause_bad_things;
    },
};
//# sourceMappingURL=config.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/innerSubscribe.js ***!
  \************************************************************/
/*! exports provided: SimpleInnerSubscriber, ComplexInnerSubscriber, SimpleOuterSubscriber, ComplexOuterSubscriber, innerSubscribe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SimpleInnerSubscriber", function() { return SimpleInnerSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComplexInnerSubscriber", function() { return ComplexInnerSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SimpleOuterSubscriber", function() { return SimpleOuterSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComplexOuterSubscriber", function() { return ComplexOuterSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "innerSubscribe", function() { return innerSubscribe; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_subscribeTo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/subscribeTo */ "./node_modules/rxjs/_esm5/internal/util/subscribeTo.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_util_subscribeTo PURE_IMPORTS_END */




var SimpleInnerSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SimpleInnerSubscriber, _super);
    function SimpleInnerSubscriber(parent) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        return _this;
    }
    SimpleInnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(value);
    };
    SimpleInnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error);
        this.unsubscribe();
    };
    SimpleInnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete();
        this.unsubscribe();
    };
    return SimpleInnerSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

var ComplexInnerSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ComplexInnerSubscriber, _super);
    function ComplexInnerSubscriber(parent, outerValue, outerIndex) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        _this.outerValue = outerValue;
        _this.outerIndex = outerIndex;
        return _this;
    }
    ComplexInnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);
    };
    ComplexInnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error);
        this.unsubscribe();
    };
    ComplexInnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete(this);
        this.unsubscribe();
    };
    return ComplexInnerSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

var SimpleOuterSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SimpleOuterSubscriber, _super);
    function SimpleOuterSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SimpleOuterSubscriber.prototype.notifyNext = function (innerValue) {
        this.destination.next(innerValue);
    };
    SimpleOuterSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    SimpleOuterSubscriber.prototype.notifyComplete = function () {
        this.destination.complete();
    };
    return SimpleOuterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

var ComplexOuterSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ComplexOuterSubscriber, _super);
    function ComplexOuterSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ComplexOuterSubscriber.prototype.notifyNext = function (_outerValue, innerValue, _outerIndex, _innerSub) {
        this.destination.next(innerValue);
    };
    ComplexOuterSubscriber.prototype.notifyError = function (error) {
        this.destination.error(error);
    };
    ComplexOuterSubscriber.prototype.notifyComplete = function (_innerSub) {
        this.destination.complete();
    };
    return ComplexOuterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

function innerSubscribe(result, innerSubscriber) {
    if (innerSubscriber.closed) {
        return undefined;
    }
    if (result instanceof _Observable__WEBPACK_IMPORTED_MODULE_2__["Observable"]) {
        return result.subscribe(innerSubscriber);
    }
    return Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_3__["subscribeTo"])(result)(innerSubscriber);
}
//# sourceMappingURL=innerSubscribe.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js":
/*!******************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js ***!
  \******************************************************************************/
/*! exports provided: ConnectableObservable, connectableObservableDescriptor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectableObservable", function() { return ConnectableObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "connectableObservableDescriptor", function() { return connectableObservableDescriptor; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _operators_refCount__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operators/refCount */ "./node_modules/rxjs/_esm5/internal/operators/refCount.js");
/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */






var ConnectableObservable = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ConnectableObservable, _super);
    function ConnectableObservable(source, subjectFactory) {
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.subjectFactory = subjectFactory;
        _this._refCount = 0;
        _this._isComplete = false;
        return _this;
    }
    ConnectableObservable.prototype._subscribe = function (subscriber) {
        return this.getSubject().subscribe(subscriber);
    };
    ConnectableObservable.prototype.getSubject = function () {
        var subject = this._subject;
        if (!subject || subject.isStopped) {
            this._subject = this.subjectFactory();
        }
        return this._subject;
    };
    ConnectableObservable.prototype.connect = function () {
        var connection = this._connection;
        if (!connection) {
            this._isComplete = false;
            connection = this._connection = new _Subscription__WEBPACK_IMPORTED_MODULE_4__["Subscription"]();
            connection.add(this.source
                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));
            if (connection.closed) {
                this._connection = null;
                connection = _Subscription__WEBPACK_IMPORTED_MODULE_4__["Subscription"].EMPTY;
            }
        }
        return connection;
    };
    ConnectableObservable.prototype.refCount = function () {
        return Object(_operators_refCount__WEBPACK_IMPORTED_MODULE_5__["refCount"])()(this);
    };
    return ConnectableObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_2__["Observable"]));

var connectableObservableDescriptor = /*@__PURE__*/ (function () {
    var connectableProto = ConnectableObservable.prototype;
    return {
        operator: { value: null },
        _refCount: { value: 0, writable: true },
        _subject: { value: null, writable: true },
        _connection: { value: null, writable: true },
        _subscribe: { value: connectableProto._subscribe },
        _isComplete: { value: connectableProto._isComplete, writable: true },
        getSubject: { value: connectableProto.getSubject },
        connect: { value: connectableProto.connect },
        refCount: { value: connectableProto.refCount }
    };
})();
var ConnectableSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ConnectableSubscriber, _super);
    function ConnectableSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    ConnectableSubscriber.prototype._error = function (err) {
        this._unsubscribe();
        _super.prototype._error.call(this, err);
    };
    ConnectableSubscriber.prototype._complete = function () {
        this.connectable._isComplete = true;
        this._unsubscribe();
        _super.prototype._complete.call(this);
    };
    ConnectableSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (connectable) {
            this.connectable = null;
            var connection = connectable._connection;
            connectable._refCount = 0;
            connectable._subject = null;
            connectable._connection = null;
            if (connection) {
                connection.unsubscribe();
            }
        }
    };
    return ConnectableSubscriber;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["SubjectSubscriber"]));
var RefCountOperator = /*@__PURE__*/ (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__["Subscriber"]));
//# sourceMappingURL=ConnectableObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/bindCallback.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/bindCallback.js ***!
  \*********************************************************************/
/*! exports provided: bindCallback */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bindCallback", function() { return bindCallback; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../AsyncSubject */ "./node_modules/rxjs/_esm5/internal/AsyncSubject.js");
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/* harmony import */ var _util_canReportError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canReportError */ "./node_modules/rxjs/_esm5/internal/util/canReportError.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isArray,_util_isScheduler PURE_IMPORTS_END */






function bindCallback(callbackFunc, resultSelector, scheduler) {
    if (resultSelector) {
        if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__["isScheduler"])(resultSelector)) {
            scheduler = resultSelector;
        }
        else {
            return function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_2__["map"])(function (args) { return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_4__["isArray"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
            };
        }
    }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var context = this;
        var subject;
        var params = {
            context: context,
            subject: subject,
            callbackFunc: callbackFunc,
            scheduler: scheduler,
        };
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
            if (!scheduler) {
                if (!subject) {
                    subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__["AsyncSubject"]();
                    var handler = function () {
                        var innerArgs = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            innerArgs[_i] = arguments[_i];
                        }
                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    };
                    try {
                        callbackFunc.apply(context, args.concat([handler]));
                    }
                    catch (err) {
                        if (Object(_util_canReportError__WEBPACK_IMPORTED_MODULE_3__["canReportError"])(subject)) {
                            subject.error(err);
                        }
                        else {
                            console.warn(err);
                        }
                    }
                }
                return subject.subscribe(subscriber);
            }
            else {
                var state = {
                    args: args, subscriber: subscriber, params: params,
                };
                return scheduler.schedule(dispatch, 0, state);
            }
        });
    };
}
function dispatch(state) {
    var _this = this;
    var self = this;
    var args = state.args, subscriber = state.subscriber, params = state.params;
    var callbackFunc = params.callbackFunc, context = params.context, scheduler = params.scheduler;
    var subject = params.subject;
    if (!subject) {
        subject = params.subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__["AsyncSubject"]();
        var handler = function () {
            var innerArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                innerArgs[_i] = arguments[_i];
            }
            var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
            _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
        };
        try {
            callbackFunc.apply(context, args.concat([handler]));
        }
        catch (err) {
            subject.error(err);
        }
    }
    this.add(subject.subscribe(subscriber));
}
function dispatchNext(state) {
    var value = state.value, subject = state.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(state) {
    var err = state.err, subject = state.subject;
    subject.error(err);
}
//# sourceMappingURL=bindCallback.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/bindNodeCallback.js":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/bindNodeCallback.js ***!
  \*************************************************************************/
/*! exports provided: bindNodeCallback */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bindNodeCallback", function() { return bindNodeCallback; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../AsyncSubject */ "./node_modules/rxjs/_esm5/internal/AsyncSubject.js");
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/* harmony import */ var _util_canReportError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canReportError */ "./node_modules/rxjs/_esm5/internal/util/canReportError.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isScheduler,_util_isArray PURE_IMPORTS_END */






function bindNodeCallback(callbackFunc, resultSelector, scheduler) {
    if (resultSelector) {
        if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_4__["isScheduler"])(resultSelector)) {
            scheduler = resultSelector;
        }
        else {
            return function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_2__["map"])(function (args) { return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_5__["isArray"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
            };
        }
    }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var params = {
            subject: undefined,
            args: args,
            callbackFunc: callbackFunc,
            scheduler: scheduler,
            context: this,
        };
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
            var context = params.context;
            var subject = params.subject;
            if (!scheduler) {
                if (!subject) {
                    subject = params.subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__["AsyncSubject"]();
                    var handler = function () {
                        var innerArgs = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            innerArgs[_i] = arguments[_i];
                        }
                        var err = innerArgs.shift();
                        if (err) {
                            subject.error(err);
                            return;
                        }
                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    };
                    try {
                        callbackFunc.apply(context, args.concat([handler]));
                    }
                    catch (err) {
                        if (Object(_util_canReportError__WEBPACK_IMPORTED_MODULE_3__["canReportError"])(subject)) {
                            subject.error(err);
                        }
                        else {
                            console.warn(err);
                        }
                    }
                }
                return subject.subscribe(subscriber);
            }
            else {
                return scheduler.schedule(dispatch, 0, { params: params, subscriber: subscriber, context: context });
            }
        });
    };
}
function dispatch(state) {
    var _this = this;
    var params = state.params, subscriber = state.subscriber, context = state.context;
    var callbackFunc = params.callbackFunc, args = params.args, scheduler = params.scheduler;
    var subject = params.subject;
    if (!subject) {
        subject = params.subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__["AsyncSubject"]();
        var handler = function () {
            var innerArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                innerArgs[_i] = arguments[_i];
            }
            var err = innerArgs.shift();
            if (err) {
                _this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));
            }
            else {
                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
                _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
            }
        };
        try {
            callbackFunc.apply(context, args.concat([handler]));
        }
        catch (err) {
            this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));
        }
    }
    this.add(subject.subscribe(subscriber));
}
function dispatchNext(arg) {
    var value = arg.value, subject = arg.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(arg) {
    var err = arg.err, subject = arg.subject;
    subject.error(err);
}
//# sourceMappingURL=bindNodeCallback.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/combineLatest.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/combineLatest.js ***!
  \**********************************************************************/
/*! exports provided: combineLatest, CombineLatestOperator, CombineLatestSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return combineLatest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CombineLatestOperator", function() { return CombineLatestOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CombineLatestSubscriber", function() { return CombineLatestSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fromArray */ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js");
/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */






var NONE = {};
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var resultSelector = undefined;
    var scheduler = undefined;
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__["isScheduler"])(observables[observables.length - 1])) {
        scheduler = observables.pop();
    }
    if (typeof observables[observables.length - 1] === 'function') {
        resultSelector = observables.pop();
    }
    if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(observables[0])) {
        observables = observables[0];
    }
    return Object(_fromArray__WEBPACK_IMPORTED_MODULE_5__["fromArray"])(observables, scheduler).lift(new CombineLatestOperator(resultSelector));
}
var CombineLatestOperator = /*@__PURE__*/ (function () {
    function CombineLatestOperator(resultSelector) {
        this.resultSelector = resultSelector;
    }
    CombineLatestOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));
    };
    return CombineLatestOperator;
}());

var CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CombineLatestSubscriber, _super);
    function CombineLatestSubscriber(destination, resultSelector) {
        var _this = _super.call(this, destination) || this;
        _this.resultSelector = resultSelector;
        _this.active = 0;
        _this.values = [];
        _this.observables = [];
        return _this;
    }
    CombineLatestSubscriber.prototype._next = function (observable) {
        this.values.push(NONE);
        this.observables.push(observable);
    };
    CombineLatestSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            this.active = len;
            this.toRespond = len;
            for (var i = 0; i < len; i++) {
                var observable = observables[i];
                this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, observable, undefined, i));
            }
        }
    };
    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {
        if ((this.active -= 1) === 0) {
            this.destination.complete();
        }
    };
    CombineLatestSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {
        var values = this.values;
        var oldVal = values[outerIndex];
        var toRespond = !this.toRespond
            ? 0
            : oldVal === NONE ? --this.toRespond : this.toRespond;
        values[outerIndex] = innerValue;
        if (toRespond === 0) {
            if (this.resultSelector) {
                this._tryResultSelector(values);
            }
            else {
                this.destination.next(values.slice());
            }
        }
    };
    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {
        var result;
        try {
            result = this.resultSelector.apply(this, values);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return CombineLatestSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]));

//# sourceMappingURL=combineLatest.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/concat.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/concat.js ***!
  \***************************************************************/
/*! exports provided: concat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return concat; });
/* harmony import */ var _of__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./of */ "./node_modules/rxjs/_esm5/internal/observable/of.js");
/* harmony import */ var _operators_concatAll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operators/concatAll */ "./node_modules/rxjs/_esm5/internal/operators/concatAll.js");
/** PURE_IMPORTS_START _of,_operators_concatAll PURE_IMPORTS_END */


function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return Object(_operators_concatAll__WEBPACK_IMPORTED_MODULE_1__["concatAll"])()(_of__WEBPACK_IMPORTED_MODULE_0__["of"].apply(void 0, observables));
}
//# sourceMappingURL=concat.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/defer.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/defer.js ***!
  \**************************************************************/
/*! exports provided: defer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return defer; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */



function defer(observableFactory) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var input;
        try {
            input = observableFactory();
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        var source = input ? Object(_from__WEBPACK_IMPORTED_MODULE_1__["from"])(input) : Object(_empty__WEBPACK_IMPORTED_MODULE_2__["empty"])();
        return source.subscribe(subscriber);
    });
}
//# sourceMappingURL=defer.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/empty.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/empty.js ***!
  \**************************************************************/
/*! exports provided: EMPTY, empty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EMPTY", function() { return EMPTY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return empty; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

var EMPTY = /*@__PURE__*/ new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) { return subscriber.complete(); });
function empty(scheduler) {
    return scheduler ? emptyScheduled(scheduler) : EMPTY;
}
function emptyScheduled(scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });
}
//# sourceMappingURL=empty.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/forkJoin.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/forkJoin.js ***!
  \*****************************************************************/
/*! exports provided: forkJoin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forkJoin", function() { return forkJoin; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/* harmony import */ var _util_isObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isObject */ "./node_modules/rxjs/_esm5/internal/util/isObject.js");
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/** PURE_IMPORTS_START _Observable,_util_isArray,_operators_map,_util_isObject,_from PURE_IMPORTS_END */





function forkJoin() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        sources[_i] = arguments[_i];
    }
    if (sources.length === 1) {
        var first_1 = sources[0];
        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(first_1)) {
            return forkJoinInternal(first_1, null);
        }
        if (Object(_util_isObject__WEBPACK_IMPORTED_MODULE_3__["isObject"])(first_1) && Object.getPrototypeOf(first_1) === Object.prototype) {
            var keys = Object.keys(first_1);
            return forkJoinInternal(keys.map(function (key) { return first_1[key]; }), keys);
        }
    }
    if (typeof sources[sources.length - 1] === 'function') {
        var resultSelector_1 = sources.pop();
        sources = (sources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(sources[0])) ? sources[0] : sources;
        return forkJoinInternal(sources, null).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_2__["map"])(function (args) { return resultSelector_1.apply(void 0, args); }));
    }
    return forkJoinInternal(sources, null);
}
function forkJoinInternal(sources, keys) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var len = sources.length;
        if (len === 0) {
            subscriber.complete();
            return;
        }
        var values = new Array(len);
        var completed = 0;
        var emitted = 0;
        var _loop_1 = function (i) {
            var source = Object(_from__WEBPACK_IMPORTED_MODULE_4__["from"])(sources[i]);
            var hasValue = false;
            subscriber.add(source.subscribe({
                next: function (value) {
                    if (!hasValue) {
                        hasValue = true;
                        emitted++;
                    }
                    values[i] = value;
                },
                error: function (err) { return subscriber.error(err); },
                complete: function () {
                    completed++;
                    if (completed === len || !hasValue) {
                        if (emitted === len) {
                            subscriber.next(keys ?
                                keys.reduce(function (result, key, i) { return (result[key] = values[i], result); }, {}) :
                                values);
                        }
                        subscriber.complete();
                    }
                }
            }));
        };
        for (var i = 0; i < len; i++) {
            _loop_1(i);
        }
    });
}
//# sourceMappingURL=forkJoin.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/from.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/from.js ***!
  \*************************************************************/
/*! exports provided: from */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "from", function() { return from; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeTo */ "./node_modules/rxjs/_esm5/internal/util/subscribeTo.js");
/* harmony import */ var _scheduled_scheduled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduled/scheduled */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js");
/** PURE_IMPORTS_START _Observable,_util_subscribeTo,_scheduled_scheduled PURE_IMPORTS_END */



function from(input, scheduler) {
    if (!scheduler) {
        if (input instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"]) {
            return input;
        }
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__["subscribeTo"])(input));
    }
    else {
        return Object(_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_2__["scheduled"])(input, scheduler);
    }
}
//# sourceMappingURL=from.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/fromArray.js ***!
  \******************************************************************/
/*! exports provided: fromArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromArray", function() { return fromArray; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_subscribeToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeToArray */ "./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js");
/* harmony import */ var _scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduled/scheduleArray */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js");
/** PURE_IMPORTS_START _Observable,_util_subscribeToArray,_scheduled_scheduleArray PURE_IMPORTS_END */



function fromArray(input, scheduler) {
    if (!scheduler) {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](Object(_util_subscribeToArray__WEBPACK_IMPORTED_MODULE_1__["subscribeToArray"])(input));
    }
    else {
        return Object(_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__["scheduleArray"])(input, scheduler);
    }
}
//# sourceMappingURL=fromArray.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/fromEvent.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/fromEvent.js ***!
  \******************************************************************/
/*! exports provided: fromEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromEvent", function() { return fromEvent; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isFunction */ "./node_modules/rxjs/_esm5/internal/util/isFunction.js");
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operators/map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */




var toString = /*@__PURE__*/ (function () { return Object.prototype.toString; })();
function fromEvent(target, eventName, options, resultSelector) {
    if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(options)) {
        resultSelector = options;
        options = undefined;
    }
    if (resultSelector) {
        return fromEvent(target, eventName, options).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_3__["map"])(function (args) { return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        function handler(e) {
            if (arguments.length > 1) {
                subscriber.next(Array.prototype.slice.call(arguments));
            }
            else {
                subscriber.next(e);
            }
        }
        setupSubscription(target, eventName, handler, subscriber, options);
    });
}
function setupSubscription(sourceObj, eventName, handler, subscriber, options) {
    var unsubscribe;
    if (isEventTarget(sourceObj)) {
        var source_1 = sourceObj;
        sourceObj.addEventListener(eventName, handler, options);
        unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };
    }
    else if (isJQueryStyleEventEmitter(sourceObj)) {
        var source_2 = sourceObj;
        sourceObj.on(eventName, handler);
        unsubscribe = function () { return source_2.off(eventName, handler); };
    }
    else if (isNodeStyleEventEmitter(sourceObj)) {
        var source_3 = sourceObj;
        sourceObj.addListener(eventName, handler);
        unsubscribe = function () { return source_3.removeListener(eventName, handler); };
    }
    else if (sourceObj && sourceObj.length) {
        for (var i = 0, len = sourceObj.length; i < len; i++) {
            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);
        }
    }
    else {
        throw new TypeError('Invalid event target');
    }
    subscriber.add(unsubscribe);
}
function isNodeStyleEventEmitter(sourceObj) {
    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';
}
function isJQueryStyleEventEmitter(sourceObj) {
    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';
}
function isEventTarget(sourceObj) {
    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';
}
//# sourceMappingURL=fromEvent.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js ***!
  \*************************************************************************/
/*! exports provided: fromEventPattern */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromEventPattern", function() { return fromEventPattern; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isFunction */ "./node_modules/rxjs/_esm5/internal/util/isFunction.js");
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operators/map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */




function fromEventPattern(addHandler, removeHandler, resultSelector) {
    if (resultSelector) {
        return fromEventPattern(addHandler, removeHandler).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_3__["map"])(function (args) { return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var handler = function () {
            var e = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                e[_i] = arguments[_i];
            }
            return subscriber.next(e.length === 1 ? e[0] : e);
        };
        var retValue;
        try {
            retValue = addHandler(handler);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        if (!Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(removeHandler)) {
            return undefined;
        }
        return function () { return removeHandler(handler, retValue); };
    });
}
//# sourceMappingURL=fromEventPattern.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/generate.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/generate.js ***!
  \*****************************************************************/
/*! exports provided: generate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generate", function() { return generate; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */



function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {
    var resultSelector;
    var initialState;
    if (arguments.length == 1) {
        var options = initialStateOrOptions;
        initialState = options.initialState;
        condition = options.condition;
        iterate = options.iterate;
        resultSelector = options.resultSelector || _util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"];
        scheduler = options.scheduler;
    }
    else if (resultSelectorOrObservable === undefined || Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_2__["isScheduler"])(resultSelectorOrObservable)) {
        initialState = initialStateOrOptions;
        resultSelector = _util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"];
        scheduler = resultSelectorOrObservable;
    }
    else {
        initialState = initialStateOrOptions;
        resultSelector = resultSelectorOrObservable;
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var state = initialState;
        if (scheduler) {
            return scheduler.schedule(dispatch, 0, {
                subscriber: subscriber,
                iterate: iterate,
                condition: condition,
                resultSelector: resultSelector,
                state: state
            });
        }
        do {
            if (condition) {
                var conditionResult = void 0;
                try {
                    conditionResult = condition(state);
                }
                catch (err) {
                    subscriber.error(err);
                    return undefined;
                }
                if (!conditionResult) {
                    subscriber.complete();
                    break;
                }
            }
            var value = void 0;
            try {
                value = resultSelector(state);
            }
            catch (err) {
                subscriber.error(err);
                return undefined;
            }
            subscriber.next(value);
            if (subscriber.closed) {
                break;
            }
            try {
                state = iterate(state);
            }
            catch (err) {
                subscriber.error(err);
                return undefined;
            }
        } while (true);
        return undefined;
    });
}
function dispatch(state) {
    var subscriber = state.subscriber, condition = state.condition;
    if (subscriber.closed) {
        return undefined;
    }
    if (state.needIterate) {
        try {
            state.state = state.iterate(state.state);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
    }
    else {
        state.needIterate = true;
    }
    if (condition) {
        var conditionResult = void 0;
        try {
            conditionResult = condition(state.state);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        if (!conditionResult) {
            subscriber.complete();
            return undefined;
        }
        if (subscriber.closed) {
            return undefined;
        }
    }
    var value;
    try {
        value = state.resultSelector(state.state);
    }
    catch (err) {
        subscriber.error(err);
        return undefined;
    }
    if (subscriber.closed) {
        return undefined;
    }
    subscriber.next(value);
    if (subscriber.closed) {
        return undefined;
    }
    return this.schedule(state);
}
//# sourceMappingURL=generate.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/iif.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/iif.js ***!
  \************************************************************/
/*! exports provided: iif */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iif", function() { return iif; });
/* harmony import */ var _defer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defer */ "./node_modules/rxjs/_esm5/internal/observable/defer.js");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/** PURE_IMPORTS_START _defer,_empty PURE_IMPORTS_END */


function iif(condition, trueResult, falseResult) {
    if (trueResult === void 0) {
        trueResult = _empty__WEBPACK_IMPORTED_MODULE_1__["EMPTY"];
    }
    if (falseResult === void 0) {
        falseResult = _empty__WEBPACK_IMPORTED_MODULE_1__["EMPTY"];
    }
    return Object(_defer__WEBPACK_IMPORTED_MODULE_0__["defer"])(function () { return condition() ? trueResult : falseResult; });
}
//# sourceMappingURL=iif.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/interval.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/interval.js ***!
  \*****************************************************************/
/*! exports provided: interval */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interval", function() { return interval; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isNumeric */ "./node_modules/rxjs/_esm5/internal/util/isNumeric.js");
/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */



function interval(period, scheduler) {
    if (period === void 0) {
        period = 0;
    }
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
    }
    if (!Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__["isNumeric"])(period) || period < 0) {
        period = 0;
    }
    if (!scheduler || typeof scheduler.schedule !== 'function') {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        subscriber.add(scheduler.schedule(dispatch, period, { subscriber: subscriber, counter: 0, period: period }));
        return subscriber;
    });
}
function dispatch(state) {
    var subscriber = state.subscriber, counter = state.counter, period = state.period;
    subscriber.next(counter);
    this.schedule({ subscriber: subscriber, counter: counter + 1, period: period }, period);
}
//# sourceMappingURL=interval.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/merge.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/merge.js ***!
  \**************************************************************/
/*! exports provided: merge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return merge; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/* harmony import */ var _operators_mergeAll__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/mergeAll */ "./node_modules/rxjs/_esm5/internal/operators/mergeAll.js");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fromArray */ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js");
/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */




function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var concurrent = Number.POSITIVE_INFINITY;
    var scheduler = null;
    var last = observables[observables.length - 1];
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__["isScheduler"])(last)) {
        scheduler = observables.pop();
        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
            concurrent = observables.pop();
        }
    }
    else if (typeof last === 'number') {
        concurrent = observables.pop();
    }
    if (scheduler === null && observables.length === 1 && observables[0] instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"]) {
        return observables[0];
    }
    return Object(_operators_mergeAll__WEBPACK_IMPORTED_MODULE_2__["mergeAll"])(concurrent)(Object(_fromArray__WEBPACK_IMPORTED_MODULE_3__["fromArray"])(observables, scheduler));
}
//# sourceMappingURL=merge.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/never.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/never.js ***!
  \**************************************************************/
/*! exports provided: NEVER, never */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NEVER", function() { return NEVER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "never", function() { return never; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/noop */ "./node_modules/rxjs/_esm5/internal/util/noop.js");
/** PURE_IMPORTS_START _Observable,_util_noop PURE_IMPORTS_END */


var NEVER = /*@__PURE__*/ new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](_util_noop__WEBPACK_IMPORTED_MODULE_1__["noop"]);
function never() {
    return NEVER;
}
//# sourceMappingURL=never.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/of.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/of.js ***!
  \***********************************************************/
/*! exports provided: of */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "of", function() { return of; });
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromArray */ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js");
/* harmony import */ var _scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduled/scheduleArray */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js");
/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_scheduled_scheduleArray PURE_IMPORTS_END */



function of() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var scheduler = args[args.length - 1];
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_0__["isScheduler"])(scheduler)) {
        args.pop();
        return Object(_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__["scheduleArray"])(args, scheduler);
    }
    else {
        return Object(_fromArray__WEBPACK_IMPORTED_MODULE_1__["fromArray"])(args);
    }
}
//# sourceMappingURL=of.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/onErrorResumeNext.js":
/*!**************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/onErrorResumeNext.js ***!
  \**************************************************************************/
/*! exports provided: onErrorResumeNext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return onErrorResumeNext; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */




function onErrorResumeNext() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        sources[_i] = arguments[_i];
    }
    if (sources.length === 0) {
        return _empty__WEBPACK_IMPORTED_MODULE_3__["EMPTY"];
    }
    var first = sources[0], remainder = sources.slice(1);
    if (sources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(first)) {
        return onErrorResumeNext.apply(void 0, first);
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var subNext = function () { return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber)); };
        return Object(_from__WEBPACK_IMPORTED_MODULE_1__["from"])(first).subscribe({
            next: function (value) { subscriber.next(value); },
            error: subNext,
            complete: subNext,
        });
    });
}
//# sourceMappingURL=onErrorResumeNext.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/pairs.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/pairs.js ***!
  \**************************************************************/
/*! exports provided: pairs, dispatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return pairs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dispatch", function() { return dispatch; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function pairs(obj, scheduler) {
    if (!scheduler) {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
            var keys = Object.keys(obj);
            for (var i = 0; i < keys.length && !subscriber.closed; i++) {
                var key = keys[i];
                if (obj.hasOwnProperty(key)) {
                    subscriber.next([key, obj[key]]);
                }
            }
            subscriber.complete();
        });
    }
    else {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
            var keys = Object.keys(obj);
            var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
            subscription.add(scheduler.schedule(dispatch, 0, { keys: keys, index: 0, subscriber: subscriber, subscription: subscription, obj: obj }));
            return subscription;
        });
    }
}
function dispatch(state) {
    var keys = state.keys, index = state.index, subscriber = state.subscriber, subscription = state.subscription, obj = state.obj;
    if (!subscriber.closed) {
        if (index < keys.length) {
            var key = keys[index];
            subscriber.next([key, obj[key]]);
            subscription.add(this.schedule({ keys: keys, index: index + 1, subscriber: subscriber, subscription: subscription, obj: obj }));
        }
        else {
            subscriber.complete();
        }
    }
}
//# sourceMappingURL=pairs.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/partition.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/partition.js ***!
  \******************************************************************/
/*! exports provided: partition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return partition; });
/* harmony import */ var _util_not__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/not */ "./node_modules/rxjs/_esm5/internal/util/not.js");
/* harmony import */ var _util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeTo */ "./node_modules/rxjs/_esm5/internal/util/subscribeTo.js");
/* harmony import */ var _operators_filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/filter */ "./node_modules/rxjs/_esm5/internal/operators/filter.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/** PURE_IMPORTS_START _util_not,_util_subscribeTo,_operators_filter,_Observable PURE_IMPORTS_END */




function partition(source, predicate, thisArg) {
    return [
        Object(_operators_filter__WEBPACK_IMPORTED_MODULE_2__["filter"])(predicate, thisArg)(new _Observable__WEBPACK_IMPORTED_MODULE_3__["Observable"](Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__["subscribeTo"])(source))),
        Object(_operators_filter__WEBPACK_IMPORTED_MODULE_2__["filter"])(Object(_util_not__WEBPACK_IMPORTED_MODULE_0__["not"])(predicate, thisArg))(new _Observable__WEBPACK_IMPORTED_MODULE_3__["Observable"](Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__["subscribeTo"])(source)))
    ];
}
//# sourceMappingURL=partition.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/race.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/race.js ***!
  \*************************************************************/
/*! exports provided: race, RaceOperator, RaceSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "race", function() { return race; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RaceOperator", function() { return RaceOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RaceSubscriber", function() { return RaceSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fromArray */ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    if (observables.length === 1) {
        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(observables[0])) {
            observables = observables[0];
        }
        else {
            return observables[0];
        }
    }
    return Object(_fromArray__WEBPACK_IMPORTED_MODULE_2__["fromArray"])(observables, undefined).lift(new RaceOperator());
}
var RaceOperator = /*@__PURE__*/ (function () {
    function RaceOperator() {
    }
    RaceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RaceSubscriber(subscriber));
    };
    return RaceOperator;
}());

var RaceSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RaceSubscriber, _super);
    function RaceSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasFirst = false;
        _this.observables = [];
        _this.subscriptions = [];
        return _this;
    }
    RaceSubscriber.prototype._next = function (observable) {
        this.observables.push(observable);
    };
    RaceSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            for (var i = 0; i < len && !this.hasFirst; i++) {
                var observable = observables[i];
                var subscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, observable, undefined, i);
                if (this.subscriptions) {
                    this.subscriptions.push(subscription);
                }
                this.add(subscription);
            }
            this.observables = null;
        }
    };
    RaceSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {
        if (!this.hasFirst) {
            this.hasFirst = true;
            for (var i = 0; i < this.subscriptions.length; i++) {
                if (i !== outerIndex) {
                    var subscription = this.subscriptions[i];
                    subscription.unsubscribe();
                    this.remove(subscription);
                }
            }
            this.subscriptions = null;
        }
        this.destination.next(innerValue);
    };
    return RaceSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]));

//# sourceMappingURL=race.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/range.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/range.js ***!
  \**************************************************************/
/*! exports provided: range, dispatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "range", function() { return range; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dispatch", function() { return dispatch; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function range(start, count, scheduler) {
    if (start === void 0) {
        start = 0;
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        if (count === undefined) {
            count = start;
            start = 0;
        }
        var index = 0;
        var current = start;
        if (scheduler) {
            return scheduler.schedule(dispatch, 0, {
                index: index, count: count, start: start, subscriber: subscriber
            });
        }
        else {
            do {
                if (index++ >= count) {
                    subscriber.complete();
                    break;
                }
                subscriber.next(current++);
                if (subscriber.closed) {
                    break;
                }
            } while (true);
        }
        return undefined;
    });
}
function dispatch(state) {
    var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;
    if (index >= count) {
        subscriber.complete();
        return;
    }
    subscriber.next(start);
    if (subscriber.closed) {
        return;
    }
    state.index = index + 1;
    state.start = start + 1;
    this.schedule(state);
}
//# sourceMappingURL=range.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/throwError.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/throwError.js ***!
  \*******************************************************************/
/*! exports provided: throwError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return throwError; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function throwError(error, scheduler) {
    if (!scheduler) {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) { return subscriber.error(error); });
    }
    else {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });
    }
}
function dispatch(_a) {
    var error = _a.error, subscriber = _a.subscriber;
    subscriber.error(error);
}
//# sourceMappingURL=throwError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/timer.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/timer.js ***!
  \**************************************************************/
/*! exports provided: timer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return timer; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isNumeric */ "./node_modules/rxjs/_esm5/internal/util/isNumeric.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */




function timer(dueTime, periodOrScheduler, scheduler) {
    if (dueTime === void 0) {
        dueTime = 0;
    }
    var period = -1;
    if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__["isNumeric"])(periodOrScheduler)) {
        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);
    }
    else if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__["isScheduler"])(periodOrScheduler)) {
        scheduler = periodOrScheduler;
    }
    if (!Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__["isScheduler"])(scheduler)) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var due = Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__["isNumeric"])(dueTime)
            ? dueTime
            : (+dueTime - scheduler.now());
        return scheduler.schedule(dispatch, due, {
            index: 0, period: period, subscriber: subscriber
        });
    });
}
function dispatch(state) {
    var index = state.index, period = state.period, subscriber = state.subscriber;
    subscriber.next(index);
    if (subscriber.closed) {
        return;
    }
    else if (period === -1) {
        return subscriber.complete();
    }
    state.index = index + 1;
    this.schedule(state, period);
}
//# sourceMappingURL=timer.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/using.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/using.js ***!
  \**************************************************************/
/*! exports provided: using */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "using", function() { return using; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */



function using(resourceFactory, observableFactory) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var resource;
        try {
            resource = resourceFactory();
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        var result;
        try {
            result = observableFactory(resource);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        var source = result ? Object(_from__WEBPACK_IMPORTED_MODULE_1__["from"])(result) : _empty__WEBPACK_IMPORTED_MODULE_2__["EMPTY"];
        var subscription = source.subscribe(subscriber);
        return function () {
            subscription.unsubscribe();
            if (resource) {
                resource.unsubscribe();
            }
        };
    });
}
//# sourceMappingURL=using.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/zip.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/zip.js ***!
  \************************************************************/
/*! exports provided: zip, ZipOperator, ZipSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return zip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZipOperator", function() { return ZipOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZipSubscriber", function() { return ZipSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromArray */ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../internal/symbol/iterator */ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_.._internal_symbol_iterator,_innerSubscribe PURE_IMPORTS_END */






function zip() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var resultSelector = observables[observables.length - 1];
    if (typeof resultSelector === 'function') {
        observables.pop();
    }
    return Object(_fromArray__WEBPACK_IMPORTED_MODULE_1__["fromArray"])(observables, undefined).lift(new ZipOperator(resultSelector));
}
var ZipOperator = /*@__PURE__*/ (function () {
    function ZipOperator(resultSelector) {
        this.resultSelector = resultSelector;
    }
    ZipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));
    };
    return ZipOperator;
}());

var ZipSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ZipSubscriber, _super);
    function ZipSubscriber(destination, resultSelector, values) {
        if (values === void 0) {
            values = Object.create(null);
        }
        var _this = _super.call(this, destination) || this;
        _this.resultSelector = resultSelector;
        _this.iterators = [];
        _this.active = 0;
        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : undefined;
        return _this;
    }
    ZipSubscriber.prototype._next = function (value) {
        var iterators = this.iterators;
        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(value)) {
            iterators.push(new StaticArrayIterator(value));
        }
        else if (typeof value[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_4__["iterator"]] === 'function') {
            iterators.push(new StaticIterator(value[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_4__["iterator"]]()));
        }
        else {
            iterators.push(new ZipBufferIterator(this.destination, this, value));
        }
    };
    ZipSubscriber.prototype._complete = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        this.unsubscribe();
        if (len === 0) {
            this.destination.complete();
            return;
        }
        this.active = len;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (iterator.stillUnsubscribed) {
                var destination = this.destination;
                destination.add(iterator.subscribe());
            }
            else {
                this.active--;
            }
        }
    };
    ZipSubscriber.prototype.notifyInactive = function () {
        this.active--;
        if (this.active === 0) {
            this.destination.complete();
        }
    };
    ZipSubscriber.prototype.checkIterators = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        var destination = this.destination;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
                return;
            }
        }
        var shouldComplete = false;
        var args = [];
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            var result = iterator.next();
            if (iterator.hasCompleted()) {
                shouldComplete = true;
            }
            if (result.done) {
                destination.complete();
                return;
            }
            args.push(result.value);
        }
        if (this.resultSelector) {
            this._tryresultSelector(args);
        }
        else {
            destination.next(args);
        }
        if (shouldComplete) {
            destination.complete();
        }
    };
    ZipSubscriber.prototype._tryresultSelector = function (args) {
        var result;
        try {
            result = this.resultSelector.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return ZipSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__["Subscriber"]));

var StaticIterator = /*@__PURE__*/ (function () {
    function StaticIterator(iterator) {
        this.iterator = iterator;
        this.nextResult = iterator.next();
    }
    StaticIterator.prototype.hasValue = function () {
        return true;
    };
    StaticIterator.prototype.next = function () {
        var result = this.nextResult;
        this.nextResult = this.iterator.next();
        return result;
    };
    StaticIterator.prototype.hasCompleted = function () {
        var nextResult = this.nextResult;
        return Boolean(nextResult && nextResult.done);
    };
    return StaticIterator;
}());
var StaticArrayIterator = /*@__PURE__*/ (function () {
    function StaticArrayIterator(array) {
        this.array = array;
        this.index = 0;
        this.length = 0;
        this.length = array.length;
    }
    StaticArrayIterator.prototype[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_4__["iterator"]] = function () {
        return this;
    };
    StaticArrayIterator.prototype.next = function (value) {
        var i = this.index++;
        var array = this.array;
        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };
    };
    StaticArrayIterator.prototype.hasValue = function () {
        return this.array.length > this.index;
    };
    StaticArrayIterator.prototype.hasCompleted = function () {
        return this.array.length === this.index;
    };
    return StaticArrayIterator;
}());
var ZipBufferIterator = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ZipBufferIterator, _super);
    function ZipBufferIterator(destination, parent, observable) {
        var _this = _super.call(this, destination) || this;
        _this.parent = parent;
        _this.observable = observable;
        _this.stillUnsubscribed = true;
        _this.buffer = [];
        _this.isComplete = false;
        return _this;
    }
    ZipBufferIterator.prototype[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_4__["iterator"]] = function () {
        return this;
    };
    ZipBufferIterator.prototype.next = function () {
        var buffer = this.buffer;
        if (buffer.length === 0 && this.isComplete) {
            return { value: null, done: true };
        }
        else {
            return { value: buffer.shift(), done: false };
        }
    };
    ZipBufferIterator.prototype.hasValue = function () {
        return this.buffer.length > 0;
    };
    ZipBufferIterator.prototype.hasCompleted = function () {
        return this.buffer.length === 0 && this.isComplete;
    };
    ZipBufferIterator.prototype.notifyComplete = function () {
        if (this.buffer.length > 0) {
            this.isComplete = true;
            this.parent.notifyInactive();
        }
        else {
            this.destination.complete();
        }
    };
    ZipBufferIterator.prototype.notifyNext = function (innerValue) {
        this.buffer.push(innerValue);
        this.parent.checkIterators();
    };
    ZipBufferIterator.prototype.subscribe = function () {
        return Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_5__["innerSubscribe"])(this.observable, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_5__["SimpleInnerSubscriber"](this));
    };
    return ZipBufferIterator;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_5__["SimpleOuterSubscriber"]));
//# sourceMappingURL=zip.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/concatAll.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/concatAll.js ***!
  \*****************************************************************/
/*! exports provided: concatAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatAll", function() { return concatAll; });
/* harmony import */ var _mergeAll__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeAll */ "./node_modules/rxjs/_esm5/internal/operators/mergeAll.js");
/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */

function concatAll() {
    return Object(_mergeAll__WEBPACK_IMPORTED_MODULE_0__["mergeAll"])(1);
}
//# sourceMappingURL=concatAll.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/filter.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/filter.js ***!
  \**************************************************************/
/*! exports provided: filter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return filter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function filter(predicate, thisArg) {
    return function filterOperatorFunction(source) {
        return source.lift(new FilterOperator(predicate, thisArg));
    };
}
var FilterOperator = /*@__PURE__*/ (function () {
    function FilterOperator(predicate, thisArg) {
        this.predicate = predicate;
        this.thisArg = thisArg;
    }
    FilterOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
    };
    return FilterOperator;
}());
var FilterSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](FilterSubscriber, _super);
    function FilterSubscriber(destination, predicate, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.thisArg = thisArg;
        _this.count = 0;
        return _this;
    }
    FilterSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.predicate.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.destination.next(value);
        }
    };
    return FilterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=filter.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/groupBy.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/groupBy.js ***!
  \***************************************************************/
/*! exports provided: groupBy, GroupedObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return groupBy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupedObservable", function() { return GroupedObservable; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */





function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
    return function (source) {
        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));
    };
}
var GroupByOperator = /*@__PURE__*/ (function () {
    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {
        this.keySelector = keySelector;
        this.elementSelector = elementSelector;
        this.durationSelector = durationSelector;
        this.subjectSelector = subjectSelector;
    }
    GroupByOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));
    };
    return GroupByOperator;
}());
var GroupBySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](GroupBySubscriber, _super);
    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.elementSelector = elementSelector;
        _this.durationSelector = durationSelector;
        _this.subjectSelector = subjectSelector;
        _this.groups = null;
        _this.attemptedToUnsubscribe = false;
        _this.count = 0;
        return _this;
    }
    GroupBySubscriber.prototype._next = function (value) {
        var key;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            this.error(err);
            return;
        }
        this._group(value, key);
    };
    GroupBySubscriber.prototype._group = function (value, key) {
        var groups = this.groups;
        if (!groups) {
            groups = this.groups = new Map();
        }
        var group = groups.get(key);
        var element;
        if (this.elementSelector) {
            try {
                element = this.elementSelector(value);
            }
            catch (err) {
                this.error(err);
            }
        }
        else {
            element = value;
        }
        if (!group) {
            group = (this.subjectSelector ? this.subjectSelector() : new _Subject__WEBPACK_IMPORTED_MODULE_4__["Subject"]());
            groups.set(key, group);
            var groupedObservable = new GroupedObservable(key, group, this);
            this.destination.next(groupedObservable);
            if (this.durationSelector) {
                var duration = void 0;
                try {
                    duration = this.durationSelector(new GroupedObservable(key, group));
                }
                catch (err) {
                    this.error(err);
                    return;
                }
                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));
            }
        }
        if (!group.closed) {
            group.next(element);
        }
    };
    GroupBySubscriber.prototype._error = function (err) {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.error(err);
            });
            groups.clear();
        }
        this.destination.error(err);
    };
    GroupBySubscriber.prototype._complete = function () {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.complete();
            });
            groups.clear();
        }
        this.destination.complete();
    };
    GroupBySubscriber.prototype.removeGroup = function (key) {
        this.groups.delete(key);
    };
    GroupBySubscriber.prototype.unsubscribe = function () {
        if (!this.closed) {
            this.attemptedToUnsubscribe = true;
            if (this.count === 0) {
                _super.prototype.unsubscribe.call(this);
            }
        }
    };
    return GroupBySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
var GroupDurationSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](GroupDurationSubscriber, _super);
    function GroupDurationSubscriber(key, group, parent) {
        var _this = _super.call(this, group) || this;
        _this.key = key;
        _this.group = group;
        _this.parent = parent;
        return _this;
    }
    GroupDurationSubscriber.prototype._next = function (value) {
        this.complete();
    };
    GroupDurationSubscriber.prototype._unsubscribe = function () {
        var _a = this, parent = _a.parent, key = _a.key;
        this.key = this.parent = null;
        if (parent) {
            parent.removeGroup(key);
        }
    };
    return GroupDurationSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
var GroupedObservable = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](GroupedObservable, _super);
    function GroupedObservable(key, groupSubject, refCountSubscription) {
        var _this = _super.call(this) || this;
        _this.key = key;
        _this.groupSubject = groupSubject;
        _this.refCountSubscription = refCountSubscription;
        return _this;
    }
    GroupedObservable.prototype._subscribe = function (subscriber) {
        var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"]();
        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;
        if (refCountSubscription && !refCountSubscription.closed) {
            subscription.add(new InnerRefCountSubscription(refCountSubscription));
        }
        subscription.add(groupSubject.subscribe(subscriber));
        return subscription;
    };
    return GroupedObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_3__["Observable"]));

var InnerRefCountSubscription = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](InnerRefCountSubscription, _super);
    function InnerRefCountSubscription(parent) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        parent.count++;
        return _this;
    }
    InnerRefCountSubscription.prototype.unsubscribe = function () {
        var parent = this.parent;
        if (!parent.closed && !this.closed) {
            _super.prototype.unsubscribe.call(this);
            parent.count -= 1;
            if (parent.count === 0 && parent.attemptedToUnsubscribe) {
                parent.unsubscribe();
            }
        }
    };
    return InnerRefCountSubscription;
}(_Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"]));
//# sourceMappingURL=groupBy.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/map.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/map.js ***!
  \***********************************************************/
/*! exports provided: map, MapOperator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapOperator", function() { return MapOperator; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function map(project, thisArg) {
    return function mapOperation(source) {
        if (typeof project !== 'function') {
            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
        }
        return source.lift(new MapOperator(project, thisArg));
    };
}
var MapOperator = /*@__PURE__*/ (function () {
    function MapOperator(project, thisArg) {
        this.project = project;
        this.thisArg = thisArg;
    }
    MapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
    };
    return MapOperator;
}());

var MapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapSubscriber, _super);
    function MapSubscriber(destination, project, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.count = 0;
        _this.thisArg = thisArg || _this;
        return _this;
    }
    MapSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.project.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return MapSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=map.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/mergeAll.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/mergeAll.js ***!
  \****************************************************************/
/*! exports provided: mergeAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeAll", function() { return mergeAll; });
/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeMap */ "./node_modules/rxjs/_esm5/internal/operators/mergeMap.js");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */


function mergeAll(concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(_util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"], concurrent);
}
//# sourceMappingURL=mergeAll.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/mergeMap.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/mergeMap.js ***!
  \****************************************************************/
/*! exports provided: mergeMap, MergeMapOperator, MergeMapSubscriber, flatMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeMap", function() { return mergeMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeMapOperator", function() { return MergeMapOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeMapSubscriber", function() { return MergeMapSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flatMap", function() { return flatMap; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */




function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    if (typeof resultSelector === 'function') {
        return function (source) { return source.pipe(mergeMap(function (a, i) { return Object(_observable_from__WEBPACK_IMPORTED_MODULE_2__["from"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_1__["map"])(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };
    }
    else if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
    }
    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };
}
var MergeMapOperator = /*@__PURE__*/ (function () {
    function MergeMapOperator(project, concurrent) {
        if (concurrent === void 0) {
            concurrent = Number.POSITIVE_INFINITY;
        }
        this.project = project;
        this.concurrent = concurrent;
    }
    MergeMapOperator.prototype.call = function (observer, source) {
        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));
    };
    return MergeMapOperator;
}());

var MergeMapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MergeMapSubscriber, _super);
    function MergeMapSubscriber(destination, project, concurrent) {
        if (concurrent === void 0) {
            concurrent = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.concurrent = concurrent;
        _this.hasCompleted = false;
        _this.buffer = [];
        _this.active = 0;
        _this.index = 0;
        return _this;
    }
    MergeMapSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            this._tryNext(value);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeMapSubscriber.prototype._tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.active++;
        this._innerSub(result);
    };
    MergeMapSubscriber.prototype._innerSub = function (ish) {
        var innerSubscriber = new _innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["SimpleInnerSubscriber"](this);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["innerSubscribe"])(ish, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    MergeMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    MergeMapSubscriber.prototype.notifyNext = function (innerValue) {
        this.destination.next(innerValue);
    };
    MergeMapSubscriber.prototype.notifyComplete = function () {
        var buffer = this.buffer;
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeMapSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["SimpleOuterSubscriber"]));

var flatMap = mergeMap;
//# sourceMappingURL=mergeMap.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/observeOn.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/observeOn.js ***!
  \*****************************************************************/
/*! exports provided: observeOn, ObserveOnOperator, ObserveOnSubscriber, ObserveOnMessage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "observeOn", function() { return observeOn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserveOnOperator", function() { return ObserveOnOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserveOnSubscriber", function() { return ObserveOnSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserveOnMessage", function() { return ObserveOnMessage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Notification */ "./node_modules/rxjs/_esm5/internal/Notification.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */



function observeOn(scheduler, delay) {
    if (delay === void 0) {
        delay = 0;
    }
    return function observeOnOperatorFunction(source) {
        return source.lift(new ObserveOnOperator(scheduler, delay));
    };
}
var ObserveOnOperator = /*@__PURE__*/ (function () {
    function ObserveOnOperator(scheduler, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        this.scheduler = scheduler;
        this.delay = delay;
    }
    ObserveOnOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
    };
    return ObserveOnOperator;
}());

var ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ObserveOnSubscriber, _super);
    function ObserveOnSubscriber(destination, scheduler, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        var _this = _super.call(this, destination) || this;
        _this.scheduler = scheduler;
        _this.delay = delay;
        return _this;
    }
    ObserveOnSubscriber.dispatch = function (arg) {
        var notification = arg.notification, destination = arg.destination;
        notification.observe(destination);
        this.unsubscribe();
    };
    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {
        var destination = this.destination;
        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
    };
    ObserveOnSubscriber.prototype._next = function (value) {
        this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createNext(value));
    };
    ObserveOnSubscriber.prototype._error = function (err) {
        this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createError(err));
        this.unsubscribe();
    };
    ObserveOnSubscriber.prototype._complete = function () {
        this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createComplete());
        this.unsubscribe();
    };
    return ObserveOnSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

var ObserveOnMessage = /*@__PURE__*/ (function () {
    function ObserveOnMessage(notification, destination) {
        this.notification = notification;
        this.destination = destination;
    }
    return ObserveOnMessage;
}());

//# sourceMappingURL=observeOn.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/refCount.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/refCount.js ***!
  \****************************************************************/
/*! exports provided: refCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "refCount", function() { return refCount; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function refCount() {
    return function refCountOperatorFunction(source) {
        return source.lift(new RefCountOperator(source));
    };
}
var RefCountOperator = /*@__PURE__*/ (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=refCount.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js ***!
  \*********************************************************************/
/*! exports provided: scheduleArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduleArray", function() { return scheduleArray; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function scheduleArray(input, scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        var i = 0;
        sub.add(scheduler.schedule(function () {
            if (i === input.length) {
                subscriber.complete();
                return;
            }
            subscriber.next(input[i++]);
            if (!subscriber.closed) {
                sub.add(this.schedule());
            }
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleArray.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js":
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js ***!
  \************************************************************************/
/*! exports provided: scheduleIterable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduleIterable", function() { return scheduleIterable; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../symbol/iterator */ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js");
/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator PURE_IMPORTS_END */



function scheduleIterable(input, scheduler) {
    if (!input) {
        throw new Error('Iterable cannot be null');
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        var iterator;
        sub.add(function () {
            if (iterator && typeof iterator.return === 'function') {
                iterator.return();
            }
        });
        sub.add(scheduler.schedule(function () {
            iterator = input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_2__["iterator"]]();
            sub.add(scheduler.schedule(function () {
                if (subscriber.closed) {
                    return;
                }
                var value;
                var done;
                try {
                    var result = iterator.next();
                    value = result.value;
                    done = result.done;
                }
                catch (err) {
                    subscriber.error(err);
                    return;
                }
                if (done) {
                    subscriber.complete();
                }
                else {
                    subscriber.next(value);
                    this.schedule();
                }
            }));
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleIterable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js":
/*!**************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js ***!
  \**************************************************************************/
/*! exports provided: scheduleObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduleObservable", function() { return scheduleObservable; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable PURE_IMPORTS_END */



function scheduleObservable(input, scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        sub.add(scheduler.schedule(function () {
            var observable = input[_symbol_observable__WEBPACK_IMPORTED_MODULE_2__["observable"]]();
            sub.add(observable.subscribe({
                next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },
                error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },
                complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },
            }));
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js":
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js ***!
  \***********************************************************************/
/*! exports provided: schedulePromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "schedulePromise", function() { return schedulePromise; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function schedulePromise(input, scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        sub.add(scheduler.schedule(function () {
            return input.then(function (value) {
                sub.add(scheduler.schedule(function () {
                    subscriber.next(value);
                    sub.add(scheduler.schedule(function () { return subscriber.complete(); }));
                }));
            }, function (err) {
                sub.add(scheduler.schedule(function () { return subscriber.error(err); }));
            });
        }));
        return sub;
    });
}
//# sourceMappingURL=schedulePromise.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js ***!
  \*****************************************************************/
/*! exports provided: scheduled */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduled", function() { return scheduled; });
/* harmony import */ var _scheduleObservable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scheduleObservable */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js");
/* harmony import */ var _schedulePromise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schedulePromise */ "./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js");
/* harmony import */ var _scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scheduleArray */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js");
/* harmony import */ var _scheduleIterable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scheduleIterable */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js");
/* harmony import */ var _util_isInteropObservable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isInteropObservable */ "./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js");
/* harmony import */ var _util_isPromise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isPromise */ "./node_modules/rxjs/_esm5/internal/util/isPromise.js");
/* harmony import */ var _util_isArrayLike__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/isArrayLike */ "./node_modules/rxjs/_esm5/internal/util/isArrayLike.js");
/* harmony import */ var _util_isIterable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/isIterable */ "./node_modules/rxjs/_esm5/internal/util/isIterable.js");
/** PURE_IMPORTS_START _scheduleObservable,_schedulePromise,_scheduleArray,_scheduleIterable,_util_isInteropObservable,_util_isPromise,_util_isArrayLike,_util_isIterable PURE_IMPORTS_END */








function scheduled(input, scheduler) {
    if (input != null) {
        if (Object(_util_isInteropObservable__WEBPACK_IMPORTED_MODULE_4__["isInteropObservable"])(input)) {
            return Object(_scheduleObservable__WEBPACK_IMPORTED_MODULE_0__["scheduleObservable"])(input, scheduler);
        }
        else if (Object(_util_isPromise__WEBPACK_IMPORTED_MODULE_5__["isPromise"])(input)) {
            return Object(_schedulePromise__WEBPACK_IMPORTED_MODULE_1__["schedulePromise"])(input, scheduler);
        }
        else if (Object(_util_isArrayLike__WEBPACK_IMPORTED_MODULE_6__["isArrayLike"])(input)) {
            return Object(_scheduleArray__WEBPACK_IMPORTED_MODULE_2__["scheduleArray"])(input, scheduler);
        }
        else if (Object(_util_isIterable__WEBPACK_IMPORTED_MODULE_7__["isIterable"])(input) || typeof input === 'string') {
            return Object(_scheduleIterable__WEBPACK_IMPORTED_MODULE_3__["scheduleIterable"])(input, scheduler);
        }
    }
    throw new TypeError((input !== null && typeof input || input) + ' is not observable');
}
//# sourceMappingURL=scheduled.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/Action.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/Action.js ***!
  \**************************************************************/
/*! exports provided: Action */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Action", function() { return Action; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */


var Action = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Action, _super);
    function Action(scheduler, work) {
        return _super.call(this) || this;
    }
    Action.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return this;
    };
    return Action;
}(_Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]));

//# sourceMappingURL=Action.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameAction.js":
/*!****************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameAction.js ***!
  \****************************************************************************/
/*! exports provided: AnimationFrameAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimationFrameAction", function() { return AnimationFrameAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js");
/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */


var AnimationFrameAction = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AnimationFrameAction, _super);
    function AnimationFrameAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        scheduler.actions.push(this);
        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () { return scheduler.flush(null); }));
    };
    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        if (scheduler.actions.length === 0) {
            cancelAnimationFrame(id);
            scheduler.scheduled = undefined;
        }
        return undefined;
    };
    return AnimationFrameAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_1__["AsyncAction"]));

//# sourceMappingURL=AnimationFrameAction.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameScheduler.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameScheduler.js ***!
  \*******************************************************************************/
/*! exports provided: AnimationFrameScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimationFrameScheduler", function() { return AnimationFrameScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js");
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var AnimationFrameScheduler = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AnimationFrameScheduler, _super);
    function AnimationFrameScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AnimationFrameScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AnimationFrameScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"]));

//# sourceMappingURL=AnimationFrameScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js ***!
  \******************************************************************/
/*! exports provided: AsapAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsapAction", function() { return AsapAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_Immediate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Immediate */ "./node_modules/rxjs/_esm5/internal/util/Immediate.js");
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AsyncAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js");
/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */



var AsapAction = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsapAction, _super);
    function AsapAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        scheduler.actions.push(this);
        return scheduler.scheduled || (scheduler.scheduled = _util_Immediate__WEBPACK_IMPORTED_MODULE_1__["Immediate"].setImmediate(scheduler.flush.bind(scheduler, null)));
    };
    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        if (scheduler.actions.length === 0) {
            _util_Immediate__WEBPACK_IMPORTED_MODULE_1__["Immediate"].clearImmediate(id);
            scheduler.scheduled = undefined;
        }
        return undefined;
    };
    return AsapAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_2__["AsyncAction"]));

//# sourceMappingURL=AsapAction.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js ***!
  \*********************************************************************/
/*! exports provided: AsapScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsapScheduler", function() { return AsapScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js");
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var AsapScheduler = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsapScheduler, _super);
    function AsapScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AsapScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsapScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"]));

//# sourceMappingURL=AsapScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js ***!
  \*******************************************************************/
/*! exports provided: AsyncAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncAction", function() { return AsyncAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Action */ "./node_modules/rxjs/_esm5/internal/scheduler/Action.js");
/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */


var AsyncAction = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsyncAction, _super);
    function AsyncAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        _this.pending = false;
        return _this;
    }
    AsyncAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (this.closed) {
            return this;
        }
        this.state = state;
        var id = this.id;
        var scheduler = this.scheduler;
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, delay);
        }
        this.pending = true;
        this.delay = delay;
        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
        return this;
    };
    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return setInterval(scheduler.flush.bind(scheduler, this), delay);
    };
    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && this.delay === delay && this.pending === false) {
            return id;
        }
        clearInterval(id);
        return undefined;
    };
    AsyncAction.prototype.execute = function (state, delay) {
        if (this.closed) {
            return new Error('executing a cancelled action');
        }
        this.pending = false;
        var error = this._execute(state, delay);
        if (error) {
            return error;
        }
        else if (this.pending === false && this.id != null) {
            this.id = this.recycleAsyncId(this.scheduler, this.id, null);
        }
    };
    AsyncAction.prototype._execute = function (state, delay) {
        var errored = false;
        var errorValue = undefined;
        try {
            this.work(state);
        }
        catch (e) {
            errored = true;
            errorValue = !!e && e || new Error(e);
        }
        if (errored) {
            this.unsubscribe();
            return errorValue;
        }
    };
    AsyncAction.prototype._unsubscribe = function () {
        var id = this.id;
        var scheduler = this.scheduler;
        var actions = scheduler.actions;
        var index = actions.indexOf(this);
        this.work = null;
        this.state = null;
        this.pending = false;
        this.scheduler = null;
        if (index !== -1) {
            actions.splice(index, 1);
        }
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, null);
        }
        this.delay = null;
    };
    return AsyncAction;
}(_Action__WEBPACK_IMPORTED_MODULE_1__["Action"]));

//# sourceMappingURL=AsyncAction.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js ***!
  \**********************************************************************/
/*! exports provided: AsyncScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncScheduler", function() { return AsyncScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Scheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Scheduler */ "./node_modules/rxjs/_esm5/internal/Scheduler.js");
/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */


var AsyncScheduler = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsyncScheduler, _super);
    function AsyncScheduler(SchedulerAction, now) {
        if (now === void 0) {
            now = _Scheduler__WEBPACK_IMPORTED_MODULE_1__["Scheduler"].now;
        }
        var _this = _super.call(this, SchedulerAction, function () {
            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {
                return AsyncScheduler.delegate.now();
            }
            else {
                return now();
            }
        }) || this;
        _this.actions = [];
        _this.active = false;
        _this.scheduled = undefined;
        return _this;
    }
    AsyncScheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) {
            delay = 0;
        }
        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {
            return AsyncScheduler.delegate.schedule(work, delay, state);
        }
        else {
            return _super.prototype.schedule.call(this, work, delay, state);
        }
    };
    AsyncScheduler.prototype.flush = function (action) {
        var actions = this.actions;
        if (this.active) {
            actions.push(action);
            return;
        }
        var error;
        this.active = true;
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (action = actions.shift());
        this.active = false;
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsyncScheduler;
}(_Scheduler__WEBPACK_IMPORTED_MODULE_1__["Scheduler"]));

//# sourceMappingURL=AsyncScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js ***!
  \*******************************************************************/
/*! exports provided: QueueAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueueAction", function() { return QueueAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js");
/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */


var QueueAction = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](QueueAction, _super);
    function QueueAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    QueueAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay > 0) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.delay = delay;
        this.state = state;
        this.scheduler.flush(this);
        return this;
    };
    QueueAction.prototype.execute = function (state, delay) {
        return (delay > 0 || this.closed) ?
            _super.prototype.execute.call(this, state, delay) :
            this._execute(state, delay);
    };
    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        return scheduler.flush(this);
    };
    return QueueAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_1__["AsyncAction"]));

//# sourceMappingURL=QueueAction.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js ***!
  \**********************************************************************/
/*! exports provided: QueueScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueueScheduler", function() { return QueueScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js");
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var QueueScheduler = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](QueueScheduler, _super);
    function QueueScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return QueueScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"]));

//# sourceMappingURL=QueueScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/VirtualTimeScheduler.js":
/*!****************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/VirtualTimeScheduler.js ***!
  \****************************************************************************/
/*! exports provided: VirtualTimeScheduler, VirtualAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VirtualTimeScheduler", function() { return VirtualTimeScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VirtualAction", function() { return VirtualAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AsyncScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js");
/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */



var VirtualTimeScheduler = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](VirtualTimeScheduler, _super);
    function VirtualTimeScheduler(SchedulerAction, maxFrames) {
        if (SchedulerAction === void 0) {
            SchedulerAction = VirtualAction;
        }
        if (maxFrames === void 0) {
            maxFrames = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;
        _this.maxFrames = maxFrames;
        _this.frame = 0;
        _this.index = -1;
        return _this;
    }
    VirtualTimeScheduler.prototype.flush = function () {
        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;
        var error, action;
        while ((action = actions[0]) && action.delay <= maxFrames) {
            actions.shift();
            this.frame = action.delay;
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        }
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    VirtualTimeScheduler.frameTimeFactor = 10;
    return VirtualTimeScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_2__["AsyncScheduler"]));

var VirtualAction = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](VirtualAction, _super);
    function VirtualAction(scheduler, work, index) {
        if (index === void 0) {
            index = scheduler.index += 1;
        }
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        _this.index = index;
        _this.active = true;
        _this.index = scheduler.index = index;
        return _this;
    }
    VirtualAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (!this.id) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.active = false;
        var action = new VirtualAction(this.scheduler, this.work);
        this.add(action);
        return action.schedule(state, delay);
    };
    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        this.delay = scheduler.frame + delay;
        var actions = scheduler.actions;
        actions.push(this);
        actions.sort(VirtualAction.sortActions);
        return true;
    };
    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return undefined;
    };
    VirtualAction.prototype._execute = function (state, delay) {
        if (this.active === true) {
            return _super.prototype._execute.call(this, state, delay);
        }
    };
    VirtualAction.sortActions = function (a, b) {
        if (a.delay === b.delay) {
            if (a.index === b.index) {
                return 0;
            }
            else if (a.index > b.index) {
                return 1;
            }
            else {
                return -1;
            }
        }
        else if (a.delay > b.delay) {
            return 1;
        }
        else {
            return -1;
        }
    };
    return VirtualAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_1__["AsyncAction"]));

//# sourceMappingURL=VirtualTimeScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/animationFrame.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/animationFrame.js ***!
  \**********************************************************************/
/*! exports provided: animationFrameScheduler, animationFrame */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animationFrameScheduler", function() { return animationFrameScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animationFrame", function() { return animationFrame; });
/* harmony import */ var _AnimationFrameAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AnimationFrameAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameAction.js");
/* harmony import */ var _AnimationFrameScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AnimationFrameScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameScheduler.js");
/** PURE_IMPORTS_START _AnimationFrameAction,_AnimationFrameScheduler PURE_IMPORTS_END */


var animationFrameScheduler = /*@__PURE__*/ new _AnimationFrameScheduler__WEBPACK_IMPORTED_MODULE_1__["AnimationFrameScheduler"](_AnimationFrameAction__WEBPACK_IMPORTED_MODULE_0__["AnimationFrameAction"]);
var animationFrame = animationFrameScheduler;
//# sourceMappingURL=animationFrame.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/asap.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/asap.js ***!
  \************************************************************/
/*! exports provided: asapScheduler, asap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asapScheduler", function() { return asapScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asap", function() { return asap; });
/* harmony import */ var _AsapAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsapAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js");
/* harmony import */ var _AsapScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsapScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js");
/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */


var asapScheduler = /*@__PURE__*/ new _AsapScheduler__WEBPACK_IMPORTED_MODULE_1__["AsapScheduler"](_AsapAction__WEBPACK_IMPORTED_MODULE_0__["AsapAction"]);
var asap = asapScheduler;
//# sourceMappingURL=asap.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/async.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/async.js ***!
  \*************************************************************/
/*! exports provided: asyncScheduler, async */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asyncScheduler", function() { return asyncScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "async", function() { return async; });
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsyncAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js");
/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */


var asyncScheduler = /*@__PURE__*/ new _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"](_AsyncAction__WEBPACK_IMPORTED_MODULE_0__["AsyncAction"]);
var async = asyncScheduler;
//# sourceMappingURL=async.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/queue.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/queue.js ***!
  \*************************************************************/
/*! exports provided: queueScheduler, queue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queueScheduler", function() { return queueScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queue", function() { return queue; });
/* harmony import */ var _QueueAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./QueueAction */ "./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js");
/* harmony import */ var _QueueScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./QueueScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js");
/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */


var queueScheduler = /*@__PURE__*/ new _QueueScheduler__WEBPACK_IMPORTED_MODULE_1__["QueueScheduler"](_QueueAction__WEBPACK_IMPORTED_MODULE_0__["QueueAction"]);
var queue = queueScheduler;
//# sourceMappingURL=queue.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/symbol/iterator.js ***!
  \*************************************************************/
/*! exports provided: getSymbolIterator, iterator, $$iterator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSymbolIterator", function() { return getSymbolIterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iterator", function() { return iterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$$iterator", function() { return $$iterator; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function getSymbolIterator() {
    if (typeof Symbol !== 'function' || !Symbol.iterator) {
        return '@@iterator';
    }
    return Symbol.iterator;
}
var iterator = /*@__PURE__*/ getSymbolIterator();
var $$iterator = iterator;
//# sourceMappingURL=iterator.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/symbol/observable.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/symbol/observable.js ***!
  \***************************************************************/
/*! exports provided: observable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "observable", function() { return observable; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var observable = /*@__PURE__*/ (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();
//# sourceMappingURL=observable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js ***!
  \*****************************************************************/
/*! exports provided: rxSubscriber, $$rxSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rxSubscriber", function() { return rxSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$$rxSubscriber", function() { return $$rxSubscriber; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var rxSubscriber = /*@__PURE__*/ (function () {
    return typeof Symbol === 'function'
        ? /*@__PURE__*/ Symbol('rxSubscriber')
        : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();
})();
var $$rxSubscriber = rxSubscriber;
//# sourceMappingURL=rxSubscriber.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js":
/*!**************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js ***!
  \**************************************************************************/
/*! exports provided: ArgumentOutOfRangeError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArgumentOutOfRangeError", function() { return ArgumentOutOfRangeError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var ArgumentOutOfRangeErrorImpl = /*@__PURE__*/ (function () {
    function ArgumentOutOfRangeErrorImpl() {
        Error.call(this);
        this.message = 'argument out of range';
        this.name = 'ArgumentOutOfRangeError';
        return this;
    }
    ArgumentOutOfRangeErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return ArgumentOutOfRangeErrorImpl;
})();
var ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;
//# sourceMappingURL=ArgumentOutOfRangeError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/EmptyError.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/EmptyError.js ***!
  \*************************************************************/
/*! exports provided: EmptyError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmptyError", function() { return EmptyError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var EmptyErrorImpl = /*@__PURE__*/ (function () {
    function EmptyErrorImpl() {
        Error.call(this);
        this.message = 'no elements in sequence';
        this.name = 'EmptyError';
        return this;
    }
    EmptyErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return EmptyErrorImpl;
})();
var EmptyError = EmptyErrorImpl;
//# sourceMappingURL=EmptyError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/Immediate.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/Immediate.js ***!
  \************************************************************/
/*! exports provided: Immediate, TestTools */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Immediate", function() { return Immediate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TestTools", function() { return TestTools; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var nextHandle = 1;
var RESOLVED = /*@__PURE__*/ (function () { return /*@__PURE__*/ Promise.resolve(); })();
var activeHandles = {};
function findAndClearHandle(handle) {
    if (handle in activeHandles) {
        delete activeHandles[handle];
        return true;
    }
    return false;
}
var Immediate = {
    setImmediate: function (cb) {
        var handle = nextHandle++;
        activeHandles[handle] = true;
        RESOLVED.then(function () { return findAndClearHandle(handle) && cb(); });
        return handle;
    },
    clearImmediate: function (handle) {
        findAndClearHandle(handle);
    },
};
var TestTools = {
    pending: function () {
        return Object.keys(activeHandles).length;
    }
};
//# sourceMappingURL=Immediate.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js":
/*!**************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js ***!
  \**************************************************************************/
/*! exports provided: ObjectUnsubscribedError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectUnsubscribedError", function() { return ObjectUnsubscribedError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var ObjectUnsubscribedErrorImpl = /*@__PURE__*/ (function () {
    function ObjectUnsubscribedErrorImpl() {
        Error.call(this);
        this.message = 'object unsubscribed';
        this.name = 'ObjectUnsubscribedError';
        return this;
    }
    ObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return ObjectUnsubscribedErrorImpl;
})();
var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;
//# sourceMappingURL=ObjectUnsubscribedError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/TimeoutError.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/TimeoutError.js ***!
  \***************************************************************/
/*! exports provided: TimeoutError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeoutError", function() { return TimeoutError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var TimeoutErrorImpl = /*@__PURE__*/ (function () {
    function TimeoutErrorImpl() {
        Error.call(this);
        this.message = 'Timeout has occurred';
        this.name = 'TimeoutError';
        return this;
    }
    TimeoutErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return TimeoutErrorImpl;
})();
var TimeoutError = TimeoutErrorImpl;
//# sourceMappingURL=TimeoutError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js ***!
  \**********************************************************************/
/*! exports provided: UnsubscriptionError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnsubscriptionError", function() { return UnsubscriptionError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var UnsubscriptionErrorImpl = /*@__PURE__*/ (function () {
    function UnsubscriptionErrorImpl(errors) {
        Error.call(this);
        this.message = errors ?
            errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) { return i + 1 + ") " + err.toString(); }).join('\n  ') : '';
        this.name = 'UnsubscriptionError';
        this.errors = errors;
        return this;
    }
    UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return UnsubscriptionErrorImpl;
})();
var UnsubscriptionError = UnsubscriptionErrorImpl;
//# sourceMappingURL=UnsubscriptionError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/canReportError.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/canReportError.js ***!
  \*****************************************************************/
/*! exports provided: canReportError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canReportError", function() { return canReportError; });
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */

function canReportError(observer) {
    while (observer) {
        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;
        if (closed_1 || isStopped) {
            return false;
        }
        else if (destination && destination instanceof _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"]) {
            observer = destination;
        }
        else {
            observer = null;
        }
    }
    return true;
}
//# sourceMappingURL=canReportError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/hostReportError.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/hostReportError.js ***!
  \******************************************************************/
/*! exports provided: hostReportError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hostReportError", function() { return hostReportError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function hostReportError(err) {
    setTimeout(function () { throw err; }, 0);
}
//# sourceMappingURL=hostReportError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/identity.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/identity.js ***!
  \***********************************************************/
/*! exports provided: identity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function identity(x) {
    return x;
}
//# sourceMappingURL=identity.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isArray.js":
/*!**********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isArray.js ***!
  \**********************************************************/
/*! exports provided: isArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return isArray; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArray = /*@__PURE__*/ (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();
//# sourceMappingURL=isArray.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isArrayLike.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isArrayLike.js ***!
  \**************************************************************/
/*! exports provided: isArrayLike */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArrayLike", function() { return isArrayLike; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });
//# sourceMappingURL=isArrayLike.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isFunction.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isFunction.js ***!
  \*************************************************************/
/*! exports provided: isFunction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return isFunction; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isFunction(x) {
    return typeof x === 'function';
}
//# sourceMappingURL=isFunction.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js ***!
  \**********************************************************************/
/*! exports provided: isInteropObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInteropObservable", function() { return isInteropObservable; });
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */

function isInteropObservable(input) {
    return input && typeof input[_symbol_observable__WEBPACK_IMPORTED_MODULE_0__["observable"]] === 'function';
}
//# sourceMappingURL=isInteropObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isIterable.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isIterable.js ***!
  \*************************************************************/
/*! exports provided: isIterable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIterable", function() { return isIterable; });
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/iterator */ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js");
/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */

function isIterable(input) {
    return input && typeof input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__["iterator"]] === 'function';
}
//# sourceMappingURL=isIterable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isNumeric.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isNumeric.js ***!
  \************************************************************/
/*! exports provided: isNumeric */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumeric", function() { return isNumeric; });
/* harmony import */ var _isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */

function isNumeric(val) {
    return !Object(_isArray__WEBPACK_IMPORTED_MODULE_0__["isArray"])(val) && (val - parseFloat(val) + 1) >= 0;
}
//# sourceMappingURL=isNumeric.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isObject.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isObject.js ***!
  \***********************************************************/
/*! exports provided: isObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return isObject; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isObject(x) {
    return x !== null && typeof x === 'object';
}
//# sourceMappingURL=isObject.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isObservable.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isObservable.js ***!
  \***************************************************************/
/*! exports provided: isObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObservable", function() { return isObservable; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function isObservable(obj) {
    return !!obj && (obj instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"] || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));
}
//# sourceMappingURL=isObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isPromise.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isPromise.js ***!
  \************************************************************/
/*! exports provided: isPromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPromise", function() { return isPromise; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isPromise(value) {
    return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
}
//# sourceMappingURL=isPromise.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isScheduler.js ***!
  \**************************************************************/
/*! exports provided: isScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isScheduler", function() { return isScheduler; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isScheduler(value) {
    return value && typeof value.schedule === 'function';
}
//# sourceMappingURL=isScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/noop.js":
/*!*******************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/noop.js ***!
  \*******************************************************/
/*! exports provided: noop */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return noop; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function noop() { }
//# sourceMappingURL=noop.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/not.js":
/*!******************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/not.js ***!
  \******************************************************/
/*! exports provided: not */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "not", function() { return not; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function not(pred, thisArg) {
    function notPred() {
        return !(notPred.pred.apply(notPred.thisArg, arguments));
    }
    notPred.pred = pred;
    notPred.thisArg = thisArg;
    return notPred;
}
//# sourceMappingURL=not.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/pipe.js":
/*!*******************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/pipe.js ***!
  \*******************************************************/
/*! exports provided: pipe, pipeFromArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pipe", function() { return pipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pipeFromArray", function() { return pipeFromArray; });
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/** PURE_IMPORTS_START _identity PURE_IMPORTS_END */

function pipe() {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
    }
    return pipeFromArray(fns);
}
function pipeFromArray(fns) {
    if (fns.length === 0) {
        return _identity__WEBPACK_IMPORTED_MODULE_0__["identity"];
    }
    if (fns.length === 1) {
        return fns[0];
    }
    return function piped(input) {
        return fns.reduce(function (prev, fn) { return fn(prev); }, input);
    };
}
//# sourceMappingURL=pipe.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeTo.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeTo.js ***!
  \**************************************************************/
/*! exports provided: subscribeTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeTo", function() { return subscribeTo; });
/* harmony import */ var _subscribeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribeToArray */ "./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js");
/* harmony import */ var _subscribeToPromise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./subscribeToPromise */ "./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js");
/* harmony import */ var _subscribeToIterable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./subscribeToIterable */ "./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js");
/* harmony import */ var _subscribeToObservable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./subscribeToObservable */ "./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js");
/* harmony import */ var _isArrayLike__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isArrayLike */ "./node_modules/rxjs/_esm5/internal/util/isArrayLike.js");
/* harmony import */ var _isPromise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isPromise */ "./node_modules/rxjs/_esm5/internal/util/isPromise.js");
/* harmony import */ var _isObject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./isObject */ "./node_modules/rxjs/_esm5/internal/util/isObject.js");
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../symbol/iterator */ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js");
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/** PURE_IMPORTS_START _subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */









var subscribeTo = function (result) {
    if (!!result && typeof result[_symbol_observable__WEBPACK_IMPORTED_MODULE_8__["observable"]] === 'function') {
        return Object(_subscribeToObservable__WEBPACK_IMPORTED_MODULE_3__["subscribeToObservable"])(result);
    }
    else if (Object(_isArrayLike__WEBPACK_IMPORTED_MODULE_4__["isArrayLike"])(result)) {
        return Object(_subscribeToArray__WEBPACK_IMPORTED_MODULE_0__["subscribeToArray"])(result);
    }
    else if (Object(_isPromise__WEBPACK_IMPORTED_MODULE_5__["isPromise"])(result)) {
        return Object(_subscribeToPromise__WEBPACK_IMPORTED_MODULE_1__["subscribeToPromise"])(result);
    }
    else if (!!result && typeof result[_symbol_iterator__WEBPACK_IMPORTED_MODULE_7__["iterator"]] === 'function') {
        return Object(_subscribeToIterable__WEBPACK_IMPORTED_MODULE_2__["subscribeToIterable"])(result);
    }
    else {
        var value = Object(_isObject__WEBPACK_IMPORTED_MODULE_6__["isObject"])(result) ? 'an invalid object' : "'" + result + "'";
        var msg = "You provided " + value + " where a stream was expected."
            + ' You can provide an Observable, Promise, Array, or Iterable.';
        throw new TypeError(msg);
    }
};
//# sourceMappingURL=subscribeTo.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js ***!
  \*******************************************************************/
/*! exports provided: subscribeToArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToArray", function() { return subscribeToArray; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var subscribeToArray = function (array) {
    return function (subscriber) {
        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {
            subscriber.next(array[i]);
        }
        subscriber.complete();
    };
};
//# sourceMappingURL=subscribeToArray.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js ***!
  \**********************************************************************/
/*! exports provided: subscribeToIterable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToIterable", function() { return subscribeToIterable; });
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/iterator */ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js");
/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */

var subscribeToIterable = function (iterable) {
    return function (subscriber) {
        var iterator = iterable[_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__["iterator"]]();
        do {
            var item = void 0;
            try {
                item = iterator.next();
            }
            catch (err) {
                subscriber.error(err);
                return subscriber;
            }
            if (item.done) {
                subscriber.complete();
                break;
            }
            subscriber.next(item.value);
            if (subscriber.closed) {
                break;
            }
        } while (true);
        if (typeof iterator.return === 'function') {
            subscriber.add(function () {
                if (iterator.return) {
                    iterator.return();
                }
            });
        }
        return subscriber;
    };
};
//# sourceMappingURL=subscribeToIterable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js":
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js ***!
  \************************************************************************/
/*! exports provided: subscribeToObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToObservable", function() { return subscribeToObservable; });
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */

var subscribeToObservable = function (obj) {
    return function (subscriber) {
        var obs = obj[_symbol_observable__WEBPACK_IMPORTED_MODULE_0__["observable"]]();
        if (typeof obs.subscribe !== 'function') {
            throw new TypeError('Provided object does not correctly implement Symbol.observable');
        }
        else {
            return obs.subscribe(subscriber);
        }
    };
};
//# sourceMappingURL=subscribeToObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js ***!
  \*********************************************************************/
/*! exports provided: subscribeToPromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToPromise", function() { return subscribeToPromise; });
/* harmony import */ var _hostReportError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hostReportError */ "./node_modules/rxjs/_esm5/internal/util/hostReportError.js");
/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */

var subscribeToPromise = function (promise) {
    return function (subscriber) {
        promise.then(function (value) {
            if (!subscriber.closed) {
                subscriber.next(value);
                subscriber.complete();
            }
        }, function (err) { return subscriber.error(err); })
            .then(null, _hostReportError__WEBPACK_IMPORTED_MODULE_0__["hostReportError"]);
        return subscriber;
    };
};
//# sourceMappingURL=subscribeToPromise.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js ***!
  \********************************************************************/
/*! exports provided: subscribeToResult */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToResult", function() { return subscribeToResult; });
/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../InnerSubscriber */ "./node_modules/rxjs/_esm5/internal/InnerSubscriber.js");
/* harmony import */ var _subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./subscribeTo */ "./node_modules/rxjs/_esm5/internal/util/subscribeTo.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo,_Observable PURE_IMPORTS_END */



function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, innerSubscriber) {
    if (innerSubscriber === void 0) {
        innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_0__["InnerSubscriber"](outerSubscriber, outerValue, outerIndex);
    }
    if (innerSubscriber.closed) {
        return undefined;
    }
    if (result instanceof _Observable__WEBPACK_IMPORTED_MODULE_2__["Observable"]) {
        return result.subscribe(innerSubscriber);
    }
    return Object(_subscribeTo__WEBPACK_IMPORTED_MODULE_1__["subscribeTo"])(result)(innerSubscriber);
}
//# sourceMappingURL=subscribeToResult.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/toSubscriber.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/toSubscriber.js ***!
  \***************************************************************/
/*! exports provided: toSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toSubscriber", function() { return toSubscriber; });
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../symbol/rxSubscriber */ "./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js");
/* harmony import */ var _Observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observer */ "./node_modules/rxjs/_esm5/internal/Observer.js");
/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */



function toSubscriber(nextOrObserver, error, complete) {
    if (nextOrObserver) {
        if (nextOrObserver instanceof _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"]) {
            return nextOrObserver;
        }
        if (nextOrObserver[_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__["rxSubscriber"]]) {
            return nextOrObserver[_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__["rxSubscriber"]]();
        }
    }
    if (!nextOrObserver && !error && !complete) {
        return new _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"](_Observer__WEBPACK_IMPORTED_MODULE_2__["empty"]);
    }
    return new _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"](nextOrObserver, error, complete);
}
//# sourceMappingURL=toSubscriber.js.map


/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __createBinding, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__createBinding", function() { return __createBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function() { return __classPrivateFieldGet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function() { return __classPrivateFieldSet; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return index; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ "./node_modules/next/dist/next-server/lib/head.js");
/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _components_page_home_HomePage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/page/home/HomePage */ "./components/page/home/HomePage.tsx");
var _jsxFileName = "D:\\development\\rpg\\shubgath\\pages\\index.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;



/**
*
*/

function index(properties) {
  return __jsx("div", {
    className: "application",
    id: "application"
  }, __jsx(next_head__WEBPACK_IMPORTED_MODULE_1___default.a, null, __jsx("title", null, "Shubniggurath"), __jsx("meta", {
    name: "viewport",
    content: "initial-scale=1.0, width=device-width"
  })), __jsx(_components_page_home_HomePage__WEBPACK_IMPORTED_MODULE_2__["HomePage"], null));
}

(function (_index) {})(index || (index = {}));

/***/ }),

/***/ "./typescript/Address.ts":
/*!*******************************!*\
  !*** ./typescript/Address.ts ***!
  \*******************************/
/*! exports provided: Address */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Address", function() { return Address; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");



/**
 * 
 */
var Address = /*#__PURE__*/function () {
  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Address, null, [{
    key: "create",

    /**
    *
    */

    /**
    *
    */

    /**
    *
    */

    /**
    *
    */

    /**
    *
    */

    /**
    *
    */

    /**
     * 
     */
    value: function create(properties) {
      return new Address(properties);
    }
    /**
    *
    */

  }]);

  function Address(properties) {
    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Address);

    this.country = void 0;
    this.state = void 0;
    this.county = void 0;
    this.city = void 0;
    this.district = void 0;
    this.street = void 0;
    this.country = properties.country;
    this.state = properties.state;
    this.county = properties.county;
    this.city = properties.city;
    this.district = properties.district;
    this.street = properties.street;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Address, [{
    key: "toString",
    value: function toString() {
      var result = this.country;

      if (this.state != null) {
        result = this.state + ', ' + result;
      }

      if (this.county != null) {
        result = this.county + ', ' + result;
      }

      if (this.city != null) {
        result = this.city + ', ' + result;
      }

      if (this.district != null) {
        result = this.district + ', ' + result;
      }

      if (this.street != null) {
        result = this.street + ', ' + result;
      }

      return result;
    }
    /**
    *
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof Address) {
        return other.state === this.state && other.country === this.country && other.county === this.county && other.city === this.city && other.district === this.district && other.street === this.street;
      }

      return false;
    }
  }]);

  return Address;
}();
/**
*
*/

(function (_Address) {})(Address || (Address = {}));

/***/ }),

/***/ "./typescript/Characteristic.ts":
/*!**************************************!*\
  !*** ./typescript/Characteristic.ts ***!
  \**************************************/
/*! exports provided: Characteristic */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Characteristic", function() { return Characteristic; });
/**
 * 
 */

/**
 * 
 */
var Characteristic;

(function (_Characteristic) {
  var APPEARANCE = _Characteristic.APPEARANCE = 0;
  var CONSTITUTION = _Characteristic.CONSTITUTION = 1;
  var DEXTERITY = _Characteristic.DEXTERITY = 2;
  var EDUCATION = _Characteristic.EDUCATION = 3;
  var INTELLIGENCE = _Characteristic.INTELLIGENCE = 4;
  var POWER = _Characteristic.POWER = 5;
  var SIZE = _Characteristic.SIZE = 6;
  var STRENGTH = _Characteristic.STRENGTH = 7;
  var LUCK = _Characteristic.LUCK = 8;
  var DEFAULT = _Characteristic.DEFAULT = 0;
  var ALL = _Characteristic.ALL = [APPEARANCE, CONSTITUTION, DEXTERITY, EDUCATION, INTELLIGENCE, POWER, SIZE, STRENGTH, LUCK];

  function toString(characteristic) {
    switch (characteristic) {
      case APPEARANCE:
        return 'APPEARANCE';

      case CONSTITUTION:
        return 'CONSTITUTION';

      case DEXTERITY:
        return 'DEXTERITY';

      case EDUCATION:
        return 'EDUCATION';

      case INTELLIGENCE:
        return 'INTELLIGENCE';

      case POWER:
        return 'POWER';

      case SIZE:
        return 'SIZE';

      case STRENGTH:
        return 'STRENGTH';

      case LUCK:
        return 'LUCK';

      default:
        return undefined;
    }
  }

  _Characteristic.toString = toString;

  function toDebugString(characteristic) {
    return 'Characteristic ' + characteristic + ' (' + (toString(characteristic) || 'undefined') + ')';
  }

  _Characteristic.toDebugString = toDebugString;
})(Characteristic || (Characteristic = {}));

/***/ }),

/***/ "./typescript/CharacteristicSet.ts":
/*!*****************************************!*\
  !*** ./typescript/CharacteristicSet.ts ***!
  \*****************************************/
/*! exports provided: CharacteristicSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CharacteristicSet", function() { return CharacteristicSet; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! immutable */ "./node_modules/immutable/dist/immutable.es.js");
/* harmony import */ var _Characteristic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Characteristic */ "./typescript/Characteristic.ts");
/* harmony import */ var _Value__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Value */ "./typescript/Value.ts");





/**
 * 
 */

var CharacteristicSet = /*#__PURE__*/function () {
  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(CharacteristicSet, [{
    key: "appearance",

    /**
     * 
     */
    get: function get() {
      return this.values.get(_Characteristic__WEBPACK_IMPORTED_MODULE_3__["Characteristic"].APPEARANCE);
    }
    /**
     * 
     */

  }, {
    key: "constitution",
    get: function get() {
      return this.values.get(_Characteristic__WEBPACK_IMPORTED_MODULE_3__["Characteristic"].CONSTITUTION);
    }
    /**
     * 
     */

  }, {
    key: "dexterity",
    get: function get() {
      return this.values.get(_Characteristic__WEBPACK_IMPORTED_MODULE_3__["Characteristic"].DEXTERITY);
    }
    /**
     * 
     */

  }, {
    key: "education",
    get: function get() {
      return this.values.get(_Characteristic__WEBPACK_IMPORTED_MODULE_3__["Characteristic"].EDUCATION);
    }
    /**
     * 
     */

  }, {
    key: "intelligence",
    get: function get() {
      return this.values.get(_Characteristic__WEBPACK_IMPORTED_MODULE_3__["Characteristic"].INTELLIGENCE);
    }
    /**
     * 
     */

  }, {
    key: "power",
    get: function get() {
      return this.values.get(_Characteristic__WEBPACK_IMPORTED_MODULE_3__["Characteristic"].POWER);
    }
    /**
     * 
     */

  }, {
    key: "size",
    get: function get() {
      return this.values.get(_Characteristic__WEBPACK_IMPORTED_MODULE_3__["Characteristic"].SIZE);
    }
    /**
     * 
     */

  }, {
    key: "strength",
    get: function get() {
      return this.values.get(_Characteristic__WEBPACK_IMPORTED_MODULE_3__["Characteristic"].STRENGTH);
    }
    /**
     * 
     */

  }, {
    key: "luck",
    get: function get() {
      return this.values.get(_Characteristic__WEBPACK_IMPORTED_MODULE_3__["Characteristic"].LUCK);
    }
    /**
    *
    */

  }], [{
    key: "empty",

    /**
    *
    */

    /**
     * 
     */

    /**
     * 
     */
    value: function empty() {
      return CharacteristicSet.EMPTY;
    }
    /**
     * 
     */

  }, {
    key: "create",
    value: function create(properties) {
      if (properties) {
        return new CharacteristicSet(immutable__WEBPACK_IMPORTED_MODULE_2__["List"].of(properties.appearance || _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), properties.constitution || _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), properties.dexterity || _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), properties.education || _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), properties.intelligence || _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), properties.power || _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), properties.size || _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), properties.strength || _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), properties.luck || _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero()));
      } else {
        return CharacteristicSet.EMPTY;
      }
    }
  }]);

  function CharacteristicSet(values) {
    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, CharacteristicSet);

    this.values = void 0;
    this.values = values;
  }
  /**
  *
  */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(CharacteristicSet, [{
    key: "get",
    value: function get(characteristic) {
      return this.values.get(characteristic);
    }
    /**
    *
    */

  }, {
    key: "set",
    value: function set(characteristic, value) {
      return new CharacteristicSet(this.values.set(characteristic, value));
    }
    /**
    *
    */

  }, {
    key: "setAll",
    value: function setAll(properties) {
      var values = this.values;
      return new CharacteristicSet(immutable__WEBPACK_IMPORTED_MODULE_2__["List"].of(properties.appearance || values.get(0), properties.constitution || values.get(1), properties.dexterity || values.get(2), properties.education || values.get(3), properties.intelligence || values.get(4), properties.power || values.get(5), properties.size || values.get(6), properties.strength || values.get(7), properties.luck || values.get(8)));
    }
    /**
    *
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof CharacteristicSet) {
        return other.values.equals(this.values);
      }

      return false;
    }
  }]);

  return CharacteristicSet;
}();
/**
*
*/

CharacteristicSet.EMPTY = new CharacteristicSet(immutable__WEBPACK_IMPORTED_MODULE_2__["List"].of(_Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero(), _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].zero()));

(function (_CharacteristicSet) {})(CharacteristicSet || (CharacteristicSet = {}));

/***/ }),

/***/ "./typescript/Gender.ts":
/*!******************************!*\
  !*** ./typescript/Gender.ts ***!
  \******************************/
/*! exports provided: Gender */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Gender", function() { return Gender; });
var Gender;

(function (_Gender) {
  /**
  *
  */
  var MALE = _Gender.MALE = 0;
  var FEMALE = _Gender.FEMALE = 1;
  var DEFAULT = _Gender.DEFAULT = 0;
  var ALL = _Gender.ALL = [MALE, FEMALE];

  function toString(gender) {
    switch (gender) {
      case MALE:
        return 'MALE';

      case FEMALE:
        return 'FEMALE';

      default:
        return undefined;
    }
  }

  _Gender.toString = toString;

  function toDebugString(gender) {
    return 'Gender ' + gender + ' (' + (toString(gender) || 'undefined') + ')';
  }

  _Gender.toDebugString = toDebugString;
})(Gender || (Gender = {}));

/***/ }),

/***/ "./typescript/Investigator.ts":
/*!************************************!*\
  !*** ./typescript/Investigator.ts ***!
  \************************************/
/*! exports provided: Investigator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Investigator", function() { return Investigator; });
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _Summary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Summary */ "./typescript/Summary.ts");
/* harmony import */ var _CharacteristicSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./CharacteristicSet */ "./typescript/CharacteristicSet.ts");
/* harmony import */ var _SkillSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SkillSet */ "./typescript/SkillSet.ts");
/* harmony import */ var _Value__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Value */ "./typescript/Value.ts");
/* harmony import */ var _Modifier__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Modifier */ "./typescript/Modifier.ts");
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! immutable */ "./node_modules/immutable/dist/immutable.es.js");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./data */ "./typescript/data/index.ts");
/* harmony import */ var _Skill__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Skill */ "./typescript/Skill.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils */ "./typescript/utils/index.ts");
/* harmony import */ var _Mutables__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Mutables */ "./typescript/Mutables.ts");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }











/**
 * 
 */

var Investigator = /*#__PURE__*/function () {
  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(Investigator, [{
    key: "maximumHP",

    /**
    *
    */

    /**
    *
    */

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */
    get: function get() {
      var characteristics = this.characteristics;
      var size = characteristics.size.sum();
      var constitution = characteristics.constitution.sum();
      return (size + constitution) / 10 << 0;
    }
    /**
     * 
     */

  }, {
    key: "maximumMP",
    get: function get() {
      return this.characteristics.power.fifth();
    }
    /**
     * 
     */

  }, {
    key: "movement",
    get: function get() {
      var characteristics = this.characteristics;
      var size = characteristics.size.sum();
      var strength = characteristics.strength.sum();
      var dexterity = characteristics.dexterity.sum();
      var age = this.summary.age;
      var base = 0;

      if (strength < size && dexterity < size) {
        base = 7;
      } else if (strength > size && dexterity > size) {
        base = 9;
      } else {
        base = 8;
      }

      if (age > 39) {
        return _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create({
          base: base,
          modifiers: immutable__WEBPACK_IMPORTED_MODULE_8__["List"].of(_Modifier__WEBPACK_IMPORTED_MODULE_7__["Modifier"].create({
            value: Math.max((age / 10 << 0) - 3, 0),
            label: 'Âge supérieur à ' + (age / 10 << 0).toString() + ' ans'
          }))
        });
      } else {
        return _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(base);
      }
    }
    /**
     * 
     */

  }, {
    key: "impact",
    get: function get() {
      var characteristics = this.characteristics;
      var size = characteristics.size.sum();
      var strength = characteristics.strength.sum();
      var score = size + strength;

      if (score < 65) {
        return '-2';
      } else if (score < 85) {
        return '-1';
      } else if (score < 125) {
        return '0';
      } else if (score < 165) {
        return '+1D4';
      } else if (score < 205) {
        return '+1D6';
      } else {
        return '+' + (2 + (score - 205) / 80 << 0) + 'D6';
      }
    }
    /**
     * 
     */

  }, {
    key: "carrure",
    get: function get() {
      var characteristics = this.characteristics;
      var size = characteristics.size.sum();
      var strength = characteristics.strength.sum();
      var score = size + strength;

      if (score < 65) {
        return -2;
      } else if (score < 85) {
        return -1;
      } else if (score < 125) {
        return 0;
      } else if (score < 165) {
        return +1;
      } else if (score < 205) {
        return +2;
      } else {
        return 2 + (score - 205) / 80 << 0;
      }
    }
    /**
     * 
     */

  }], [{
    key: "empty",

    /**
     * 
     */
    value: function empty() {
      return Investigator.EMPTY;
    }
    /**
     * 
     */

  }, {
    key: "create",
    value: function create() {
      var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _utils__WEBPACK_IMPORTED_MODULE_11__["Empty"].OBJECT;
      return properties === _utils__WEBPACK_IMPORTED_MODULE_11__["Empty"].OBJECT ? Investigator.EMPTY : new Investigator(properties);
    }
    /**
     * 
     */

  }]);

  function Investigator() {
    var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _utils__WEBPACK_IMPORTED_MODULE_11__["Empty"].OBJECT;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, Investigator);

    this.summary = void 0;
    this.characteristics = void 0;
    this.skills = void 0;
    this.updates = void 0;
    this.mutables = void 0;
    this.summary = properties.summary || _Summary__WEBPACK_IMPORTED_MODULE_3__["Summary"].empty();
    this.characteristics = properties.characteristics || _CharacteristicSet__WEBPACK_IMPORTED_MODULE_4__["CharacteristicSet"].empty();
    this.skills = properties.skills || _SkillSet__WEBPACK_IMPORTED_MODULE_5__["SkillSet"].empty();
    this.mutables = properties.mutables || _Mutables__WEBPACK_IMPORTED_MODULE_12__["Mutables"].fromInvestigator(this);
    this.updates = properties.updates || _SkillSet__WEBPACK_IMPORTED_MODULE_5__["SkillSet"].empty();
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(Investigator, [{
    key: "computeDefaultSkills",
    value: function computeDefaultSkills() {
      return _SkillSet__WEBPACK_IMPORTED_MODULE_5__["SkillSet"].create([_data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].ACCOUNTING, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(5)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].ANTHROPOLOGY, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(1)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].APPRAISE, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(5)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].ARCHAEOLOGY, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(1)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].CRAFT, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(5)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].CHARM, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(15)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].CLIMB, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(20)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].CREDIT_RATING, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(0)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].CTHULHU_MYTHOS, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(0)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].DISGUISE, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(5)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].DODGE, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(this.characteristics.dexterity.half())), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].DRIVE_AUTO, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(20)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].ELECTRIC_REPAIR, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(10)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].FAST_TALK, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(5)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].FIGHTING, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(25)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].HANDGUNS, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(20)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].GUNS, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(25)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].SUBMACHINE_GUNS, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(15)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].FIRST_AID, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(30)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].HISTORY, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(5)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].INTIMIDATE, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(15)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].JUMP, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(20)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].NATIVE_LANGUAGE, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(this.characteristics.education.sum())), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].OTHER_LANGUAGE, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(1)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].LAW, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(5)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].LIBRARY_USE, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(20)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].LISTEN, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(20)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].LOCKSMITH, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(1)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].MECHANICAL_REPAIR, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(10)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].MEDICINE, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(1)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].NATURAL_WORLD, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(10)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].NAVIGATE, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(10)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].OCCULT, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(5)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].OPERATE_HEAVY_MACHINERY, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(1)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].PERSUADE, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(10)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].PILOT, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(1)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].PSYCHOLOGY, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(10)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].PSYCHOANALYSIS, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(1)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].RIDE, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(5)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].SCIENCE, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(1)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].SLEIGHT_OF_HAND, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(10)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].SPOT_HIDDEN, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(25)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].STEALTH, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(20)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].SURVIVAL, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(10)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].SWIM, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(20)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].THROW, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(20)), _data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].TRACK, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(10))]);
    }
    /**
     * 
     */

  }, {
    key: "toggleForUpdate",
    value: function toggleForUpdate(skill) {
      if (this.updates.has(skill)) {
        return new Investigator(_objectSpread({}, this, {
          updates: this.updates["delete"](skill)
        }));
      } else {
        return new Investigator(_objectSpread({}, this, {
          updates: this.updates.set(skill, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].zero())
        }));
      }
    }
    /**
     * 
     */

  }, {
    key: "levelup",
    value: function levelup() {
      if (this.updates.entries.size > 0) {
        var oldSkills = this.skills.entries;
        var skillsToUpdate = this.updates.entries;
        var nextSkills = Object(immutable__WEBPACK_IMPORTED_MODULE_8__["List"])().asMutable();
        var defaultSkills = this.computeDefaultSkills();
        var skillsIndex = 0;

        for (var toUpdateIndex = 0; toUpdateIndex < skillsToUpdate.size; ++toUpdateIndex) {
          var currentSkillToUpdate = skillsToUpdate.get(toUpdateIndex).left;

          while (skillsIndex < oldSkills.size && _Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].compare(oldSkills.get(skillsIndex).left, currentSkillToUpdate) < 0) {
            nextSkills.push(oldSkills.get(skillsIndex));
            skillsIndex += 1;
          }

          if (skillsIndex < oldSkills.size && _Skill__WEBPACK_IMPORTED_MODULE_10__["Skill"].compare(oldSkills.get(skillsIndex).left, currentSkillToUpdate) === 0) {
            nextSkills.push(_data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(currentSkillToUpdate, oldSkills.get(skillsIndex).right.levelup()));
            skillsIndex += 1;
          } else {
            var base = defaultSkills.has(currentSkillToUpdate) ? defaultSkills.get(currentSkillToUpdate) : _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create(1);
            var levelup = base.levelup();

            if (base !== levelup) {
              nextSkills.push(_data__WEBPACK_IMPORTED_MODULE_9__["Pair"].create(currentSkillToUpdate, levelup));
            }
          }
        }

        while (skillsIndex < oldSkills.size) {
          nextSkills.push(oldSkills.get(skillsIndex));
          skillsIndex += 1;
        }

        return Investigator.create(_objectSpread({}, this, {
          skills: _SkillSet__WEBPACK_IMPORTED_MODULE_5__["SkillSet"].create(nextSkills),
          updates: _SkillSet__WEBPACK_IMPORTED_MODULE_5__["SkillSet"].empty()
        }));
      } else {
        return this;
      }
    }
    /**
     * 
     */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof Investigator) {
        return other.summary.equals(this.summary) && other.characteristics.equals(this.characteristics) && other.skills.equals(this.skills);
      }

      return false;
    }
  }]);

  return Investigator;
}();
Investigator.EMPTY = new Investigator();

(function (_Investigator) {})(Investigator || (Investigator = {}));

/***/ }),

/***/ "./typescript/Modifier.ts":
/*!********************************!*\
  !*** ./typescript/Modifier.ts ***!
  \********************************/
/*! exports provided: Modifier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Modifier", function() { return Modifier; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");



/**
 * 
 */
var Modifier = /*#__PURE__*/function () {
  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Modifier, null, [{
    key: "create",

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */
    value: function create(properties) {
      return new Modifier(properties);
    }
    /**
     * 
     */

  }]);

  function Modifier(properties) {
    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Modifier);

    this.label = void 0;
    this.value = void 0;
    this.label = properties.label;
    this.value = properties.value;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Modifier, [{
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof Modifier) {
        return other.label === this.label && other.value === this.value;
      }

      return false;
    }
  }]);

  return Modifier;
}();

(function (_Modifier) {})(Modifier || (Modifier = {}));

/***/ }),

/***/ "./typescript/Mutables.ts":
/*!********************************!*\
  !*** ./typescript/Mutables.ts ***!
  \********************************/
/*! exports provided: Mutables */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Mutables", function() { return Mutables; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");



/**
 * 
 */
var Mutables = /*#__PURE__*/function () {
  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Mutables, null, [{
    key: "create",

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */
    value: function create(properties) {
      return new Mutables(properties);
    }
    /**
     * 
     */

  }, {
    key: "fromInvestigator",
    value: function fromInvestigator(investigator) {
      return new Mutables({
        health: investigator.maximumHP,
        mentalHealth: investigator.characteristics.power.sum(),
        magic: investigator.maximumMP,
        luck: investigator.characteristics.luck.sum()
      });
    }
    /**
     * 
     */

  }]);

  function Mutables(properties) {
    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Mutables);

    this.temporaryInsane = void 0;
    this.indefinitelyInsane = void 0;
    this.majorWound = void 0;
    this.health = void 0;
    this.mentalHealth = void 0;
    this.magic = void 0;
    this.luck = void 0;
    this.temporaryInsane = properties.temporaryInsane || false;
    this.indefinitelyInsane = properties.indefinitelyInsane || false;
    this.majorWound = properties.majorWound || false;
    this.health = properties.health || 0;
    this.mentalHealth = properties.mentalHealth || 0;
    this.magic = properties.magic || 0;
    this.luck = properties.luck || 0;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Mutables, [{
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof Mutables) {
        return other.temporaryInsane === this.temporaryInsane && other.indefinitelyInsane === this.indefinitelyInsane && other.majorWound === this.majorWound && other.health === this.health && other.mentalHealth === this.mentalHealth && other.magic === this.magic && other.luck === this.luck;
      }

      return false;
    }
  }]);

  return Mutables;
}();
/**
 * 
 */

(function (_Mutables) {})(Mutables || (Mutables = {}));

/***/ }),

/***/ "./typescript/Name.ts":
/*!****************************!*\
  !*** ./typescript/Name.ts ***!
  \****************************/
/*! exports provided: Name */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Name", function() { return Name; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");



/**
 * 
 */
var Name = /*#__PURE__*/function () {
  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Name, null, [{
    key: "create",

    /**
    *
    */

    /**
    *
    */

    /**
    *
    */

    /**
    *
    */
    value: function create(properties) {
      return new Name(properties);
    }
    /**
    *
    */

  }]);

  function Name(properties) {
    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Name);

    this.first = void 0;
    this.last = void 0;
    this["short"] = void 0;
    this.first = properties.first;
    this.last = properties.last;
    this["short"] = properties["short"];
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Name, [{
    key: "toString",
    value: function toString() {
      var result = this.first + ' ' + this.last;
      return this["short"] == null ? result : result + ' (' + this["short"] + ')';
    }
    /**
    *
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof Name) {
        return this.first === other.first && this.last === other.last && this["short"] === other["short"];
      }

      return false;
    }
  }]);

  return Name;
}();

(function (_Name) {})(Name || (Name = {}));

/***/ }),

/***/ "./typescript/Skill.ts":
/*!*****************************!*\
  !*** ./typescript/Skill.ts ***!
  \*****************************/
/*! exports provided: Skill */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Skill", function() { return Skill; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");



/**
 * 
 */
var Skill = /*#__PURE__*/function () {
  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Skill, null, [{
    key: "create",

    /**
    *
    */

    /**
    *
    */

    /**
     * 
     */
    value: function create(properties) {
      return new Skill(properties);
    }
    /**
     * 
     */

  }]);

  function Skill(properties) {
    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Skill);

    this.family = void 0;
    this.specialization = void 0;
    this.family = properties.family;
    this.specialization = properties.specialization;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Skill, [{
    key: "toString",
    value: function toString() {
      return this.family + (this.specialization ? ' (' + this.specialization + ')' : '');
    }
    /**
    *
    */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof Skill) {
        return other.family === this.family && other.specialization === this.specialization;
      }

      return false;
    }
  }]);

  return Skill;
}();
/**
 * 
 */

(function (_Skill) {
  function compare(left, right) {
    var family = left.family.localeCompare(right.family);

    if (family === 0) {
      if (left.specialization === undefined) {
        return right.specialization === undefined ? 0 : 1;
      } else if (right.specialization === undefined) {
        return -1;
      } else {
        return left.specialization.localeCompare(right.specialization);
      }
    } else {
      return family;
    }
  }

  _Skill.compare = compare;
  var ACCOUNTING = _Skill.ACCOUNTING = Skill.create({
    family: 'Comptabilité'
  });
  var ANTHROPOLOGY = _Skill.ANTHROPOLOGY = Skill.create({
    family: 'Anthropologie'
  });
  var APPRAISE = _Skill.APPRAISE = Skill.create({
    family: 'Estimation'
  });
  var ARCHAEOLOGY = _Skill.ARCHAEOLOGY = Skill.create({
    family: 'Archéologie'
  });
  var CRAFT = _Skill.CRAFT = Skill.create({
    family: 'Arts et métiers'
  });
  var CHARM = _Skill.CHARM = Skill.create({
    family: 'Charme'
  });
  var CLIMB = _Skill.CLIMB = Skill.create({
    family: 'Grimper'
  });
  var CREDIT_RATING = _Skill.CREDIT_RATING = Skill.create({
    family: 'Crédit'
  });
  var CTHULHU_MYTHOS = _Skill.CTHULHU_MYTHOS = Skill.create({
    family: 'Mythe de Cthulhu'
  });
  var DISGUISE = _Skill.DISGUISE = Skill.create({
    family: 'Imposture'
  });
  var DODGE = _Skill.DODGE = Skill.create({
    family: 'Esquive'
  });
  var DRIVE_AUTO = _Skill.DRIVE_AUTO = Skill.create({
    family: 'Conduite'
  });
  var ELECTRIC_REPAIR = _Skill.ELECTRIC_REPAIR = Skill.create({
    family: 'Électricité'
  });
  var FAST_TALK = _Skill.FAST_TALK = Skill.create({
    family: 'Baratin'
  });
  var FIGHTING = _Skill.FIGHTING = Skill.create({
    family: 'Corps à corps'
  });
  var HANDGUNS = _Skill.HANDGUNS = Skill.create({
    family: 'Armes de poing'
  });
  var GUNS = _Skill.GUNS = Skill.create({
    family: 'Fusils'
  });
  var SUBMACHINE_GUNS = _Skill.SUBMACHINE_GUNS = Skill.create({
    family: 'Mitraillettes'
  });
  var FIRST_AID = _Skill.FIRST_AID = Skill.create({
    family: 'Premiers soins'
  });
  var HISTORY = _Skill.HISTORY = Skill.create({
    family: 'Histoire'
  });
  var INTIMIDATE = _Skill.INTIMIDATE = Skill.create({
    family: 'Intimidation'
  });
  var JUMP = _Skill.JUMP = Skill.create({
    family: 'Sauter'
  });
  var NATIVE_LANGUAGE = _Skill.NATIVE_LANGUAGE = Skill.create({
    family: 'Langues',
    specialization: 'Maternelle'
  });
  var OTHER_LANGUAGE = _Skill.OTHER_LANGUAGE = Skill.create({
    family: 'Langues',
    specialization: 'Autre'
  });
  var LAW = _Skill.LAW = Skill.create({
    family: 'Droit'
  });
  var LIBRARY_USE = _Skill.LIBRARY_USE = Skill.create({
    family: 'Bibliothèque'
  });
  var LISTEN = _Skill.LISTEN = Skill.create({
    family: 'Écouter'
  });
  var LOCKSMITH = _Skill.LOCKSMITH = Skill.create({
    family: 'Crochetage'
  });
  var MECHANICAL_REPAIR = _Skill.MECHANICAL_REPAIR = Skill.create({
    family: 'Méchanique'
  });
  var MEDICINE = _Skill.MEDICINE = Skill.create({
    family: 'Médecine'
  });
  var NATURAL_WORLD = _Skill.NATURAL_WORLD = Skill.create({
    family: 'Naturalisme'
  });
  var NAVIGATE = _Skill.NAVIGATE = Skill.create({
    family: 'Orientation'
  });
  var OCCULT = _Skill.OCCULT = Skill.create({
    family: 'Occultisme'
  });
  var OPERATE_HEAVY_MACHINERY = _Skill.OPERATE_HEAVY_MACHINERY = Skill.create({
    family: 'Conduite engin lourd'
  });
  var PERSUADE = _Skill.PERSUADE = Skill.create({
    family: 'Persuasion'
  });
  var PILOT = _Skill.PILOT = Skill.create({
    family: 'Pilotage'
  });
  var PSYCHOLOGY = _Skill.PSYCHOLOGY = Skill.create({
    family: 'Psychologie'
  });
  var PSYCHOANALYSIS = _Skill.PSYCHOANALYSIS = Skill.create({
    family: 'Psychanalyse'
  });
  var RIDE = _Skill.RIDE = Skill.create({
    family: 'Équitation'
  });
  var SCIENCE = _Skill.SCIENCE = Skill.create({
    family: 'Sciences'
  });
  var SLEIGHT_OF_HAND = _Skill.SLEIGHT_OF_HAND = Skill.create({
    family: 'Pickpocket'
  });
  var SPOT_HIDDEN = _Skill.SPOT_HIDDEN = Skill.create({
    family: 'Trouver objet caché'
  });
  var STEALTH = _Skill.STEALTH = Skill.create({
    family: 'Discrétion'
  });
  var SURVIVAL = _Skill.SURVIVAL = Skill.create({
    family: 'Survie'
  });
  var SWIM = _Skill.SWIM = Skill.create({
    family: 'Nager'
  });
  var THROW = _Skill.THROW = Skill.create({
    family: 'Lancer'
  });
  var TRACK = _Skill.TRACK = Skill.create({
    family: 'Pister'
  });
})(Skill || (Skill = {}));

/***/ }),

/***/ "./typescript/SkillSet.ts":
/*!********************************!*\
  !*** ./typescript/SkillSet.ts ***!
  \********************************/
/*! exports provided: SkillSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SkillSet", function() { return SkillSet; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! immutable */ "./node_modules/immutable/dist/immutable.es.js");
/* harmony import */ var _data_Pair__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data/Pair */ "./typescript/data/Pair.ts");
/* harmony import */ var _data_bissect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data/bissect */ "./typescript/data/bissect.ts");
/* harmony import */ var _Skill__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Skill */ "./typescript/Skill.ts");
/* harmony import */ var _Value__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Value */ "./typescript/Value.ts");



function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }






/**
 * 
 */

function comparePair(left, right) {
  return _Skill__WEBPACK_IMPORTED_MODULE_5__["Skill"].compare(left.left, right.left);
}
/**
 * 
 */


function compareSkillWithPair(left, right) {
  return _Skill__WEBPACK_IMPORTED_MODULE_5__["Skill"].compare(left, right.left);
}
/**
 * 
 */


var SkillSet = /*#__PURE__*/function () {
  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(SkillSet, null, [{
    key: "empty",

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */
    value: function empty() {
      return SkillSet.EMPTY;
    }
    /**
     * 
     */

  }, {
    key: "create",
    value: function create(entries) {
      var result = Object(immutable__WEBPACK_IMPORTED_MODULE_2__["List"])().asMutable();

      var _iterator = _createForOfIteratorHelper(entries),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var entry = _step.value;
          result.push(entry);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return result.size > 0 ? new SkillSet(result.sort(comparePair).asImmutable()) : SkillSet.EMPTY;
    }
    /**
     * 
     */

  }, {
    key: "wrap",
    value: function wrap(entries) {
      return new SkillSet(entries);
    }
    /**
     * 
     */

  }]);

  function SkillSet(entries) {
    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, SkillSet);

    this.entries = void 0;
    this.entries = entries;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(SkillSet, [{
    key: "indexOf",
    value: function indexOf(skill) {
      return _data_bissect__WEBPACK_IMPORTED_MODULE_4__["bissect"].list(this.entries, skill, compareSkillWithPair);
    }
    /**
     * 
     */

  }, {
    key: "has",
    value: function has(skill) {
      return this.indexOf(skill) > -1;
    }
    /**
     * 
     */

  }, {
    key: "get",
    value: function get(skill) {
      var index = this.indexOf(skill);
      return index < 0 ? _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].zero() : this.entries.get(index).right;
    }
    /**
     * 
     */

  }, {
    key: "delete",
    value: function _delete(skill) {
      var index = this.indexOf(skill);

      if (index < 0) {
        return this;
      } else {
        return new SkillSet(this.entries["delete"](index));
      }
    }
    /**
     * 
     */

  }, {
    key: "set",
    value: function set(skill, value) {
      var index = this.indexOf(skill);

      if (index < 0) {
        return new SkillSet(this.entries.insert(-index - 1, _data_Pair__WEBPACK_IMPORTED_MODULE_3__["Pair"].create(skill, value)));
      } else {
        return new SkillSet(this.entries.set(index, _data_Pair__WEBPACK_IMPORTED_MODULE_3__["Pair"].create(skill, value)));
      }
    }
    /**
     * 
     */

  }, {
    key: "minus",
    value: function minus(other) {
      var result = Object(immutable__WEBPACK_IMPORTED_MODULE_2__["List"])().asMutable();
      var ourCursor = 0;
      var otherCursor = 0;
      var ourEntries = this.entries;
      var otherEntries = other.entries;

      while (ourCursor < ourEntries.size) {
        var ourEntry = ourEntries.get(ourCursor);

        while (otherCursor < otherEntries.size && comparePair(otherEntries.get(otherCursor), ourEntry) < 0) {
          otherCursor += 1;
        }

        if (otherCursor < otherEntries.size && comparePair(otherEntries.get(otherCursor), ourEntry) === 0) {
          otherCursor += 1;
        } else {
          result.push(ourEntry);
        }

        ourCursor += 1;
      }

      return new SkillSet(result.asImmutable());
    }
    /**
     * 
     */

  }, {
    key: "assign",
    value: function assign(other) {
      var result = Object(immutable__WEBPACK_IMPORTED_MODULE_2__["List"])().asMutable();
      var ourCursor = 0;
      var otherCursor = 0;
      var ourEntries = this.entries;
      var otherEntries = other.entries;

      while (ourCursor < ourEntries.size) {
        var ourEntry = ourEntries.get(ourCursor);

        while (otherCursor < otherEntries.size && comparePair(otherEntries.get(otherCursor), ourEntry) < 0) {
          result.push(otherEntries.get(otherCursor));
          otherCursor += 1;
        }

        if (otherCursor < otherEntries.size && comparePair(otherEntries.get(otherCursor), ourEntry) === 0) {
          result.push(otherEntries.get(otherCursor));
          otherCursor += 1;
        } else {
          result.push(ourEntry);
        }

        ourCursor += 1;
      }

      while (otherCursor < otherEntries.size) {
        result.push(otherEntries.get(otherCursor));
        otherCursor += 1;
      }

      return new SkillSet(result.asImmutable());
    }
    /**
     * 
     */

  }, {
    key: "inherit",
    value: function inherit(other) {
      var result = Object(immutable__WEBPACK_IMPORTED_MODULE_2__["List"])().asMutable();
      var ourCursor = 0;
      var otherCursor = 0;
      var ourEntries = this.entries;
      var otherEntries = other.entries;

      while (ourCursor < ourEntries.size) {
        var ourEntry = ourEntries.get(ourCursor);

        while (otherCursor < otherEntries.size && comparePair(otherEntries.get(otherCursor), ourEntry) < 0) {
          otherCursor += 1;
        }

        if (otherCursor < otherEntries.size && comparePair(otherEntries.get(otherCursor), ourEntry) === 0) {
          if (ourEntry.right.base == null) {
            result.push(_data_Pair__WEBPACK_IMPORTED_MODULE_3__["Pair"].create(ourEntry.left, _Value__WEBPACK_IMPORTED_MODULE_6__["Value"].create({
              base: otherEntries.get(otherCursor).right.base,
              modifiers: ourEntry.right.modifiers
            })));
          } else {
            result.push(ourEntry);
          }

          otherCursor += 1;
        } else {
          result.push(ourEntry);
        }

        ourCursor += 1;
      }

      return new SkillSet(result.asImmutable());
    }
    /**
     * 
     */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof SkillSet) {
        return other.entries.equals(this.entries);
      }

      return false;
    }
  }]);

  return SkillSet;
}();
SkillSet.EMPTY = new SkillSet(Object(immutable__WEBPACK_IMPORTED_MODULE_2__["List"])());

/***/ }),

/***/ "./typescript/Summary.ts":
/*!*******************************!*\
  !*** ./typescript/Summary.ts ***!
  \*******************************/
/*! exports provided: Summary */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Summary", function() { return Summary; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ "./typescript/utils/index.ts");



var Summary = /*#__PURE__*/function () {
  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Summary, null, [{
    key: "empty",

    /**
    *
    */

    /**
    *
    */

    /**
    *
    */

    /**
    *
    */

    /**
    *
    */

    /**
    *
    */

    /**
    *
    */

    /**
    *
    */

    /**
    *
    */

    /**
    *
    */

    /**
     * 
     */

    /**
     * 
     */
    value: function empty() {
      return Summary.EMPTY;
    }
    /**
     * 
     */

  }, {
    key: "create",
    value: function create() {
      var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _utils__WEBPACK_IMPORTED_MODULE_2__["Empty"].OBJECT;
      return properties === _utils__WEBPACK_IMPORTED_MODULE_2__["Empty"].OBJECT ? Summary.EMPTY : new Summary(properties);
    }
    /**
     * 
     */

  }]);

  function Summary() {
    var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _utils__WEBPACK_IMPORTED_MODULE_2__["Empty"].OBJECT;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Summary);

    this.name = void 0;
    this.alias = void 0;
    this.job = void 0;
    this.matricule = void 0;
    this.gender = void 0;
    this.age = void 0;
    this.birthdate = void 0;
    this.hiringdate = void 0;
    this.birthplace = void 0;
    this.home = void 0;
    this.name = properties.name;
    this.alias = properties.alias;
    this.job = properties.job;
    this.matricule = properties.matricule;
    this.gender = properties.gender;
    this.age = properties.age || 0;
    this.birthdate = properties.birthdate;
    this.hiringdate = properties.hiringdate;
    this.birthplace = properties.birthplace;
    this.home = properties.home;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Summary, [{
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof Summary) {
        return other.name === this.name && other.alias === this.alias && other.job === this.job && other.matricule === this.matricule && other.gender === this.gender && other.age === this.age && other.birthdate.valueOf() === this.birthdate.valueOf() && other.hiringdate.valueOf() === this.hiringdate.valueOf() && other.birthplace.equals(this.birthplace) && other.home.equals(this.home);
      }

      return false;
    }
  }]);

  return Summary;
}();
Summary.EMPTY = new Summary();

(function (_Summary) {})(Summary || (Summary = {}));

/***/ }),

/***/ "./typescript/Toggler.ts":
/*!*******************************!*\
  !*** ./typescript/Toggler.ts ***!
  \*******************************/
/*! exports provided: Toggler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Toggler", function() { return Toggler; });
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");



var Toggler = /*#__PURE__*/function () {
  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(Toggler, null, [{
    key: "create",

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */
    value: function create(name) {
      return new Toggler(name);
    }
    /**
     * 
     */

  }]);

  function Toggler(name) {
    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, Toggler);

    this.name = void 0;
    this.truthy = void 0;
    this.falsy = void 0;
    this.name = name;
    this.truthy = Object.seal(Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])({}, name, true));
    this.falsy = Object.seal(Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])({}, name, false));
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(Toggler, [{
    key: "toggle",
    value: function toggle(value) {
      return value ? this.truthy : this.falsy;
    }
  }]);

  return Toggler;
}();

/***/ }),

/***/ "./typescript/Value.ts":
/*!*****************************!*\
  !*** ./typescript/Value.ts ***!
  \*****************************/
/*! exports provided: Value */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Value", function() { return Value; });
/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ "./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! immutable */ "./node_modules/immutable/dist/immutable.es.js");
/* harmony import */ var _Modifier__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Modifier */ "./typescript/Modifier.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ "./typescript/utils/index.ts");




var _Symbol$toPrimitive;

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }




/**
 * 
 */

var VANILLA_PROPERTIES = {
  base: 0
};

function vanilla(value) {
  VANILLA_PROPERTIES.base = value;
  return VANILLA_PROPERTIES;
}
/**
 * 
 */


_Symbol$toPrimitive = Symbol.toPrimitive;
var Value = /*#__PURE__*/function () {
  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(Value, null, [{
    key: "create",

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */
    value: function create(properties) {
      if (properties == null) {
        return Value.EMPTY;
      } else if (typeof properties === 'number') {
        return properties === 0 ? Value.ZERO : new Value(vanilla(properties));
      } else {
        return new Value(properties);
      }
    }
    /**
     * 
     */

  }, {
    key: "zero",
    value: function zero() {
      return Value.ZERO;
    }
    /**
     * 
     */

  }, {
    key: "empty",
    value: function empty() {
      return Value.EMPTY;
    }
    /**
     * 
     */

  }]);

  function Value() {
    var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _utils__WEBPACK_IMPORTED_MODULE_5__["Empty"].OBJECT;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, Value);

    this.base = void 0;
    this.modifiers = void 0;
    this.base = properties.base;
    this.modifiers = properties.modifiers || Object(immutable__WEBPACK_IMPORTED_MODULE_3__["List"])();
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(Value, [{
    key: "levelup",
    value: function levelup() {
      var sum = this.sum();

      if (sum >= 99) {
        return this;
      }

      var roll = Math.random() * 100 + 1 << 0;

      if (roll > sum) {
        var upgrade = Math.random() * 10 + 1 << 0;
        return Value.create({
          base: this.base,
          modifiers: immutable__WEBPACK_IMPORTED_MODULE_3__["List"].of.apply(immutable__WEBPACK_IMPORTED_MODULE_3__["List"], Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(this.modifiers).concat([_Modifier__WEBPACK_IMPORTED_MODULE_4__["Modifier"].create({
            value: Math.min(upgrade, 99 - sum),
            label: 'Gain d\'expérience (' + roll + ' vs ' + sum + ')'
          })]))
        });
      } else {
        return this;
      }
    }
    /**
     * 
     */

  }, {
    key: "sum",
    value: function sum() {
      var result = this.base || 0;

      var _iterator = _createForOfIteratorHelper(this.modifiers),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var modifier = _step.value;
          result += modifier.value;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return result;
    }
    /**
     * 
     */

  }, {
    key: "half",
    value: function half() {
      return this.sum() >> 1;
    }
    /**
     * 
     */

  }, {
    key: "fifth",
    value: function fifth() {
      return this.sum() / 5 << 0;
    }
    /**
     * 
     */

  }, {
    key: "toString",
    value: function toString() {
      return this.sum() + ' / ' + this.half() + ' / ' + this.fifth();
    }
    /**
     * 
     */

  }, {
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof Value) {
        return other.base === this.base && other.modifiers.equals(this.modifiers);
      }
    }
    /**
     * 
     */

  }, {
    key: _Symbol$toPrimitive,
    value: function value() {
      return this.sum();
    }
  }]);

  return Value;
}();
/**
 * 
 */

Value.ZERO = new Value(vanilla(0));
Value.EMPTY = new Value();

(function (_Value) {})(Value || (Value = {}));

/***/ }),

/***/ "./typescript/data/Comparator.ts":
/*!***************************************!*\
  !*** ./typescript/data/Comparator.ts ***!
  \***************************************/
/*! exports provided: Comparator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Comparator", function() { return Comparator; });
/**
 * 
 */

/**
 * 
 */
var Comparator;

(function (_Comparator) {
  function invert(baseComparator) {
    return function invertedComparator(left, right) {
      return -baseComparator(left, right);
    };
  }

  _Comparator.invert = invert;

  function swap(baseComparator) {
    return function invertedComparator(left, right) {
      return -baseComparator(right, left);
    };
  }

  _Comparator.swap = swap;
})(Comparator || (Comparator = {}));

/***/ }),

/***/ "./typescript/data/Pair.ts":
/*!*********************************!*\
  !*** ./typescript/data/Pair.ts ***!
  \*********************************/
/*! exports provided: Pair */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pair", function() { return Pair; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _utils_equals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/equals */ "./typescript/utils/equals.ts");



/**
 * 
 */

var Pair = /*#__PURE__*/function () {
  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Pair, null, [{
    key: "create",

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */
    value: function create(left, right) {
      return new Pair(left, right);
    }
    /**
     * 
     */

  }]);

  function Pair(left, right) {
    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Pair);

    this.left = void 0;
    this.right = void 0;
    this.left = left;
    this.right = right;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Pair, [{
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof Pair) {
        return Object(_utils_equals__WEBPACK_IMPORTED_MODULE_2__["equals"])(other.left, this.left) && Object(_utils_equals__WEBPACK_IMPORTED_MODULE_2__["equals"])(other.right, this.right);
      }

      return false;
    }
  }]);

  return Pair;
}();

/***/ }),

/***/ "./typescript/data/bissect.ts":
/*!************************************!*\
  !*** ./typescript/data/bissect.ts ***!
  \************************************/
/*! exports provided: bissect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bissect", function() { return bissect; });
/**
 * 
 */
var bissect;

(function (_bissect) {
  function list(list, key, comparator) {
    if (list.size > 0) {
      var left = 0;
      var right = list.size;

      while (left !== right) {
        var cursor = left + (right - left >>> 1);
        var pivot = list.get(cursor);
        var comparison = comparator(key, pivot);

        if (comparison === 0) {
          return cursor;
        } else if (comparison > 0) {
          left = cursor + 1;
        } else {
          right = cursor;
        }
      }

      return -(left + 1);
    } else {
      return -1;
    }
  }

  _bissect.list = list;
})(bissect || (bissect = {}));

/***/ }),

/***/ "./typescript/data/index.ts":
/*!**********************************!*\
  !*** ./typescript/data/index.ts ***!
  \**********************************/
/*! exports provided: bissect, Comparator, Pair */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bissect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bissect */ "./typescript/data/bissect.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bissect", function() { return _bissect__WEBPACK_IMPORTED_MODULE_0__["bissect"]; });

/* harmony import */ var _Comparator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Comparator */ "./typescript/data/Comparator.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Comparator", function() { return _Comparator__WEBPACK_IMPORTED_MODULE_1__["Comparator"]; });

/* harmony import */ var _Pair__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Pair */ "./typescript/data/Pair.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pair", function() { return _Pair__WEBPACK_IMPORTED_MODULE_2__["Pair"]; });





/***/ }),

/***/ "./typescript/redux/ApplicationEvent.ts":
/*!**********************************************!*\
  !*** ./typescript/redux/ApplicationEvent.ts ***!
  \**********************************************/
/*! exports provided: ApplicationEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationEvent", function() { return ApplicationEvent; });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ "./typescript/utils/index.ts");

/**
*
*/

/**
 * 
 */
var ApplicationEvent;

(function (_ApplicationEvent) {
  function equals(left, right) {
    return left.type === right.type && _utils__WEBPACK_IMPORTED_MODULE_0__["equals"](left.payload, right.payload);
  }

  _ApplicationEvent.equals = equals;

  function create(type, payload) {
    return {
      type: type,
      payload: payload
    };
  }

  _ApplicationEvent.create = create;
})(ApplicationEvent || (ApplicationEvent = {}));

/***/ }),

/***/ "./typescript/redux/ControlAction.ts":
/*!*******************************************!*\
  !*** ./typescript/redux/ControlAction.ts ***!
  \*******************************************/
/*! exports provided: ControlAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ControlAction", function() { return ControlAction; });
/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ "./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js");
/* harmony import */ var _DataAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DataAction */ "./typescript/redux/DataAction.ts");
/* harmony import */ var _FocusAction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FocusAction */ "./typescript/redux/FocusAction.ts");



/**
 * 
 */

/**
 *
 */
var ControlAction;

(function (_ControlAction) {
  var Focus = _ControlAction.Focus = _FocusAction__WEBPACK_IMPORTED_MODULE_2__["FocusAction"];
  var Data = _ControlAction.Data = _DataAction__WEBPACK_IMPORTED_MODULE_1__["DataAction"];
  var ALL = _ControlAction.ALL = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_DataAction__WEBPACK_IMPORTED_MODULE_1__["DataAction"].ALL), Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_FocusAction__WEBPACK_IMPORTED_MODULE_2__["FocusAction"].ALL));
})(ControlAction || (ControlAction = {}));

/***/ }),

/***/ "./typescript/redux/ControlEvent.ts":
/*!******************************************!*\
  !*** ./typescript/redux/ControlEvent.ts ***!
  \******************************************/
/*! exports provided: ControlEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ControlEvent", function() { return ControlEvent; });
/* harmony import */ var _DataEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DataEvent */ "./typescript/redux/DataEvent.ts");
/* harmony import */ var _FocusEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FocusEvent */ "./typescript/redux/FocusEvent.ts");


/**
 * 
 */

/**
 *
 */
var ControlEvent;

(function (_ControlEvent) {
  var Focus = _ControlEvent.Focus = _FocusEvent__WEBPACK_IMPORTED_MODULE_1__["FocusEvent"];
  var Data = _ControlEvent.Data = _DataEvent__WEBPACK_IMPORTED_MODULE_0__["DataEvent"];
})(ControlEvent || (ControlEvent = {}));

/***/ }),

/***/ "./typescript/redux/DataAction.ts":
/*!****************************************!*\
  !*** ./typescript/redux/DataAction.ts ***!
  \****************************************/
/*! exports provided: DataAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataAction", function() { return DataAction; });
/**
 * 
 */

/**
 *
 */
var DataAction;

(function (_DataAction) {
  /**
   * 
   */
  var CHANGE = _DataAction.CHANGE = 'data:change';
  var TOGGLE = _DataAction.TOGGLE = 'data:toggle';
  var INCREMENT = _DataAction.INCREMENT = 'data:increment';
  var DECREMENT = _DataAction.DECREMENT = 'data:decrement';
  var ALL = _DataAction.ALL = [CHANGE, TOGGLE, INCREMENT, DECREMENT];
})(DataAction || (DataAction = {}));

/***/ }),

/***/ "./typescript/redux/DataEvent.ts":
/*!***************************************!*\
  !*** ./typescript/redux/DataEvent.ts ***!
  \***************************************/
/*! exports provided: DataEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataEvent", function() { return DataEvent; });
/* harmony import */ var _DataAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DataAction */ "./typescript/redux/DataAction.ts");
/* harmony import */ var _ApplicationEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ApplicationEvent */ "./typescript/redux/ApplicationEvent.ts");


/**
 * 
 */

/**
 *
 */
var DataEvent;

(function (_DataEvent) {
  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */
  var TOGGLE = Object.seal(_ApplicationEvent__WEBPACK_IMPORTED_MODULE_1__["ApplicationEvent"].create(_DataAction__WEBPACK_IMPORTED_MODULE_0__["DataAction"].TOGGLE, {
    required: true
  }));
  /**
   * 
   */

  var TOGGLE_IF_ALLOWED = Object.seal(_ApplicationEvent__WEBPACK_IMPORTED_MODULE_1__["ApplicationEvent"].create(_DataAction__WEBPACK_IMPORTED_MODULE_0__["DataAction"].TOGGLE, {
    required: false
  }));
  /**
   * 
   */

  var INCREMENT = Object.seal(_ApplicationEvent__WEBPACK_IMPORTED_MODULE_1__["ApplicationEvent"].create(_DataAction__WEBPACK_IMPORTED_MODULE_0__["DataAction"].INCREMENT, {
    required: true
  }));
  /**
   * 
   */

  var INCREMENT_IF_ALLOWED = Object.seal(_ApplicationEvent__WEBPACK_IMPORTED_MODULE_1__["ApplicationEvent"].create(_DataAction__WEBPACK_IMPORTED_MODULE_0__["DataAction"].INCREMENT, {
    required: false
  }));
  /**
   * 
   */

  var DECREMENT = Object.seal(_ApplicationEvent__WEBPACK_IMPORTED_MODULE_1__["ApplicationEvent"].create(_DataAction__WEBPACK_IMPORTED_MODULE_0__["DataAction"].DECREMENT, {
    required: true
  }));
  /**
   * 
   */

  var DECREMENT_IF_ALLOWED = Object.seal(_ApplicationEvent__WEBPACK_IMPORTED_MODULE_1__["ApplicationEvent"].create(_DataAction__WEBPACK_IMPORTED_MODULE_0__["DataAction"].DECREMENT, {
    required: false
  }));
  /**
   * 
   */

  function change(previous, next) {
    return _ApplicationEvent__WEBPACK_IMPORTED_MODULE_1__["ApplicationEvent"].create(_DataAction__WEBPACK_IMPORTED_MODULE_0__["DataAction"].CHANGE, {
      previous: previous,
      next: next
    });
  }

  _DataEvent.change = change;

  function toggle() {
    return TOGGLE;
  }

  _DataEvent.toggle = toggle;

  function toggleIfAllowed() {
    return TOGGLE_IF_ALLOWED;
  }

  _DataEvent.toggleIfAllowed = toggleIfAllowed;

  function increment() {
    return INCREMENT;
  }

  _DataEvent.increment = increment;

  function incrementIfAllowed() {
    return INCREMENT_IF_ALLOWED;
  }

  _DataEvent.incrementIfAllowed = incrementIfAllowed;

  function decrement() {
    return DECREMENT;
  }

  _DataEvent.decrement = decrement;

  function decrementIfAllowed() {
    return DECREMENT_IF_ALLOWED;
  }

  _DataEvent.decrementIfAllowed = decrementIfAllowed;
})(DataEvent || (DataEvent = {}));

/***/ }),

/***/ "./typescript/redux/DataReducer.ts":
/*!*****************************************!*\
  !*** ./typescript/redux/DataReducer.ts ***!
  \*****************************************/
/*! exports provided: DataReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataReducer", function() { return DataReducer; });
/* harmony import */ var _DataAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DataAction */ "./typescript/redux/DataAction.ts");


/**
 * 
 */
var DataReducer;

(function (_DataReducer) {
  function reduceChange(state, event) {
    return event.payload.next;
  }

  _DataReducer.reduceChange = reduceChange;

  function reduceIncrement(state, event) {
    if (state == null) {
      return 1;
    } else if (typeof state === 'number') {
      return state + 1;
    } else if (event.payload.required) {
      if (typeof state === 'object') {
        throw new Error('Trying to increment a non-incrementable data type : ' + typeof state + ' ' + state.constructor.name + '.');
      } else {
        throw new Error('Trying to increment a non-incrementable data type : ' + typeof state + '.');
      }
    } else {
      return state;
    }
  }

  _DataReducer.reduceIncrement = reduceIncrement;

  function reduceDecrement(state, event) {
    if (state == null) {
      return -1;
    } else if (typeof state === 'number') {
      return state - 1;
    } else if (event.payload.required) {
      if (typeof state === 'object') {
        throw new Error('Trying to increment a non-decrementable data type : ' + typeof state + ' ' + state.constructor.name + '.');
      } else {
        throw new Error('Trying to increment a non-decrementable data type : ' + typeof state + '.');
      }
    } else {
      return state;
    }
  }

  _DataReducer.reduceDecrement = reduceDecrement;

  function reduceToggle(state, event) {
    if (state == null) {
      return true;
    } else if (typeof state === 'number') {
      return state > 0 ? 0 : 1;
    } else if (typeof state === 'boolean') {
      return !state;
    } else if (event.payload.required) {
      if (typeof state === 'object') {
        throw new Error('Trying to increment a non-togglable data type : ' + typeof state + ' ' + state.constructor.name + '.');
      } else {
        throw new Error('Trying to increment a non-togglable data type : ' + typeof state + '.');
      }
    } else {
      return state;
    }
  }

  _DataReducer.reduceToggle = reduceToggle;

  function reduce(state, event) {
    switch (event.type) {
      case _DataAction__WEBPACK_IMPORTED_MODULE_0__["DataAction"].CHANGE:
        return reduceChange(state, event);

      case _DataAction__WEBPACK_IMPORTED_MODULE_0__["DataAction"].DECREMENT:
        return reduceDecrement(state, event);

      case _DataAction__WEBPACK_IMPORTED_MODULE_0__["DataAction"].INCREMENT:
        return reduceIncrement(state, event);

      case _DataAction__WEBPACK_IMPORTED_MODULE_0__["DataAction"].TOGGLE:
        return reduceToggle(state, event);

      default:
        return state;
    }
  }

  _DataReducer.reduce = reduce;
})(DataReducer || (DataReducer = {}));

/***/ }),

/***/ "./typescript/redux/Field.ts":
/*!***********************************!*\
  !*** ./typescript/redux/Field.ts ***!
  \***********************************/
/*! exports provided: Field */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Field", function() { return Field; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");



/**
 * 
 */
var Field = /*#__PURE__*/function () {
  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Field, null, [{
    key: "create",

    /**
     * 
     */

    /**
     * 
     */

    /**
     * 
     */
    value: function create(properties) {
      return new Field(properties);
    }
    /**
     * 
     */

  }]);

  function Field(properties) {
    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Field);

    this.focus = void 0;
    this.value = void 0;
    this.focus = properties.focus || false;
    this.value = properties.value;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Field, [{
    key: "equals",
    value: function equals(other) {
      if (other == null) return false;
      if (other === this) return true;

      if (other instanceof Field) {
        return other.focus === this.focus && other.value === this.value;
      }

      return false;
    }
  }]);

  return Field;
}();
/**
 * 
 */

(function (_Field) {})(Field || (Field = {}));

/***/ }),

/***/ "./typescript/redux/FieldReducer.ts":
/*!******************************************!*\
  !*** ./typescript/redux/FieldReducer.ts ***!
  \******************************************/
/*! exports provided: FieldReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FieldReducer", function() { return FieldReducer; });
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var _ControlAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ControlAction */ "./typescript/redux/ControlAction.ts");
/* harmony import */ var _DataReducer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DataReducer */ "./typescript/redux/DataReducer.ts");
/* harmony import */ var _Field__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Field */ "./typescript/redux/Field.ts");
/* harmony import */ var _FocusAction__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./FocusAction */ "./typescript/redux/FocusAction.ts");


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }






/**
 * 
 */
var FieldReducer;

(function (_FieldReducer) {
  function reduceData(state, event) {
    var nextValue = _DataReducer__WEBPACK_IMPORTED_MODULE_2__["DataReducer"].reduce(state.value, event);
    return nextValue === state.value ? state : _Field__WEBPACK_IMPORTED_MODULE_3__["Field"].create(_objectSpread({}, state, {
      value: nextValue
    }));
  }

  _FieldReducer.reduceData = reduceData;

  function reduceFocus(state, event) {
    var nextFocus = event.type === _FocusAction__WEBPACK_IMPORTED_MODULE_4__["FocusAction"].FOCUS;
    return nextFocus === state.focus ? state : _Field__WEBPACK_IMPORTED_MODULE_3__["Field"].create(_objectSpread({}, state, {
      focus: nextFocus
    }));
  }

  _FieldReducer.reduceFocus = reduceFocus;

  function reduce(state, event) {
    switch (event.type) {
      case _ControlAction__WEBPACK_IMPORTED_MODULE_1__["ControlAction"].Data.CHANGE:
      case _ControlAction__WEBPACK_IMPORTED_MODULE_1__["ControlAction"].Data.DECREMENT:
      case _ControlAction__WEBPACK_IMPORTED_MODULE_1__["ControlAction"].Data.INCREMENT:
      case _ControlAction__WEBPACK_IMPORTED_MODULE_1__["ControlAction"].Data.TOGGLE:
        return reduceData(state, event);

      case _ControlAction__WEBPACK_IMPORTED_MODULE_1__["ControlAction"].Focus.FOCUS:
      case _ControlAction__WEBPACK_IMPORTED_MODULE_1__["ControlAction"].Focus.BLUR:
        return reduceFocus(state, event);

      default:
        return state;
    }
  }

  _FieldReducer.reduce = reduce;
})(FieldReducer || (FieldReducer = {}));

/***/ }),

/***/ "./typescript/redux/FocusAction.ts":
/*!*****************************************!*\
  !*** ./typescript/redux/FocusAction.ts ***!
  \*****************************************/
/*! exports provided: FocusAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusAction", function() { return FocusAction; });
/**
 * 
 */

/**
 *
 */
var FocusAction;

(function (_FocusAction) {
  /**
   * 
   */
  var FOCUS = _FocusAction.FOCUS = 'focus:focus';
  var BLUR = _FocusAction.BLUR = 'focus:blur';
  var ALL = _FocusAction.ALL = [FOCUS, BLUR];
})(FocusAction || (FocusAction = {}));

/***/ }),

/***/ "./typescript/redux/FocusEvent.ts":
/*!****************************************!*\
  !*** ./typescript/redux/FocusEvent.ts ***!
  \****************************************/
/*! exports provided: FocusEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusEvent", function() { return FocusEvent; });
/* harmony import */ var _FocusAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FocusAction */ "./typescript/redux/FocusAction.ts");
/* harmony import */ var _ApplicationEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ApplicationEvent */ "./typescript/redux/ApplicationEvent.ts");


/**
 * 
 */

/**
 *
 */
var FocusEvent;

(function (_FocusEvent) {
  /**
   * 
   */

  /**
   * 
   */

  /**
   * 
   */
  var FOCUS = Object.seal(_ApplicationEvent__WEBPACK_IMPORTED_MODULE_1__["ApplicationEvent"].create(_FocusAction__WEBPACK_IMPORTED_MODULE_0__["FocusAction"].FOCUS));
  /**
   * 
   */

  var BLUR = Object.seal(_ApplicationEvent__WEBPACK_IMPORTED_MODULE_1__["ApplicationEvent"].create(_FocusAction__WEBPACK_IMPORTED_MODULE_0__["FocusAction"].BLUR));
  /**
   * 
   */

  function focus() {
    return FOCUS;
  }

  _FocusEvent.focus = focus;

  function blur() {
    return BLUR;
  }

  _FocusEvent.blur = blur;
})(FocusEvent || (FocusEvent = {}));

/***/ }),

/***/ "./typescript/redux/index.ts":
/*!***********************************!*\
  !*** ./typescript/redux/index.ts ***!
  \***********************************/
/*! exports provided: ApplicationEvent, ControlAction, ControlEvent, DataAction, DataEvent, DataReducer, Field, FieldReducer, FocusAction, FocusEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ApplicationEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ApplicationEvent */ "./typescript/redux/ApplicationEvent.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ApplicationEvent", function() { return _ApplicationEvent__WEBPACK_IMPORTED_MODULE_0__["ApplicationEvent"]; });

/* harmony import */ var _ControlAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ControlAction */ "./typescript/redux/ControlAction.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ControlAction", function() { return _ControlAction__WEBPACK_IMPORTED_MODULE_1__["ControlAction"]; });

/* harmony import */ var _ControlEvent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ControlEvent */ "./typescript/redux/ControlEvent.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ControlEvent", function() { return _ControlEvent__WEBPACK_IMPORTED_MODULE_2__["ControlEvent"]; });

/* harmony import */ var _DataAction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DataAction */ "./typescript/redux/DataAction.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataAction", function() { return _DataAction__WEBPACK_IMPORTED_MODULE_3__["DataAction"]; });

/* harmony import */ var _DataEvent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DataEvent */ "./typescript/redux/DataEvent.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataEvent", function() { return _DataEvent__WEBPACK_IMPORTED_MODULE_4__["DataEvent"]; });

/* harmony import */ var _DataReducer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DataReducer */ "./typescript/redux/DataReducer.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataReducer", function() { return _DataReducer__WEBPACK_IMPORTED_MODULE_5__["DataReducer"]; });

/* harmony import */ var _Field__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Field */ "./typescript/redux/Field.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Field", function() { return _Field__WEBPACK_IMPORTED_MODULE_6__["Field"]; });

/* harmony import */ var _FieldReducer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./FieldReducer */ "./typescript/redux/FieldReducer.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FieldReducer", function() { return _FieldReducer__WEBPACK_IMPORTED_MODULE_7__["FieldReducer"]; });

/* harmony import */ var _FocusAction__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./FocusAction */ "./typescript/redux/FocusAction.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FocusAction", function() { return _FocusAction__WEBPACK_IMPORTED_MODULE_8__["FocusAction"]; });

/* harmony import */ var _FocusEvent__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./FocusEvent */ "./typescript/redux/FocusEvent.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FocusEvent", function() { return _FocusEvent__WEBPACK_IMPORTED_MODULE_9__["FocusEvent"]; });












/***/ }),

/***/ "./typescript/unidoc/AddressCommand.ts":
/*!*********************************************!*\
  !*** ./typescript/unidoc/AddressCommand.ts ***!
  \*********************************************/
/*! exports provided: AddressCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddressCommand", function() { return AddressCommand; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_Empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Empty */ "./typescript/utils/Empty.ts");
/* harmony import */ var _Address__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Address */ "./typescript/Address.ts");
/* harmony import */ var _validator_command_CommandList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validator/command/CommandList */ "./typescript/unidoc/validator/command/CommandList.ts");
/* harmony import */ var _validator_command_CommandListElement__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./validator/command/CommandListElement */ "./typescript/unidoc/validator/command/CommandListElement.ts");
/* harmony import */ var _validator_command_validateCommandList__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validator/command/validateCommandList */ "./typescript/unidoc/validator/command/validateCommandList.ts");









/**
 * 
 */

var AddressCommand;

(function (_AddressCommand) {
  var _marked = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(reduce);

  /**
   * 
   */
  var COMMAND = _validator_command_CommandList__WEBPACK_IMPORTED_MODULE_4__["CommandList"].capture(_validator_command_CommandListElement__WEBPACK_IMPORTED_MODULE_5__["CommandListElement"].anywhere.requiredCommand('country', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireText), _validator_command_CommandListElement__WEBPACK_IMPORTED_MODULE_5__["CommandListElement"].anywhere.optionalCommand('state', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireText), _validator_command_CommandListElement__WEBPACK_IMPORTED_MODULE_5__["CommandListElement"].anywhere.optionalCommand('county', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireText), _validator_command_CommandListElement__WEBPACK_IMPORTED_MODULE_5__["CommandListElement"].anywhere.optionalCommand('city', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireText), _validator_command_CommandListElement__WEBPACK_IMPORTED_MODULE_5__["CommandListElement"].anywhere.optionalCommand('district', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireText), _validator_command_CommandListElement__WEBPACK_IMPORTED_MODULE_5__["CommandListElement"].anywhere.optionalCommand('street', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireText));
  /**
   * 
   */

  function validate() {
    return Object(_validator_command_validateCommandList__WEBPACK_IMPORTED_MODULE_6__["validateCommandList"])(COMMAND);
  }

  _AddressCommand.validate = validate;

  function reduce() {
    var country, state, county, city, district, street, current;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function reduce$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            country = _utils_Empty__WEBPACK_IMPORTED_MODULE_2__["Empty"].STRING;
            state = undefined;
            county = undefined;
            city = undefined;
            district = undefined;
            street = undefined;
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipStart(), "t0", 7);

          case 7:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipWhitespaces(), "t1", 8);

          case 8:
            if (false) {}

            _context.next = 11;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReductionRequest"].CURRENT;

          case 11:
            current = _context.sent;

            if (!current.isStartOfAnyTag()) {
              _context.next = 46;
              break;
            }

            if (!current.isStartOfTag('country')) {
              _context.next = 18;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceText()), "t2", 15);

          case 15:
            country = _context.t2;
            _context.next = 44;
            break;

          case 18:
            if (!current.isStartOfTag('city')) {
              _context.next = 23;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceText()), "t3", 20);

          case 20:
            city = _context.t3;
            _context.next = 44;
            break;

          case 23:
            if (!current.isStartOfTag('county')) {
              _context.next = 28;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceText()), "t4", 25);

          case 25:
            county = _context.t4;
            _context.next = 44;
            break;

          case 28:
            if (!current.isStartOfTag('state')) {
              _context.next = 33;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceText()), "t5", 30);

          case 30:
            state = _context.t5;
            _context.next = 44;
            break;

          case 33:
            if (!current.isStartOfTag('district')) {
              _context.next = 38;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceText()), "t6", 35);

          case 35:
            district = _context.t6;
            _context.next = 44;
            break;

          case 38:
            if (!current.isStartOfTag('street')) {
              _context.next = 43;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceText()), "t7", 40);

          case 40:
            street = _context.t7;
            _context.next = 44;
            break;

          case 43:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipTag(), "t8", 44);

          case 44:
            _context.next = 53;
            break;

          case 46:
            if (!current.isEnd()) {
              _context.next = 50;
              break;
            }

            return _context.abrupt("return", _Address__WEBPACK_IMPORTED_MODULE_3__["Address"].create({
              country: country,
              state: state,
              county: county,
              city: city,
              district: district,
              street: street
            }));

          case 50:
            _context.next = 52;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReductionRequest"].NEXT;

          case 52:
            current = _context.sent;

          case 53:
            _context.next = 8;
            break;

          case 55:
          case "end":
            return _context.stop();
        }
      }
    }, _marked);
  }

  _AddressCommand.reduce = reduce;
})(AddressCommand || (AddressCommand = {}));

/***/ }),

/***/ "./typescript/unidoc/CharacteristicSetCommand.ts":
/*!*******************************************************!*\
  !*** ./typescript/unidoc/CharacteristicSetCommand.ts ***!
  \*******************************************************/
/*! exports provided: CharacteristicSetCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CharacteristicSetCommand", function() { return CharacteristicSetCommand; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Value__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Value */ "./typescript/Value.ts");
/* harmony import */ var _validator_command__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validator/command */ "./typescript/unidoc/validator/command/index.ts");
/* harmony import */ var _ValueCommand__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ValueCommand */ "./typescript/unidoc/ValueCommand.ts");
/* harmony import */ var _CharacteristicSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../CharacteristicSet */ "./typescript/CharacteristicSet.ts");









/**
 * 
 */

var CharacteristicSetCommand;

(function (_CharacteristicSetCommand) {
  var _marked = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(reduce);

  /**
   * 
   */
  var COMMAND = _validator_command__WEBPACK_IMPORTED_MODULE_3__["CommandList"].capture(_validator_command__WEBPACK_IMPORTED_MODULE_3__["CommandListElement"].anywhere.requiredCommand('appearance', _ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].validate), _validator_command__WEBPACK_IMPORTED_MODULE_3__["CommandListElement"].anywhere.requiredCommand('constitution', _ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].validate), _validator_command__WEBPACK_IMPORTED_MODULE_3__["CommandListElement"].anywhere.requiredCommand('dexterity', _ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].validate), _validator_command__WEBPACK_IMPORTED_MODULE_3__["CommandListElement"].anywhere.requiredCommand('education', _ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].validate), _validator_command__WEBPACK_IMPORTED_MODULE_3__["CommandListElement"].anywhere.requiredCommand('intelligence', _ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].validate), _validator_command__WEBPACK_IMPORTED_MODULE_3__["CommandListElement"].anywhere.requiredCommand('power', _ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].validate), _validator_command__WEBPACK_IMPORTED_MODULE_3__["CommandListElement"].anywhere.requiredCommand('size', _ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].validate), _validator_command__WEBPACK_IMPORTED_MODULE_3__["CommandListElement"].anywhere.requiredCommand('strength', _ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].validate), _validator_command__WEBPACK_IMPORTED_MODULE_3__["CommandListElement"].anywhere.requiredCommand('luck', _ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].validate));
  /**
   * 
   */

  function validate() {
    return Object(_validator_command__WEBPACK_IMPORTED_MODULE_3__["validateCommandList"])(COMMAND);
  }

  _CharacteristicSetCommand.validate = validate;

  function reduce() {
    var appearance, constitution, dexterity, education, intelligence, power, size, strength, luck, current;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function reduce$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            appearance = _Value__WEBPACK_IMPORTED_MODULE_2__["Value"].zero();
            constitution = _Value__WEBPACK_IMPORTED_MODULE_2__["Value"].zero();
            dexterity = _Value__WEBPACK_IMPORTED_MODULE_2__["Value"].zero();
            education = _Value__WEBPACK_IMPORTED_MODULE_2__["Value"].zero();
            intelligence = _Value__WEBPACK_IMPORTED_MODULE_2__["Value"].zero();
            power = _Value__WEBPACK_IMPORTED_MODULE_2__["Value"].zero();
            size = _Value__WEBPACK_IMPORTED_MODULE_2__["Value"].zero();
            strength = _Value__WEBPACK_IMPORTED_MODULE_2__["Value"].zero();
            luck = _Value__WEBPACK_IMPORTED_MODULE_2__["Value"].zero();
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipStart(), "t0", 10);

          case 10:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipWhitespaces(), "t1", 11);

          case 11:
            if (false) {}

            _context.next = 14;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReductionRequest"].CURRENT;

          case 14:
            current = _context.sent;

            if (!current.isStartOfAnyTag()) {
              _context.next = 64;
              break;
            }

            if (!current.isStartOfTag('appearance')) {
              _context.next = 21;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].reduce()), "t2", 18);

          case 18:
            appearance = _context.t2;
            _context.next = 62;
            break;

          case 21:
            if (!current.isStartOfTag('constitution')) {
              _context.next = 26;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].reduce()), "t3", 23);

          case 23:
            constitution = _context.t3;
            _context.next = 62;
            break;

          case 26:
            if (!current.isStartOfTag('dexterity')) {
              _context.next = 31;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].reduce()), "t4", 28);

          case 28:
            dexterity = _context.t4;
            _context.next = 62;
            break;

          case 31:
            if (!current.isStartOfTag('education')) {
              _context.next = 36;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].reduce()), "t5", 33);

          case 33:
            education = _context.t5;
            _context.next = 62;
            break;

          case 36:
            if (!current.isStartOfTag('intelligence')) {
              _context.next = 41;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].reduce()), "t6", 38);

          case 38:
            intelligence = _context.t6;
            _context.next = 62;
            break;

          case 41:
            if (!current.isStartOfTag('power')) {
              _context.next = 46;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].reduce()), "t7", 43);

          case 43:
            power = _context.t7;
            _context.next = 62;
            break;

          case 46:
            if (!current.isStartOfTag('size')) {
              _context.next = 51;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].reduce()), "t8", 48);

          case 48:
            size = _context.t8;
            _context.next = 62;
            break;

          case 51:
            if (!current.isStartOfTag('strength')) {
              _context.next = 56;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].reduce()), "t9", 53);

          case 53:
            strength = _context.t9;
            _context.next = 62;
            break;

          case 56:
            if (!current.isStartOfTag('luck')) {
              _context.next = 61;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_ValueCommand__WEBPACK_IMPORTED_MODULE_4__["ValueCommand"].reduce()), "t10", 58);

          case 58:
            luck = _context.t10;
            _context.next = 62;
            break;

          case 61:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipTag(), "t11", 62);

          case 62:
            _context.next = 71;
            break;

          case 64:
            if (!current.isEnd()) {
              _context.next = 68;
              break;
            }

            return _context.abrupt("return", _CharacteristicSet__WEBPACK_IMPORTED_MODULE_5__["CharacteristicSet"].create({
              appearance: appearance,
              constitution: constitution,
              dexterity: dexterity,
              education: education,
              intelligence: intelligence,
              power: power,
              size: size,
              strength: strength,
              luck: luck
            }));

          case 68:
            _context.next = 70;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReductionRequest"].NEXT;

          case 70:
            current = _context.sent;

          case 71:
            _context.next = 11;
            break;

          case 73:
          case "end":
            return _context.stop();
        }
      }
    }, _marked);
  }

  _CharacteristicSetCommand.reduce = reduce;
})(CharacteristicSetCommand || (CharacteristicSetCommand = {}));

/***/ }),

/***/ "./typescript/unidoc/GenderCommand.ts":
/*!********************************************!*\
  !*** ./typescript/unidoc/GenderCommand.ts ***!
  \********************************************/
/*! exports provided: GenderCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GenderCommand", function() { return GenderCommand; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Gender__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Gender */ "./typescript/Gender.ts");




/**
 * 
 */

var GenderCommand;

(function (_GenderCommand) {
  var _marked = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(validate),
      _marked2 = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(reduce);

  function validate() {
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function validate$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireToken(), "t0", 1);

          case 1:
            return _context.abrupt("return", _context.t0);

          case 2:
          case "end":
            return _context.stop();
        }
      }
    }, _marked);
  }

  _GenderCommand.validate = validate;

  function reduce() {
    var type;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function reduce$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            return _context2.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipStart(), "t0", 1);

          case 1:
            return _context2.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipWhitespaces(), "t1", 2);

          case 2:
            return _context2.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceToken(), "t2", 3);

          case 3:
            type = _context2.t2;
            return _context2.abrupt("return", type.toLowerCase() === 'male' ? _Gender__WEBPACK_IMPORTED_MODULE_2__["Gender"].MALE : _Gender__WEBPACK_IMPORTED_MODULE_2__["Gender"].FEMALE);

          case 5:
          case "end":
            return _context2.stop();
        }
      }
    }, _marked2);
  }

  _GenderCommand.reduce = reduce;
})(GenderCommand || (GenderCommand = {}));

/***/ }),

/***/ "./typescript/unidoc/InvestigatorCommand.ts":
/*!**************************************************!*\
  !*** ./typescript/unidoc/InvestigatorCommand.ts ***!
  \**************************************************/
/*! exports provided: InvestigatorCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InvestigatorCommand", function() { return InvestigatorCommand; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Investigator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Investigator */ "./typescript/Investigator.ts");
/* harmony import */ var _CharacteristicSet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../CharacteristicSet */ "./typescript/CharacteristicSet.ts");
/* harmony import */ var _Summary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Summary */ "./typescript/Summary.ts");
/* harmony import */ var _SkillSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../SkillSet */ "./typescript/SkillSet.ts");
/* harmony import */ var _validator_command__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validator/command */ "./typescript/unidoc/validator/command/index.ts");
/* harmony import */ var _NameCommand__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./NameCommand */ "./typescript/unidoc/NameCommand.ts");
/* harmony import */ var _GenderCommand__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./GenderCommand */ "./typescript/unidoc/GenderCommand.ts");
/* harmony import */ var _AddressCommand__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./AddressCommand */ "./typescript/unidoc/AddressCommand.ts");
/* harmony import */ var _CharacteristicSetCommand__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./CharacteristicSetCommand */ "./typescript/unidoc/CharacteristicSetCommand.ts");
/* harmony import */ var _SkillSetCommand__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./SkillSetCommand */ "./typescript/unidoc/SkillSetCommand.ts");
/* harmony import */ var _StateCommand__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./StateCommand */ "./typescript/unidoc/StateCommand.ts");

















/**
 * 
 */

var InvestigatorCommand;

(function (_InvestigatorCommand) {
  var _marked = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(reduce);

  /**
   * 
   */
  var COMMAND = _validator_command__WEBPACK_IMPORTED_MODULE_6__["CommandList"].capture(_validator_command__WEBPACK_IMPORTED_MODULE_6__["CommandListElement"].anywhere.requiredCommand('name', _NameCommand__WEBPACK_IMPORTED_MODULE_7__["NameCommand"].validate), _validator_command__WEBPACK_IMPORTED_MODULE_6__["CommandListElement"].anywhere.requiredCommand('alias', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireText), _validator_command__WEBPACK_IMPORTED_MODULE_6__["CommandListElement"].anywhere.requiredCommand('job', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireText), _validator_command__WEBPACK_IMPORTED_MODULE_6__["CommandListElement"].anywhere.requiredCommand('matricule', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireText), _validator_command__WEBPACK_IMPORTED_MODULE_6__["CommandListElement"].anywhere.requiredCommand('gender', _GenderCommand__WEBPACK_IMPORTED_MODULE_8__["GenderCommand"].validate), _validator_command__WEBPACK_IMPORTED_MODULE_6__["CommandListElement"].anywhere.requiredCommand('age', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireToken), _validator_command__WEBPACK_IMPORTED_MODULE_6__["CommandListElement"].anywhere.requiredCommand('birthdate', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireText), _validator_command__WEBPACK_IMPORTED_MODULE_6__["CommandListElement"].anywhere.requiredCommand('hiringdate', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireText), _validator_command__WEBPACK_IMPORTED_MODULE_6__["CommandListElement"].anywhere.requiredCommand('birthplace', _AddressCommand__WEBPACK_IMPORTED_MODULE_9__["AddressCommand"].validate), _validator_command__WEBPACK_IMPORTED_MODULE_6__["CommandListElement"].anywhere.requiredCommand('home', _AddressCommand__WEBPACK_IMPORTED_MODULE_9__["AddressCommand"].validate), _validator_command__WEBPACK_IMPORTED_MODULE_6__["CommandListElement"].anywhere.requiredCommand('characteristics', _CharacteristicSetCommand__WEBPACK_IMPORTED_MODULE_10__["CharacteristicSetCommand"].validate), _validator_command__WEBPACK_IMPORTED_MODULE_6__["CommandListElement"].anywhere.requiredCommand('skills', _SkillSetCommand__WEBPACK_IMPORTED_MODULE_11__["SkillSetCommand"].validate), _validator_command__WEBPACK_IMPORTED_MODULE_6__["CommandListElement"].anywhere.optionalCommand('state', _StateCommand__WEBPACK_IMPORTED_MODULE_12__["StateCommand"].validate), _validator_command__WEBPACK_IMPORTED_MODULE_6__["CommandListElement"].anywhere.optionalCommand('updates', _SkillSetCommand__WEBPACK_IMPORTED_MODULE_11__["SkillSetCommand"].validate));
  /**
   * 
   */

  function validate() {
    return Object(_validator_command__WEBPACK_IMPORTED_MODULE_6__["validateCommandList"])(COMMAND);
  }

  _InvestigatorCommand.validate = validate;

  function reduce() {
    var name, alias, job, matricule, gender, age, birthdate, hiringdate, birthplace, home, characteristics, skills, mutables, updates, current;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function reduce$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            name = undefined;
            alias = undefined;
            job = undefined;
            matricule = undefined;
            gender = undefined;
            age = undefined;
            birthdate = undefined;
            hiringdate = undefined;
            birthplace = undefined;
            home = undefined;
            characteristics = _CharacteristicSet__WEBPACK_IMPORTED_MODULE_3__["CharacteristicSet"].empty();
            skills = _SkillSet__WEBPACK_IMPORTED_MODULE_5__["SkillSet"].empty();
            mutables = undefined;
            updates = _SkillSet__WEBPACK_IMPORTED_MODULE_5__["SkillSet"].empty();
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipStart(), "t0", 15);

          case 15:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipWhitespaces(), "t1", 16);

          case 16:
            if (false) {}

            _context.next = 19;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReductionRequest"].CURRENT;

          case 19:
            current = _context.sent;

            if (!current.isStartOfAnyTag()) {
              _context.next = 94;
              break;
            }

            if (!current.isStartOfTag('name')) {
              _context.next = 26;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_NameCommand__WEBPACK_IMPORTED_MODULE_7__["NameCommand"].reduce()), "t2", 23);

          case 23:
            name = _context.t2;
            _context.next = 92;
            break;

          case 26:
            if (!current.isStartOfTag('alias')) {
              _context.next = 31;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceText()), "t3", 28);

          case 28:
            alias = _context.t3;
            _context.next = 92;
            break;

          case 31:
            if (!current.isStartOfTag('state')) {
              _context.next = 36;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_StateCommand__WEBPACK_IMPORTED_MODULE_12__["StateCommand"].reduce()), "t4", 33);

          case 33:
            mutables = _context.t4;
            _context.next = 92;
            break;

          case 36:
            if (!current.isStartOfTag('job')) {
              _context.next = 41;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceText()), "t5", 38);

          case 38:
            job = _context.t5;
            _context.next = 92;
            break;

          case 41:
            if (!current.isStartOfTag('matricule')) {
              _context.next = 46;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceText()), "t6", 43);

          case 43:
            matricule = _context.t6;
            _context.next = 92;
            break;

          case 46:
            if (!current.isStartOfTag('gender')) {
              _context.next = 51;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_GenderCommand__WEBPACK_IMPORTED_MODULE_8__["GenderCommand"].reduce()), "t7", 48);

          case 48:
            gender = _context.t7;
            _context.next = 92;
            break;

          case 51:
            if (!current.isStartOfTag('age')) {
              _context.next = 56;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceText()), "t8", 53);

          case 53:
            age = _context.t8;
            _context.next = 92;
            break;

          case 56:
            if (!current.isStartOfTag('birthdate')) {
              _context.next = 61;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceText()), "t9", 58);

          case 58:
            birthdate = _context.t9;
            _context.next = 92;
            break;

          case 61:
            if (!current.isStartOfTag('hiringdate')) {
              _context.next = 66;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceText()), "t10", 63);

          case 63:
            hiringdate = _context.t10;
            _context.next = 92;
            break;

          case 66:
            if (!current.isStartOfTag('birthplace')) {
              _context.next = 71;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_AddressCommand__WEBPACK_IMPORTED_MODULE_9__["AddressCommand"].reduce()), "t11", 68);

          case 68:
            birthplace = _context.t11;
            _context.next = 92;
            break;

          case 71:
            if (!current.isStartOfTag('home')) {
              _context.next = 76;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_AddressCommand__WEBPACK_IMPORTED_MODULE_9__["AddressCommand"].reduce()), "t12", 73);

          case 73:
            home = _context.t12;
            _context.next = 92;
            break;

          case 76:
            if (!current.isStartOfTag('characteristics')) {
              _context.next = 81;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_CharacteristicSetCommand__WEBPACK_IMPORTED_MODULE_10__["CharacteristicSetCommand"].reduce()), "t13", 78);

          case 78:
            characteristics = _context.t13;
            _context.next = 92;
            break;

          case 81:
            if (!current.isStartOfTag('skills')) {
              _context.next = 86;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_SkillSetCommand__WEBPACK_IMPORTED_MODULE_11__["SkillSetCommand"].reduce()), "t14", 83);

          case 83:
            skills = _context.t14;
            _context.next = 92;
            break;

          case 86:
            if (!current.isStartOfTag('updates')) {
              _context.next = 91;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_SkillSetCommand__WEBPACK_IMPORTED_MODULE_11__["SkillSetCommand"].reduce()), "t15", 88);

          case 88:
            updates = _context.t15;
            _context.next = 92;
            break;

          case 91:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipTag(), "t16", 92);

          case 92:
            _context.next = 101;
            break;

          case 94:
            if (!current.isEnd()) {
              _context.next = 98;
              break;
            }

            return _context.abrupt("return", _Investigator__WEBPACK_IMPORTED_MODULE_2__["Investigator"].create({
              summary: _Summary__WEBPACK_IMPORTED_MODULE_4__["Summary"].create({
                name: name,
                alias: alias,
                job: job,
                matricule: matricule,
                gender: gender,
                age: parseInt(age),
                birthdate: birthdate,
                hiringdate: hiringdate,
                birthplace: birthplace,
                home: home
              }),
              characteristics: characteristics,
              skills: skills,
              mutables: mutables,
              updates: updates
            }));

          case 98:
            _context.next = 100;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReductionRequest"].NEXT;

          case 100:
            current = _context.sent;

          case 101:
            _context.next = 16;
            break;

          case 103:
          case "end":
            return _context.stop();
        }
      }
    }, _marked);
  }

  _InvestigatorCommand.reduce = reduce;
})(InvestigatorCommand || (InvestigatorCommand = {}));

/***/ }),

/***/ "./typescript/unidoc/NameCommand.ts":
/*!******************************************!*\
  !*** ./typescript/unidoc/NameCommand.ts ***!
  \******************************************/
/*! exports provided: NameCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NameCommand", function() { return NameCommand; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_Empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Empty */ "./typescript/utils/Empty.ts");
/* harmony import */ var _Name__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Name */ "./typescript/Name.ts");
/* harmony import */ var _validator_command__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validator/command */ "./typescript/unidoc/validator/command/index.ts");









/**
 * 
 */

var NameCommand;

(function (_NameCommand) {
  var _marked = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(reduce);

  /**
   * 
   */
  var COMMAND = _validator_command__WEBPACK_IMPORTED_MODULE_4__["CommandList"].capture(_validator_command__WEBPACK_IMPORTED_MODULE_4__["CommandListElement"].anywhere.requiredCommand('first', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireText), _validator_command__WEBPACK_IMPORTED_MODULE_4__["CommandListElement"].anywhere.requiredCommand('last', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireText), _validator_command__WEBPACK_IMPORTED_MODULE_4__["CommandListElement"].anywhere.optionalCommand('short', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireText));
  /**
   * 
   */

  function validate() {
    return Object(_validator_command__WEBPACK_IMPORTED_MODULE_4__["validateCommandList"])(COMMAND);
  }

  _NameCommand.validate = validate;

  function reduce() {
    var first, last, _short, current;

    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function reduce$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            first = _utils_Empty__WEBPACK_IMPORTED_MODULE_2__["Empty"].STRING;
            last = _utils_Empty__WEBPACK_IMPORTED_MODULE_2__["Empty"].STRING;
            _short = undefined;
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipStart(), "t0", 4);

          case 4:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipWhitespaces(), "t1", 5);

          case 5:
            if (false) {}

            _context.next = 8;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReductionRequest"].CURRENT;

          case 8:
            current = _context.sent;

            if (!current.isStartOfAnyTag()) {
              _context.next = 28;
              break;
            }

            if (!current.isStartOfTag('first')) {
              _context.next = 15;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceText()), "t2", 12);

          case 12:
            first = _context.t2;
            _context.next = 26;
            break;

          case 15:
            if (!current.isStartOfTag('last')) {
              _context.next = 20;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceText()), "t3", 17);

          case 17:
            last = _context.t3;
            _context.next = 26;
            break;

          case 20:
            if (!current.isStartOfTag('short')) {
              _context.next = 25;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceText()), "t4", 22);

          case 22:
            _short = _context.t4;
            _context.next = 26;
            break;

          case 25:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipTag(), "t5", 26);

          case 26:
            _context.next = 35;
            break;

          case 28:
            if (!current.isEnd()) {
              _context.next = 32;
              break;
            }

            return _context.abrupt("return", _Name__WEBPACK_IMPORTED_MODULE_3__["Name"].create({
              first: first,
              last: last,
              "short": _short
            }));

          case 32:
            _context.next = 34;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReductionRequest"].NEXT;

          case 34:
            current = _context.sent;

          case 35:
            _context.next = 5;
            break;

          case 37:
          case "end":
            return _context.stop();
        }
      }
    }, _marked);
  }

  _NameCommand.reduce = reduce;
})(NameCommand || (NameCommand = {}));

/***/ }),

/***/ "./typescript/unidoc/SkillCommand.ts":
/*!*******************************************!*\
  !*** ./typescript/unidoc/SkillCommand.ts ***!
  \*******************************************/
/*! exports provided: SkillCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SkillCommand", function() { return SkillCommand; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! immutable */ "./node_modules/immutable/dist/immutable.es.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Skill__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Skill */ "./typescript/Skill.ts");
/* harmony import */ var _Value__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Value */ "./typescript/Value.ts");
/* harmony import */ var _Modifier__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Modifier */ "./typescript/Modifier.ts");
/* harmony import */ var _data_Pair__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../data/Pair */ "./typescript/data/Pair.ts");
/* harmony import */ var _validator_command__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./validator/command */ "./typescript/unidoc/validator/command/index.ts");












/**
 * 
 */

var SkillCommand;

(function (_SkillCommand) {
  var _marked = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(reduce);

  /**
   * 
   */
  var COMMAND = _validator_command__WEBPACK_IMPORTED_MODULE_7__["CommandList"].capture(_validator_command__WEBPACK_IMPORTED_MODULE_7__["CommandListElement"].anywhere.requiredCommand('family', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocKissValidator"].requireText), _validator_command__WEBPACK_IMPORTED_MODULE_7__["CommandListElement"].anywhere.optionalCommand('specialization', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocKissValidator"].requireText), _validator_command__WEBPACK_IMPORTED_MODULE_7__["CommandListElement"].anywhere.optionalCommand('base', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocKissValidator"].requireToken), _validator_command__WEBPACK_IMPORTED_MODULE_7__["CommandListElement"].manyCommand('modifier', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocKissValidator"].requireText));
  /**
   * 
   */

  function validate() {
    return Object(_validator_command__WEBPACK_IMPORTED_MODULE_7__["validateCommandList"])(COMMAND);
  }

  _SkillCommand.validate = validate;

  function reduce() {
    var family, specialization, base, modifiers, current, tokens;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function reduce$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            family = 'none';
            specialization = undefined;
            base = undefined;
            modifiers = Object(immutable__WEBPACK_IMPORTED_MODULE_1__["List"])().asMutable();
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].skipStart(), "t0", 5);

          case 5:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].skipWhitespaces(), "t1", 6);

          case 6:
            if (false) {}

            _context.next = 9;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReductionRequest"].CURRENT;

          case 9:
            current = _context.sent;

            if (!current.isStartOfAnyTag()) {
              _context.next = 37;
              break;
            }

            if (!current.isStartOfTag('base')) {
              _context.next = 18;
              break;
            }

            _context.t2 = parseInt;
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].reduceText()), "t3", 14);

          case 14:
            _context.t4 = _context.t3;
            base = (0, _context.t2)(_context.t4);
            _context.next = 35;
            break;

          case 18:
            if (!current.isStartOfTag('family')) {
              _context.next = 23;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].reduceText()), "t5", 20);

          case 20:
            family = _context.t5;
            _context.next = 35;
            break;

          case 23:
            if (!current.isStartOfTag('specialization')) {
              _context.next = 28;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].reduceText()), "t6", 25);

          case 25:
            specialization = _context.t6;
            _context.next = 35;
            break;

          case 28:
            if (!current.isStartOfTag('modifier')) {
              _context.next = 34;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].reduceText()), "t7", 30);

          case 30:
            tokens = _context.t7.split(/\s+/ig);
            modifiers.push(_Modifier__WEBPACK_IMPORTED_MODULE_5__["Modifier"].create({
              value: parseInt(tokens[0]),
              label: tokens.slice(1).join(' ')
            }));
            _context.next = 35;
            break;

          case 34:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].skipTag(), "t8", 35);

          case 35:
            _context.next = 44;
            break;

          case 37:
            if (!current.isEnd()) {
              _context.next = 41;
              break;
            }

            return _context.abrupt("return", _data_Pair__WEBPACK_IMPORTED_MODULE_6__["Pair"].create(_Skill__WEBPACK_IMPORTED_MODULE_3__["Skill"].create({
              family: family,
              specialization: specialization
            }), _Value__WEBPACK_IMPORTED_MODULE_4__["Value"].create({
              base: base,
              modifiers: modifiers.asImmutable()
            })));

          case 41:
            _context.next = 43;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReductionRequest"].NEXT;

          case 43:
            current = _context.sent;

          case 44:
            _context.next = 6;
            break;

          case 46:
          case "end":
            return _context.stop();
        }
      }
    }, _marked);
  }

  _SkillCommand.reduce = reduce;
})(SkillCommand || (SkillCommand = {}));

/***/ }),

/***/ "./typescript/unidoc/SkillSetCommand.ts":
/*!**********************************************!*\
  !*** ./typescript/unidoc/SkillSetCommand.ts ***!
  \**********************************************/
/*! exports provided: SkillSetCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SkillSetCommand", function() { return SkillSetCommand; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _SkillSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SkillSet */ "./typescript/SkillSet.ts");
/* harmony import */ var _validator_command__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validator/command */ "./typescript/unidoc/validator/command/index.ts");
/* harmony import */ var _SkillCommand__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SkillCommand */ "./typescript/unidoc/SkillCommand.ts");








/**
 * 
 */

var SkillSetCommand;

(function (_SkillSetCommand) {
  var _marked = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(reduce);

  /**
   * 
   */
  var COMMAND = _validator_command__WEBPACK_IMPORTED_MODULE_3__["CommandList"].capture(_validator_command__WEBPACK_IMPORTED_MODULE_3__["CommandListElement"].manyCommand('skill', _SkillCommand__WEBPACK_IMPORTED_MODULE_4__["SkillCommand"].validate));
  /**
   * 
   */

  function validate() {
    return Object(_validator_command__WEBPACK_IMPORTED_MODULE_3__["validateCommandList"])(COMMAND);
  }

  _SkillSetCommand.validate = validate;

  function reduce() {
    var skills, current;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function reduce$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            skills = [];
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipStart(), "t0", 2);

          case 2:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipWhitespaces(), "t1", 3);

          case 3:
            if (false) {}

            _context.next = 6;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReductionRequest"].CURRENT;

          case 6:
            current = _context.sent;

            if (!current.isStartOfAnyTag()) {
              _context.next = 18;
              break;
            }

            if (!current.isStartOfTag('skill')) {
              _context.next = 15;
              break;
            }

            _context.t2 = skills;
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_SkillCommand__WEBPACK_IMPORTED_MODULE_4__["SkillCommand"].reduce()), "t3", 11);

          case 11:
            _context.t4 = _context.t3;

            _context.t2.push.call(_context.t2, _context.t4);

            _context.next = 16;
            break;

          case 15:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipTag(), "t5", 16);

          case 16:
            _context.next = 25;
            break;

          case 18:
            if (!current.isEnd()) {
              _context.next = 22;
              break;
            }

            return _context.abrupt("return", _SkillSet__WEBPACK_IMPORTED_MODULE_2__["SkillSet"].create(skills));

          case 22:
            _context.next = 24;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReductionRequest"].NEXT;

          case 24:
            current = _context.sent;

          case 25:
            _context.next = 3;
            break;

          case 27:
          case "end":
            return _context.stop();
        }
      }
    }, _marked);
  }

  _SkillSetCommand.reduce = reduce;
})(SkillSetCommand || (SkillSetCommand = {}));

/***/ }),

/***/ "./typescript/unidoc/StateCommand.ts":
/*!*******************************************!*\
  !*** ./typescript/unidoc/StateCommand.ts ***!
  \*******************************************/
/*! exports provided: StateCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StateCommand", function() { return StateCommand; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _validator_command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validator/command */ "./typescript/unidoc/validator/command/index.ts");
/* harmony import */ var _Mutables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Mutables */ "./typescript/Mutables.ts");








/**
 * 
 */

var StateCommand;

(function (_StateCommand) {
  var _marked = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(reduce);

  /**
   * 
   */
  var COMMAND = _validator_command__WEBPACK_IMPORTED_MODULE_2__["CommandList"].capture(_validator_command__WEBPACK_IMPORTED_MODULE_2__["CommandListElement"].anywhere.optionalCommand('health', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireToken), _validator_command__WEBPACK_IMPORTED_MODULE_2__["CommandListElement"].anywhere.optionalCommand('mentalHealth', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireToken), _validator_command__WEBPACK_IMPORTED_MODULE_2__["CommandListElement"].anywhere.optionalCommand('magic', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireToken), _validator_command__WEBPACK_IMPORTED_MODULE_2__["CommandListElement"].anywhere.optionalCommand('luck', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].requireToken), _validator_command__WEBPACK_IMPORTED_MODULE_2__["CommandListElement"].anywhere.optionalCommand('temporaryInsane', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].validateManyWhitespace), _validator_command__WEBPACK_IMPORTED_MODULE_2__["CommandListElement"].anywhere.optionalCommand('indefinitelyInsane', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].validateManyWhitespace), _validator_command__WEBPACK_IMPORTED_MODULE_2__["CommandListElement"].anywhere.optionalCommand('majorWound', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].validateManyWhitespace));
  /**
   * 
   */

  function validate() {
    return Object(_validator_command__WEBPACK_IMPORTED_MODULE_2__["validateCommandList"])(COMMAND);
  }

  _StateCommand.validate = validate;

  function reduce() {
    var health, mentalHealth, magic, luck, temporaryInsane, indefinitelyInsane, majorWound, current;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function reduce$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            health = '0';
            mentalHealth = '0';
            magic = '0';
            luck = '0';
            temporaryInsane = false;
            indefinitelyInsane = false;
            majorWound = false;
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipStart(), "t0", 8);

          case 8:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipWhitespaces(), "t1", 9);

          case 9:
            if (false) {}

            _context.next = 12;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReductionRequest"].CURRENT;

          case 12:
            current = _context.sent;

            if (!current.isStartOfAnyTag()) {
              _context.next = 52;
              break;
            }

            if (!current.isStartOfTag('health')) {
              _context.next = 19;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceToken()), "t2", 16);

          case 16:
            health = _context.t2;
            _context.next = 50;
            break;

          case 19:
            if (!current.isStartOfTag('luck')) {
              _context.next = 24;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceToken()), "t3", 21);

          case 21:
            luck = _context.t3;
            _context.next = 50;
            break;

          case 24:
            if (!current.isStartOfTag('mentalHealth')) {
              _context.next = 29;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceToken()), "t4", 26);

          case 26:
            mentalHealth = _context.t4;
            _context.next = 50;
            break;

          case 29:
            if (!current.isStartOfTag('magic')) {
              _context.next = 34;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].reduceToken()), "t5", 31);

          case 31:
            magic = _context.t5;
            _context.next = 50;
            break;

          case 34:
            if (!current.isStartOfTag('temporaryInsane')) {
              _context.next = 39;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipTag(), "t6", 36);

          case 36:
            temporaryInsane = true;
            _context.next = 50;
            break;

          case 39:
            if (!current.isStartOfTag('indefinitelyInsane')) {
              _context.next = 44;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipTag(), "t7", 41);

          case 41:
            indefinitelyInsane = true;
            _context.next = 50;
            break;

          case 44:
            if (!current.isStartOfTag('majorWound')) {
              _context.next = 49;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipTag(), "t8", 46);

          case 46:
            majorWound = true;
            _context.next = 50;
            break;

          case 49:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipTag(), "t9", 50);

          case 50:
            _context.next = 59;
            break;

          case 52:
            if (!current.isEnd()) {
              _context.next = 56;
              break;
            }

            return _context.abrupt("return", _Mutables__WEBPACK_IMPORTED_MODULE_3__["Mutables"].create({
              health: parseInt(health),
              mentalHealth: parseInt(mentalHealth),
              magic: parseInt(magic),
              luck: parseInt(luck),
              temporaryInsane: temporaryInsane,
              indefinitelyInsane: indefinitelyInsane,
              majorWound: majorWound
            }));

          case 56:
            _context.next = 58;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReductionRequest"].NEXT;

          case 58:
            current = _context.sent;

          case 59:
            _context.next = 9;
            break;

          case 61:
          case "end":
            return _context.stop();
        }
      }
    }, _marked);
  }

  _StateCommand.reduce = reduce;
})(StateCommand || (StateCommand = {}));

/***/ }),

/***/ "./typescript/unidoc/UnidocCommand.ts":
/*!********************************************!*\
  !*** ./typescript/unidoc/UnidocCommand.ts ***!
  \********************************************/
/*! exports provided: UnidocCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnidocCommand", function() { return UnidocCommand; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__);




/**
 * 
 */

var UnidocCommand;

(function (_UnidocCommand) {
  var _marked = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(validateUnidoc),
      _marked2 = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(reduce);

  function validateUnidoc(validator) {
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function validateUnidoc$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].validateStartOfTag('document'), "t0", 1);

          case 1:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].validateManyWhitespace(), "t1", 2);

          case 2:
            return _context.delegateYield(validator, "t2", 3);

          case 3:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].validateManyWhitespace(), "t3", 4);

          case 4:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].validateEndOfTag('document'), "t4", 5);

          case 5:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].validateEnd(), "t5", 6);

          case 6:
            return _context.abrupt("return", _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].output.match());

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _marked);
  }

  _UnidocCommand.validateUnidoc = validateUnidoc;

  (function (_validateUnidoc) {
    function factory(validator) {
      return function validateUnidocFactory() {
        return validateUnidoc(validator());
      };
    }

    _validateUnidoc.factory = factory;
  })(validateUnidoc || (validateUnidoc = _UnidocCommand.validateUnidoc || (_UnidocCommand.validateUnidoc = {})));

  function reduce(reducer) {
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function reduce$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            return _context2.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipStart(), "t0", 1);

          case 1:
            _context2.next = 3;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReductionRequest"].NEXT;

          case 3:
            return _context2.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocReducer"].skipWhitespaces(), "t1", 4);

          case 4:
            return _context2.delegateYield(reducer, "t2", 5);

          case 5:
            return _context2.abrupt("return", _context2.t2);

          case 6:
          case "end":
            return _context2.stop();
        }
      }
    }, _marked2);
  }

  _UnidocCommand.reduce = reduce;

  (function (_reduce) {
    function factory(reducer) {
      return function () {
        return reduce(reducer());
      };
    }

    _reduce.factory = factory;
  })(reduce || (reduce = _UnidocCommand.reduce || (_UnidocCommand.reduce = {})));
})(UnidocCommand || (UnidocCommand = {}));

/***/ }),

/***/ "./typescript/unidoc/UnidocFileSymbolProducer.ts":
/*!*******************************************************!*\
  !*** ./typescript/unidoc/UnidocFileSymbolProducer.ts ***!
  \*******************************************************/
/*! exports provided: UnidocFileSymbolProducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnidocFileSymbolProducer", function() { return UnidocFileSymbolProducer; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_6__);







function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }





/**
 * 
 */

var UnidocFileSymbolProducer = /*#__PURE__*/function (_ListenableUnidocProd) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(UnidocFileSymbolProducer, _ListenableUnidocProd);

  var _super = _createSuper(UnidocFileSymbolProducer);

  /**
   * 
   */

  /**
  *
  */

  /**
   * A symbol instance for symbol emission.
   */

  /**
   * Location into this reader's source.
   */

  /**
   * 
   */
  function UnidocFileSymbolProducer(file) {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, UnidocFileSymbolProducer);

    _this = _super.call(this);
    _this._file = void 0;
    _this.origin = void 0;
    _this._symbol = void 0;
    _this._location = void 0;
    _this.origin = new _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_6__["UnidocOrigin"]();

    _this.origin.resource('file:' + file.name);

    _this._file = file;
    _this._symbol = new _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_6__["UnidocSymbol"]();
    _this._location = new _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_6__["UnidocLocationTracker"]();
    _this.handleLoadingProgress = _this.handleLoadingProgress.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    _this.handleLoadingTermination = _this.handleLoadingTermination.bind(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
    return _this;
  }
  /**
   * 
   */


  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(UnidocFileSymbolProducer, [{
    key: "handleLoadingProgress",
    value: function handleLoadingProgress(event) {
      var content = event.target.result;

      if (content instanceof ArrayBuffer) {
        throw new Error('Invalid reader content type, expected to receive a string but received an ArrayBuffer instead.');
      } else {
        var size = content.length;

        for (var index = 0; index < size; ++index) {
          var nextCodePoint = content.codePointAt(index);
          this._symbol.symbol = nextCodePoint;

          this._symbol.origin.clear();

          this._symbol.origin.from.text(this._location.location).concat(this.origin);

          this._location.next(nextCodePoint);

          this._symbol.origin.to.text(this._location.location).concat(this.origin);

          this.produce(this._symbol);
        }
      }
    }
    /**
     * 
     */

  }, {
    key: "handleLoadingTermination",
    value: function handleLoadingTermination(event) {
      this.complete();
    }
    /**
     *  
     */

  }, {
    key: "read",
    value: function read() {
      var reader = new FileReader();
      reader.addEventListener('load', this.handleLoadingProgress);
      reader.addEventListener('loadend', this.handleLoadingTermination);
      reader.readAsText(this._file, 'utf8');
    }
  }]);

  return UnidocFileSymbolProducer;
}(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_6__["ListenableUnidocProducer"]);
/**
 * 
 */

(function (_UnidocFileSymbolProducer) {
  function create(file) {
    return new UnidocFileSymbolProducer(file);
  }

  _UnidocFileSymbolProducer.create = create;
})(UnidocFileSymbolProducer || (UnidocFileSymbolProducer = {}));

/***/ }),

/***/ "./typescript/unidoc/ValueCommand.ts":
/*!*******************************************!*\
  !*** ./typescript/unidoc/ValueCommand.ts ***!
  \*******************************************/
/*! exports provided: ValueCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValueCommand", function() { return ValueCommand; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! immutable */ "./node_modules/immutable/dist/immutable.es.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Value__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Value */ "./typescript/Value.ts");
/* harmony import */ var _Modifier__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Modifier */ "./typescript/Modifier.ts");
/* harmony import */ var _validator_command__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./validator/command */ "./typescript/unidoc/validator/command/index.ts");










/**
 * 
 */

var ValueCommand;

(function (_ValueCommand) {
  var _marked = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(reduce);

  /**
   * 
   */
  var COMMAND = _validator_command__WEBPACK_IMPORTED_MODULE_5__["CommandList"].capture(_validator_command__WEBPACK_IMPORTED_MODULE_5__["CommandListElement"].anywhere.requiredCommand('base', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocKissValidator"].requireToken), _validator_command__WEBPACK_IMPORTED_MODULE_5__["CommandListElement"].manyCommand('modifier', _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocKissValidator"].requireText));
  /**
   * 
   */

  function validate() {
    return Object(_validator_command__WEBPACK_IMPORTED_MODULE_5__["validateCommandList"])(COMMAND);
  }

  _ValueCommand.validate = validate;

  function reduce() {
    var base, modifiers, current, tokens;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function reduce$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            base = undefined;
            modifiers = Object(immutable__WEBPACK_IMPORTED_MODULE_1__["List"])().asMutable();
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].skipStart(), "t0", 3);

          case 3:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].skipWhitespaces(), "t1", 4);

          case 4:
            if (false) {}

            _context.next = 7;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReductionRequest"].CURRENT;

          case 7:
            current = _context.sent;

            if (!current.isStartOfAnyTag()) {
              _context.next = 25;
              break;
            }

            if (!current.isStartOfTag('base')) {
              _context.next = 16;
              break;
            }

            _context.t2 = parseInt;
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].reduceText()), "t3", 12);

          case 12:
            _context.t4 = _context.t3;
            base = (0, _context.t2)(_context.t4);
            _context.next = 23;
            break;

          case 16:
            if (!current.isStartOfTag('modifier')) {
              _context.next = 22;
              break;
            }

            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].reduceTag.content(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].reduceText()), "t5", 18);

          case 18:
            tokens = _context.t5.split(/\s+/ig);
            modifiers.push(_Modifier__WEBPACK_IMPORTED_MODULE_4__["Modifier"].create({
              value: parseInt(tokens[0]),
              label: tokens.slice(1).join(' ')
            }));
            _context.next = 23;
            break;

          case 22:
            return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReducer"].skipTag(), "t6", 23);

          case 23:
            _context.next = 32;
            break;

          case 25:
            if (!current.isEnd()) {
              _context.next = 29;
              break;
            }

            return _context.abrupt("return", _Value__WEBPACK_IMPORTED_MODULE_3__["Value"].create({
              base: base,
              modifiers: modifiers.asImmutable()
            }));

          case 29:
            _context.next = 31;
            return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_2__["UnidocReductionRequest"].NEXT;

          case 31:
            current = _context.sent;

          case 32:
            _context.next = 4;
            break;

          case 34:
          case "end":
            return _context.stop();
        }
      }
    }, _marked);
  }

  _ValueCommand.reduce = reduce;
})(ValueCommand || (ValueCommand = {}));

/***/ }),

/***/ "./typescript/unidoc/reducer/UnidocAddressReducer.ts":
/*!***********************************************************!*\
  !*** ./typescript/unidoc/reducer/UnidocAddressReducer.ts ***!
  \***********************************************************/
/*! exports provided: UnidocAddressReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnidocAddressReducer", function() { return UnidocAddressReducer; });
/**
 * 
 */
var UnidocAddressReducer;

(function (_UnidocAddressReducer) {
  function reduce(address) {
    var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    var elements = [];

    if (address.country != null) {
      elements.push(indent + '\\country { ' + address.country + ' }');
    }

    if (address.state != null) {
      elements.push(indent + '\\state { ' + address.state + ' }');
    }

    if (address.county != null) {
      elements.push(indent + '\\county { ' + address.county + ' }');
    }

    if (address.city != null) {
      elements.push(indent + '\\city { ' + address.city + ' }');
    }

    if (address.district != null) {
      elements.push(indent + '\\district { ' + address.district + ' }');
    }

    if (address.street != null) {
      elements.push(indent + '\\street { ' + address.street + ' }');
    }

    return elements.join('\r\n');
  }

  _UnidocAddressReducer.reduce = reduce;
})(UnidocAddressReducer || (UnidocAddressReducer = {}));

/***/ }),

/***/ "./typescript/unidoc/reducer/UnidocCharacteristicSetReducer.ts":
/*!*********************************************************************!*\
  !*** ./typescript/unidoc/reducer/UnidocCharacteristicSetReducer.ts ***!
  \*********************************************************************/
/*! exports provided: UnidocCharacteristicSetReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnidocCharacteristicSetReducer", function() { return UnidocCharacteristicSetReducer; });
/* harmony import */ var _UnidocValueReducer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UnidocValueReducer */ "./typescript/unidoc/reducer/UnidocValueReducer.ts");
function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }


/**
 * 
 */

var UnidocCharacteristicSetReducer;

(function (_UnidocCharacteristicSetReducer) {
  /**
   * 
   */
  var KEYS = ['appearance', 'constitution', 'dexterity', 'education', 'intelligence', 'power', 'size', 'strength', 'luck'];
  /**
   * 
   */

  function reduce(set) {
    var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    var elements = [];

    var _iterator = _createForOfIteratorHelper(KEYS),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var key = _step.value;
        elements.push(indent + '  \\' + key + '{\r\n' + _UnidocValueReducer__WEBPACK_IMPORTED_MODULE_0__["UnidocValueReducer"].reduce(set[key], indent + '    ') + '\r\n' + indent + '  }');
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return elements.join('\r\n\r\n');
  }

  _UnidocCharacteristicSetReducer.reduce = reduce;
})(UnidocCharacteristicSetReducer || (UnidocCharacteristicSetReducer = {}));

/***/ }),

/***/ "./typescript/unidoc/reducer/UnidocInvestigatorReducer.ts":
/*!****************************************************************!*\
  !*** ./typescript/unidoc/reducer/UnidocInvestigatorReducer.ts ***!
  \****************************************************************/
/*! exports provided: UnidocInvestigatorReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnidocInvestigatorReducer", function() { return UnidocInvestigatorReducer; });
/* harmony import */ var _UnidocCharacteristicSetReducer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UnidocCharacteristicSetReducer */ "./typescript/unidoc/reducer/UnidocCharacteristicSetReducer.ts");
/* harmony import */ var _UnidocSkillSetReducer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UnidocSkillSetReducer */ "./typescript/unidoc/reducer/UnidocSkillSetReducer.ts");
/* harmony import */ var _UnidocStateReducer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UnidocStateReducer */ "./typescript/unidoc/reducer/UnidocStateReducer.ts");
/* harmony import */ var _UnidocSummaryReducer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./UnidocSummaryReducer */ "./typescript/unidoc/reducer/UnidocSummaryReducer.ts");




/**
 * 
 */

var UnidocInvestigatorReducer;

(function (_UnidocInvestigatorReducer) {
  function reduce(investigator) {
    var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    var elements = [];
    elements.push(_UnidocSummaryReducer__WEBPACK_IMPORTED_MODULE_3__["UnidocSummaryReducer"].reduce(investigator.summary, indent));
    elements.push(indent + '\\characteristics {\r\n' + _UnidocCharacteristicSetReducer__WEBPACK_IMPORTED_MODULE_0__["UnidocCharacteristicSetReducer"].reduce(investigator.characteristics, indent + '  ') + '\r\n' + indent + '}');
    elements.push(indent + '\\skills {\r\n' + _UnidocSkillSetReducer__WEBPACK_IMPORTED_MODULE_1__["UnidocSkillSetReducer"].reduce(investigator.skills, investigator.computeDefaultSkills(), indent + '  ') + '\r\n' + indent + '}');
    elements.push(indent + '\\state {\r\n' + _UnidocStateReducer__WEBPACK_IMPORTED_MODULE_2__["UnidocStateReducer"].reduce(investigator.mutables, indent + '  ') + '\r\n' + indent + '}');
    elements.push(indent + "\\updates {\r\n" + _UnidocSkillSetReducer__WEBPACK_IMPORTED_MODULE_1__["UnidocSkillSetReducer"].reduce(investigator.updates, investigator.computeDefaultSkills(), indent + '  ') + '\r\n' + indent + '}');
    return elements.join('\r\n\r\n');
  }

  _UnidocInvestigatorReducer.reduce = reduce;
})(UnidocInvestigatorReducer || (UnidocInvestigatorReducer = {}));

/***/ }),

/***/ "./typescript/unidoc/reducer/UnidocNameReducer.ts":
/*!********************************************************!*\
  !*** ./typescript/unidoc/reducer/UnidocNameReducer.ts ***!
  \********************************************************/
/*! exports provided: UnidocNameReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnidocNameReducer", function() { return UnidocNameReducer; });
/**
 * 
 */
var UnidocNameReducer;

(function (_UnidocNameReducer) {
  function reduce(name) {
    var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    var elements = [indent + '\\first { ' + name.first + ' }', indent + '\\last { ' + name.last + ' }'];

    if (name["short"] != null) {
      elements.push(indent + '\\short { ' + name["short"] + ' }');
    }

    return elements.join('\r\n');
  }

  _UnidocNameReducer.reduce = reduce;
})(UnidocNameReducer || (UnidocNameReducer = {}));

/***/ }),

/***/ "./typescript/unidoc/reducer/UnidocSkillSetReducer.ts":
/*!************************************************************!*\
  !*** ./typescript/unidoc/reducer/UnidocSkillSetReducer.ts ***!
  \************************************************************/
/*! exports provided: UnidocSkillSetReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnidocSkillSetReducer", function() { return UnidocSkillSetReducer; });
/* harmony import */ var _SkillSet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../SkillSet */ "./typescript/SkillSet.ts");
function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }


/**
 * 
 */

var UnidocSkillSetReducer;

(function (_UnidocSkillSetReducer) {
  function reduce(set) {
    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _SkillSet__WEBPACK_IMPORTED_MODULE_0__["SkillSet"].empty();
    var indent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
    var elements = [];

    var _iterator = _createForOfIteratorHelper(set.entries),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var entry = _step.value;
        var element = indent + '\\skill {\r\n' + indent + '  \\family { ' + entry.left.family + ' }';

        if (entry.left.specialization != null) {
          element += '\r\n';
          element += indent + '  \\specialization { ' + entry.left.specialization + ' }';
        }

        if (!base.has(entry.left)) {
          element += '\r\n';
          element += indent + '  \\base { ' + entry.right.base + ' }';
        }

        var _iterator2 = _createForOfIteratorHelper(entry.right.modifiers),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var modifier = _step2.value;
            element += '\r\n';
            element += indent + '  \\modifier { ' + modifier.value + ' ' + modifier.label + ' }';
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }

        element += '\r\n';
        element += indent + '}';
        elements.push(element);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return elements.join('\r\n\r\n');
  }

  _UnidocSkillSetReducer.reduce = reduce;
})(UnidocSkillSetReducer || (UnidocSkillSetReducer = {}));

/***/ }),

/***/ "./typescript/unidoc/reducer/UnidocStateReducer.ts":
/*!*********************************************************!*\
  !*** ./typescript/unidoc/reducer/UnidocStateReducer.ts ***!
  \*********************************************************/
/*! exports provided: UnidocStateReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnidocStateReducer", function() { return UnidocStateReducer; });
/**
 * 
 */
var UnidocStateReducer;

(function (_UnidocStateReducer) {
  function reduce(summary) {
    var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    var elements = [];
    elements.push(indent + '\\health { ' + summary.health + ' }');
    elements.push(indent + '\\mentalHealth { ' + summary.mentalHealth + ' }');
    elements.push(indent + '\\magic { ' + summary.magic + ' }');
    elements.push(indent + '\\luck { ' + summary.luck + ' }');

    if (summary.indefinitelyInsane) {
      elements.push(indent + '\\indefinitelyInsane');
    }

    if (summary.majorWound) {
      elements.push(indent + '\\majorWound');
    }

    if (summary.temporaryInsane) {
      elements.push(indent + '\\temporaryInsane');
    }

    return elements.join('\r\n\r\n');
  }

  _UnidocStateReducer.reduce = reduce;
})(UnidocStateReducer || (UnidocStateReducer = {}));

/***/ }),

/***/ "./typescript/unidoc/reducer/UnidocSummaryReducer.ts":
/*!***********************************************************!*\
  !*** ./typescript/unidoc/reducer/UnidocSummaryReducer.ts ***!
  \***********************************************************/
/*! exports provided: UnidocSummaryReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnidocSummaryReducer", function() { return UnidocSummaryReducer; });
/* harmony import */ var _Gender__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Gender */ "./typescript/Gender.ts");
/* harmony import */ var _UnidocAddressReducer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UnidocAddressReducer */ "./typescript/unidoc/reducer/UnidocAddressReducer.ts");
/* harmony import */ var _UnidocNameReducer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UnidocNameReducer */ "./typescript/unidoc/reducer/UnidocNameReducer.ts");



/**
 * 
 */

var UnidocSummaryReducer;

(function (_UnidocSummaryReducer) {
  function reduce(summary) {
    var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    var elements = [];
    elements.push(indent + '\\name {\r\n' + _UnidocNameReducer__WEBPACK_IMPORTED_MODULE_2__["UnidocNameReducer"].reduce(summary.name, indent + '  ') + '\r\n' + indent + '}');

    if (summary.alias != null) {
      elements.push(indent + '\\alias { ' + summary.alias + ' }');
    }

    if (summary.job != null) {
      elements.push(indent + '\\job { ' + summary.job + ' }');
    }

    if (summary.matricule != null) {
      elements.push(indent + '\\matricule { ' + summary.matricule + ' }');
    }

    if (summary.gender != null) {
      elements.push(indent + '\\gender { ' + (summary.gender == _Gender__WEBPACK_IMPORTED_MODULE_0__["Gender"].MALE ? 'male' : 'female') + ' }');
    }

    elements.push(indent + '\\age { ' + summary.age + ' }');

    if (summary.birthdate != null) {
      elements.push(indent + '\\birthdate { ' + summary.birthdate + ' }');
    }

    if (summary.hiringdate != null) {
      elements.push(indent + '\\hiringdate { ' + summary.hiringdate + ' }');
    }

    if (summary.birthplace != null) {
      elements.push(indent + '\\birthplace {\r\n' + _UnidocAddressReducer__WEBPACK_IMPORTED_MODULE_1__["UnidocAddressReducer"].reduce(summary.birthplace, indent + '  ') + '\r\n' + indent + '}');
    }

    if (summary.home != null) {
      elements.push(indent + '\\home {\r\n' + _UnidocAddressReducer__WEBPACK_IMPORTED_MODULE_1__["UnidocAddressReducer"].reduce(summary.home, indent + '  ') + '\r\n' + indent + '}');
    }

    return elements.join('\r\n\r\n');
  }

  _UnidocSummaryReducer.reduce = reduce;
})(UnidocSummaryReducer || (UnidocSummaryReducer = {}));

/***/ }),

/***/ "./typescript/unidoc/reducer/UnidocValueReducer.ts":
/*!*********************************************************!*\
  !*** ./typescript/unidoc/reducer/UnidocValueReducer.ts ***!
  \*********************************************************/
/*! exports provided: UnidocValueReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnidocValueReducer", function() { return UnidocValueReducer; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/**
 * 
 */
var UnidocValueReducer;

(function (_UnidocValueReducer) {
  function reduce(value) {
    var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    var result = indent + '\\base { ' + value.base + ' }';

    var _iterator = _createForOfIteratorHelper(value.modifiers),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var modifier = _step.value;
        result += '\r\n';
        result += indent + '\\modifier { ' + modifier.value + ' ' + modifier.label + ' }';
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return result;
  }

  _UnidocValueReducer.reduce = reduce;
})(UnidocValueReducer || (UnidocValueReducer = {}));

/***/ }),

/***/ "./typescript/unidoc/reducer/index.ts":
/*!********************************************!*\
  !*** ./typescript/unidoc/reducer/index.ts ***!
  \********************************************/
/*! exports provided: UnidocInvestigatorReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _UnidocInvestigatorReducer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UnidocInvestigatorReducer */ "./typescript/unidoc/reducer/UnidocInvestigatorReducer.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UnidocInvestigatorReducer", function() { return _UnidocInvestigatorReducer__WEBPACK_IMPORTED_MODULE_0__["UnidocInvestigatorReducer"]; });



/***/ }),

/***/ "./typescript/unidoc/validator/Outputs.ts":
/*!************************************************!*\
  !*** ./typescript/unidoc/validator/Outputs.ts ***!
  \************************************************/
/*! exports provided: Outputs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Outputs", function() { return Outputs; });
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _message_ExpectedCommand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./message/ExpectedCommand */ "./typescript/unidoc/validator/message/ExpectedCommand.ts");
/* harmony import */ var _message_TooManyCommands__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./message/TooManyCommands */ "./typescript/unidoc/validator/message/TooManyCommands.ts");
/* harmony import */ var _message_IllegalCommand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./message/IllegalCommand */ "./typescript/unidoc/validator/message/IllegalCommand.ts");
/* harmony import */ var _message_IllFormedCommand__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./message/IllFormedCommand */ "./typescript/unidoc/validator/message/IllFormedCommand.ts");
/* harmony import */ var _message_PreferredCommandPosition__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./message/PreferredCommandPosition */ "./typescript/unidoc/validator/message/PreferredCommandPosition.ts");






var Outputs;

(function (_Outputs) {
  function expectedCommand(name) {
    return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__["UnidocKissValidator"].output.message(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__["UnidocKissValidator"].output.message.builder().setType(_message_ExpectedCommand__WEBPACK_IMPORTED_MODULE_1__["ExpectedCommand"].TYPE).setCode(_message_ExpectedCommand__WEBPACK_IMPORTED_MODULE_1__["ExpectedCommand"].CODE).setData(_message_ExpectedCommand__WEBPACK_IMPORTED_MODULE_1__["ExpectedCommand"].Data.NAME, name).get());
  }

  _Outputs.expectedCommand = expectedCommand;

  function preferredCommandPosition(name, offset) {
    return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__["UnidocKissValidator"].output.message(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__["UnidocKissValidator"].output.message.builder().setType(_message_PreferredCommandPosition__WEBPACK_IMPORTED_MODULE_5__["PreferredCommandPosition"].TYPE).setCode(_message_PreferredCommandPosition__WEBPACK_IMPORTED_MODULE_5__["PreferredCommandPosition"].CODE).setData(_message_PreferredCommandPosition__WEBPACK_IMPORTED_MODULE_5__["PreferredCommandPosition"].Data.NAME, name).setData(_message_PreferredCommandPosition__WEBPACK_IMPORTED_MODULE_5__["PreferredCommandPosition"].Data.OFFSET, offset).get());
  }

  _Outputs.preferredCommandPosition = preferredCommandPosition;

  function illegalCommand(name) {
    return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__["UnidocKissValidator"].output.message(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__["UnidocKissValidator"].output.message.builder().setType(_message_IllegalCommand__WEBPACK_IMPORTED_MODULE_3__["IllegalCommand"].TYPE).setCode(_message_IllegalCommand__WEBPACK_IMPORTED_MODULE_3__["IllegalCommand"].CODE).setData(_message_IllegalCommand__WEBPACK_IMPORTED_MODULE_3__["IllegalCommand"].Data.NAME, name).get());
  }

  _Outputs.illegalCommand = illegalCommand;

  function illFormedCommand(name, type) {
    return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__["UnidocKissValidator"].output.message(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__["UnidocKissValidator"].output.message.builder().setType(_message_IllFormedCommand__WEBPACK_IMPORTED_MODULE_4__["IllFormedCommand"].TYPE).setCode(_message_IllFormedCommand__WEBPACK_IMPORTED_MODULE_4__["IllFormedCommand"].CODE).setData(_message_IllFormedCommand__WEBPACK_IMPORTED_MODULE_4__["IllFormedCommand"].Data.NAME, name).setData(_message_IllFormedCommand__WEBPACK_IMPORTED_MODULE_4__["IllFormedCommand"].Data.TYPE, type).get());
  }

  _Outputs.illFormedCommand = illFormedCommand;

  function tooManyCommands(name, maximum) {
    return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__["UnidocKissValidator"].output.message(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__["UnidocKissValidator"].output.message.builder().setType(_message_TooManyCommands__WEBPACK_IMPORTED_MODULE_2__["TooManyCommands"].TYPE).setCode(_message_TooManyCommands__WEBPACK_IMPORTED_MODULE_2__["TooManyCommands"].CODE).setData(_message_TooManyCommands__WEBPACK_IMPORTED_MODULE_2__["TooManyCommands"].Data.NAME, name).setData(_message_TooManyCommands__WEBPACK_IMPORTED_MODULE_2__["TooManyCommands"].Data.MAXIMUM, maximum).get());
  }

  _Outputs.tooManyCommands = tooManyCommands;

  function duplicatedCommand(name) {
    return tooManyCommands(name, 1);
  }

  _Outputs.duplicatedCommand = duplicatedCommand;
})(Outputs || (Outputs = {}));

/***/ }),

/***/ "./typescript/unidoc/validator/command/CommandList.ts":
/*!************************************************************!*\
  !*** ./typescript/unidoc/validator/command/CommandList.ts ***!
  \************************************************************/
/*! exports provided: CommandList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommandList", function() { return CommandList; });
/**
*
*/

/**
*
*/
var CommandList;

(function (_CommandList) {
  function capture() {
    for (var _len = arguments.length, parameters = new Array(_len), _key = 0; _key < _len; _key++) {
      parameters[_key] = arguments[_key];
    }

    return parameters;
  }

  _CommandList.capture = capture;
})(CommandList || (CommandList = {}));

/***/ }),

/***/ "./typescript/unidoc/validator/command/CommandListElement.ts":
/*!*******************************************************************!*\
  !*** ./typescript/unidoc/validator/command/CommandListElement.ts ***!
  \*******************************************************************/
/*! exports provided: CommandListElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommandListElement", function() { return CommandListElement; });
/**
*
*/

/**
*
*/
var CommandListElement;

(function (_CommandListElement) {
  function command(name, validator) {
    var minimum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    var maximum = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Number.POSITIVE_INFINITY;
    return {
      name: name,
      minimum: minimum,
      maximum: maximum,
      validator: validator,
      anywhere: false
    };
  }

  _CommandListElement.command = command;

  function manyCommand(name, validator) {
    return {
      name: name,
      minimum: 0,
      maximum: Number.POSITIVE_INFINITY,
      validator: validator,
      anywhere: false
    };
  }

  _CommandListElement.manyCommand = manyCommand;

  function optionalCommand(name, validator) {
    return {
      name: name,
      minimum: 0,
      maximum: 1,
      validator: validator,
      anywhere: false
    };
  }

  _CommandListElement.optionalCommand = optionalCommand;

  function requiredCommand(name, validator) {
    return {
      name: name,
      minimum: 1,
      maximum: 1,
      validator: validator,
      anywhere: false
    };
  }

  _CommandListElement.requiredCommand = requiredCommand;

  function content(validator) {
    var minimum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var maximum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.POSITIVE_INFINITY;
    return {
      name: undefined,
      minimum: minimum,
      maximum: maximum,
      validator: validator,
      anywhere: false
    };
  }

  _CommandListElement.content = content;

  function optionalContent(validator) {
    return {
      name: undefined,
      minimum: 0,
      maximum: 1,
      validator: validator,
      anywhere: false
    };
  }

  _CommandListElement.optionalContent = optionalContent;

  function requiredContent(validator) {
    return {
      name: undefined,
      minimum: 1,
      maximum: 1,
      validator: validator,
      anywhere: false
    };
  }

  _CommandListElement.requiredContent = requiredContent;
  var anywhere;

  (function (_anywhere) {
    function command(name, validator) {
      var minimum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      var maximum = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Number.POSITIVE_INFINITY;
      return {
        name: name,
        minimum: minimum,
        maximum: maximum,
        validator: validator,
        anywhere: true
      };
    }

    _anywhere.command = command;

    function manyCommand(name, validator) {
      return {
        name: name,
        minimum: 0,
        maximum: Number.POSITIVE_INFINITY,
        validator: validator,
        anywhere: true
      };
    }

    _anywhere.manyCommand = manyCommand;

    function optionalCommand(name, validator) {
      return {
        name: name,
        minimum: 0,
        maximum: 1,
        validator: validator,
        anywhere: true
      };
    }

    _anywhere.optionalCommand = optionalCommand;

    function requiredCommand(name, validator) {
      return {
        name: name,
        minimum: 1,
        maximum: 1,
        validator: validator,
        anywhere: true
      };
    }

    _anywhere.requiredCommand = requiredCommand;

    function content(validator) {
      var minimum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var maximum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.POSITIVE_INFINITY;
      return {
        name: undefined,
        minimum: minimum,
        maximum: maximum,
        validator: validator,
        anywhere: true
      };
    }

    _anywhere.content = content;

    function manyContent(validator) {
      return {
        name: undefined,
        minimum: 0,
        maximum: Number.POSITIVE_INFINITY,
        validator: validator,
        anywhere: true
      };
    }

    _anywhere.manyContent = manyContent;

    function optionalContent(validator) {
      return {
        name: undefined,
        minimum: 0,
        maximum: 1,
        validator: validator,
        anywhere: true
      };
    }

    _anywhere.optionalContent = optionalContent;

    function requiredContent(validator) {
      return {
        name: undefined,
        minimum: 1,
        maximum: 1,
        validator: validator,
        anywhere: true
      };
    }

    _anywhere.requiredContent = requiredContent;
  })(anywhere || (anywhere = _CommandListElement.anywhere || (_CommandListElement.anywhere = {})));
})(CommandListElement || (CommandListElement = {}));

/***/ }),

/***/ "./typescript/unidoc/validator/command/CommandListNode.ts":
/*!****************************************************************!*\
  !*** ./typescript/unidoc/validator/command/CommandListNode.ts ***!
  \****************************************************************/
/*! exports provided: CommandListNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommandListNode", function() { return CommandListNode; });
/**
*
*/

/**
*
*/
var CommandListNode;

(function (_CommandListNode) {
  function fromElement(element) {
    return {
      count: 0,
      element: element
    };
  }

  _CommandListNode.fromElement = fromElement;
})(CommandListNode || (CommandListNode = {}));

/***/ }),

/***/ "./typescript/unidoc/validator/command/index.ts":
/*!******************************************************!*\
  !*** ./typescript/unidoc/validator/command/index.ts ***!
  \******************************************************/
/*! exports provided: CommandList, CommandListElement, validateCommand, validateCommandList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _CommandList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CommandList */ "./typescript/unidoc/validator/command/CommandList.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CommandList", function() { return _CommandList__WEBPACK_IMPORTED_MODULE_0__["CommandList"]; });

/* harmony import */ var _CommandListElement__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CommandListElement */ "./typescript/unidoc/validator/command/CommandListElement.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CommandListElement", function() { return _CommandListElement__WEBPACK_IMPORTED_MODULE_1__["CommandListElement"]; });

/* harmony import */ var _validateCommand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validateCommand */ "./typescript/unidoc/validator/command/validateCommand.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "validateCommand", function() { return _validateCommand__WEBPACK_IMPORTED_MODULE_2__["validateCommand"]; });

/* harmony import */ var _validateCommandList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validateCommandList */ "./typescript/unidoc/validator/command/validateCommandList.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "validateCommandList", function() { return _validateCommandList__WEBPACK_IMPORTED_MODULE_3__["validateCommandList"]; });






/***/ }),

/***/ "./typescript/unidoc/validator/command/validateCommand.ts":
/*!****************************************************************!*\
  !*** ./typescript/unidoc/validator/command/validateCommand.ts ***!
  \****************************************************************/
/*! exports provided: validateCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateCommand", function() { return validateCommand; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Outputs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Outputs */ "./typescript/unidoc/validator/Outputs.ts");
/* harmony import */ var _throwWithFailure__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../throwWithFailure */ "./typescript/unidoc/validator/throwWithFailure.ts");


var _marked = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(validateCommand);





/**
*
*/

function validateCommand(name, validator) {
  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function validateCommand$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].validateManyWhitespace(), "t0", 1);

        case 1:
          return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].validateStartOfTag(name), "t1", 2);

        case 2:
          return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].validateManyWhitespace(), "t2", 3);

        case 3:
          _context.prev = 3;
          return _context.delegateYield(Object(_throwWithFailure__WEBPACK_IMPORTED_MODULE_3__["throwWithFailure"])(validator), "t3", 5);

        case 5:
          _context.next = 16;
          break;

        case 7:
          _context.prev = 7;
          _context.t4 = _context["catch"](3);

          if (!(_context.t4 instanceof _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidatorOutput"] && _context.t4.isEmit())) {
            _context.next = 13;
            break;
          }

          _context.t4.event.message.asError();

          _context.next = 13;
          return _context.t4;

        case 13:
          _context.next = 15;
          return _Outputs__WEBPACK_IMPORTED_MODULE_2__["Outputs"].illFormedCommand(name, validator.name);

        case 15:
          return _context.abrupt("return", _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].output.end());

        case 16:
          return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].validateManyWhitespace(), "t5", 17);

        case 17:
          return _context.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].validateEndOfTag(name), "t6", 18);

        case 18:
          return _context.abrupt("return", _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].output.match());

        case 19:
        case "end":
          return _context.stop();
      }
    }
  }, _marked, null, [[3, 7]]);
}
/**
*
*/

(function (_validateCommand) {
  function factory(name, validator) {
    return validateCommand.bind(undefined, name, validator);
  }

  _validateCommand.factory = factory;
})(validateCommand || (validateCommand = {}));

/***/ }),

/***/ "./typescript/unidoc/validator/command/validateCommandList.ts":
/*!********************************************************************!*\
  !*** ./typescript/unidoc/validator/command/validateCommandList.ts ***!
  \********************************************************************/
/*! exports provided: validateCommandList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateCommandList", function() { return validateCommandList; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Outputs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Outputs */ "./typescript/unidoc/validator/Outputs.ts");
/* harmony import */ var _validateCommand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validateCommand */ "./typescript/unidoc/validator/command/validateCommand.ts");
/* harmony import */ var _CommandListNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./CommandListNode */ "./typescript/unidoc/validator/command/CommandListNode.ts");


var _marked = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(validateCommandListState),
    _marked2 = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(validateCommandList);

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }





/**
*
*/

function match(nodes, tag) {
  var index = 0;
  var matchIndex = -1;

  for (; index < nodes.length; ++index) {
    var node = nodes[index];
    var name = node.element.name;

    if (name == null || name === tag) {
      if (node.count < node.element.maximum) {
        return index;
      } else {
        matchIndex = index;
      }
    }
  }

  return matchIndex;
}
/**
*
*/


function offset(nodes, from) {
  var result = 0;

  for (var index = from + 1; index < nodes.length; ++index) {
    result += nodes[index].count;
  }

  return result;
}
/**
*
*/


function validateCommandListState(state) {
  var _iterator, _step, node;

  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function validateCommandListState$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _iterator = _createForOfIteratorHelper(state);
          _context.prev = 1;

          _iterator.s();

        case 3:
          if ((_step = _iterator.n()).done) {
            _context.next = 17;
            break;
          }

          node = _step.value;

          if (!(node.count < node.element.minimum)) {
            _context.next = 15;
            break;
          }

          _context.t0 = _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].output;
          _context.next = 9;
          return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].output.current();

        case 9:
          _context.t1 = _context.sent;
          _context.next = 12;
          return _context.t0.validation.call(_context.t0, _context.t1);

        case 12:
          _context.next = 14;
          return _Outputs__WEBPACK_IMPORTED_MODULE_2__["Outputs"].expectedCommand(node.element.name || '*');

        case 14:
          return _context.abrupt("return", _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].output.end());

        case 15:
          _context.next = 3;
          break;

        case 17:
          _context.next = 22;
          break;

        case 19:
          _context.prev = 19;
          _context.t2 = _context["catch"](1);

          _iterator.e(_context.t2);

        case 22:
          _context.prev = 22;

          _iterator.f();

          return _context.finish(22);

        case 25:
          return _context.abrupt("return", _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].output.match());

        case 26:
        case "end":
          return _context.stop();
      }
    }
  }, _marked, null, [[1, 19, 22, 25]]);
}
/**
*
*/


function validateCommandList(blueprint) {
  var nodes, nextElement, tag, index, node, order;
  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function validateCommandList$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          nodes = blueprint.map(_CommandListNode__WEBPACK_IMPORTED_MODULE_4__["CommandListNode"].fromElement);

        case 1:
          if (false) {}

          return _context2.delegateYield(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].validateManyWhitespace(), "t0", 3);

        case 3:
          _context2.next = 5;
          return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].output.current();

        case 5:
          nextElement = _context2.sent;

          if (!(nextElement == null)) {
            _context2.next = 11;
            break;
          }

          return _context2.delegateYield(validateCommandListState(nodes), "t1", 8);

        case 8:
          return _context2.abrupt("return", _context2.t1);

        case 11:
          if (!(nextElement.isStartOfAnyTag() || nextElement.isWord())) {
            _context2.next = 42;
            break;
          }

          tag = nextElement.isWord() ? undefined : nextElement.tag;
          index = match(nodes, tag);

          if (!(index < 0)) {
            _context2.next = 20;
            break;
          }

          _context2.next = 17;
          return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].output.validation(nextElement);

        case 17:
          _context2.next = 19;
          return _Outputs__WEBPACK_IMPORTED_MODULE_2__["Outputs"].illegalCommand(tag);

        case 19:
          return _context2.abrupt("return", _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].output.end());

        case 20:
          node = nodes[index];

          if (!(node.count < node.element.maximum)) {
            _context2.next = 35;
            break;
          }

          if (!(node.element.name == null)) {
            _context2.next = 26;
            break;
          }

          return _context2.delegateYield(node.element.validator(), "t2", 24);

        case 24:
          _context2.next = 27;
          break;

        case 26:
          return _context2.delegateYield(Object(_validateCommand__WEBPACK_IMPORTED_MODULE_3__["validateCommand"])(node.element.name, node.element.validator), "t3", 27);

        case 27:
          node.count += 1;

          if (node.element.anywhere) {
            _context2.next = 33;
            break;
          }

          order = offset(nodes, index);

          if (!(order > 0)) {
            _context2.next = 33;
            break;
          }

          _context2.next = 33;
          return _Outputs__WEBPACK_IMPORTED_MODULE_2__["Outputs"].preferredCommandPosition(tag, -order);

        case 33:
          _context2.next = 40;
          break;

        case 35:
          _context2.next = 37;
          return _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].output.validation(nextElement);

        case 37:
          _context2.next = 39;
          return _Outputs__WEBPACK_IMPORTED_MODULE_2__["Outputs"].tooManyCommands(tag, node.element.maximum);

        case 39:
          return _context2.abrupt("return", _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_1__["UnidocKissValidator"].output.end());

        case 40:
          _context2.next = 44;
          break;

        case 42:
          return _context2.delegateYield(validateCommandListState(nodes), "t4", 43);

        case 43:
          return _context2.abrupt("return", _context2.t4);

        case 44:
          _context2.next = 1;
          break;

        case 46:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2);
}
/**
*
*/

(function (_validateCommandList) {
  function factory(list) {
    return validateCommandList.bind(undefined, list);
  }

  _validateCommandList.factory = factory;
})(validateCommandList || (validateCommandList = {}));

/***/ }),

/***/ "./typescript/unidoc/validator/message/ExpectedCommand.ts":
/*!****************************************************************!*\
  !*** ./typescript/unidoc/validator/message/ExpectedCommand.ts ***!
  \****************************************************************/
/*! exports provided: ExpectedCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpectedCommand", function() { return ExpectedCommand; });
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__);

var ExpectedCommand;

(function (_ExpectedCommand) {
  var TYPE = _ExpectedCommand.TYPE = _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__["UnidocValidationMessageType"].FAILURE;
  var CODE = _ExpectedCommand.CODE = 'command:failure:expected-command';
  var Data;

  (function (_Data) {
    var NAME = _Data.NAME = 'name';
  })(Data || (Data = _ExpectedCommand.Data || (_ExpectedCommand.Data = {})));
})(ExpectedCommand || (ExpectedCommand = {}));

/***/ }),

/***/ "./typescript/unidoc/validator/message/IllFormedCommand.ts":
/*!*****************************************************************!*\
  !*** ./typescript/unidoc/validator/message/IllFormedCommand.ts ***!
  \*****************************************************************/
/*! exports provided: IllFormedCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IllFormedCommand", function() { return IllFormedCommand; });
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__);

var IllFormedCommand;

(function (_IllFormedCommand) {
  var TYPE = _IllFormedCommand.TYPE = _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__["UnidocValidationMessageType"].FAILURE;
  var CODE = _IllFormedCommand.CODE = 'command:failure:ill-formed-command';
  var Data;

  (function (_Data) {
    var NAME = _Data.NAME = 'name';
    var TYPE = _Data.TYPE = 'type';
  })(Data || (Data = _IllFormedCommand.Data || (_IllFormedCommand.Data = {})));
})(IllFormedCommand || (IllFormedCommand = {}));

/***/ }),

/***/ "./typescript/unidoc/validator/message/IllegalCommand.ts":
/*!***************************************************************!*\
  !*** ./typescript/unidoc/validator/message/IllegalCommand.ts ***!
  \***************************************************************/
/*! exports provided: IllegalCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IllegalCommand", function() { return IllegalCommand; });
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__);

var IllegalCommand;

(function (_IllegalCommand) {
  var TYPE = _IllegalCommand.TYPE = _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__["UnidocValidationMessageType"].FAILURE;
  var CODE = _IllegalCommand.CODE = 'command:failure:illegal-command';
  var Data;

  (function (_Data) {
    var NAME = _Data.NAME = 'name';
  })(Data || (Data = _IllegalCommand.Data || (_IllegalCommand.Data = {})));
})(IllegalCommand || (IllegalCommand = {}));

/***/ }),

/***/ "./typescript/unidoc/validator/message/PreferredCommandPosition.ts":
/*!*************************************************************************!*\
  !*** ./typescript/unidoc/validator/message/PreferredCommandPosition.ts ***!
  \*************************************************************************/
/*! exports provided: PreferredCommandPosition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PreferredCommandPosition", function() { return PreferredCommandPosition; });
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__);

var PreferredCommandPosition;

(function (_PreferredCommandPosition) {
  var TYPE = _PreferredCommandPosition.TYPE = _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__["UnidocValidationMessageType"].WARNING;
  var CODE = _PreferredCommandPosition.CODE = 'command:failure:preferred-command-position';
  var Data;

  (function (_Data) {
    var NAME = _Data.NAME = 'name';
    var OFFSET = _Data.OFFSET = 'offset';
  })(Data || (Data = _PreferredCommandPosition.Data || (_PreferredCommandPosition.Data = {})));
})(PreferredCommandPosition || (PreferredCommandPosition = {}));

/***/ }),

/***/ "./typescript/unidoc/validator/message/TooManyCommands.ts":
/*!****************************************************************!*\
  !*** ./typescript/unidoc/validator/message/TooManyCommands.ts ***!
  \****************************************************************/
/*! exports provided: TooManyCommands */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooManyCommands", function() { return TooManyCommands; });
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @cedric-demongivert/unidoc */ "./node_modules/@cedric-demongivert/unidoc/index.js");
/* harmony import */ var _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__);

var TooManyCommands;

(function (_TooManyCommands) {
  var TYPE = _TooManyCommands.TYPE = _cedric_demongivert_unidoc__WEBPACK_IMPORTED_MODULE_0__["UnidocValidationMessageType"].FAILURE;
  var CODE = _TooManyCommands.CODE = 'command:failure:too-many-commands';
  var Data;

  (function (_Data) {
    var NAME = _Data.NAME = 'name';
    var MAXIMUM = _Data.MAXIMUM = 'maximum';
  })(Data || (Data = _TooManyCommands.Data || (_TooManyCommands.Data = {})));
})(TooManyCommands || (TooManyCommands = {}));

/***/ }),

/***/ "./typescript/unidoc/validator/throwWithFailure.ts":
/*!*********************************************************!*\
  !*** ./typescript/unidoc/validator/throwWithFailure.ts ***!
  \*********************************************************/
/*! exports provided: throwWithFailure */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throwWithFailure", function() { return throwWithFailure; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);


var _marked = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(throwWithFailure);

/**
*
*/
function throwWithFailure(validator) {
  var instance, current;
  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function throwWithFailure$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          instance = validator();
          current = instance.next();

        case 2:
          if (current.done) {
            _context.next = 18;
            break;
          }

          if (!current.value.isEnd()) {
            _context.next = 7;
            break;
          }

          throw current.value;

        case 7:
          if (!(current.value.isEmit() && current.value.event.isMessage() && current.value.event.message.isFailure())) {
            _context.next = 11;
            break;
          }

          throw current.value;

        case 11:
          _context.t0 = instance;
          _context.next = 14;
          return current.value;

        case 14:
          _context.t1 = _context.sent;
          current = _context.t0.next.call(_context.t0, _context.t1);

        case 16:
          _context.next = 2;
          break;

        case 18:
          if (!current.value.isEnd()) {
            _context.next = 22;
            break;
          }

          throw current.value;

        case 22:
          if (!current.value.isMatch()) {
            _context.next = 26;
            break;
          }

          return _context.abrupt("return", current.value);

        case 26:
          throw new Error('The underlying validator finished without returning a match nor an ' + 'end signal.');

        case 27:
        case "end":
          return _context.stop();
      }
    }
  }, _marked);
}
/**
*
*/

(function (_throwWithFailure) {
  function factory(validator) {
    return throwWithFailure.bind(undefined, validator);
  }

  _throwWithFailure.factory = factory;
})(throwWithFailure || (throwWithFailure = {}));

/***/ }),

/***/ "./typescript/utils/Empty.ts":
/*!***********************************!*\
  !*** ./typescript/utils/Empty.ts ***!
  \***********************************/
/*! exports provided: Empty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Empty", function() { return Empty; });
var Empty;

(function (_Empty) {
  var OBJECT = _Empty.OBJECT = Object.freeze({});
  var STRING = _Empty.STRING = Object.freeze('');
  var ARRAY = _Empty.ARRAY = Object.freeze([]);
  var BUFFER = _Empty.BUFFER = Buffer.alloc(0);

  function callback() {}

  _Empty.callback = callback;

  function buffer() {
    return BUFFER;
  }

  _Empty.buffer = buffer;

  function object() {
    return OBJECT;
  }

  _Empty.object = object;

  function string() {
    return STRING;
  }

  _Empty.string = string;

  function array() {
    return ARRAY;
  }

  _Empty.array = array;
})(Empty || (Empty = {}));
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./typescript/utils/equals.ts":
/*!************************************!*\
  !*** ./typescript/utils/equals.ts ***!
  \************************************/
/*! exports provided: equals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/**
 * 
 */
function equals(left, right) {
  return typeof left === 'object' && left.equals ? left.equals(right) : left === right;
}

/***/ }),

/***/ "./typescript/utils/index.ts":
/*!***********************************!*\
  !*** ./typescript/utils/index.ts ***!
  \***********************************/
/*! exports provided: Empty, equals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Empty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Empty */ "./typescript/utils/Empty.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Empty", function() { return _Empty__WEBPACK_IMPORTED_MODULE_0__["Empty"]; });

/* harmony import */ var _equals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./equals */ "./typescript/utils/equals.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return _equals__WEBPACK_IMPORTED_MODULE_1__["equals"]; });




/***/ }),

/***/ 2:
/*!************************************************************************************************************************!*\
  !*** multi next-client-pages-loader?page=%2F&absolutePagePath=D%3A%5Cdevelopment%5Crpg%5Cshubgath%5Cpages%5Cindex.tsx ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! next-client-pages-loader?page=%2F&absolutePagePath=D%3A%5Cdevelopment%5Crpg%5Cshubgath%5Cpages%5Cindex.tsx! */"./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=D%3A%5Cdevelopment%5Crpg%5Cshubgath%5Cpages%5Cindex.tsx!./");


/***/ }),

/***/ "dll-reference dll_2adc2403d89adc16ead0":
/*!*******************************************!*\
  !*** external "dll_2adc2403d89adc16ead0" ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = dll_2adc2403d89adc16ead0;

/***/ })

},[[2,"static/runtime/webpack.js"]]]);
//# sourceMappingURL=index.js.map