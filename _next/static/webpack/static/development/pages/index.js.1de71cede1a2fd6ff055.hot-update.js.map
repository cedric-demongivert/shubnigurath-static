{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.1de71cede1a2fd6ff055.hot-update.js","sources":["webpack:///./typescript/Investigator.ts"],"sourcesContent":["import { Summary } from './Summary'\r\nimport { CharacteristicSet } from './CharacteristicSet'\r\nimport { SkillSet } from './SkillSet'\r\nimport { Value } from './Value'\r\nimport { Modifier } from './Modifier'\r\nimport { List } from 'immutable'\r\nimport { Pair } from './data'\r\nimport { Skill } from './Skill'\r\nimport { Empty } from './utils'\r\nimport { Mutables } from './Mutables'\r\n\r\n/**\r\n * \r\n */\r\nexport class Investigator {\r\n  /**\r\n  *\r\n  */\r\n  public readonly summary: Summary\r\n\r\n  /**\r\n  *\r\n  */\r\n  public readonly characteristics: CharacteristicSet\r\n\r\n  /**\r\n   * \r\n   */\r\n  public readonly skills: SkillSet\r\n\r\n  /**\r\n   * \r\n   */\r\n  public readonly updates: SkillSet\r\n\r\n  /**\r\n   * \r\n   */\r\n  public readonly mutables: Mutables\r\n\r\n  /**\r\n   * \r\n   */\r\n  public get maximumHP(): number {\r\n    const characteristics: CharacteristicSet = this.characteristics\r\n\r\n    const size: number = characteristics.size.sum()\r\n    const constitution: number = characteristics.constitution.sum()\r\n\r\n    return ((size + constitution) / 10) << 0\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  public get maximumMP(): number {\r\n    return this.characteristics.power.fifth()\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  public get movement(): Value {\r\n    const characteristics: CharacteristicSet = this.characteristics\r\n\r\n    const size: number = characteristics.size.sum()\r\n    const strength: number = characteristics.strength.sum()\r\n    const dexterity: number = characteristics.dexterity.sum()\r\n\r\n    const age: number = this.summary.age\r\n\r\n    let base: number = 0\r\n\r\n    if (strength < size && dexterity < size) {\r\n      base = 7\r\n    } else if (strength > size && dexterity > size) {\r\n      base = 9\r\n    } else {\r\n      base = 8\r\n    }\r\n\r\n    if (age > 39) {\r\n      return Value.create({\r\n        base,\r\n        modifiers: List.of(\r\n          Modifier.create({\r\n            value: Math.max(((age / 10) << 0) - 3, 0),\r\n            label: 'Âge supérieur à ' + ((age / 10) << 0).toString() + ' ans'\r\n          })\r\n        )\r\n      })\r\n    } else {\r\n      return Value.create(base)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  public get impact(): string {\r\n    const characteristics: CharacteristicSet = this.characteristics\r\n\r\n    const size: number = characteristics.size.sum()\r\n    const strength: number = characteristics.strength.sum()\r\n\r\n    const score: number = size + strength\r\n\r\n    if (score < 65) {\r\n      return '-2'\r\n    } else if (score < 85) {\r\n      return '-1'\r\n    } else if (score < 125) {\r\n      return '0'\r\n    } else if (score < 165) {\r\n      return '+1D4'\r\n    } else if (score < 205) {\r\n      return '+1D6'\r\n    } else {\r\n      return '+' + (2 + ((score - 205) / 80) << 0) + 'D6'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  public get carrure(): number {\r\n    const characteristics: CharacteristicSet = this.characteristics\r\n\r\n    const size: number = characteristics.size.sum()\r\n    const strength: number = characteristics.strength.sum()\r\n\r\n    const score: number = size + strength\r\n\r\n    if (score < 65) {\r\n      return -2\r\n    } else if (score < 85) {\r\n      return -1\r\n    } else if (score < 125) {\r\n      return 0\r\n    } else if (score < 165) {\r\n      return +1\r\n    } else if (score < 205) {\r\n      return +2\r\n    } else {\r\n      return (2 + ((score - 205) / 80) << 0)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  public static readonly EMPTY: Investigator = new Investigator()\r\n\r\n  /**\r\n   * \r\n   */\r\n  public static empty(): Investigator {\r\n    return Investigator.EMPTY\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  public static create(properties: Investigator.Properties = Empty.OBJECT): Investigator {\r\n    return properties === Empty.OBJECT ? Investigator.EMPTY : new Investigator(properties)\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  private constructor(properties: Investigator.Properties = Empty.OBJECT) {\r\n    this.summary = properties.summary || Summary.empty()\r\n    this.characteristics = properties.characteristics || CharacteristicSet.empty()\r\n    this.skills = properties.skills || SkillSet.empty()\r\n    this.mutables = properties.mutables || Mutables.fromInvestigator(this)\r\n    this.updates = properties.updates || SkillSet.empty()\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  public computeDefaultSkills(): SkillSet {\r\n    return SkillSet.create([\r\n      Pair.create(Skill.ACCOUNTING, Value.create(5)),\r\n      Pair.create(Skill.ANTHROPOLOGY, Value.create(1)),\r\n      Pair.create(Skill.APPRAISE, Value.create(5)),\r\n      Pair.create(Skill.ARCHAEOLOGY, Value.create(1)),\r\n      Pair.create(Skill.CRAFT, Value.create(5)),\r\n      Pair.create(Skill.CHARM, Value.create(15)),\r\n      Pair.create(Skill.CLIMB, Value.create(20)),\r\n      Pair.create(Skill.CREDIT_RATING, Value.create(0)),\r\n      Pair.create(Skill.CTHULHU_MYTHOS, Value.create(0)),\r\n      Pair.create(Skill.DISGUISE, Value.create(5)),\r\n      Pair.create(Skill.DODGE, Value.create(this.characteristics.dexterity.half())),\r\n      Pair.create(Skill.DRIVE_AUTO, Value.create(20)),\r\n      Pair.create(Skill.ELECTRIC_REPAIR, Value.create(10)),\r\n      Pair.create(Skill.FAST_TALK, Value.create(5)),\r\n      Pair.create(Skill.FIGHTING, Value.create(25)),\r\n      Pair.create(Skill.HANDGUNS, Value.create(20)),\r\n      Pair.create(Skill.GUNS, Value.create(25)),\r\n      Pair.create(Skill.SUBMACHINE_GUNS, Value.create(15)),\r\n      Pair.create(Skill.FIRST_AID, Value.create(30)),\r\n      Pair.create(Skill.HISTORY, Value.create(5)),\r\n      Pair.create(Skill.INTIMIDATE, Value.create(15)),\r\n      Pair.create(Skill.JUMP, Value.create(20)),\r\n      Pair.create(Skill.NATIVE_LANGUAGE, Value.create(this.characteristics.education.sum())),\r\n      Pair.create(Skill.OTHER_LANGUAGE, Value.create(1)),\r\n      Pair.create(Skill.LAW, Value.create(5)),\r\n      Pair.create(Skill.LIBRARY_USE, Value.create(20)),\r\n      Pair.create(Skill.LISTEN, Value.create(20)),\r\n      Pair.create(Skill.LOCKSMITH, Value.create(1)),\r\n      Pair.create(Skill.MECHANICAL_REPAIR, Value.create(10)),\r\n      Pair.create(Skill.MEDICINE, Value.create(1)),\r\n      Pair.create(Skill.NATURAL_WORLD, Value.create(10)),\r\n      Pair.create(Skill.NAVIGATE, Value.create(10)),\r\n      Pair.create(Skill.OCCULT, Value.create(5)),\r\n      Pair.create(Skill.OPERATE_HEAVY_MACHINERY, Value.create(1)),\r\n      Pair.create(Skill.PERSUADE, Value.create(10)),\r\n      Pair.create(Skill.PILOT, Value.create(1)),\r\n      Pair.create(Skill.PSYCHOLOGY, Value.create(10)),\r\n      Pair.create(Skill.PSYCHOANALYSIS, Value.create(1)),\r\n      Pair.create(Skill.RIDE, Value.create(5)),\r\n      Pair.create(Skill.SCIENCE, Value.create(1)),\r\n      Pair.create(Skill.SLEIGHT_OF_HAND, Value.create(10)),\r\n      Pair.create(Skill.SPOT_HIDDEN, Value.create(25)),\r\n      Pair.create(Skill.STEALTH, Value.create(20)),\r\n      Pair.create(Skill.SURVIVAL, Value.create(10)),\r\n      Pair.create(Skill.SWIM, Value.create(20)),\r\n      Pair.create(Skill.THROW, Value.create(20)),\r\n      Pair.create(Skill.TRACK, Value.create(10))\r\n    ])\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  public toggleForUpdate(skill: Skill): Investigator {\r\n    if (this.updates.has(skill)) {\r\n      return new Investigator({\r\n        ...this,\r\n        updates: this.updates.delete(skill)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  public equals(other: any): boolean {\r\n    if (other == null) return false\r\n    if (other === this) return true\r\n\r\n    if (other instanceof Investigator) {\r\n      return (\r\n        other.summary.equals(this.summary) &&\r\n        other.characteristics.equals(this.characteristics) &&\r\n        other.skills.equals(this.skills)\r\n      )\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n\r\nexport namespace Investigator {\r\n  /**\r\n   * \r\n   */\r\n  export type Properties = {\r\n    /**\r\n     *\r\n     */\r\n    summary?: Summary | undefined,\r\n\r\n    /**\r\n     *\r\n     */\r\n    characteristics?: CharacteristicSet | undefined,\r\n\r\n    /**\r\n     *\r\n     */\r\n    skills?: SkillSet | undefined,\r\n\r\n    /**\r\n     *\r\n     */\r\n    mutables?: Mutables | undefined,\r\n\r\n    /**\r\n     * \r\n     */\r\n    updates?: SkillSet | undefined\r\n  }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AA5BA;AA8BA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAzCA;AAAA;AAAA;AA0CA;AACA;AAEA;AACA;AACA;AACA;AAhDA;AAAA;AAAA;AAiDA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AArFA;AAAA;AAAA;AAsFA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA/GA;AAAA;AAAA;AAgHA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAzIA;AAAA;AACA;AA0IA;AACA;AACA;AA7IA;AA+IA;AACA;AAEA;AACA;AACA;AACA;AArJA;AAAA;AAAA;AAqJA;AACA;AACA;AAEA;AACA;AACA;AACA;AA5JA;AACA;AA2JA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAxKA;AAAA;AAAA;AAwKA;AAiDA;AAEA;AACA;AACA;AACA;AA9NA;AAAA;AAAA;AA+NA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AA1OA;AAAA;AAAA;AA2OA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAvPA;AACA;AADA;AAAA;AAAA;AACA;AAyPA;;;;A","sourceRoot":""}