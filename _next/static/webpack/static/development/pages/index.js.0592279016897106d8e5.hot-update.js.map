{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.0592279016897106d8e5.hot-update.js","sources":["webpack:///./typescript/unidoc/StateCommand.ts"],"sourcesContent":["import { UnidocReductionInput } from '@cedric-demongivert/unidoc'\r\nimport { UnidocReductionRequest } from '@cedric-demongivert/unidoc'\r\nimport { UnidocKissValidator } from '@cedric-demongivert/unidoc'\r\nimport { UnidocReducer } from '@cedric-demongivert/unidoc'\r\n\r\nimport { CommandList } from './validator/command'\r\nimport { CommandListElement } from './validator/command'\r\nimport { validateCommandList } from './validator/command'\r\n\r\nimport { Mutables } from '../Mutables'\r\n\r\n/**\r\n * \r\n */\r\nexport namespace StateCommand {\r\n  /**\r\n   * \r\n   */\r\n  const COMMAND: CommandList = CommandList.capture(\r\n    CommandListElement.anywhere.optionalCommand('health', UnidocKissValidator.requireToken),\r\n    CommandListElement.anywhere.optionalCommand('mentalHealth', UnidocKissValidator.requireToken),\r\n    CommandListElement.anywhere.optionalCommand('magic', UnidocKissValidator.requireToken),\r\n    CommandListElement.anywhere.optionalCommand('luck', UnidocKissValidator.requireToken),\r\n    CommandListElement.anywhere.optionalCommand('temporaryInsane', UnidocKissValidator.validateManyWhitespace),\r\n    CommandListElement.anywhere.optionalCommand('indefinitelyInsane', UnidocKissValidator.validateManyWhitespace),\r\n    CommandListElement.anywhere.optionalCommand('majorWound', UnidocKissValidator.validateManyWhitespace)\r\n  )\r\n\r\n  /**\r\n   * \r\n   */\r\n  export function validate(): UnidocKissValidator {\r\n    return validateCommandList(COMMAND)\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  export function* reduce(): UnidocReducer<Mutables> {\r\n    let health: string | undefined = '0'\r\n    let mentalHealth: string | undefined = '0'\r\n    let magic: string | undefined = '0'\r\n    let luck: string | undefined = '0'\r\n    let temporaryInsane: boolean = false\r\n    let indefinitelyInsane: boolean = false\r\n    let majorWound: boolean = false\r\n\r\n    yield* UnidocReducer.skipStart()\r\n    yield* UnidocReducer.skipWhitespaces()\r\n\r\n    while (true) {\r\n      let current: UnidocReductionInput = yield UnidocReductionRequest.CURRENT\r\n\r\n      if (current.isStartOfAnyTag()) {\r\n        if (current.isStartOfTag('health')) {\r\n          health = yield* UnidocReducer.reduceTag.content(UnidocReducer.reduceToken())\r\n        } else if (current.isStartOfTag('luck')) {\r\n          luck = yield* UnidocReducer.reduceTag.content(UnidocReducer.reduceToken())\r\n        } else if (current.isStartOfTag('mentalHealth')) {\r\n          mentalHealth = yield* UnidocReducer.reduceTag.content(UnidocReducer.reduceToken())\r\n        } else if (current.isStartOfTag('magic')) {\r\n          magic = yield* UnidocReducer.reduceTag.content(UnidocReducer.reduceToken())\r\n        } else if (current.isStartOfTag('temporaryInsane')) {\r\n          yield* UnidocReducer.skipTag()\r\n          temporaryInsane = true\r\n        } else if (current.isStartOfTag('indefinitelyInsane')) {\r\n          yield* UnidocReducer.skipTag()\r\n          indefinitelyInsane = true\r\n        } else if (current.isStartOfTag('majorWound')) {\r\n          yield* UnidocReducer.skipTag()\r\n          majorWound = true\r\n        } else {\r\n          yield* UnidocReducer.skipTag()\r\n        }\r\n      } else if (current.isEnd()) {\r\n        return Mutables.create({\r\n          health: parseInt(health),\r\n          mentalHealth: parseInt(mentalHealth),\r\n          magic: parseInt(magic),\r\n          luck: parseInt(luck),\r\n          temporaryInsane,\r\n          indefinitelyInsane,\r\n          majorWound\r\n        })\r\n      } else {\r\n        current = yield UnidocReductionRequest.NEXT\r\n      }\r\n    }\r\n  }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;;AAuBA;AACA;AAxBA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAVA;AAUA;AACA;AAXA;AAAA;AACA;AADA;AAaA;AACA;AAdA;AAaA;AACA;AAdA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AAlBA;AAiBA;AAjBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AApBA;AAmBA;AAnBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAoBA;AACA;AAtBA;AAqBA;AArBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAsBA;AACA;AAxBA;AAuBA;AAvBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAwBA;AACA;AA1BA;AA0BA;AA1BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AA2BA;AACA;AA7BA;AA6BA;AA7BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AA8BA;AACA;AAhCA;AAgCA;AAhCA;AAAA;AACA;AADA;AAkCA;AACA;AAnCA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAtCA;AAAA;AA+CA;AACA;AAhDA;AA+CA;AACA;AAhDA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAzBA;;;;A","sourceRoot":""}